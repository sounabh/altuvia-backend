
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserProfile
 * 
 */
export type UserProfile = $Result.DefaultSelection<Prisma.$UserProfilePayload>
/**
 * Model Subscription
 * 
 */
export type Subscription = $Result.DefaultSelection<Prisma.$SubscriptionPayload>
/**
 * Model PaymentEvent
 * 
 */
export type PaymentEvent = $Result.DefaultSelection<Prisma.$PaymentEventPayload>
/**
 * Model University
 * 
 */
export type University = $Result.DefaultSelection<Prisma.$UniversityPayload>
/**
 * Model UniversityImage
 * 
 */
export type UniversityImage = $Result.DefaultSelection<Prisma.$UniversityImagePayload>
/**
 * Model ProgramDepartment
 * 
 */
export type ProgramDepartment = $Result.DefaultSelection<Prisma.$ProgramDepartmentPayload>
/**
 * Model Department
 * 
 */
export type Department = $Result.DefaultSelection<Prisma.$DepartmentPayload>
/**
 * Model Program
 * 
 */
export type Program = $Result.DefaultSelection<Prisma.$ProgramPayload>
/**
 * Model Syllabus
 * 
 */
export type Syllabus = $Result.DefaultSelection<Prisma.$SyllabusPayload>
/**
 * Model ProgramRanking
 * 
 */
export type ProgramRanking = $Result.DefaultSelection<Prisma.$ProgramRankingPayload>
/**
 * Model ExternalLink
 * 
 */
export type ExternalLink = $Result.DefaultSelection<Prisma.$ExternalLinkPayload>
/**
 * Model Admission
 * 
 */
export type Admission = $Result.DefaultSelection<Prisma.$AdmissionPayload>
/**
 * Model Intake
 * 
 */
export type Intake = $Result.DefaultSelection<Prisma.$IntakePayload>
/**
 * Model AdmissionDeadline
 * 
 */
export type AdmissionDeadline = $Result.DefaultSelection<Prisma.$AdmissionDeadlinePayload>
/**
 * Model Application
 * 
 */
export type Application = $Result.DefaultSelection<Prisma.$ApplicationPayload>
/**
 * Model ApplicationProgress
 * 
 */
export type ApplicationProgress = $Result.DefaultSelection<Prisma.$ApplicationProgressPayload>
/**
 * Model ApplicationDocument
 * 
 */
export type ApplicationDocument = $Result.DefaultSelection<Prisma.$ApplicationDocumentPayload>
/**
 * Model Interview
 * 
 */
export type Interview = $Result.DefaultSelection<Prisma.$InterviewPayload>
/**
 * Model TuitionBreakdown
 * 
 */
export type TuitionBreakdown = $Result.DefaultSelection<Prisma.$TuitionBreakdownPayload>
/**
 * Model PaymentSchedule
 * 
 */
export type PaymentSchedule = $Result.DefaultSelection<Prisma.$PaymentSchedulePayload>
/**
 * Model Scholarship
 * 
 */
export type Scholarship = $Result.DefaultSelection<Prisma.$ScholarshipPayload>
/**
 * Model ScholarshipDocument
 * 
 */
export type ScholarshipDocument = $Result.DefaultSelection<Prisma.$ScholarshipDocumentPayload>
/**
 * Model ScholarshipApplication
 * 
 */
export type ScholarshipApplication = $Result.DefaultSelection<Prisma.$ScholarshipApplicationPayload>
/**
 * Model FeeStructure
 * 
 */
export type FeeStructure = $Result.DefaultSelection<Prisma.$FeeStructurePayload>
/**
 * Model FinancialAid
 * 
 */
export type FinancialAid = $Result.DefaultSelection<Prisma.$FinancialAidPayload>
/**
 * Model FinancialAidApplication
 * 
 */
export type FinancialAidApplication = $Result.DefaultSelection<Prisma.$FinancialAidApplicationPayload>
/**
 * Model Admin_User
 * 
 */
export type Admin_User = $Result.DefaultSelection<Prisma.$Admin_UserPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model EssayPrompt
 * 
 */
export type EssayPrompt = $Result.DefaultSelection<Prisma.$EssayPromptPayload>
/**
 * Model EssaySubmission
 * 
 */
export type EssaySubmission = $Result.DefaultSelection<Prisma.$EssaySubmissionPayload>
/**
 * Model Essay
 * 
 */
export type Essay = $Result.DefaultSelection<Prisma.$EssayPayload>
/**
 * Model EssayVersion
 * 
 */
export type EssayVersion = $Result.DefaultSelection<Prisma.$EssayVersionPayload>
/**
 * Model AIResult
 * 
 */
export type AIResult = $Result.DefaultSelection<Prisma.$AIResultPayload>
/**
 * Model EssayCompletionLog
 * 
 */
export type EssayCompletionLog = $Result.DefaultSelection<Prisma.$EssayCompletionLogPayload>
/**
 * Model CalendarEvent
 * 
 */
export type CalendarEvent = $Result.DefaultSelection<Prisma.$CalendarEventPayload>
/**
 * Model EventReminder
 * 
 */
export type EventReminder = $Result.DefaultSelection<Prisma.$EventReminderPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userProfile`: Exposes CRUD operations for the **UserProfile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserProfiles
    * const userProfiles = await prisma.userProfile.findMany()
    * ```
    */
  get userProfile(): Prisma.UserProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscription`: Exposes CRUD operations for the **Subscription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscription.findMany()
    * ```
    */
  get subscription(): Prisma.SubscriptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentEvent`: Exposes CRUD operations for the **PaymentEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentEvents
    * const paymentEvents = await prisma.paymentEvent.findMany()
    * ```
    */
  get paymentEvent(): Prisma.PaymentEventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.university`: Exposes CRUD operations for the **University** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Universities
    * const universities = await prisma.university.findMany()
    * ```
    */
  get university(): Prisma.UniversityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.universityImage`: Exposes CRUD operations for the **UniversityImage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UniversityImages
    * const universityImages = await prisma.universityImage.findMany()
    * ```
    */
  get universityImage(): Prisma.UniversityImageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.programDepartment`: Exposes CRUD operations for the **ProgramDepartment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgramDepartments
    * const programDepartments = await prisma.programDepartment.findMany()
    * ```
    */
  get programDepartment(): Prisma.ProgramDepartmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.department`: Exposes CRUD operations for the **Department** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departments
    * const departments = await prisma.department.findMany()
    * ```
    */
  get department(): Prisma.DepartmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.program`: Exposes CRUD operations for the **Program** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Programs
    * const programs = await prisma.program.findMany()
    * ```
    */
  get program(): Prisma.ProgramDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.syllabus`: Exposes CRUD operations for the **Syllabus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Syllabi
    * const syllabi = await prisma.syllabus.findMany()
    * ```
    */
  get syllabus(): Prisma.SyllabusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.programRanking`: Exposes CRUD operations for the **ProgramRanking** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProgramRankings
    * const programRankings = await prisma.programRanking.findMany()
    * ```
    */
  get programRanking(): Prisma.ProgramRankingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.externalLink`: Exposes CRUD operations for the **ExternalLink** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ExternalLinks
    * const externalLinks = await prisma.externalLink.findMany()
    * ```
    */
  get externalLink(): Prisma.ExternalLinkDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admission`: Exposes CRUD operations for the **Admission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admissions
    * const admissions = await prisma.admission.findMany()
    * ```
    */
  get admission(): Prisma.AdmissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.intake`: Exposes CRUD operations for the **Intake** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Intakes
    * const intakes = await prisma.intake.findMany()
    * ```
    */
  get intake(): Prisma.IntakeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admissionDeadline`: Exposes CRUD operations for the **AdmissionDeadline** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AdmissionDeadlines
    * const admissionDeadlines = await prisma.admissionDeadline.findMany()
    * ```
    */
  get admissionDeadline(): Prisma.AdmissionDeadlineDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.application`: Exposes CRUD operations for the **Application** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Applications
    * const applications = await prisma.application.findMany()
    * ```
    */
  get application(): Prisma.ApplicationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.applicationProgress`: Exposes CRUD operations for the **ApplicationProgress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApplicationProgresses
    * const applicationProgresses = await prisma.applicationProgress.findMany()
    * ```
    */
  get applicationProgress(): Prisma.ApplicationProgressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.applicationDocument`: Exposes CRUD operations for the **ApplicationDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApplicationDocuments
    * const applicationDocuments = await prisma.applicationDocument.findMany()
    * ```
    */
  get applicationDocument(): Prisma.ApplicationDocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.interview`: Exposes CRUD operations for the **Interview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Interviews
    * const interviews = await prisma.interview.findMany()
    * ```
    */
  get interview(): Prisma.InterviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tuitionBreakdown`: Exposes CRUD operations for the **TuitionBreakdown** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TuitionBreakdowns
    * const tuitionBreakdowns = await prisma.tuitionBreakdown.findMany()
    * ```
    */
  get tuitionBreakdown(): Prisma.TuitionBreakdownDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentSchedule`: Exposes CRUD operations for the **PaymentSchedule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentSchedules
    * const paymentSchedules = await prisma.paymentSchedule.findMany()
    * ```
    */
  get paymentSchedule(): Prisma.PaymentScheduleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.scholarship`: Exposes CRUD operations for the **Scholarship** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Scholarships
    * const scholarships = await prisma.scholarship.findMany()
    * ```
    */
  get scholarship(): Prisma.ScholarshipDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.scholarshipDocument`: Exposes CRUD operations for the **ScholarshipDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ScholarshipDocuments
    * const scholarshipDocuments = await prisma.scholarshipDocument.findMany()
    * ```
    */
  get scholarshipDocument(): Prisma.ScholarshipDocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.scholarshipApplication`: Exposes CRUD operations for the **ScholarshipApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ScholarshipApplications
    * const scholarshipApplications = await prisma.scholarshipApplication.findMany()
    * ```
    */
  get scholarshipApplication(): Prisma.ScholarshipApplicationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.feeStructure`: Exposes CRUD operations for the **FeeStructure** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FeeStructures
    * const feeStructures = await prisma.feeStructure.findMany()
    * ```
    */
  get feeStructure(): Prisma.FeeStructureDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.financialAid`: Exposes CRUD operations for the **FinancialAid** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FinancialAids
    * const financialAids = await prisma.financialAid.findMany()
    * ```
    */
  get financialAid(): Prisma.FinancialAidDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.financialAidApplication`: Exposes CRUD operations for the **FinancialAidApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FinancialAidApplications
    * const financialAidApplications = await prisma.financialAidApplication.findMany()
    * ```
    */
  get financialAidApplication(): Prisma.FinancialAidApplicationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admin_User`: Exposes CRUD operations for the **Admin_User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admin_Users
    * const admin_Users = await prisma.admin_User.findMany()
    * ```
    */
  get admin_User(): Prisma.Admin_UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.essayPrompt`: Exposes CRUD operations for the **EssayPrompt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EssayPrompts
    * const essayPrompts = await prisma.essayPrompt.findMany()
    * ```
    */
  get essayPrompt(): Prisma.EssayPromptDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.essaySubmission`: Exposes CRUD operations for the **EssaySubmission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EssaySubmissions
    * const essaySubmissions = await prisma.essaySubmission.findMany()
    * ```
    */
  get essaySubmission(): Prisma.EssaySubmissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.essay`: Exposes CRUD operations for the **Essay** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Essays
    * const essays = await prisma.essay.findMany()
    * ```
    */
  get essay(): Prisma.EssayDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.essayVersion`: Exposes CRUD operations for the **EssayVersion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EssayVersions
    * const essayVersions = await prisma.essayVersion.findMany()
    * ```
    */
  get essayVersion(): Prisma.EssayVersionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.aIResult`: Exposes CRUD operations for the **AIResult** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AIResults
    * const aIResults = await prisma.aIResult.findMany()
    * ```
    */
  get aIResult(): Prisma.AIResultDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.essayCompletionLog`: Exposes CRUD operations for the **EssayCompletionLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EssayCompletionLogs
    * const essayCompletionLogs = await prisma.essayCompletionLog.findMany()
    * ```
    */
  get essayCompletionLog(): Prisma.EssayCompletionLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calendarEvent`: Exposes CRUD operations for the **CalendarEvent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CalendarEvents
    * const calendarEvents = await prisma.calendarEvent.findMany()
    * ```
    */
  get calendarEvent(): Prisma.CalendarEventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eventReminder`: Exposes CRUD operations for the **EventReminder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventReminders
    * const eventReminders = await prisma.eventReminder.findMany()
    * ```
    */
  get eventReminder(): Prisma.EventReminderDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    UserProfile: 'UserProfile',
    Subscription: 'Subscription',
    PaymentEvent: 'PaymentEvent',
    University: 'University',
    UniversityImage: 'UniversityImage',
    ProgramDepartment: 'ProgramDepartment',
    Department: 'Department',
    Program: 'Program',
    Syllabus: 'Syllabus',
    ProgramRanking: 'ProgramRanking',
    ExternalLink: 'ExternalLink',
    Admission: 'Admission',
    Intake: 'Intake',
    AdmissionDeadline: 'AdmissionDeadline',
    Application: 'Application',
    ApplicationProgress: 'ApplicationProgress',
    ApplicationDocument: 'ApplicationDocument',
    Interview: 'Interview',
    TuitionBreakdown: 'TuitionBreakdown',
    PaymentSchedule: 'PaymentSchedule',
    Scholarship: 'Scholarship',
    ScholarshipDocument: 'ScholarshipDocument',
    ScholarshipApplication: 'ScholarshipApplication',
    FeeStructure: 'FeeStructure',
    FinancialAid: 'FinancialAid',
    FinancialAidApplication: 'FinancialAidApplication',
    Admin_User: 'Admin_User',
    RefreshToken: 'RefreshToken',
    EssayPrompt: 'EssayPrompt',
    EssaySubmission: 'EssaySubmission',
    Essay: 'Essay',
    EssayVersion: 'EssayVersion',
    AIResult: 'AIResult',
    EssayCompletionLog: 'EssayCompletionLog',
    CalendarEvent: 'CalendarEvent',
    EventReminder: 'EventReminder'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "userProfile" | "subscription" | "paymentEvent" | "university" | "universityImage" | "programDepartment" | "department" | "program" | "syllabus" | "programRanking" | "externalLink" | "admission" | "intake" | "admissionDeadline" | "application" | "applicationProgress" | "applicationDocument" | "interview" | "tuitionBreakdown" | "paymentSchedule" | "scholarship" | "scholarshipDocument" | "scholarshipApplication" | "feeStructure" | "financialAid" | "financialAidApplication" | "admin_User" | "refreshToken" | "essayPrompt" | "essaySubmission" | "essay" | "essayVersion" | "aIResult" | "essayCompletionLog" | "calendarEvent" | "eventReminder"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserProfile: {
        payload: Prisma.$UserProfilePayload<ExtArgs>
        fields: Prisma.UserProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          findFirst: {
            args: Prisma.UserProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          findMany: {
            args: Prisma.UserProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>[]
          }
          create: {
            args: Prisma.UserProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          createMany: {
            args: Prisma.UserProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>[]
          }
          delete: {
            args: Prisma.UserProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          update: {
            args: Prisma.UserProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          deleteMany: {
            args: Prisma.UserProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>[]
          }
          upsert: {
            args: Prisma.UserProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserProfilePayload>
          }
          aggregate: {
            args: Prisma.UserProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserProfile>
          }
          groupBy: {
            args: Prisma.UserProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserProfileCountArgs<ExtArgs>
            result: $Utils.Optional<UserProfileCountAggregateOutputType> | number
          }
        }
      }
      Subscription: {
        payload: Prisma.$SubscriptionPayload<ExtArgs>
        fields: Prisma.SubscriptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findMany: {
            args: Prisma.SubscriptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          create: {
            args: Prisma.SubscriptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          createMany: {
            args: Prisma.SubscriptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          update: {
            args: Prisma.SubscriptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SubscriptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          upsert: {
            args: Prisma.SubscriptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription>
          }
          groupBy: {
            args: Prisma.SubscriptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionCountAggregateOutputType> | number
          }
        }
      }
      PaymentEvent: {
        payload: Prisma.$PaymentEventPayload<ExtArgs>
        fields: Prisma.PaymentEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          findFirst: {
            args: Prisma.PaymentEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          findMany: {
            args: Prisma.PaymentEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          create: {
            args: Prisma.PaymentEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          createMany: {
            args: Prisma.PaymentEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          delete: {
            args: Prisma.PaymentEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          update: {
            args: Prisma.PaymentEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          deleteMany: {
            args: Prisma.PaymentEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentEventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>[]
          }
          upsert: {
            args: Prisma.PaymentEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentEventPayload>
          }
          aggregate: {
            args: Prisma.PaymentEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentEvent>
          }
          groupBy: {
            args: Prisma.PaymentEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentEventCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentEventCountAggregateOutputType> | number
          }
        }
      }
      University: {
        payload: Prisma.$UniversityPayload<ExtArgs>
        fields: Prisma.UniversityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          findFirst: {
            args: Prisma.UniversityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          findMany: {
            args: Prisma.UniversityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>[]
          }
          create: {
            args: Prisma.UniversityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          createMany: {
            args: Prisma.UniversityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UniversityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>[]
          }
          delete: {
            args: Prisma.UniversityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          update: {
            args: Prisma.UniversityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          deleteMany: {
            args: Prisma.UniversityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UniversityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>[]
          }
          upsert: {
            args: Prisma.UniversityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityPayload>
          }
          aggregate: {
            args: Prisma.UniversityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversity>
          }
          groupBy: {
            args: Prisma.UniversityGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversityGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversityCountArgs<ExtArgs>
            result: $Utils.Optional<UniversityCountAggregateOutputType> | number
          }
        }
      }
      UniversityImage: {
        payload: Prisma.$UniversityImagePayload<ExtArgs>
        fields: Prisma.UniversityImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniversityImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniversityImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>
          }
          findFirst: {
            args: Prisma.UniversityImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniversityImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>
          }
          findMany: {
            args: Prisma.UniversityImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>[]
          }
          create: {
            args: Prisma.UniversityImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>
          }
          createMany: {
            args: Prisma.UniversityImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UniversityImageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>[]
          }
          delete: {
            args: Prisma.UniversityImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>
          }
          update: {
            args: Prisma.UniversityImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>
          }
          deleteMany: {
            args: Prisma.UniversityImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniversityImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UniversityImageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>[]
          }
          upsert: {
            args: Prisma.UniversityImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniversityImagePayload>
          }
          aggregate: {
            args: Prisma.UniversityImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniversityImage>
          }
          groupBy: {
            args: Prisma.UniversityImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniversityImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniversityImageCountArgs<ExtArgs>
            result: $Utils.Optional<UniversityImageCountAggregateOutputType> | number
          }
        }
      }
      ProgramDepartment: {
        payload: Prisma.$ProgramDepartmentPayload<ExtArgs>
        fields: Prisma.ProgramDepartmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProgramDepartmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProgramDepartmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>
          }
          findFirst: {
            args: Prisma.ProgramDepartmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProgramDepartmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>
          }
          findMany: {
            args: Prisma.ProgramDepartmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>[]
          }
          create: {
            args: Prisma.ProgramDepartmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>
          }
          createMany: {
            args: Prisma.ProgramDepartmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProgramDepartmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>[]
          }
          delete: {
            args: Prisma.ProgramDepartmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>
          }
          update: {
            args: Prisma.ProgramDepartmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>
          }
          deleteMany: {
            args: Prisma.ProgramDepartmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProgramDepartmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProgramDepartmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>[]
          }
          upsert: {
            args: Prisma.ProgramDepartmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramDepartmentPayload>
          }
          aggregate: {
            args: Prisma.ProgramDepartmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProgramDepartment>
          }
          groupBy: {
            args: Prisma.ProgramDepartmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProgramDepartmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProgramDepartmentCountArgs<ExtArgs>
            result: $Utils.Optional<ProgramDepartmentCountAggregateOutputType> | number
          }
        }
      }
      Department: {
        payload: Prisma.$DepartmentPayload<ExtArgs>
        fields: Prisma.DepartmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepartmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepartmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          findFirst: {
            args: Prisma.DepartmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepartmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          findMany: {
            args: Prisma.DepartmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          create: {
            args: Prisma.DepartmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          createMany: {
            args: Prisma.DepartmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepartmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          delete: {
            args: Prisma.DepartmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          update: {
            args: Prisma.DepartmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          deleteMany: {
            args: Prisma.DepartmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepartmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DepartmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>[]
          }
          upsert: {
            args: Prisma.DepartmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepartmentPayload>
          }
          aggregate: {
            args: Prisma.DepartmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartment>
          }
          groupBy: {
            args: Prisma.DepartmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepartmentCountArgs<ExtArgs>
            result: $Utils.Optional<DepartmentCountAggregateOutputType> | number
          }
        }
      }
      Program: {
        payload: Prisma.$ProgramPayload<ExtArgs>
        fields: Prisma.ProgramFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProgramFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProgramFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>
          }
          findFirst: {
            args: Prisma.ProgramFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProgramFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>
          }
          findMany: {
            args: Prisma.ProgramFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>[]
          }
          create: {
            args: Prisma.ProgramCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>
          }
          createMany: {
            args: Prisma.ProgramCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProgramCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>[]
          }
          delete: {
            args: Prisma.ProgramDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>
          }
          update: {
            args: Prisma.ProgramUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>
          }
          deleteMany: {
            args: Prisma.ProgramDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProgramUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProgramUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>[]
          }
          upsert: {
            args: Prisma.ProgramUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramPayload>
          }
          aggregate: {
            args: Prisma.ProgramAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProgram>
          }
          groupBy: {
            args: Prisma.ProgramGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProgramGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProgramCountArgs<ExtArgs>
            result: $Utils.Optional<ProgramCountAggregateOutputType> | number
          }
        }
      }
      Syllabus: {
        payload: Prisma.$SyllabusPayload<ExtArgs>
        fields: Prisma.SyllabusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SyllabusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SyllabusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>
          }
          findFirst: {
            args: Prisma.SyllabusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SyllabusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>
          }
          findMany: {
            args: Prisma.SyllabusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>[]
          }
          create: {
            args: Prisma.SyllabusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>
          }
          createMany: {
            args: Prisma.SyllabusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SyllabusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>[]
          }
          delete: {
            args: Prisma.SyllabusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>
          }
          update: {
            args: Prisma.SyllabusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>
          }
          deleteMany: {
            args: Prisma.SyllabusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SyllabusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SyllabusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>[]
          }
          upsert: {
            args: Prisma.SyllabusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SyllabusPayload>
          }
          aggregate: {
            args: Prisma.SyllabusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSyllabus>
          }
          groupBy: {
            args: Prisma.SyllabusGroupByArgs<ExtArgs>
            result: $Utils.Optional<SyllabusGroupByOutputType>[]
          }
          count: {
            args: Prisma.SyllabusCountArgs<ExtArgs>
            result: $Utils.Optional<SyllabusCountAggregateOutputType> | number
          }
        }
      }
      ProgramRanking: {
        payload: Prisma.$ProgramRankingPayload<ExtArgs>
        fields: Prisma.ProgramRankingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProgramRankingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProgramRankingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>
          }
          findFirst: {
            args: Prisma.ProgramRankingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProgramRankingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>
          }
          findMany: {
            args: Prisma.ProgramRankingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>[]
          }
          create: {
            args: Prisma.ProgramRankingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>
          }
          createMany: {
            args: Prisma.ProgramRankingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProgramRankingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>[]
          }
          delete: {
            args: Prisma.ProgramRankingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>
          }
          update: {
            args: Prisma.ProgramRankingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>
          }
          deleteMany: {
            args: Prisma.ProgramRankingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProgramRankingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProgramRankingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>[]
          }
          upsert: {
            args: Prisma.ProgramRankingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProgramRankingPayload>
          }
          aggregate: {
            args: Prisma.ProgramRankingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProgramRanking>
          }
          groupBy: {
            args: Prisma.ProgramRankingGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProgramRankingGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProgramRankingCountArgs<ExtArgs>
            result: $Utils.Optional<ProgramRankingCountAggregateOutputType> | number
          }
        }
      }
      ExternalLink: {
        payload: Prisma.$ExternalLinkPayload<ExtArgs>
        fields: Prisma.ExternalLinkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ExternalLinkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ExternalLinkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>
          }
          findFirst: {
            args: Prisma.ExternalLinkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ExternalLinkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>
          }
          findMany: {
            args: Prisma.ExternalLinkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>[]
          }
          create: {
            args: Prisma.ExternalLinkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>
          }
          createMany: {
            args: Prisma.ExternalLinkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ExternalLinkCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>[]
          }
          delete: {
            args: Prisma.ExternalLinkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>
          }
          update: {
            args: Prisma.ExternalLinkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>
          }
          deleteMany: {
            args: Prisma.ExternalLinkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ExternalLinkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ExternalLinkUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>[]
          }
          upsert: {
            args: Prisma.ExternalLinkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ExternalLinkPayload>
          }
          aggregate: {
            args: Prisma.ExternalLinkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateExternalLink>
          }
          groupBy: {
            args: Prisma.ExternalLinkGroupByArgs<ExtArgs>
            result: $Utils.Optional<ExternalLinkGroupByOutputType>[]
          }
          count: {
            args: Prisma.ExternalLinkCountArgs<ExtArgs>
            result: $Utils.Optional<ExternalLinkCountAggregateOutputType> | number
          }
        }
      }
      Admission: {
        payload: Prisma.$AdmissionPayload<ExtArgs>
        fields: Prisma.AdmissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdmissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdmissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>
          }
          findFirst: {
            args: Prisma.AdmissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdmissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>
          }
          findMany: {
            args: Prisma.AdmissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>[]
          }
          create: {
            args: Prisma.AdmissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>
          }
          createMany: {
            args: Prisma.AdmissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdmissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>[]
          }
          delete: {
            args: Prisma.AdmissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>
          }
          update: {
            args: Prisma.AdmissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>
          }
          deleteMany: {
            args: Prisma.AdmissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdmissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdmissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>[]
          }
          upsert: {
            args: Prisma.AdmissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionPayload>
          }
          aggregate: {
            args: Prisma.AdmissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmission>
          }
          groupBy: {
            args: Prisma.AdmissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdmissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdmissionCountArgs<ExtArgs>
            result: $Utils.Optional<AdmissionCountAggregateOutputType> | number
          }
        }
      }
      Intake: {
        payload: Prisma.$IntakePayload<ExtArgs>
        fields: Prisma.IntakeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IntakeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IntakeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>
          }
          findFirst: {
            args: Prisma.IntakeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IntakeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>
          }
          findMany: {
            args: Prisma.IntakeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>[]
          }
          create: {
            args: Prisma.IntakeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>
          }
          createMany: {
            args: Prisma.IntakeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IntakeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>[]
          }
          delete: {
            args: Prisma.IntakeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>
          }
          update: {
            args: Prisma.IntakeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>
          }
          deleteMany: {
            args: Prisma.IntakeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IntakeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.IntakeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>[]
          }
          upsert: {
            args: Prisma.IntakeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IntakePayload>
          }
          aggregate: {
            args: Prisma.IntakeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIntake>
          }
          groupBy: {
            args: Prisma.IntakeGroupByArgs<ExtArgs>
            result: $Utils.Optional<IntakeGroupByOutputType>[]
          }
          count: {
            args: Prisma.IntakeCountArgs<ExtArgs>
            result: $Utils.Optional<IntakeCountAggregateOutputType> | number
          }
        }
      }
      AdmissionDeadline: {
        payload: Prisma.$AdmissionDeadlinePayload<ExtArgs>
        fields: Prisma.AdmissionDeadlineFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdmissionDeadlineFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdmissionDeadlineFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>
          }
          findFirst: {
            args: Prisma.AdmissionDeadlineFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdmissionDeadlineFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>
          }
          findMany: {
            args: Prisma.AdmissionDeadlineFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>[]
          }
          create: {
            args: Prisma.AdmissionDeadlineCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>
          }
          createMany: {
            args: Prisma.AdmissionDeadlineCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdmissionDeadlineCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>[]
          }
          delete: {
            args: Prisma.AdmissionDeadlineDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>
          }
          update: {
            args: Prisma.AdmissionDeadlineUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>
          }
          deleteMany: {
            args: Prisma.AdmissionDeadlineDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdmissionDeadlineUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdmissionDeadlineUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>[]
          }
          upsert: {
            args: Prisma.AdmissionDeadlineUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdmissionDeadlinePayload>
          }
          aggregate: {
            args: Prisma.AdmissionDeadlineAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmissionDeadline>
          }
          groupBy: {
            args: Prisma.AdmissionDeadlineGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdmissionDeadlineGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdmissionDeadlineCountArgs<ExtArgs>
            result: $Utils.Optional<AdmissionDeadlineCountAggregateOutputType> | number
          }
        }
      }
      Application: {
        payload: Prisma.$ApplicationPayload<ExtArgs>
        fields: Prisma.ApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findFirst: {
            args: Prisma.ApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          findMany: {
            args: Prisma.ApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          create: {
            args: Prisma.ApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          createMany: {
            args: Prisma.ApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          delete: {
            args: Prisma.ApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          update: {
            args: Prisma.ApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApplicationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>[]
          }
          upsert: {
            args: Prisma.ApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationPayload>
          }
          aggregate: {
            args: Prisma.ApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplication>
          }
          groupBy: {
            args: Prisma.ApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationCountAggregateOutputType> | number
          }
        }
      }
      ApplicationProgress: {
        payload: Prisma.$ApplicationProgressPayload<ExtArgs>
        fields: Prisma.ApplicationProgressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationProgressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationProgressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>
          }
          findFirst: {
            args: Prisma.ApplicationProgressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationProgressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>
          }
          findMany: {
            args: Prisma.ApplicationProgressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>[]
          }
          create: {
            args: Prisma.ApplicationProgressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>
          }
          createMany: {
            args: Prisma.ApplicationProgressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApplicationProgressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>[]
          }
          delete: {
            args: Prisma.ApplicationProgressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>
          }
          update: {
            args: Prisma.ApplicationProgressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationProgressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationProgressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApplicationProgressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>[]
          }
          upsert: {
            args: Prisma.ApplicationProgressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationProgressPayload>
          }
          aggregate: {
            args: Prisma.ApplicationProgressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplicationProgress>
          }
          groupBy: {
            args: Prisma.ApplicationProgressGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationProgressGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationProgressCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationProgressCountAggregateOutputType> | number
          }
        }
      }
      ApplicationDocument: {
        payload: Prisma.$ApplicationDocumentPayload<ExtArgs>
        fields: Prisma.ApplicationDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>
          }
          findFirst: {
            args: Prisma.ApplicationDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>
          }
          findMany: {
            args: Prisma.ApplicationDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>[]
          }
          create: {
            args: Prisma.ApplicationDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>
          }
          createMany: {
            args: Prisma.ApplicationDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApplicationDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>[]
          }
          delete: {
            args: Prisma.ApplicationDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>
          }
          update: {
            args: Prisma.ApplicationDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApplicationDocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>[]
          }
          upsert: {
            args: Prisma.ApplicationDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationDocumentPayload>
          }
          aggregate: {
            args: Prisma.ApplicationDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplicationDocument>
          }
          groupBy: {
            args: Prisma.ApplicationDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationDocumentCountAggregateOutputType> | number
          }
        }
      }
      Interview: {
        payload: Prisma.$InterviewPayload<ExtArgs>
        fields: Prisma.InterviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InterviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InterviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>
          }
          findFirst: {
            args: Prisma.InterviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InterviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>
          }
          findMany: {
            args: Prisma.InterviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>[]
          }
          create: {
            args: Prisma.InterviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>
          }
          createMany: {
            args: Prisma.InterviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InterviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>[]
          }
          delete: {
            args: Prisma.InterviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>
          }
          update: {
            args: Prisma.InterviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>
          }
          deleteMany: {
            args: Prisma.InterviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InterviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InterviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>[]
          }
          upsert: {
            args: Prisma.InterviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InterviewPayload>
          }
          aggregate: {
            args: Prisma.InterviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInterview>
          }
          groupBy: {
            args: Prisma.InterviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<InterviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.InterviewCountArgs<ExtArgs>
            result: $Utils.Optional<InterviewCountAggregateOutputType> | number
          }
        }
      }
      TuitionBreakdown: {
        payload: Prisma.$TuitionBreakdownPayload<ExtArgs>
        fields: Prisma.TuitionBreakdownFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TuitionBreakdownFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TuitionBreakdownFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>
          }
          findFirst: {
            args: Prisma.TuitionBreakdownFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TuitionBreakdownFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>
          }
          findMany: {
            args: Prisma.TuitionBreakdownFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>[]
          }
          create: {
            args: Prisma.TuitionBreakdownCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>
          }
          createMany: {
            args: Prisma.TuitionBreakdownCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TuitionBreakdownCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>[]
          }
          delete: {
            args: Prisma.TuitionBreakdownDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>
          }
          update: {
            args: Prisma.TuitionBreakdownUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>
          }
          deleteMany: {
            args: Prisma.TuitionBreakdownDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TuitionBreakdownUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TuitionBreakdownUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>[]
          }
          upsert: {
            args: Prisma.TuitionBreakdownUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TuitionBreakdownPayload>
          }
          aggregate: {
            args: Prisma.TuitionBreakdownAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTuitionBreakdown>
          }
          groupBy: {
            args: Prisma.TuitionBreakdownGroupByArgs<ExtArgs>
            result: $Utils.Optional<TuitionBreakdownGroupByOutputType>[]
          }
          count: {
            args: Prisma.TuitionBreakdownCountArgs<ExtArgs>
            result: $Utils.Optional<TuitionBreakdownCountAggregateOutputType> | number
          }
        }
      }
      PaymentSchedule: {
        payload: Prisma.$PaymentSchedulePayload<ExtArgs>
        fields: Prisma.PaymentScheduleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentScheduleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentScheduleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>
          }
          findFirst: {
            args: Prisma.PaymentScheduleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentScheduleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>
          }
          findMany: {
            args: Prisma.PaymentScheduleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>[]
          }
          create: {
            args: Prisma.PaymentScheduleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>
          }
          createMany: {
            args: Prisma.PaymentScheduleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentScheduleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>[]
          }
          delete: {
            args: Prisma.PaymentScheduleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>
          }
          update: {
            args: Prisma.PaymentScheduleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>
          }
          deleteMany: {
            args: Prisma.PaymentScheduleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentScheduleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentScheduleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>[]
          }
          upsert: {
            args: Prisma.PaymentScheduleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSchedulePayload>
          }
          aggregate: {
            args: Prisma.PaymentScheduleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentSchedule>
          }
          groupBy: {
            args: Prisma.PaymentScheduleGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentScheduleGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentScheduleCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentScheduleCountAggregateOutputType> | number
          }
        }
      }
      Scholarship: {
        payload: Prisma.$ScholarshipPayload<ExtArgs>
        fields: Prisma.ScholarshipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ScholarshipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ScholarshipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>
          }
          findFirst: {
            args: Prisma.ScholarshipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ScholarshipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>
          }
          findMany: {
            args: Prisma.ScholarshipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>[]
          }
          create: {
            args: Prisma.ScholarshipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>
          }
          createMany: {
            args: Prisma.ScholarshipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ScholarshipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>[]
          }
          delete: {
            args: Prisma.ScholarshipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>
          }
          update: {
            args: Prisma.ScholarshipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>
          }
          deleteMany: {
            args: Prisma.ScholarshipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ScholarshipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ScholarshipUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>[]
          }
          upsert: {
            args: Prisma.ScholarshipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipPayload>
          }
          aggregate: {
            args: Prisma.ScholarshipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateScholarship>
          }
          groupBy: {
            args: Prisma.ScholarshipGroupByArgs<ExtArgs>
            result: $Utils.Optional<ScholarshipGroupByOutputType>[]
          }
          count: {
            args: Prisma.ScholarshipCountArgs<ExtArgs>
            result: $Utils.Optional<ScholarshipCountAggregateOutputType> | number
          }
        }
      }
      ScholarshipDocument: {
        payload: Prisma.$ScholarshipDocumentPayload<ExtArgs>
        fields: Prisma.ScholarshipDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ScholarshipDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ScholarshipDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>
          }
          findFirst: {
            args: Prisma.ScholarshipDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ScholarshipDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>
          }
          findMany: {
            args: Prisma.ScholarshipDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>[]
          }
          create: {
            args: Prisma.ScholarshipDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>
          }
          createMany: {
            args: Prisma.ScholarshipDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ScholarshipDocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>[]
          }
          delete: {
            args: Prisma.ScholarshipDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>
          }
          update: {
            args: Prisma.ScholarshipDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>
          }
          deleteMany: {
            args: Prisma.ScholarshipDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ScholarshipDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ScholarshipDocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>[]
          }
          upsert: {
            args: Prisma.ScholarshipDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipDocumentPayload>
          }
          aggregate: {
            args: Prisma.ScholarshipDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateScholarshipDocument>
          }
          groupBy: {
            args: Prisma.ScholarshipDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<ScholarshipDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.ScholarshipDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<ScholarshipDocumentCountAggregateOutputType> | number
          }
        }
      }
      ScholarshipApplication: {
        payload: Prisma.$ScholarshipApplicationPayload<ExtArgs>
        fields: Prisma.ScholarshipApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ScholarshipApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ScholarshipApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>
          }
          findFirst: {
            args: Prisma.ScholarshipApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ScholarshipApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>
          }
          findMany: {
            args: Prisma.ScholarshipApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>[]
          }
          create: {
            args: Prisma.ScholarshipApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>
          }
          createMany: {
            args: Prisma.ScholarshipApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ScholarshipApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>[]
          }
          delete: {
            args: Prisma.ScholarshipApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>
          }
          update: {
            args: Prisma.ScholarshipApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>
          }
          deleteMany: {
            args: Prisma.ScholarshipApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ScholarshipApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ScholarshipApplicationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>[]
          }
          upsert: {
            args: Prisma.ScholarshipApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ScholarshipApplicationPayload>
          }
          aggregate: {
            args: Prisma.ScholarshipApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateScholarshipApplication>
          }
          groupBy: {
            args: Prisma.ScholarshipApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ScholarshipApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ScholarshipApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<ScholarshipApplicationCountAggregateOutputType> | number
          }
        }
      }
      FeeStructure: {
        payload: Prisma.$FeeStructurePayload<ExtArgs>
        fields: Prisma.FeeStructureFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FeeStructureFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FeeStructureFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>
          }
          findFirst: {
            args: Prisma.FeeStructureFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FeeStructureFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>
          }
          findMany: {
            args: Prisma.FeeStructureFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>[]
          }
          create: {
            args: Prisma.FeeStructureCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>
          }
          createMany: {
            args: Prisma.FeeStructureCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FeeStructureCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>[]
          }
          delete: {
            args: Prisma.FeeStructureDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>
          }
          update: {
            args: Prisma.FeeStructureUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>
          }
          deleteMany: {
            args: Prisma.FeeStructureDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FeeStructureUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FeeStructureUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>[]
          }
          upsert: {
            args: Prisma.FeeStructureUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FeeStructurePayload>
          }
          aggregate: {
            args: Prisma.FeeStructureAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFeeStructure>
          }
          groupBy: {
            args: Prisma.FeeStructureGroupByArgs<ExtArgs>
            result: $Utils.Optional<FeeStructureGroupByOutputType>[]
          }
          count: {
            args: Prisma.FeeStructureCountArgs<ExtArgs>
            result: $Utils.Optional<FeeStructureCountAggregateOutputType> | number
          }
        }
      }
      FinancialAid: {
        payload: Prisma.$FinancialAidPayload<ExtArgs>
        fields: Prisma.FinancialAidFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FinancialAidFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FinancialAidFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>
          }
          findFirst: {
            args: Prisma.FinancialAidFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FinancialAidFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>
          }
          findMany: {
            args: Prisma.FinancialAidFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>[]
          }
          create: {
            args: Prisma.FinancialAidCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>
          }
          createMany: {
            args: Prisma.FinancialAidCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FinancialAidCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>[]
          }
          delete: {
            args: Prisma.FinancialAidDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>
          }
          update: {
            args: Prisma.FinancialAidUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>
          }
          deleteMany: {
            args: Prisma.FinancialAidDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FinancialAidUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FinancialAidUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>[]
          }
          upsert: {
            args: Prisma.FinancialAidUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidPayload>
          }
          aggregate: {
            args: Prisma.FinancialAidAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFinancialAid>
          }
          groupBy: {
            args: Prisma.FinancialAidGroupByArgs<ExtArgs>
            result: $Utils.Optional<FinancialAidGroupByOutputType>[]
          }
          count: {
            args: Prisma.FinancialAidCountArgs<ExtArgs>
            result: $Utils.Optional<FinancialAidCountAggregateOutputType> | number
          }
        }
      }
      FinancialAidApplication: {
        payload: Prisma.$FinancialAidApplicationPayload<ExtArgs>
        fields: Prisma.FinancialAidApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FinancialAidApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FinancialAidApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>
          }
          findFirst: {
            args: Prisma.FinancialAidApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FinancialAidApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>
          }
          findMany: {
            args: Prisma.FinancialAidApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>[]
          }
          create: {
            args: Prisma.FinancialAidApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>
          }
          createMany: {
            args: Prisma.FinancialAidApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FinancialAidApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>[]
          }
          delete: {
            args: Prisma.FinancialAidApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>
          }
          update: {
            args: Prisma.FinancialAidApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>
          }
          deleteMany: {
            args: Prisma.FinancialAidApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FinancialAidApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FinancialAidApplicationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>[]
          }
          upsert: {
            args: Prisma.FinancialAidApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialAidApplicationPayload>
          }
          aggregate: {
            args: Prisma.FinancialAidApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFinancialAidApplication>
          }
          groupBy: {
            args: Prisma.FinancialAidApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<FinancialAidApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.FinancialAidApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<FinancialAidApplicationCountAggregateOutputType> | number
          }
        }
      }
      Admin_User: {
        payload: Prisma.$Admin_UserPayload<ExtArgs>
        fields: Prisma.Admin_UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Admin_UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Admin_UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>
          }
          findFirst: {
            args: Prisma.Admin_UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Admin_UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>
          }
          findMany: {
            args: Prisma.Admin_UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>[]
          }
          create: {
            args: Prisma.Admin_UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>
          }
          createMany: {
            args: Prisma.Admin_UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Admin_UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>[]
          }
          delete: {
            args: Prisma.Admin_UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>
          }
          update: {
            args: Prisma.Admin_UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>
          }
          deleteMany: {
            args: Prisma.Admin_UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Admin_UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.Admin_UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>[]
          }
          upsert: {
            args: Prisma.Admin_UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Admin_UserPayload>
          }
          aggregate: {
            args: Prisma.Admin_UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin_User>
          }
          groupBy: {
            args: Prisma.Admin_UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<Admin_UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.Admin_UserCountArgs<ExtArgs>
            result: $Utils.Optional<Admin_UserCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RefreshTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      EssayPrompt: {
        payload: Prisma.$EssayPromptPayload<ExtArgs>
        fields: Prisma.EssayPromptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EssayPromptFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EssayPromptFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>
          }
          findFirst: {
            args: Prisma.EssayPromptFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EssayPromptFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>
          }
          findMany: {
            args: Prisma.EssayPromptFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>[]
          }
          create: {
            args: Prisma.EssayPromptCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>
          }
          createMany: {
            args: Prisma.EssayPromptCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EssayPromptCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>[]
          }
          delete: {
            args: Prisma.EssayPromptDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>
          }
          update: {
            args: Prisma.EssayPromptUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>
          }
          deleteMany: {
            args: Prisma.EssayPromptDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EssayPromptUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EssayPromptUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>[]
          }
          upsert: {
            args: Prisma.EssayPromptUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPromptPayload>
          }
          aggregate: {
            args: Prisma.EssayPromptAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEssayPrompt>
          }
          groupBy: {
            args: Prisma.EssayPromptGroupByArgs<ExtArgs>
            result: $Utils.Optional<EssayPromptGroupByOutputType>[]
          }
          count: {
            args: Prisma.EssayPromptCountArgs<ExtArgs>
            result: $Utils.Optional<EssayPromptCountAggregateOutputType> | number
          }
        }
      }
      EssaySubmission: {
        payload: Prisma.$EssaySubmissionPayload<ExtArgs>
        fields: Prisma.EssaySubmissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EssaySubmissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EssaySubmissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>
          }
          findFirst: {
            args: Prisma.EssaySubmissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EssaySubmissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>
          }
          findMany: {
            args: Prisma.EssaySubmissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>[]
          }
          create: {
            args: Prisma.EssaySubmissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>
          }
          createMany: {
            args: Prisma.EssaySubmissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EssaySubmissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>[]
          }
          delete: {
            args: Prisma.EssaySubmissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>
          }
          update: {
            args: Prisma.EssaySubmissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>
          }
          deleteMany: {
            args: Prisma.EssaySubmissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EssaySubmissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EssaySubmissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>[]
          }
          upsert: {
            args: Prisma.EssaySubmissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssaySubmissionPayload>
          }
          aggregate: {
            args: Prisma.EssaySubmissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEssaySubmission>
          }
          groupBy: {
            args: Prisma.EssaySubmissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EssaySubmissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EssaySubmissionCountArgs<ExtArgs>
            result: $Utils.Optional<EssaySubmissionCountAggregateOutputType> | number
          }
        }
      }
      Essay: {
        payload: Prisma.$EssayPayload<ExtArgs>
        fields: Prisma.EssayFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EssayFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EssayFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>
          }
          findFirst: {
            args: Prisma.EssayFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EssayFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>
          }
          findMany: {
            args: Prisma.EssayFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>[]
          }
          create: {
            args: Prisma.EssayCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>
          }
          createMany: {
            args: Prisma.EssayCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EssayCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>[]
          }
          delete: {
            args: Prisma.EssayDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>
          }
          update: {
            args: Prisma.EssayUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>
          }
          deleteMany: {
            args: Prisma.EssayDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EssayUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EssayUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>[]
          }
          upsert: {
            args: Prisma.EssayUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayPayload>
          }
          aggregate: {
            args: Prisma.EssayAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEssay>
          }
          groupBy: {
            args: Prisma.EssayGroupByArgs<ExtArgs>
            result: $Utils.Optional<EssayGroupByOutputType>[]
          }
          count: {
            args: Prisma.EssayCountArgs<ExtArgs>
            result: $Utils.Optional<EssayCountAggregateOutputType> | number
          }
        }
      }
      EssayVersion: {
        payload: Prisma.$EssayVersionPayload<ExtArgs>
        fields: Prisma.EssayVersionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EssayVersionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EssayVersionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>
          }
          findFirst: {
            args: Prisma.EssayVersionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EssayVersionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>
          }
          findMany: {
            args: Prisma.EssayVersionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>[]
          }
          create: {
            args: Prisma.EssayVersionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>
          }
          createMany: {
            args: Prisma.EssayVersionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EssayVersionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>[]
          }
          delete: {
            args: Prisma.EssayVersionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>
          }
          update: {
            args: Prisma.EssayVersionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>
          }
          deleteMany: {
            args: Prisma.EssayVersionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EssayVersionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EssayVersionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>[]
          }
          upsert: {
            args: Prisma.EssayVersionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayVersionPayload>
          }
          aggregate: {
            args: Prisma.EssayVersionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEssayVersion>
          }
          groupBy: {
            args: Prisma.EssayVersionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EssayVersionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EssayVersionCountArgs<ExtArgs>
            result: $Utils.Optional<EssayVersionCountAggregateOutputType> | number
          }
        }
      }
      AIResult: {
        payload: Prisma.$AIResultPayload<ExtArgs>
        fields: Prisma.AIResultFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AIResultFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AIResultFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>
          }
          findFirst: {
            args: Prisma.AIResultFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AIResultFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>
          }
          findMany: {
            args: Prisma.AIResultFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>[]
          }
          create: {
            args: Prisma.AIResultCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>
          }
          createMany: {
            args: Prisma.AIResultCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AIResultCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>[]
          }
          delete: {
            args: Prisma.AIResultDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>
          }
          update: {
            args: Prisma.AIResultUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>
          }
          deleteMany: {
            args: Prisma.AIResultDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AIResultUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AIResultUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>[]
          }
          upsert: {
            args: Prisma.AIResultUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIResultPayload>
          }
          aggregate: {
            args: Prisma.AIResultAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAIResult>
          }
          groupBy: {
            args: Prisma.AIResultGroupByArgs<ExtArgs>
            result: $Utils.Optional<AIResultGroupByOutputType>[]
          }
          count: {
            args: Prisma.AIResultCountArgs<ExtArgs>
            result: $Utils.Optional<AIResultCountAggregateOutputType> | number
          }
        }
      }
      EssayCompletionLog: {
        payload: Prisma.$EssayCompletionLogPayload<ExtArgs>
        fields: Prisma.EssayCompletionLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EssayCompletionLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EssayCompletionLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>
          }
          findFirst: {
            args: Prisma.EssayCompletionLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EssayCompletionLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>
          }
          findMany: {
            args: Prisma.EssayCompletionLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>[]
          }
          create: {
            args: Prisma.EssayCompletionLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>
          }
          createMany: {
            args: Prisma.EssayCompletionLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EssayCompletionLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>[]
          }
          delete: {
            args: Prisma.EssayCompletionLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>
          }
          update: {
            args: Prisma.EssayCompletionLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>
          }
          deleteMany: {
            args: Prisma.EssayCompletionLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EssayCompletionLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EssayCompletionLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>[]
          }
          upsert: {
            args: Prisma.EssayCompletionLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EssayCompletionLogPayload>
          }
          aggregate: {
            args: Prisma.EssayCompletionLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEssayCompletionLog>
          }
          groupBy: {
            args: Prisma.EssayCompletionLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<EssayCompletionLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.EssayCompletionLogCountArgs<ExtArgs>
            result: $Utils.Optional<EssayCompletionLogCountAggregateOutputType> | number
          }
        }
      }
      CalendarEvent: {
        payload: Prisma.$CalendarEventPayload<ExtArgs>
        fields: Prisma.CalendarEventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CalendarEventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CalendarEventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>
          }
          findFirst: {
            args: Prisma.CalendarEventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CalendarEventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>
          }
          findMany: {
            args: Prisma.CalendarEventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>[]
          }
          create: {
            args: Prisma.CalendarEventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>
          }
          createMany: {
            args: Prisma.CalendarEventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CalendarEventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>[]
          }
          delete: {
            args: Prisma.CalendarEventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>
          }
          update: {
            args: Prisma.CalendarEventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>
          }
          deleteMany: {
            args: Prisma.CalendarEventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CalendarEventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CalendarEventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>[]
          }
          upsert: {
            args: Prisma.CalendarEventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalendarEventPayload>
          }
          aggregate: {
            args: Prisma.CalendarEventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalendarEvent>
          }
          groupBy: {
            args: Prisma.CalendarEventGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalendarEventGroupByOutputType>[]
          }
          count: {
            args: Prisma.CalendarEventCountArgs<ExtArgs>
            result: $Utils.Optional<CalendarEventCountAggregateOutputType> | number
          }
        }
      }
      EventReminder: {
        payload: Prisma.$EventReminderPayload<ExtArgs>
        fields: Prisma.EventReminderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventReminderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventReminderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>
          }
          findFirst: {
            args: Prisma.EventReminderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventReminderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>
          }
          findMany: {
            args: Prisma.EventReminderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>[]
          }
          create: {
            args: Prisma.EventReminderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>
          }
          createMany: {
            args: Prisma.EventReminderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EventReminderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>[]
          }
          delete: {
            args: Prisma.EventReminderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>
          }
          update: {
            args: Prisma.EventReminderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>
          }
          deleteMany: {
            args: Prisma.EventReminderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventReminderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EventReminderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>[]
          }
          upsert: {
            args: Prisma.EventReminderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventReminderPayload>
          }
          aggregate: {
            args: Prisma.EventReminderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventReminder>
          }
          groupBy: {
            args: Prisma.EventReminderGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventReminderGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventReminderCountArgs<ExtArgs>
            result: $Utils.Optional<EventReminderCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    userProfile?: UserProfileOmit
    subscription?: SubscriptionOmit
    paymentEvent?: PaymentEventOmit
    university?: UniversityOmit
    universityImage?: UniversityImageOmit
    programDepartment?: ProgramDepartmentOmit
    department?: DepartmentOmit
    program?: ProgramOmit
    syllabus?: SyllabusOmit
    programRanking?: ProgramRankingOmit
    externalLink?: ExternalLinkOmit
    admission?: AdmissionOmit
    intake?: IntakeOmit
    admissionDeadline?: AdmissionDeadlineOmit
    application?: ApplicationOmit
    applicationProgress?: ApplicationProgressOmit
    applicationDocument?: ApplicationDocumentOmit
    interview?: InterviewOmit
    tuitionBreakdown?: TuitionBreakdownOmit
    paymentSchedule?: PaymentScheduleOmit
    scholarship?: ScholarshipOmit
    scholarshipDocument?: ScholarshipDocumentOmit
    scholarshipApplication?: ScholarshipApplicationOmit
    feeStructure?: FeeStructureOmit
    financialAid?: FinancialAidOmit
    financialAidApplication?: FinancialAidApplicationOmit
    admin_User?: Admin_UserOmit
    refreshToken?: RefreshTokenOmit
    essayPrompt?: EssayPromptOmit
    essaySubmission?: EssaySubmissionOmit
    essay?: EssayOmit
    essayVersion?: EssayVersionOmit
    aIResult?: AIResultOmit
    essayCompletionLog?: EssayCompletionLogOmit
    calendarEvent?: CalendarEventOmit
    eventReminder?: EventReminderOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    applications: number
    scholarshipApplications: number
    financialAidApplications: number
    essaySubmissions: number
    savedUniversities: number
    calendarEvents: number
    eventReminders: number
    essays: number
    EssayCompletionLog: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applications?: boolean | UserCountOutputTypeCountApplicationsArgs
    scholarshipApplications?: boolean | UserCountOutputTypeCountScholarshipApplicationsArgs
    financialAidApplications?: boolean | UserCountOutputTypeCountFinancialAidApplicationsArgs
    essaySubmissions?: boolean | UserCountOutputTypeCountEssaySubmissionsArgs
    savedUniversities?: boolean | UserCountOutputTypeCountSavedUniversitiesArgs
    calendarEvents?: boolean | UserCountOutputTypeCountCalendarEventsArgs
    eventReminders?: boolean | UserCountOutputTypeCountEventRemindersArgs
    essays?: boolean | UserCountOutputTypeCountEssaysArgs
    EssayCompletionLog?: boolean | UserCountOutputTypeCountEssayCompletionLogArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountScholarshipApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFinancialAidApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialAidApplicationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEssaySubmissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssaySubmissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSavedUniversitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEventRemindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventReminderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEssaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEssayCompletionLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayCompletionLogWhereInput
  }


  /**
   * Count Type UniversityCountOutputType
   */

  export type UniversityCountOutputType = {
    images: number
    programs: number
    departments: number
    admissions: number
    applications: number
    tuitionBreakdowns: number
    scholarships: number
    feeStructures: number
    financialAids: number
    savedByUsers: number
    calendarEvents: number
  }

  export type UniversityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | UniversityCountOutputTypeCountImagesArgs
    programs?: boolean | UniversityCountOutputTypeCountProgramsArgs
    departments?: boolean | UniversityCountOutputTypeCountDepartmentsArgs
    admissions?: boolean | UniversityCountOutputTypeCountAdmissionsArgs
    applications?: boolean | UniversityCountOutputTypeCountApplicationsArgs
    tuitionBreakdowns?: boolean | UniversityCountOutputTypeCountTuitionBreakdownsArgs
    scholarships?: boolean | UniversityCountOutputTypeCountScholarshipsArgs
    feeStructures?: boolean | UniversityCountOutputTypeCountFeeStructuresArgs
    financialAids?: boolean | UniversityCountOutputTypeCountFinancialAidsArgs
    savedByUsers?: boolean | UniversityCountOutputTypeCountSavedByUsersArgs
    calendarEvents?: boolean | UniversityCountOutputTypeCountCalendarEventsArgs
  }

  // Custom InputTypes
  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityCountOutputType
     */
    select?: UniversityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityImageWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountProgramsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountDepartmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartmentWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountAdmissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdmissionWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountTuitionBreakdownsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TuitionBreakdownWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountScholarshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountFeeStructuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FeeStructureWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountFinancialAidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialAidWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountSavedByUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UniversityCountOutputType without action
   */
  export type UniversityCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }


  /**
   * Count Type DepartmentCountOutputType
   */

  export type DepartmentCountOutputType = {
    programs: number
  }

  export type DepartmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    programs?: boolean | DepartmentCountOutputTypeCountProgramsArgs
  }

  // Custom InputTypes
  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartmentCountOutputType
     */
    select?: DepartmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountProgramsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramDepartmentWhereInput
  }


  /**
   * Count Type ProgramCountOutputType
   */

  export type ProgramCountOutputType = {
    departments: number
    rankings: number
    externalLinks: number
    admissions: number
    applications: number
    tuitionBreakdowns: number
    scholarships: number
    feeStructures: number
    financialAids: number
    essayPrompts: number
    calendarEvents: number
    essays: number
  }

  export type ProgramCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    departments?: boolean | ProgramCountOutputTypeCountDepartmentsArgs
    rankings?: boolean | ProgramCountOutputTypeCountRankingsArgs
    externalLinks?: boolean | ProgramCountOutputTypeCountExternalLinksArgs
    admissions?: boolean | ProgramCountOutputTypeCountAdmissionsArgs
    applications?: boolean | ProgramCountOutputTypeCountApplicationsArgs
    tuitionBreakdowns?: boolean | ProgramCountOutputTypeCountTuitionBreakdownsArgs
    scholarships?: boolean | ProgramCountOutputTypeCountScholarshipsArgs
    feeStructures?: boolean | ProgramCountOutputTypeCountFeeStructuresArgs
    financialAids?: boolean | ProgramCountOutputTypeCountFinancialAidsArgs
    essayPrompts?: boolean | ProgramCountOutputTypeCountEssayPromptsArgs
    calendarEvents?: boolean | ProgramCountOutputTypeCountCalendarEventsArgs
    essays?: boolean | ProgramCountOutputTypeCountEssaysArgs
  }

  // Custom InputTypes
  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramCountOutputType
     */
    select?: ProgramCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountDepartmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramDepartmentWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountRankingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramRankingWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountExternalLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalLinkWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountAdmissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdmissionWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountTuitionBreakdownsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TuitionBreakdownWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountScholarshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountFeeStructuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FeeStructureWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountFinancialAidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialAidWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountEssayPromptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayPromptWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }

  /**
   * ProgramCountOutputType without action
   */
  export type ProgramCountOutputTypeCountEssaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayWhereInput
  }


  /**
   * Count Type AdmissionCountOutputType
   */

  export type AdmissionCountOutputType = {
    intakes: number
    deadlines: number
    applications: number
    essayPrompts: number
    calendarEvents: number
  }

  export type AdmissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    intakes?: boolean | AdmissionCountOutputTypeCountIntakesArgs
    deadlines?: boolean | AdmissionCountOutputTypeCountDeadlinesArgs
    applications?: boolean | AdmissionCountOutputTypeCountApplicationsArgs
    essayPrompts?: boolean | AdmissionCountOutputTypeCountEssayPromptsArgs
    calendarEvents?: boolean | AdmissionCountOutputTypeCountCalendarEventsArgs
  }

  // Custom InputTypes
  /**
   * AdmissionCountOutputType without action
   */
  export type AdmissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionCountOutputType
     */
    select?: AdmissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdmissionCountOutputType without action
   */
  export type AdmissionCountOutputTypeCountIntakesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IntakeWhereInput
  }

  /**
   * AdmissionCountOutputType without action
   */
  export type AdmissionCountOutputTypeCountDeadlinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdmissionDeadlineWhereInput
  }

  /**
   * AdmissionCountOutputType without action
   */
  export type AdmissionCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * AdmissionCountOutputType without action
   */
  export type AdmissionCountOutputTypeCountEssayPromptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayPromptWhereInput
  }

  /**
   * AdmissionCountOutputType without action
   */
  export type AdmissionCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }


  /**
   * Count Type IntakeCountOutputType
   */

  export type IntakeCountOutputType = {
    deadlines: number
    applications: number
    essayPrompts: number
    calendarEvents: number
  }

  export type IntakeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deadlines?: boolean | IntakeCountOutputTypeCountDeadlinesArgs
    applications?: boolean | IntakeCountOutputTypeCountApplicationsArgs
    essayPrompts?: boolean | IntakeCountOutputTypeCountEssayPromptsArgs
    calendarEvents?: boolean | IntakeCountOutputTypeCountCalendarEventsArgs
  }

  // Custom InputTypes
  /**
   * IntakeCountOutputType without action
   */
  export type IntakeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IntakeCountOutputType
     */
    select?: IntakeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * IntakeCountOutputType without action
   */
  export type IntakeCountOutputTypeCountDeadlinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdmissionDeadlineWhereInput
  }

  /**
   * IntakeCountOutputType without action
   */
  export type IntakeCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
  }

  /**
   * IntakeCountOutputType without action
   */
  export type IntakeCountOutputTypeCountEssayPromptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayPromptWhereInput
  }

  /**
   * IntakeCountOutputType without action
   */
  export type IntakeCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }


  /**
   * Count Type AdmissionDeadlineCountOutputType
   */

  export type AdmissionDeadlineCountOutputType = {
    calendarEvents: number
  }

  export type AdmissionDeadlineCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    calendarEvents?: boolean | AdmissionDeadlineCountOutputTypeCountCalendarEventsArgs
  }

  // Custom InputTypes
  /**
   * AdmissionDeadlineCountOutputType without action
   */
  export type AdmissionDeadlineCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadlineCountOutputType
     */
    select?: AdmissionDeadlineCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdmissionDeadlineCountOutputType without action
   */
  export type AdmissionDeadlineCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }


  /**
   * Count Type ApplicationCountOutputType
   */

  export type ApplicationCountOutputType = {
    documents: number
    applicationProgress: number
    interviews: number
    scholarshipApplications: number
    financialAidApplications: number
    essaySubmissions: number
    calendarEvents: number
    essays: number
  }

  export type ApplicationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | ApplicationCountOutputTypeCountDocumentsArgs
    applicationProgress?: boolean | ApplicationCountOutputTypeCountApplicationProgressArgs
    interviews?: boolean | ApplicationCountOutputTypeCountInterviewsArgs
    scholarshipApplications?: boolean | ApplicationCountOutputTypeCountScholarshipApplicationsArgs
    financialAidApplications?: boolean | ApplicationCountOutputTypeCountFinancialAidApplicationsArgs
    essaySubmissions?: boolean | ApplicationCountOutputTypeCountEssaySubmissionsArgs
    calendarEvents?: boolean | ApplicationCountOutputTypeCountCalendarEventsArgs
    essays?: boolean | ApplicationCountOutputTypeCountEssaysArgs
  }

  // Custom InputTypes
  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationCountOutputType
     */
    select?: ApplicationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationDocumentWhereInput
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountApplicationProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationProgressWhereInput
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountInterviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InterviewWhereInput
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountScholarshipApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipApplicationWhereInput
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountFinancialAidApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialAidApplicationWhereInput
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountEssaySubmissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssaySubmissionWhereInput
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }

  /**
   * ApplicationCountOutputType without action
   */
  export type ApplicationCountOutputTypeCountEssaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayWhereInput
  }


  /**
   * Count Type InterviewCountOutputType
   */

  export type InterviewCountOutputType = {
    calendarEvents: number
  }

  export type InterviewCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    calendarEvents?: boolean | InterviewCountOutputTypeCountCalendarEventsArgs
  }

  // Custom InputTypes
  /**
   * InterviewCountOutputType without action
   */
  export type InterviewCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InterviewCountOutputType
     */
    select?: InterviewCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InterviewCountOutputType without action
   */
  export type InterviewCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }


  /**
   * Count Type TuitionBreakdownCountOutputType
   */

  export type TuitionBreakdownCountOutputType = {
    paymentSchedule: number
  }

  export type TuitionBreakdownCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    paymentSchedule?: boolean | TuitionBreakdownCountOutputTypeCountPaymentScheduleArgs
  }

  // Custom InputTypes
  /**
   * TuitionBreakdownCountOutputType without action
   */
  export type TuitionBreakdownCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdownCountOutputType
     */
    select?: TuitionBreakdownCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TuitionBreakdownCountOutputType without action
   */
  export type TuitionBreakdownCountOutputTypeCountPaymentScheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentScheduleWhereInput
  }


  /**
   * Count Type ScholarshipCountOutputType
   */

  export type ScholarshipCountOutputType = {
    documents: number
    applications: number
    calendarEvents: number
  }

  export type ScholarshipCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | ScholarshipCountOutputTypeCountDocumentsArgs
    applications?: boolean | ScholarshipCountOutputTypeCountApplicationsArgs
    calendarEvents?: boolean | ScholarshipCountOutputTypeCountCalendarEventsArgs
  }

  // Custom InputTypes
  /**
   * ScholarshipCountOutputType without action
   */
  export type ScholarshipCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipCountOutputType
     */
    select?: ScholarshipCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ScholarshipCountOutputType without action
   */
  export type ScholarshipCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipDocumentWhereInput
  }

  /**
   * ScholarshipCountOutputType without action
   */
  export type ScholarshipCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipApplicationWhereInput
  }

  /**
   * ScholarshipCountOutputType without action
   */
  export type ScholarshipCountOutputTypeCountCalendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
  }


  /**
   * Count Type FinancialAidCountOutputType
   */

  export type FinancialAidCountOutputType = {
    applications: number
  }

  export type FinancialAidCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    applications?: boolean | FinancialAidCountOutputTypeCountApplicationsArgs
  }

  // Custom InputTypes
  /**
   * FinancialAidCountOutputType without action
   */
  export type FinancialAidCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidCountOutputType
     */
    select?: FinancialAidCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FinancialAidCountOutputType without action
   */
  export type FinancialAidCountOutputTypeCountApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialAidApplicationWhereInput
  }


  /**
   * Count Type Admin_UserCountOutputType
   */

  export type Admin_UserCountOutputType = {
    refreshTokens: number
  }

  export type Admin_UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    refreshTokens?: boolean | Admin_UserCountOutputTypeCountRefreshTokensArgs
  }

  // Custom InputTypes
  /**
   * Admin_UserCountOutputType without action
   */
  export type Admin_UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_UserCountOutputType
     */
    select?: Admin_UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Admin_UserCountOutputType without action
   */
  export type Admin_UserCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type EssayPromptCountOutputType
   */

  export type EssayPromptCountOutputType = {
    submissions: number
    essays: number
  }

  export type EssayPromptCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    submissions?: boolean | EssayPromptCountOutputTypeCountSubmissionsArgs
    essays?: boolean | EssayPromptCountOutputTypeCountEssaysArgs
  }

  // Custom InputTypes
  /**
   * EssayPromptCountOutputType without action
   */
  export type EssayPromptCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPromptCountOutputType
     */
    select?: EssayPromptCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EssayPromptCountOutputType without action
   */
  export type EssayPromptCountOutputTypeCountSubmissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssaySubmissionWhereInput
  }

  /**
   * EssayPromptCountOutputType without action
   */
  export type EssayPromptCountOutputTypeCountEssaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayWhereInput
  }


  /**
   * Count Type EssayCountOutputType
   */

  export type EssayCountOutputType = {
    versions: number
    aiResults: number
    EssayCompletionLog: number
  }

  export type EssayCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    versions?: boolean | EssayCountOutputTypeCountVersionsArgs
    aiResults?: boolean | EssayCountOutputTypeCountAiResultsArgs
    EssayCompletionLog?: boolean | EssayCountOutputTypeCountEssayCompletionLogArgs
  }

  // Custom InputTypes
  /**
   * EssayCountOutputType without action
   */
  export type EssayCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCountOutputType
     */
    select?: EssayCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EssayCountOutputType without action
   */
  export type EssayCountOutputTypeCountVersionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayVersionWhereInput
  }

  /**
   * EssayCountOutputType without action
   */
  export type EssayCountOutputTypeCountAiResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIResultWhereInput
  }

  /**
   * EssayCountOutputType without action
   */
  export type EssayCountOutputTypeCountEssayCompletionLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayCompletionLogWhereInput
  }


  /**
   * Count Type EssayVersionCountOutputType
   */

  export type EssayVersionCountOutputType = {
    aiResults: number
  }

  export type EssayVersionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aiResults?: boolean | EssayVersionCountOutputTypeCountAiResultsArgs
  }

  // Custom InputTypes
  /**
   * EssayVersionCountOutputType without action
   */
  export type EssayVersionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersionCountOutputType
     */
    select?: EssayVersionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EssayVersionCountOutputType without action
   */
  export type EssayVersionCountOutputTypeCountAiResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIResultWhereInput
  }


  /**
   * Count Type CalendarEventCountOutputType
   */

  export type CalendarEventCountOutputType = {
    reminders: number
  }

  export type CalendarEventCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reminders?: boolean | CalendarEventCountOutputTypeCountRemindersArgs
  }

  // Custom InputTypes
  /**
   * CalendarEventCountOutputType without action
   */
  export type CalendarEventCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEventCountOutputType
     */
    select?: CalendarEventCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CalendarEventCountOutputType without action
   */
  export type CalendarEventCountOutputTypeCountRemindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventReminderWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    image: string | null
    password: string | null
    provider: string | null
    emailVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    image: string | null
    password: string | null
    provider: string | null
    emailVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    name: number
    image: number
    password: number
    provider: number
    emailVerified: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    image?: true
    password?: true
    provider?: true
    emailVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    image?: true
    password?: true
    provider?: true
    emailVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    image?: true
    password?: true
    provider?: true
    emailVerified?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    name: string | null
    image: string | null
    password: string | null
    provider: string | null
    emailVerified: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    image?: boolean
    password?: boolean
    provider?: boolean
    emailVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    profile?: boolean | User$profileArgs<ExtArgs>
    subscription?: boolean | User$subscriptionArgs<ExtArgs>
    applications?: boolean | User$applicationsArgs<ExtArgs>
    scholarshipApplications?: boolean | User$scholarshipApplicationsArgs<ExtArgs>
    financialAidApplications?: boolean | User$financialAidApplicationsArgs<ExtArgs>
    essaySubmissions?: boolean | User$essaySubmissionsArgs<ExtArgs>
    savedUniversities?: boolean | User$savedUniversitiesArgs<ExtArgs>
    calendarEvents?: boolean | User$calendarEventsArgs<ExtArgs>
    eventReminders?: boolean | User$eventRemindersArgs<ExtArgs>
    essays?: boolean | User$essaysArgs<ExtArgs>
    EssayCompletionLog?: boolean | User$EssayCompletionLogArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    image?: boolean
    password?: boolean
    provider?: boolean
    emailVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    image?: boolean
    password?: boolean
    provider?: boolean
    emailVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    image?: boolean
    password?: boolean
    provider?: boolean
    emailVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "name" | "image" | "password" | "provider" | "emailVerified" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | User$profileArgs<ExtArgs>
    subscription?: boolean | User$subscriptionArgs<ExtArgs>
    applications?: boolean | User$applicationsArgs<ExtArgs>
    scholarshipApplications?: boolean | User$scholarshipApplicationsArgs<ExtArgs>
    financialAidApplications?: boolean | User$financialAidApplicationsArgs<ExtArgs>
    essaySubmissions?: boolean | User$essaySubmissionsArgs<ExtArgs>
    savedUniversities?: boolean | User$savedUniversitiesArgs<ExtArgs>
    calendarEvents?: boolean | User$calendarEventsArgs<ExtArgs>
    eventReminders?: boolean | User$eventRemindersArgs<ExtArgs>
    essays?: boolean | User$essaysArgs<ExtArgs>
    EssayCompletionLog?: boolean | User$EssayCompletionLogArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      profile: Prisma.$UserProfilePayload<ExtArgs> | null
      subscription: Prisma.$SubscriptionPayload<ExtArgs> | null
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
      scholarshipApplications: Prisma.$ScholarshipApplicationPayload<ExtArgs>[]
      financialAidApplications: Prisma.$FinancialAidApplicationPayload<ExtArgs>[]
      essaySubmissions: Prisma.$EssaySubmissionPayload<ExtArgs>[]
      savedUniversities: Prisma.$UniversityPayload<ExtArgs>[]
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
      eventReminders: Prisma.$EventReminderPayload<ExtArgs>[]
      essays: Prisma.$EssayPayload<ExtArgs>[]
      EssayCompletionLog: Prisma.$EssayCompletionLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      name: string | null
      image: string | null
      password: string | null
      provider: string | null
      emailVerified: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profile<T extends User$profileArgs<ExtArgs> = {}>(args?: Subset<T, User$profileArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    subscription<T extends User$subscriptionArgs<ExtArgs> = {}>(args?: Subset<T, User$subscriptionArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    applications<T extends User$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    scholarshipApplications<T extends User$scholarshipApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$scholarshipApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    financialAidApplications<T extends User$financialAidApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$financialAidApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essaySubmissions<T extends User$essaySubmissionsArgs<ExtArgs> = {}>(args?: Subset<T, User$essaySubmissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    savedUniversities<T extends User$savedUniversitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$savedUniversitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calendarEvents<T extends User$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, User$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    eventReminders<T extends User$eventRemindersArgs<ExtArgs> = {}>(args?: Subset<T, User$eventRemindersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essays<T extends User$essaysArgs<ExtArgs> = {}>(args?: Subset<T, User$essaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EssayCompletionLog<T extends User$EssayCompletionLogArgs<ExtArgs> = {}>(args?: Subset<T, User$EssayCompletionLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly image: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly provider: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.profile
   */
  export type User$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    where?: UserProfileWhereInput
  }

  /**
   * User.subscription
   */
  export type User$subscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    where?: SubscriptionWhereInput
  }

  /**
   * User.applications
   */
  export type User$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * User.scholarshipApplications
   */
  export type User$scholarshipApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    where?: ScholarshipApplicationWhereInput
    orderBy?: ScholarshipApplicationOrderByWithRelationInput | ScholarshipApplicationOrderByWithRelationInput[]
    cursor?: ScholarshipApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScholarshipApplicationScalarFieldEnum | ScholarshipApplicationScalarFieldEnum[]
  }

  /**
   * User.financialAidApplications
   */
  export type User$financialAidApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    where?: FinancialAidApplicationWhereInput
    orderBy?: FinancialAidApplicationOrderByWithRelationInput | FinancialAidApplicationOrderByWithRelationInput[]
    cursor?: FinancialAidApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancialAidApplicationScalarFieldEnum | FinancialAidApplicationScalarFieldEnum[]
  }

  /**
   * User.essaySubmissions
   */
  export type User$essaySubmissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    where?: EssaySubmissionWhereInput
    orderBy?: EssaySubmissionOrderByWithRelationInput | EssaySubmissionOrderByWithRelationInput[]
    cursor?: EssaySubmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssaySubmissionScalarFieldEnum | EssaySubmissionScalarFieldEnum[]
  }

  /**
   * User.savedUniversities
   */
  export type User$savedUniversitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    where?: UniversityWhereInput
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    cursor?: UniversityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * User.calendarEvents
   */
  export type User$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * User.eventReminders
   */
  export type User$eventRemindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    where?: EventReminderWhereInput
    orderBy?: EventReminderOrderByWithRelationInput | EventReminderOrderByWithRelationInput[]
    cursor?: EventReminderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventReminderScalarFieldEnum | EventReminderScalarFieldEnum[]
  }

  /**
   * User.essays
   */
  export type User$essaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    where?: EssayWhereInput
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    cursor?: EssayWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayScalarFieldEnum | EssayScalarFieldEnum[]
  }

  /**
   * User.EssayCompletionLog
   */
  export type User$EssayCompletionLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    where?: EssayCompletionLogWhereInput
    orderBy?: EssayCompletionLogOrderByWithRelationInput | EssayCompletionLogOrderByWithRelationInput[]
    cursor?: EssayCompletionLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayCompletionLogScalarFieldEnum | EssayCompletionLogScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserProfile
   */

  export type AggregateUserProfile = {
    _count: UserProfileCountAggregateOutputType | null
    _min: UserProfileMinAggregateOutputType | null
    _max: UserProfileMaxAggregateOutputType | null
  }

  export type UserProfileMinAggregateOutputType = {
    id: string | null
    userId: string | null
    studyLevel: string | null
    gpa: string | null
    testScores: string | null
    workExperience: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserProfileMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    studyLevel: string | null
    gpa: string | null
    testScores: string | null
    workExperience: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserProfileCountAggregateOutputType = {
    id: number
    userId: number
    countries: number
    courses: number
    studyLevel: number
    gpa: number
    testScores: number
    workExperience: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserProfileMinAggregateInputType = {
    id?: true
    userId?: true
    studyLevel?: true
    gpa?: true
    testScores?: true
    workExperience?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserProfileMaxAggregateInputType = {
    id?: true
    userId?: true
    studyLevel?: true
    gpa?: true
    testScores?: true
    workExperience?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserProfileCountAggregateInputType = {
    id?: true
    userId?: true
    countries?: true
    courses?: true
    studyLevel?: true
    gpa?: true
    testScores?: true
    workExperience?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserProfile to aggregate.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserProfiles
    **/
    _count?: true | UserProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserProfileMaxAggregateInputType
  }

  export type GetUserProfileAggregateType<T extends UserProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateUserProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserProfile[P]>
      : GetScalarType<T[P], AggregateUserProfile[P]>
  }




  export type UserProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserProfileWhereInput
    orderBy?: UserProfileOrderByWithAggregationInput | UserProfileOrderByWithAggregationInput[]
    by: UserProfileScalarFieldEnum[] | UserProfileScalarFieldEnum
    having?: UserProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserProfileCountAggregateInputType | true
    _min?: UserProfileMinAggregateInputType
    _max?: UserProfileMaxAggregateInputType
  }

  export type UserProfileGroupByOutputType = {
    id: string
    userId: string
    countries: string[]
    courses: string[]
    studyLevel: string | null
    gpa: string | null
    testScores: string | null
    workExperience: string | null
    createdAt: Date
    updatedAt: Date
    _count: UserProfileCountAggregateOutputType | null
    _min: UserProfileMinAggregateOutputType | null
    _max: UserProfileMaxAggregateOutputType | null
  }

  type GetUserProfileGroupByPayload<T extends UserProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserProfileGroupByOutputType[P]>
            : GetScalarType<T[P], UserProfileGroupByOutputType[P]>
        }
      >
    >


  export type UserProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    countries?: boolean
    courses?: boolean
    studyLevel?: boolean
    gpa?: boolean
    testScores?: boolean
    workExperience?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userProfile"]>

  export type UserProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    countries?: boolean
    courses?: boolean
    studyLevel?: boolean
    gpa?: boolean
    testScores?: boolean
    workExperience?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userProfile"]>

  export type UserProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    countries?: boolean
    courses?: boolean
    studyLevel?: boolean
    gpa?: boolean
    testScores?: boolean
    workExperience?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userProfile"]>

  export type UserProfileSelectScalar = {
    id?: boolean
    userId?: boolean
    countries?: boolean
    courses?: boolean
    studyLevel?: boolean
    gpa?: boolean
    testScores?: boolean
    workExperience?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "countries" | "courses" | "studyLevel" | "gpa" | "testScores" | "workExperience" | "createdAt" | "updatedAt", ExtArgs["result"]["userProfile"]>
  export type UserProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserProfile"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      countries: string[]
      courses: string[]
      studyLevel: string | null
      gpa: string | null
      testScores: string | null
      workExperience: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userProfile"]>
    composites: {}
  }

  type UserProfileGetPayload<S extends boolean | null | undefined | UserProfileDefaultArgs> = $Result.GetResult<Prisma.$UserProfilePayload, S>

  type UserProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserProfileCountAggregateInputType | true
    }

  export interface UserProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserProfile'], meta: { name: 'UserProfile' } }
    /**
     * Find zero or one UserProfile that matches the filter.
     * @param {UserProfileFindUniqueArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserProfileFindUniqueArgs>(args: SelectSubset<T, UserProfileFindUniqueArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserProfile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserProfileFindUniqueOrThrowArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, UserProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserProfile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileFindFirstArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserProfileFindFirstArgs>(args?: SelectSubset<T, UserProfileFindFirstArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserProfile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileFindFirstOrThrowArgs} args - Arguments to find a UserProfile
     * @example
     * // Get one UserProfile
     * const userProfile = await prisma.userProfile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, UserProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserProfiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserProfiles
     * const userProfiles = await prisma.userProfile.findMany()
     * 
     * // Get first 10 UserProfiles
     * const userProfiles = await prisma.userProfile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userProfileWithIdOnly = await prisma.userProfile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserProfileFindManyArgs>(args?: SelectSubset<T, UserProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserProfile.
     * @param {UserProfileCreateArgs} args - Arguments to create a UserProfile.
     * @example
     * // Create one UserProfile
     * const UserProfile = await prisma.userProfile.create({
     *   data: {
     *     // ... data to create a UserProfile
     *   }
     * })
     * 
     */
    create<T extends UserProfileCreateArgs>(args: SelectSubset<T, UserProfileCreateArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserProfiles.
     * @param {UserProfileCreateManyArgs} args - Arguments to create many UserProfiles.
     * @example
     * // Create many UserProfiles
     * const userProfile = await prisma.userProfile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserProfileCreateManyArgs>(args?: SelectSubset<T, UserProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserProfiles and returns the data saved in the database.
     * @param {UserProfileCreateManyAndReturnArgs} args - Arguments to create many UserProfiles.
     * @example
     * // Create many UserProfiles
     * const userProfile = await prisma.userProfile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserProfiles and only return the `id`
     * const userProfileWithIdOnly = await prisma.userProfile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, UserProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserProfile.
     * @param {UserProfileDeleteArgs} args - Arguments to delete one UserProfile.
     * @example
     * // Delete one UserProfile
     * const UserProfile = await prisma.userProfile.delete({
     *   where: {
     *     // ... filter to delete one UserProfile
     *   }
     * })
     * 
     */
    delete<T extends UserProfileDeleteArgs>(args: SelectSubset<T, UserProfileDeleteArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserProfile.
     * @param {UserProfileUpdateArgs} args - Arguments to update one UserProfile.
     * @example
     * // Update one UserProfile
     * const userProfile = await prisma.userProfile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserProfileUpdateArgs>(args: SelectSubset<T, UserProfileUpdateArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserProfiles.
     * @param {UserProfileDeleteManyArgs} args - Arguments to filter UserProfiles to delete.
     * @example
     * // Delete a few UserProfiles
     * const { count } = await prisma.userProfile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserProfileDeleteManyArgs>(args?: SelectSubset<T, UserProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserProfiles
     * const userProfile = await prisma.userProfile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserProfileUpdateManyArgs>(args: SelectSubset<T, UserProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserProfiles and returns the data updated in the database.
     * @param {UserProfileUpdateManyAndReturnArgs} args - Arguments to update many UserProfiles.
     * @example
     * // Update many UserProfiles
     * const userProfile = await prisma.userProfile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserProfiles and only return the `id`
     * const userProfileWithIdOnly = await prisma.userProfile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, UserProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserProfile.
     * @param {UserProfileUpsertArgs} args - Arguments to update or create a UserProfile.
     * @example
     * // Update or create a UserProfile
     * const userProfile = await prisma.userProfile.upsert({
     *   create: {
     *     // ... data to create a UserProfile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserProfile we want to update
     *   }
     * })
     */
    upsert<T extends UserProfileUpsertArgs>(args: SelectSubset<T, UserProfileUpsertArgs<ExtArgs>>): Prisma__UserProfileClient<$Result.GetResult<Prisma.$UserProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserProfiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileCountArgs} args - Arguments to filter UserProfiles to count.
     * @example
     * // Count the number of UserProfiles
     * const count = await prisma.userProfile.count({
     *   where: {
     *     // ... the filter for the UserProfiles we want to count
     *   }
     * })
    **/
    count<T extends UserProfileCountArgs>(
      args?: Subset<T, UserProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserProfileAggregateArgs>(args: Subset<T, UserProfileAggregateArgs>): Prisma.PrismaPromise<GetUserProfileAggregateType<T>>

    /**
     * Group by UserProfile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserProfileGroupByArgs['orderBy'] }
        : { orderBy?: UserProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserProfile model
   */
  readonly fields: UserProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserProfile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserProfile model
   */
  interface UserProfileFieldRefs {
    readonly id: FieldRef<"UserProfile", 'String'>
    readonly userId: FieldRef<"UserProfile", 'String'>
    readonly countries: FieldRef<"UserProfile", 'String[]'>
    readonly courses: FieldRef<"UserProfile", 'String[]'>
    readonly studyLevel: FieldRef<"UserProfile", 'String'>
    readonly gpa: FieldRef<"UserProfile", 'String'>
    readonly testScores: FieldRef<"UserProfile", 'String'>
    readonly workExperience: FieldRef<"UserProfile", 'String'>
    readonly createdAt: FieldRef<"UserProfile", 'DateTime'>
    readonly updatedAt: FieldRef<"UserProfile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserProfile findUnique
   */
  export type UserProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile findUniqueOrThrow
   */
  export type UserProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile findFirst
   */
  export type UserProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserProfiles.
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserProfiles.
     */
    distinct?: UserProfileScalarFieldEnum | UserProfileScalarFieldEnum[]
  }

  /**
   * UserProfile findFirstOrThrow
   */
  export type UserProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfile to fetch.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserProfiles.
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserProfiles.
     */
    distinct?: UserProfileScalarFieldEnum | UserProfileScalarFieldEnum[]
  }

  /**
   * UserProfile findMany
   */
  export type UserProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter, which UserProfiles to fetch.
     */
    where?: UserProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserProfiles to fetch.
     */
    orderBy?: UserProfileOrderByWithRelationInput | UserProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserProfiles.
     */
    cursor?: UserProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserProfiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserProfiles.
     */
    skip?: number
    distinct?: UserProfileScalarFieldEnum | UserProfileScalarFieldEnum[]
  }

  /**
   * UserProfile create
   */
  export type UserProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a UserProfile.
     */
    data: XOR<UserProfileCreateInput, UserProfileUncheckedCreateInput>
  }

  /**
   * UserProfile createMany
   */
  export type UserProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserProfiles.
     */
    data: UserProfileCreateManyInput | UserProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserProfile createManyAndReturn
   */
  export type UserProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * The data used to create many UserProfiles.
     */
    data: UserProfileCreateManyInput | UserProfileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserProfile update
   */
  export type UserProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a UserProfile.
     */
    data: XOR<UserProfileUpdateInput, UserProfileUncheckedUpdateInput>
    /**
     * Choose, which UserProfile to update.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile updateMany
   */
  export type UserProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserProfiles.
     */
    data: XOR<UserProfileUpdateManyMutationInput, UserProfileUncheckedUpdateManyInput>
    /**
     * Filter which UserProfiles to update
     */
    where?: UserProfileWhereInput
    /**
     * Limit how many UserProfiles to update.
     */
    limit?: number
  }

  /**
   * UserProfile updateManyAndReturn
   */
  export type UserProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * The data used to update UserProfiles.
     */
    data: XOR<UserProfileUpdateManyMutationInput, UserProfileUncheckedUpdateManyInput>
    /**
     * Filter which UserProfiles to update
     */
    where?: UserProfileWhereInput
    /**
     * Limit how many UserProfiles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserProfile upsert
   */
  export type UserProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the UserProfile to update in case it exists.
     */
    where: UserProfileWhereUniqueInput
    /**
     * In case the UserProfile found by the `where` argument doesn't exist, create a new UserProfile with this data.
     */
    create: XOR<UserProfileCreateInput, UserProfileUncheckedCreateInput>
    /**
     * In case the UserProfile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserProfileUpdateInput, UserProfileUncheckedUpdateInput>
  }

  /**
   * UserProfile delete
   */
  export type UserProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
    /**
     * Filter which UserProfile to delete.
     */
    where: UserProfileWhereUniqueInput
  }

  /**
   * UserProfile deleteMany
   */
  export type UserProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserProfiles to delete
     */
    where?: UserProfileWhereInput
    /**
     * Limit how many UserProfiles to delete.
     */
    limit?: number
  }

  /**
   * UserProfile without action
   */
  export type UserProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserProfile
     */
    select?: UserProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserProfile
     */
    omit?: UserProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserProfileInclude<ExtArgs> | null
  }


  /**
   * Model Subscription
   */

  export type AggregateSubscription = {
    _count: SubscriptionCountAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  export type SubscriptionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    plan: string | null
    status: string | null
    billingCycle: string | null
    trialStartDate: Date | null
    trialEndDate: Date | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    stripeCustomerId: string | null
    stripeSubscriptionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    plan: string | null
    status: string | null
    billingCycle: string | null
    trialStartDate: Date | null
    trialEndDate: Date | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    stripeCustomerId: string | null
    stripeSubscriptionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionCountAggregateOutputType = {
    id: number
    userId: number
    plan: number
    status: number
    billingCycle: number
    trialStartDate: number
    trialEndDate: number
    currentPeriodStart: number
    currentPeriodEnd: number
    stripeCustomerId: number
    stripeSubscriptionId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscriptionMinAggregateInputType = {
    id?: true
    userId?: true
    plan?: true
    status?: true
    billingCycle?: true
    trialStartDate?: true
    trialEndDate?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    stripeCustomerId?: true
    stripeSubscriptionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionMaxAggregateInputType = {
    id?: true
    userId?: true
    plan?: true
    status?: true
    billingCycle?: true
    trialStartDate?: true
    trialEndDate?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    stripeCustomerId?: true
    stripeSubscriptionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionCountAggregateInputType = {
    id?: true
    userId?: true
    plan?: true
    status?: true
    billingCycle?: true
    trialStartDate?: true
    trialEndDate?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    stripeCustomerId?: true
    stripeSubscriptionId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscription to aggregate.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subscriptions
    **/
    _count?: true | SubscriptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionMaxAggregateInputType
  }

  export type GetSubscriptionAggregateType<T extends SubscriptionAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription[P]>
      : GetScalarType<T[P], AggregateSubscription[P]>
  }




  export type SubscriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithAggregationInput | SubscriptionOrderByWithAggregationInput[]
    by: SubscriptionScalarFieldEnum[] | SubscriptionScalarFieldEnum
    having?: SubscriptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionCountAggregateInputType | true
    _min?: SubscriptionMinAggregateInputType
    _max?: SubscriptionMaxAggregateInputType
  }

  export type SubscriptionGroupByOutputType = {
    id: string
    userId: string
    plan: string
    status: string
    billingCycle: string | null
    trialStartDate: Date | null
    trialEndDate: Date | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    stripeCustomerId: string | null
    stripeSubscriptionId: string | null
    createdAt: Date
    updatedAt: Date
    _count: SubscriptionCountAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  type GetSubscriptionGroupByPayload<T extends SubscriptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    plan?: boolean
    status?: boolean
    billingCycle?: boolean
    trialStartDate?: boolean
    trialEndDate?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    plan?: boolean
    status?: boolean
    billingCycle?: boolean
    trialStartDate?: boolean
    trialEndDate?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    plan?: boolean
    status?: boolean
    billingCycle?: boolean
    trialStartDate?: boolean
    trialEndDate?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectScalar = {
    id?: boolean
    userId?: boolean
    plan?: boolean
    status?: boolean
    billingCycle?: boolean
    trialStartDate?: boolean
    trialEndDate?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    stripeCustomerId?: boolean
    stripeSubscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubscriptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "plan" | "status" | "billingCycle" | "trialStartDate" | "trialEndDate" | "currentPeriodStart" | "currentPeriodEnd" | "stripeCustomerId" | "stripeSubscriptionId" | "createdAt" | "updatedAt", ExtArgs["result"]["subscription"]>
  export type SubscriptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SubscriptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SubscriptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SubscriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Subscription"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      plan: string
      status: string
      billingCycle: string | null
      trialStartDate: Date | null
      trialEndDate: Date | null
      currentPeriodStart: Date | null
      currentPeriodEnd: Date | null
      stripeCustomerId: string | null
      stripeSubscriptionId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscription"]>
    composites: {}
  }

  type SubscriptionGetPayload<S extends boolean | null | undefined | SubscriptionDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionPayload, S>

  type SubscriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SubscriptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SubscriptionCountAggregateInputType | true
    }

  export interface SubscriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Subscription'], meta: { name: 'Subscription' } }
    /**
     * Find zero or one Subscription that matches the filter.
     * @param {SubscriptionFindUniqueArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionFindUniqueArgs>(args: SelectSubset<T, SubscriptionFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subscription that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SubscriptionFindUniqueOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionFindFirstArgs>(args?: SelectSubset<T, SubscriptionFindFirstArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscription.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscription.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionFindManyArgs>(args?: SelectSubset<T, SubscriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subscription.
     * @param {SubscriptionCreateArgs} args - Arguments to create a Subscription.
     * @example
     * // Create one Subscription
     * const Subscription = await prisma.subscription.create({
     *   data: {
     *     // ... data to create a Subscription
     *   }
     * })
     * 
     */
    create<T extends SubscriptionCreateArgs>(args: SelectSubset<T, SubscriptionCreateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subscriptions.
     * @param {SubscriptionCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionCreateManyArgs>(args?: SelectSubset<T, SubscriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscriptions and returns the data saved in the database.
     * @param {SubscriptionCreateManyAndReturnArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscriptions and only return the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Subscription.
     * @param {SubscriptionDeleteArgs} args - Arguments to delete one Subscription.
     * @example
     * // Delete one Subscription
     * const Subscription = await prisma.subscription.delete({
     *   where: {
     *     // ... filter to delete one Subscription
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionDeleteArgs>(args: SelectSubset<T, SubscriptionDeleteArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subscription.
     * @param {SubscriptionUpdateArgs} args - Arguments to update one Subscription.
     * @example
     * // Update one Subscription
     * const subscription = await prisma.subscription.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionUpdateArgs>(args: SelectSubset<T, SubscriptionUpdateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subscriptions.
     * @param {SubscriptionDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscription.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionDeleteManyArgs>(args?: SelectSubset<T, SubscriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscription = await prisma.subscription.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionUpdateManyArgs>(args: SelectSubset<T, SubscriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions and returns the data updated in the database.
     * @param {SubscriptionUpdateManyAndReturnArgs} args - Arguments to update many Subscriptions.
     * @example
     * // Update many Subscriptions
     * const subscription = await prisma.subscription.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Subscriptions and only return the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SubscriptionUpdateManyAndReturnArgs>(args: SelectSubset<T, SubscriptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Subscription.
     * @param {SubscriptionUpsertArgs} args - Arguments to update or create a Subscription.
     * @example
     * // Update or create a Subscription
     * const subscription = await prisma.subscription.upsert({
     *   create: {
     *     // ... data to create a Subscription
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionUpsertArgs>(args: SelectSubset<T, SubscriptionUpsertArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscription.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionCountArgs>(
      args?: Subset<T, SubscriptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionAggregateArgs>(args: Subset<T, SubscriptionAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionAggregateType<T>>

    /**
     * Group by Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Subscription model
   */
  readonly fields: SubscriptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Subscription.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Subscription model
   */
  interface SubscriptionFieldRefs {
    readonly id: FieldRef<"Subscription", 'String'>
    readonly userId: FieldRef<"Subscription", 'String'>
    readonly plan: FieldRef<"Subscription", 'String'>
    readonly status: FieldRef<"Subscription", 'String'>
    readonly billingCycle: FieldRef<"Subscription", 'String'>
    readonly trialStartDate: FieldRef<"Subscription", 'DateTime'>
    readonly trialEndDate: FieldRef<"Subscription", 'DateTime'>
    readonly currentPeriodStart: FieldRef<"Subscription", 'DateTime'>
    readonly currentPeriodEnd: FieldRef<"Subscription", 'DateTime'>
    readonly stripeCustomerId: FieldRef<"Subscription", 'String'>
    readonly stripeSubscriptionId: FieldRef<"Subscription", 'String'>
    readonly createdAt: FieldRef<"Subscription", 'DateTime'>
    readonly updatedAt: FieldRef<"Subscription", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Subscription findUnique
   */
  export type SubscriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findUniqueOrThrow
   */
  export type SubscriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findFirst
   */
  export type SubscriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findFirstOrThrow
   */
  export type SubscriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findMany
   */
  export type SubscriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription create
   */
  export type SubscriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to create a Subscription.
     */
    data: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
  }

  /**
   * Subscription createMany
   */
  export type SubscriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Subscription createManyAndReturn
   */
  export type SubscriptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Subscription update
   */
  export type SubscriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to update a Subscription.
     */
    data: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
    /**
     * Choose, which Subscription to update.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription updateMany
   */
  export type SubscriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Subscriptions.
     */
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyInput>
    /**
     * Filter which Subscriptions to update
     */
    where?: SubscriptionWhereInput
    /**
     * Limit how many Subscriptions to update.
     */
    limit?: number
  }

  /**
   * Subscription updateManyAndReturn
   */
  export type SubscriptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * The data used to update Subscriptions.
     */
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyInput>
    /**
     * Filter which Subscriptions to update
     */
    where?: SubscriptionWhereInput
    /**
     * Limit how many Subscriptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Subscription upsert
   */
  export type SubscriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The filter to search for the Subscription to update in case it exists.
     */
    where: SubscriptionWhereUniqueInput
    /**
     * In case the Subscription found by the `where` argument doesn't exist, create a new Subscription with this data.
     */
    create: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
    /**
     * In case the Subscription was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
  }

  /**
   * Subscription delete
   */
  export type SubscriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter which Subscription to delete.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription deleteMany
   */
  export type SubscriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscriptions to delete
     */
    where?: SubscriptionWhereInput
    /**
     * Limit how many Subscriptions to delete.
     */
    limit?: number
  }

  /**
   * Subscription without action
   */
  export type SubscriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Subscription
     */
    omit?: SubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
  }


  /**
   * Model PaymentEvent
   */

  export type AggregatePaymentEvent = {
    _count: PaymentEventCountAggregateOutputType | null
    _avg: PaymentEventAvgAggregateOutputType | null
    _sum: PaymentEventSumAggregateOutputType | null
    _min: PaymentEventMinAggregateOutputType | null
    _max: PaymentEventMaxAggregateOutputType | null
  }

  export type PaymentEventAvgAggregateOutputType = {
    amount: number | null
  }

  export type PaymentEventSumAggregateOutputType = {
    amount: number | null
  }

  export type PaymentEventMinAggregateOutputType = {
    id: string | null
    userId: string | null
    eventType: string | null
    plan: string | null
    amount: number | null
    currency: string | null
    stripeEventId: string | null
    createdAt: Date | null
  }

  export type PaymentEventMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    eventType: string | null
    plan: string | null
    amount: number | null
    currency: string | null
    stripeEventId: string | null
    createdAt: Date | null
  }

  export type PaymentEventCountAggregateOutputType = {
    id: number
    userId: number
    eventType: number
    plan: number
    amount: number
    currency: number
    stripeEventId: number
    createdAt: number
    _all: number
  }


  export type PaymentEventAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentEventSumAggregateInputType = {
    amount?: true
  }

  export type PaymentEventMinAggregateInputType = {
    id?: true
    userId?: true
    eventType?: true
    plan?: true
    amount?: true
    currency?: true
    stripeEventId?: true
    createdAt?: true
  }

  export type PaymentEventMaxAggregateInputType = {
    id?: true
    userId?: true
    eventType?: true
    plan?: true
    amount?: true
    currency?: true
    stripeEventId?: true
    createdAt?: true
  }

  export type PaymentEventCountAggregateInputType = {
    id?: true
    userId?: true
    eventType?: true
    plan?: true
    amount?: true
    currency?: true
    stripeEventId?: true
    createdAt?: true
    _all?: true
  }

  export type PaymentEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentEvent to aggregate.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentEvents
    **/
    _count?: true | PaymentEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentEventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentEventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentEventMaxAggregateInputType
  }

  export type GetPaymentEventAggregateType<T extends PaymentEventAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentEvent[P]>
      : GetScalarType<T[P], AggregatePaymentEvent[P]>
  }




  export type PaymentEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentEventWhereInput
    orderBy?: PaymentEventOrderByWithAggregationInput | PaymentEventOrderByWithAggregationInput[]
    by: PaymentEventScalarFieldEnum[] | PaymentEventScalarFieldEnum
    having?: PaymentEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentEventCountAggregateInputType | true
    _avg?: PaymentEventAvgAggregateInputType
    _sum?: PaymentEventSumAggregateInputType
    _min?: PaymentEventMinAggregateInputType
    _max?: PaymentEventMaxAggregateInputType
  }

  export type PaymentEventGroupByOutputType = {
    id: string
    userId: string | null
    eventType: string | null
    plan: string | null
    amount: number | null
    currency: string
    stripeEventId: string | null
    createdAt: Date
    _count: PaymentEventCountAggregateOutputType | null
    _avg: PaymentEventAvgAggregateOutputType | null
    _sum: PaymentEventSumAggregateOutputType | null
    _min: PaymentEventMinAggregateOutputType | null
    _max: PaymentEventMaxAggregateOutputType | null
  }

  type GetPaymentEventGroupByPayload<T extends PaymentEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentEventGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentEventGroupByOutputType[P]>
        }
      >
    >


  export type PaymentEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    eventType?: boolean
    plan?: boolean
    amount?: boolean
    currency?: boolean
    stripeEventId?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    eventType?: boolean
    plan?: boolean
    amount?: boolean
    currency?: boolean
    stripeEventId?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    eventType?: boolean
    plan?: boolean
    amount?: boolean
    currency?: boolean
    stripeEventId?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentEvent"]>

  export type PaymentEventSelectScalar = {
    id?: boolean
    userId?: boolean
    eventType?: boolean
    plan?: boolean
    amount?: boolean
    currency?: boolean
    stripeEventId?: boolean
    createdAt?: boolean
  }

  export type PaymentEventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "eventType" | "plan" | "amount" | "currency" | "stripeEventId" | "createdAt", ExtArgs["result"]["paymentEvent"]>

  export type $PaymentEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentEvent"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      eventType: string | null
      plan: string | null
      amount: number | null
      currency: string
      stripeEventId: string | null
      createdAt: Date
    }, ExtArgs["result"]["paymentEvent"]>
    composites: {}
  }

  type PaymentEventGetPayload<S extends boolean | null | undefined | PaymentEventDefaultArgs> = $Result.GetResult<Prisma.$PaymentEventPayload, S>

  type PaymentEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentEventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentEventCountAggregateInputType | true
    }

  export interface PaymentEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentEvent'], meta: { name: 'PaymentEvent' } }
    /**
     * Find zero or one PaymentEvent that matches the filter.
     * @param {PaymentEventFindUniqueArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentEventFindUniqueArgs>(args: SelectSubset<T, PaymentEventFindUniqueArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentEvent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentEventFindUniqueOrThrowArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentEventFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindFirstArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentEventFindFirstArgs>(args?: SelectSubset<T, PaymentEventFindFirstArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindFirstOrThrowArgs} args - Arguments to find a PaymentEvent
     * @example
     * // Get one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentEventFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentEvents
     * const paymentEvents = await prisma.paymentEvent.findMany()
     * 
     * // Get first 10 PaymentEvents
     * const paymentEvents = await prisma.paymentEvent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentEventFindManyArgs>(args?: SelectSubset<T, PaymentEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentEvent.
     * @param {PaymentEventCreateArgs} args - Arguments to create a PaymentEvent.
     * @example
     * // Create one PaymentEvent
     * const PaymentEvent = await prisma.paymentEvent.create({
     *   data: {
     *     // ... data to create a PaymentEvent
     *   }
     * })
     * 
     */
    create<T extends PaymentEventCreateArgs>(args: SelectSubset<T, PaymentEventCreateArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentEvents.
     * @param {PaymentEventCreateManyArgs} args - Arguments to create many PaymentEvents.
     * @example
     * // Create many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentEventCreateManyArgs>(args?: SelectSubset<T, PaymentEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentEvents and returns the data saved in the database.
     * @param {PaymentEventCreateManyAndReturnArgs} args - Arguments to create many PaymentEvents.
     * @example
     * // Create many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentEvents and only return the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentEventCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentEvent.
     * @param {PaymentEventDeleteArgs} args - Arguments to delete one PaymentEvent.
     * @example
     * // Delete one PaymentEvent
     * const PaymentEvent = await prisma.paymentEvent.delete({
     *   where: {
     *     // ... filter to delete one PaymentEvent
     *   }
     * })
     * 
     */
    delete<T extends PaymentEventDeleteArgs>(args: SelectSubset<T, PaymentEventDeleteArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentEvent.
     * @param {PaymentEventUpdateArgs} args - Arguments to update one PaymentEvent.
     * @example
     * // Update one PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentEventUpdateArgs>(args: SelectSubset<T, PaymentEventUpdateArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentEvents.
     * @param {PaymentEventDeleteManyArgs} args - Arguments to filter PaymentEvents to delete.
     * @example
     * // Delete a few PaymentEvents
     * const { count } = await prisma.paymentEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentEventDeleteManyArgs>(args?: SelectSubset<T, PaymentEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentEventUpdateManyArgs>(args: SelectSubset<T, PaymentEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentEvents and returns the data updated in the database.
     * @param {PaymentEventUpdateManyAndReturnArgs} args - Arguments to update many PaymentEvents.
     * @example
     * // Update many PaymentEvents
     * const paymentEvent = await prisma.paymentEvent.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentEvents and only return the `id`
     * const paymentEventWithIdOnly = await prisma.paymentEvent.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentEventUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentEventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentEvent.
     * @param {PaymentEventUpsertArgs} args - Arguments to update or create a PaymentEvent.
     * @example
     * // Update or create a PaymentEvent
     * const paymentEvent = await prisma.paymentEvent.upsert({
     *   create: {
     *     // ... data to create a PaymentEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentEvent we want to update
     *   }
     * })
     */
    upsert<T extends PaymentEventUpsertArgs>(args: SelectSubset<T, PaymentEventUpsertArgs<ExtArgs>>): Prisma__PaymentEventClient<$Result.GetResult<Prisma.$PaymentEventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventCountArgs} args - Arguments to filter PaymentEvents to count.
     * @example
     * // Count the number of PaymentEvents
     * const count = await prisma.paymentEvent.count({
     *   where: {
     *     // ... the filter for the PaymentEvents we want to count
     *   }
     * })
    **/
    count<T extends PaymentEventCountArgs>(
      args?: Subset<T, PaymentEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentEventAggregateArgs>(args: Subset<T, PaymentEventAggregateArgs>): Prisma.PrismaPromise<GetPaymentEventAggregateType<T>>

    /**
     * Group by PaymentEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentEventGroupByArgs['orderBy'] }
        : { orderBy?: PaymentEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentEvent model
   */
  readonly fields: PaymentEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentEvent model
   */
  interface PaymentEventFieldRefs {
    readonly id: FieldRef<"PaymentEvent", 'String'>
    readonly userId: FieldRef<"PaymentEvent", 'String'>
    readonly eventType: FieldRef<"PaymentEvent", 'String'>
    readonly plan: FieldRef<"PaymentEvent", 'String'>
    readonly amount: FieldRef<"PaymentEvent", 'Float'>
    readonly currency: FieldRef<"PaymentEvent", 'String'>
    readonly stripeEventId: FieldRef<"PaymentEvent", 'String'>
    readonly createdAt: FieldRef<"PaymentEvent", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentEvent findUnique
   */
  export type PaymentEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent findUniqueOrThrow
   */
  export type PaymentEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent findFirst
   */
  export type PaymentEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentEvents.
     */
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent findFirstOrThrow
   */
  export type PaymentEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Filter, which PaymentEvent to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentEvents.
     */
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent findMany
   */
  export type PaymentEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Filter, which PaymentEvents to fetch.
     */
    where?: PaymentEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentEvents to fetch.
     */
    orderBy?: PaymentEventOrderByWithRelationInput | PaymentEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentEvents.
     */
    cursor?: PaymentEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentEvents.
     */
    skip?: number
    distinct?: PaymentEventScalarFieldEnum | PaymentEventScalarFieldEnum[]
  }

  /**
   * PaymentEvent create
   */
  export type PaymentEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * The data needed to create a PaymentEvent.
     */
    data?: XOR<PaymentEventCreateInput, PaymentEventUncheckedCreateInput>
  }

  /**
   * PaymentEvent createMany
   */
  export type PaymentEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentEvents.
     */
    data: PaymentEventCreateManyInput | PaymentEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentEvent createManyAndReturn
   */
  export type PaymentEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentEvents.
     */
    data: PaymentEventCreateManyInput | PaymentEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentEvent update
   */
  export type PaymentEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * The data needed to update a PaymentEvent.
     */
    data: XOR<PaymentEventUpdateInput, PaymentEventUncheckedUpdateInput>
    /**
     * Choose, which PaymentEvent to update.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent updateMany
   */
  export type PaymentEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentEvents.
     */
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyInput>
    /**
     * Filter which PaymentEvents to update
     */
    where?: PaymentEventWhereInput
    /**
     * Limit how many PaymentEvents to update.
     */
    limit?: number
  }

  /**
   * PaymentEvent updateManyAndReturn
   */
  export type PaymentEventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * The data used to update PaymentEvents.
     */
    data: XOR<PaymentEventUpdateManyMutationInput, PaymentEventUncheckedUpdateManyInput>
    /**
     * Filter which PaymentEvents to update
     */
    where?: PaymentEventWhereInput
    /**
     * Limit how many PaymentEvents to update.
     */
    limit?: number
  }

  /**
   * PaymentEvent upsert
   */
  export type PaymentEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * The filter to search for the PaymentEvent to update in case it exists.
     */
    where: PaymentEventWhereUniqueInput
    /**
     * In case the PaymentEvent found by the `where` argument doesn't exist, create a new PaymentEvent with this data.
     */
    create: XOR<PaymentEventCreateInput, PaymentEventUncheckedCreateInput>
    /**
     * In case the PaymentEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentEventUpdateInput, PaymentEventUncheckedUpdateInput>
  }

  /**
   * PaymentEvent delete
   */
  export type PaymentEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
    /**
     * Filter which PaymentEvent to delete.
     */
    where: PaymentEventWhereUniqueInput
  }

  /**
   * PaymentEvent deleteMany
   */
  export type PaymentEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentEvents to delete
     */
    where?: PaymentEventWhereInput
    /**
     * Limit how many PaymentEvents to delete.
     */
    limit?: number
  }

  /**
   * PaymentEvent without action
   */
  export type PaymentEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentEvent
     */
    select?: PaymentEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentEvent
     */
    omit?: PaymentEventOmit<ExtArgs> | null
  }


  /**
   * Model University
   */

  export type AggregateUniversity = {
    _count: UniversityCountAggregateOutputType | null
    _avg: UniversityAvgAggregateOutputType | null
    _sum: UniversitySumAggregateOutputType | null
    _min: UniversityMinAggregateOutputType | null
    _max: UniversityMaxAggregateOutputType | null
  }

  export type UniversityAvgAggregateOutputType = {
    ftGlobalRanking: number | null
    ftRegionalRanking: number | null
    ftRankingYear: number | null
    usNewsRanking: number | null
    qsRanking: number | null
    timesRanking: number | null
    acceptanceRate: number | null
    gmatAverageScore: number | null
    gmatScoreMin: number | null
    gmatScoreMax: number | null
    minimumGpa: number | null
    tuitionFees: number | null
    additionalFees: number | null
    totalCost: number | null
    studentsPerYear: number | null
    averageProgramLengthMonths: number | null
  }

  export type UniversitySumAggregateOutputType = {
    ftGlobalRanking: number | null
    ftRegionalRanking: number | null
    ftRankingYear: number | null
    usNewsRanking: number | null
    qsRanking: number | null
    timesRanking: number | null
    acceptanceRate: number | null
    gmatAverageScore: number | null
    gmatScoreMin: number | null
    gmatScoreMax: number | null
    minimumGpa: number | null
    tuitionFees: number | null
    additionalFees: number | null
    totalCost: number | null
    studentsPerYear: number | null
    averageProgramLengthMonths: number | null
  }

  export type UniversityMinAggregateOutputType = {
    id: string | null
    universityName: string | null
    slug: string | null
    city: string | null
    state: string | null
    country: string | null
    fullAddress: string | null
    shortDescription: string | null
    overview: string | null
    history: string | null
    missionStatement: string | null
    visionStatement: string | null
    accreditationDetails: string | null
    careerOutcomes: string | null
    ftGlobalRanking: number | null
    ftRegionalRanking: number | null
    ftRankingYear: number | null
    usNewsRanking: number | null
    qsRanking: number | null
    timesRanking: number | null
    acceptanceRate: number | null
    gmatAverageScore: number | null
    gmatScoreMin: number | null
    gmatScoreMax: number | null
    minimumGpa: number | null
    languageTestRequirements: string | null
    tuitionFees: number | null
    additionalFees: number | null
    totalCost: number | null
    currency: string | null
    scholarshipInfo: string | null
    financialAidDetails: string | null
    admissionsOfficeContact: string | null
    internationalOfficeContact: string | null
    generalInquiriesContact: string | null
    websiteUrl: string | null
    metaTitle: string | null
    metaDescription: string | null
    metaKeywords: string | null
    canonicalUrl: string | null
    isActive: boolean | null
    isFeatured: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    averageDeadlines: string | null
    studentsPerYear: number | null
    brochureUrl: string | null
    averageProgramLengthMonths: number | null
    intakes: string | null
  }

  export type UniversityMaxAggregateOutputType = {
    id: string | null
    universityName: string | null
    slug: string | null
    city: string | null
    state: string | null
    country: string | null
    fullAddress: string | null
    shortDescription: string | null
    overview: string | null
    history: string | null
    missionStatement: string | null
    visionStatement: string | null
    accreditationDetails: string | null
    careerOutcomes: string | null
    ftGlobalRanking: number | null
    ftRegionalRanking: number | null
    ftRankingYear: number | null
    usNewsRanking: number | null
    qsRanking: number | null
    timesRanking: number | null
    acceptanceRate: number | null
    gmatAverageScore: number | null
    gmatScoreMin: number | null
    gmatScoreMax: number | null
    minimumGpa: number | null
    languageTestRequirements: string | null
    tuitionFees: number | null
    additionalFees: number | null
    totalCost: number | null
    currency: string | null
    scholarshipInfo: string | null
    financialAidDetails: string | null
    admissionsOfficeContact: string | null
    internationalOfficeContact: string | null
    generalInquiriesContact: string | null
    websiteUrl: string | null
    metaTitle: string | null
    metaDescription: string | null
    metaKeywords: string | null
    canonicalUrl: string | null
    isActive: boolean | null
    isFeatured: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    averageDeadlines: string | null
    studentsPerYear: number | null
    brochureUrl: string | null
    averageProgramLengthMonths: number | null
    intakes: string | null
  }

  export type UniversityCountAggregateOutputType = {
    id: number
    universityName: number
    slug: number
    city: number
    state: number
    country: number
    fullAddress: number
    shortDescription: number
    overview: number
    history: number
    missionStatement: number
    visionStatement: number
    accreditationDetails: number
    whyChooseHighlights: number
    careerOutcomes: number
    ftGlobalRanking: number
    ftRegionalRanking: number
    ftRankingYear: number
    usNewsRanking: number
    qsRanking: number
    timesRanking: number
    acceptanceRate: number
    gmatAverageScore: number
    gmatScoreMin: number
    gmatScoreMax: number
    minimumGpa: number
    languageTestRequirements: number
    tuitionFees: number
    additionalFees: number
    totalCost: number
    currency: number
    scholarshipInfo: number
    financialAidDetails: number
    admissionsOfficeContact: number
    internationalOfficeContact: number
    generalInquiriesContact: number
    websiteUrl: number
    metaTitle: number
    metaDescription: number
    metaKeywords: number
    canonicalUrl: number
    isActive: number
    isFeatured: number
    createdAt: number
    updatedAt: number
    averageDeadlines: number
    studentsPerYear: number
    brochureUrl: number
    additionalDocumentUrls: number
    averageProgramLengthMonths: number
    intakes: number
    _all: number
  }


  export type UniversityAvgAggregateInputType = {
    ftGlobalRanking?: true
    ftRegionalRanking?: true
    ftRankingYear?: true
    usNewsRanking?: true
    qsRanking?: true
    timesRanking?: true
    acceptanceRate?: true
    gmatAverageScore?: true
    gmatScoreMin?: true
    gmatScoreMax?: true
    minimumGpa?: true
    tuitionFees?: true
    additionalFees?: true
    totalCost?: true
    studentsPerYear?: true
    averageProgramLengthMonths?: true
  }

  export type UniversitySumAggregateInputType = {
    ftGlobalRanking?: true
    ftRegionalRanking?: true
    ftRankingYear?: true
    usNewsRanking?: true
    qsRanking?: true
    timesRanking?: true
    acceptanceRate?: true
    gmatAverageScore?: true
    gmatScoreMin?: true
    gmatScoreMax?: true
    minimumGpa?: true
    tuitionFees?: true
    additionalFees?: true
    totalCost?: true
    studentsPerYear?: true
    averageProgramLengthMonths?: true
  }

  export type UniversityMinAggregateInputType = {
    id?: true
    universityName?: true
    slug?: true
    city?: true
    state?: true
    country?: true
    fullAddress?: true
    shortDescription?: true
    overview?: true
    history?: true
    missionStatement?: true
    visionStatement?: true
    accreditationDetails?: true
    careerOutcomes?: true
    ftGlobalRanking?: true
    ftRegionalRanking?: true
    ftRankingYear?: true
    usNewsRanking?: true
    qsRanking?: true
    timesRanking?: true
    acceptanceRate?: true
    gmatAverageScore?: true
    gmatScoreMin?: true
    gmatScoreMax?: true
    minimumGpa?: true
    languageTestRequirements?: true
    tuitionFees?: true
    additionalFees?: true
    totalCost?: true
    currency?: true
    scholarshipInfo?: true
    financialAidDetails?: true
    admissionsOfficeContact?: true
    internationalOfficeContact?: true
    generalInquiriesContact?: true
    websiteUrl?: true
    metaTitle?: true
    metaDescription?: true
    metaKeywords?: true
    canonicalUrl?: true
    isActive?: true
    isFeatured?: true
    createdAt?: true
    updatedAt?: true
    averageDeadlines?: true
    studentsPerYear?: true
    brochureUrl?: true
    averageProgramLengthMonths?: true
    intakes?: true
  }

  export type UniversityMaxAggregateInputType = {
    id?: true
    universityName?: true
    slug?: true
    city?: true
    state?: true
    country?: true
    fullAddress?: true
    shortDescription?: true
    overview?: true
    history?: true
    missionStatement?: true
    visionStatement?: true
    accreditationDetails?: true
    careerOutcomes?: true
    ftGlobalRanking?: true
    ftRegionalRanking?: true
    ftRankingYear?: true
    usNewsRanking?: true
    qsRanking?: true
    timesRanking?: true
    acceptanceRate?: true
    gmatAverageScore?: true
    gmatScoreMin?: true
    gmatScoreMax?: true
    minimumGpa?: true
    languageTestRequirements?: true
    tuitionFees?: true
    additionalFees?: true
    totalCost?: true
    currency?: true
    scholarshipInfo?: true
    financialAidDetails?: true
    admissionsOfficeContact?: true
    internationalOfficeContact?: true
    generalInquiriesContact?: true
    websiteUrl?: true
    metaTitle?: true
    metaDescription?: true
    metaKeywords?: true
    canonicalUrl?: true
    isActive?: true
    isFeatured?: true
    createdAt?: true
    updatedAt?: true
    averageDeadlines?: true
    studentsPerYear?: true
    brochureUrl?: true
    averageProgramLengthMonths?: true
    intakes?: true
  }

  export type UniversityCountAggregateInputType = {
    id?: true
    universityName?: true
    slug?: true
    city?: true
    state?: true
    country?: true
    fullAddress?: true
    shortDescription?: true
    overview?: true
    history?: true
    missionStatement?: true
    visionStatement?: true
    accreditationDetails?: true
    whyChooseHighlights?: true
    careerOutcomes?: true
    ftGlobalRanking?: true
    ftRegionalRanking?: true
    ftRankingYear?: true
    usNewsRanking?: true
    qsRanking?: true
    timesRanking?: true
    acceptanceRate?: true
    gmatAverageScore?: true
    gmatScoreMin?: true
    gmatScoreMax?: true
    minimumGpa?: true
    languageTestRequirements?: true
    tuitionFees?: true
    additionalFees?: true
    totalCost?: true
    currency?: true
    scholarshipInfo?: true
    financialAidDetails?: true
    admissionsOfficeContact?: true
    internationalOfficeContact?: true
    generalInquiriesContact?: true
    websiteUrl?: true
    metaTitle?: true
    metaDescription?: true
    metaKeywords?: true
    canonicalUrl?: true
    isActive?: true
    isFeatured?: true
    createdAt?: true
    updatedAt?: true
    averageDeadlines?: true
    studentsPerYear?: true
    brochureUrl?: true
    additionalDocumentUrls?: true
    averageProgramLengthMonths?: true
    intakes?: true
    _all?: true
  }

  export type UniversityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which University to aggregate.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Universities
    **/
    _count?: true | UniversityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UniversityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UniversitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversityMaxAggregateInputType
  }

  export type GetUniversityAggregateType<T extends UniversityAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversity[P]>
      : GetScalarType<T[P], AggregateUniversity[P]>
  }




  export type UniversityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityWhereInput
    orderBy?: UniversityOrderByWithAggregationInput | UniversityOrderByWithAggregationInput[]
    by: UniversityScalarFieldEnum[] | UniversityScalarFieldEnum
    having?: UniversityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversityCountAggregateInputType | true
    _avg?: UniversityAvgAggregateInputType
    _sum?: UniversitySumAggregateInputType
    _min?: UniversityMinAggregateInputType
    _max?: UniversityMaxAggregateInputType
  }

  export type UniversityGroupByOutputType = {
    id: string
    universityName: string
    slug: string
    city: string
    state: string | null
    country: string
    fullAddress: string | null
    shortDescription: string | null
    overview: string | null
    history: string | null
    missionStatement: string | null
    visionStatement: string | null
    accreditationDetails: string | null
    whyChooseHighlights: string[]
    careerOutcomes: string | null
    ftGlobalRanking: number | null
    ftRegionalRanking: number | null
    ftRankingYear: number | null
    usNewsRanking: number | null
    qsRanking: number | null
    timesRanking: number | null
    acceptanceRate: number | null
    gmatAverageScore: number | null
    gmatScoreMin: number | null
    gmatScoreMax: number | null
    minimumGpa: number | null
    languageTestRequirements: string | null
    tuitionFees: number | null
    additionalFees: number | null
    totalCost: number | null
    currency: string
    scholarshipInfo: string | null
    financialAidDetails: string | null
    admissionsOfficeContact: string | null
    internationalOfficeContact: string | null
    generalInquiriesContact: string | null
    websiteUrl: string | null
    metaTitle: string | null
    metaDescription: string | null
    metaKeywords: string | null
    canonicalUrl: string | null
    isActive: boolean
    isFeatured: boolean
    createdAt: Date
    updatedAt: Date
    averageDeadlines: string | null
    studentsPerYear: number | null
    brochureUrl: string | null
    additionalDocumentUrls: string[]
    averageProgramLengthMonths: number | null
    intakes: string | null
    _count: UniversityCountAggregateOutputType | null
    _avg: UniversityAvgAggregateOutputType | null
    _sum: UniversitySumAggregateOutputType | null
    _min: UniversityMinAggregateOutputType | null
    _max: UniversityMaxAggregateOutputType | null
  }

  type GetUniversityGroupByPayload<T extends UniversityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversityGroupByOutputType[P]>
            : GetScalarType<T[P], UniversityGroupByOutputType[P]>
        }
      >
    >


  export type UniversitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityName?: boolean
    slug?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    fullAddress?: boolean
    shortDescription?: boolean
    overview?: boolean
    history?: boolean
    missionStatement?: boolean
    visionStatement?: boolean
    accreditationDetails?: boolean
    whyChooseHighlights?: boolean
    careerOutcomes?: boolean
    ftGlobalRanking?: boolean
    ftRegionalRanking?: boolean
    ftRankingYear?: boolean
    usNewsRanking?: boolean
    qsRanking?: boolean
    timesRanking?: boolean
    acceptanceRate?: boolean
    gmatAverageScore?: boolean
    gmatScoreMin?: boolean
    gmatScoreMax?: boolean
    minimumGpa?: boolean
    languageTestRequirements?: boolean
    tuitionFees?: boolean
    additionalFees?: boolean
    totalCost?: boolean
    currency?: boolean
    scholarshipInfo?: boolean
    financialAidDetails?: boolean
    admissionsOfficeContact?: boolean
    internationalOfficeContact?: boolean
    generalInquiriesContact?: boolean
    websiteUrl?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    metaKeywords?: boolean
    canonicalUrl?: boolean
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    averageDeadlines?: boolean
    studentsPerYear?: boolean
    brochureUrl?: boolean
    additionalDocumentUrls?: boolean
    averageProgramLengthMonths?: boolean
    intakes?: boolean
    images?: boolean | University$imagesArgs<ExtArgs>
    programs?: boolean | University$programsArgs<ExtArgs>
    departments?: boolean | University$departmentsArgs<ExtArgs>
    admissions?: boolean | University$admissionsArgs<ExtArgs>
    applications?: boolean | University$applicationsArgs<ExtArgs>
    tuitionBreakdowns?: boolean | University$tuitionBreakdownsArgs<ExtArgs>
    scholarships?: boolean | University$scholarshipsArgs<ExtArgs>
    feeStructures?: boolean | University$feeStructuresArgs<ExtArgs>
    financialAids?: boolean | University$financialAidsArgs<ExtArgs>
    savedByUsers?: boolean | University$savedByUsersArgs<ExtArgs>
    calendarEvents?: boolean | University$calendarEventsArgs<ExtArgs>
    _count?: boolean | UniversityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["university"]>

  export type UniversitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityName?: boolean
    slug?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    fullAddress?: boolean
    shortDescription?: boolean
    overview?: boolean
    history?: boolean
    missionStatement?: boolean
    visionStatement?: boolean
    accreditationDetails?: boolean
    whyChooseHighlights?: boolean
    careerOutcomes?: boolean
    ftGlobalRanking?: boolean
    ftRegionalRanking?: boolean
    ftRankingYear?: boolean
    usNewsRanking?: boolean
    qsRanking?: boolean
    timesRanking?: boolean
    acceptanceRate?: boolean
    gmatAverageScore?: boolean
    gmatScoreMin?: boolean
    gmatScoreMax?: boolean
    minimumGpa?: boolean
    languageTestRequirements?: boolean
    tuitionFees?: boolean
    additionalFees?: boolean
    totalCost?: boolean
    currency?: boolean
    scholarshipInfo?: boolean
    financialAidDetails?: boolean
    admissionsOfficeContact?: boolean
    internationalOfficeContact?: boolean
    generalInquiriesContact?: boolean
    websiteUrl?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    metaKeywords?: boolean
    canonicalUrl?: boolean
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    averageDeadlines?: boolean
    studentsPerYear?: boolean
    brochureUrl?: boolean
    additionalDocumentUrls?: boolean
    averageProgramLengthMonths?: boolean
    intakes?: boolean
  }, ExtArgs["result"]["university"]>

  export type UniversitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityName?: boolean
    slug?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    fullAddress?: boolean
    shortDescription?: boolean
    overview?: boolean
    history?: boolean
    missionStatement?: boolean
    visionStatement?: boolean
    accreditationDetails?: boolean
    whyChooseHighlights?: boolean
    careerOutcomes?: boolean
    ftGlobalRanking?: boolean
    ftRegionalRanking?: boolean
    ftRankingYear?: boolean
    usNewsRanking?: boolean
    qsRanking?: boolean
    timesRanking?: boolean
    acceptanceRate?: boolean
    gmatAverageScore?: boolean
    gmatScoreMin?: boolean
    gmatScoreMax?: boolean
    minimumGpa?: boolean
    languageTestRequirements?: boolean
    tuitionFees?: boolean
    additionalFees?: boolean
    totalCost?: boolean
    currency?: boolean
    scholarshipInfo?: boolean
    financialAidDetails?: boolean
    admissionsOfficeContact?: boolean
    internationalOfficeContact?: boolean
    generalInquiriesContact?: boolean
    websiteUrl?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    metaKeywords?: boolean
    canonicalUrl?: boolean
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    averageDeadlines?: boolean
    studentsPerYear?: boolean
    brochureUrl?: boolean
    additionalDocumentUrls?: boolean
    averageProgramLengthMonths?: boolean
    intakes?: boolean
  }, ExtArgs["result"]["university"]>

  export type UniversitySelectScalar = {
    id?: boolean
    universityName?: boolean
    slug?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    fullAddress?: boolean
    shortDescription?: boolean
    overview?: boolean
    history?: boolean
    missionStatement?: boolean
    visionStatement?: boolean
    accreditationDetails?: boolean
    whyChooseHighlights?: boolean
    careerOutcomes?: boolean
    ftGlobalRanking?: boolean
    ftRegionalRanking?: boolean
    ftRankingYear?: boolean
    usNewsRanking?: boolean
    qsRanking?: boolean
    timesRanking?: boolean
    acceptanceRate?: boolean
    gmatAverageScore?: boolean
    gmatScoreMin?: boolean
    gmatScoreMax?: boolean
    minimumGpa?: boolean
    languageTestRequirements?: boolean
    tuitionFees?: boolean
    additionalFees?: boolean
    totalCost?: boolean
    currency?: boolean
    scholarshipInfo?: boolean
    financialAidDetails?: boolean
    admissionsOfficeContact?: boolean
    internationalOfficeContact?: boolean
    generalInquiriesContact?: boolean
    websiteUrl?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    metaKeywords?: boolean
    canonicalUrl?: boolean
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    averageDeadlines?: boolean
    studentsPerYear?: boolean
    brochureUrl?: boolean
    additionalDocumentUrls?: boolean
    averageProgramLengthMonths?: boolean
    intakes?: boolean
  }

  export type UniversityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityName" | "slug" | "city" | "state" | "country" | "fullAddress" | "shortDescription" | "overview" | "history" | "missionStatement" | "visionStatement" | "accreditationDetails" | "whyChooseHighlights" | "careerOutcomes" | "ftGlobalRanking" | "ftRegionalRanking" | "ftRankingYear" | "usNewsRanking" | "qsRanking" | "timesRanking" | "acceptanceRate" | "gmatAverageScore" | "gmatScoreMin" | "gmatScoreMax" | "minimumGpa" | "languageTestRequirements" | "tuitionFees" | "additionalFees" | "totalCost" | "currency" | "scholarshipInfo" | "financialAidDetails" | "admissionsOfficeContact" | "internationalOfficeContact" | "generalInquiriesContact" | "websiteUrl" | "metaTitle" | "metaDescription" | "metaKeywords" | "canonicalUrl" | "isActive" | "isFeatured" | "createdAt" | "updatedAt" | "averageDeadlines" | "studentsPerYear" | "brochureUrl" | "additionalDocumentUrls" | "averageProgramLengthMonths" | "intakes", ExtArgs["result"]["university"]>
  export type UniversityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | University$imagesArgs<ExtArgs>
    programs?: boolean | University$programsArgs<ExtArgs>
    departments?: boolean | University$departmentsArgs<ExtArgs>
    admissions?: boolean | University$admissionsArgs<ExtArgs>
    applications?: boolean | University$applicationsArgs<ExtArgs>
    tuitionBreakdowns?: boolean | University$tuitionBreakdownsArgs<ExtArgs>
    scholarships?: boolean | University$scholarshipsArgs<ExtArgs>
    feeStructures?: boolean | University$feeStructuresArgs<ExtArgs>
    financialAids?: boolean | University$financialAidsArgs<ExtArgs>
    savedByUsers?: boolean | University$savedByUsersArgs<ExtArgs>
    calendarEvents?: boolean | University$calendarEventsArgs<ExtArgs>
    _count?: boolean | UniversityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UniversityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UniversityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UniversityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "University"
    objects: {
      images: Prisma.$UniversityImagePayload<ExtArgs>[]
      programs: Prisma.$ProgramPayload<ExtArgs>[]
      departments: Prisma.$DepartmentPayload<ExtArgs>[]
      admissions: Prisma.$AdmissionPayload<ExtArgs>[]
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
      tuitionBreakdowns: Prisma.$TuitionBreakdownPayload<ExtArgs>[]
      scholarships: Prisma.$ScholarshipPayload<ExtArgs>[]
      feeStructures: Prisma.$FeeStructurePayload<ExtArgs>[]
      financialAids: Prisma.$FinancialAidPayload<ExtArgs>[]
      savedByUsers: Prisma.$UserPayload<ExtArgs>[]
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityName: string
      slug: string
      city: string
      state: string | null
      country: string
      fullAddress: string | null
      shortDescription: string | null
      overview: string | null
      history: string | null
      missionStatement: string | null
      visionStatement: string | null
      accreditationDetails: string | null
      whyChooseHighlights: string[]
      careerOutcomes: string | null
      ftGlobalRanking: number | null
      ftRegionalRanking: number | null
      ftRankingYear: number | null
      usNewsRanking: number | null
      qsRanking: number | null
      timesRanking: number | null
      acceptanceRate: number | null
      gmatAverageScore: number | null
      gmatScoreMin: number | null
      gmatScoreMax: number | null
      minimumGpa: number | null
      languageTestRequirements: string | null
      tuitionFees: number | null
      additionalFees: number | null
      totalCost: number | null
      currency: string
      scholarshipInfo: string | null
      financialAidDetails: string | null
      admissionsOfficeContact: string | null
      internationalOfficeContact: string | null
      generalInquiriesContact: string | null
      websiteUrl: string | null
      metaTitle: string | null
      metaDescription: string | null
      metaKeywords: string | null
      canonicalUrl: string | null
      isActive: boolean
      isFeatured: boolean
      createdAt: Date
      updatedAt: Date
      averageDeadlines: string | null
      studentsPerYear: number | null
      brochureUrl: string | null
      additionalDocumentUrls: string[]
      averageProgramLengthMonths: number | null
      intakes: string | null
    }, ExtArgs["result"]["university"]>
    composites: {}
  }

  type UniversityGetPayload<S extends boolean | null | undefined | UniversityDefaultArgs> = $Result.GetResult<Prisma.$UniversityPayload, S>

  type UniversityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversityCountAggregateInputType | true
    }

  export interface UniversityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['University'], meta: { name: 'University' } }
    /**
     * Find zero or one University that matches the filter.
     * @param {UniversityFindUniqueArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversityFindUniqueArgs>(args: SelectSubset<T, UniversityFindUniqueArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one University that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversityFindUniqueOrThrowArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversityFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first University that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityFindFirstArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversityFindFirstArgs>(args?: SelectSubset<T, UniversityFindFirstArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first University that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityFindFirstOrThrowArgs} args - Arguments to find a University
     * @example
     * // Get one University
     * const university = await prisma.university.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversityFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversityFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Universities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Universities
     * const universities = await prisma.university.findMany()
     * 
     * // Get first 10 Universities
     * const universities = await prisma.university.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const universityWithIdOnly = await prisma.university.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UniversityFindManyArgs>(args?: SelectSubset<T, UniversityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a University.
     * @param {UniversityCreateArgs} args - Arguments to create a University.
     * @example
     * // Create one University
     * const University = await prisma.university.create({
     *   data: {
     *     // ... data to create a University
     *   }
     * })
     * 
     */
    create<T extends UniversityCreateArgs>(args: SelectSubset<T, UniversityCreateArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Universities.
     * @param {UniversityCreateManyArgs} args - Arguments to create many Universities.
     * @example
     * // Create many Universities
     * const university = await prisma.university.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversityCreateManyArgs>(args?: SelectSubset<T, UniversityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Universities and returns the data saved in the database.
     * @param {UniversityCreateManyAndReturnArgs} args - Arguments to create many Universities.
     * @example
     * // Create many Universities
     * const university = await prisma.university.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Universities and only return the `id`
     * const universityWithIdOnly = await prisma.university.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UniversityCreateManyAndReturnArgs>(args?: SelectSubset<T, UniversityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a University.
     * @param {UniversityDeleteArgs} args - Arguments to delete one University.
     * @example
     * // Delete one University
     * const University = await prisma.university.delete({
     *   where: {
     *     // ... filter to delete one University
     *   }
     * })
     * 
     */
    delete<T extends UniversityDeleteArgs>(args: SelectSubset<T, UniversityDeleteArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one University.
     * @param {UniversityUpdateArgs} args - Arguments to update one University.
     * @example
     * // Update one University
     * const university = await prisma.university.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversityUpdateArgs>(args: SelectSubset<T, UniversityUpdateArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Universities.
     * @param {UniversityDeleteManyArgs} args - Arguments to filter Universities to delete.
     * @example
     * // Delete a few Universities
     * const { count } = await prisma.university.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversityDeleteManyArgs>(args?: SelectSubset<T, UniversityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Universities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Universities
     * const university = await prisma.university.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversityUpdateManyArgs>(args: SelectSubset<T, UniversityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Universities and returns the data updated in the database.
     * @param {UniversityUpdateManyAndReturnArgs} args - Arguments to update many Universities.
     * @example
     * // Update many Universities
     * const university = await prisma.university.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Universities and only return the `id`
     * const universityWithIdOnly = await prisma.university.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UniversityUpdateManyAndReturnArgs>(args: SelectSubset<T, UniversityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one University.
     * @param {UniversityUpsertArgs} args - Arguments to update or create a University.
     * @example
     * // Update or create a University
     * const university = await prisma.university.upsert({
     *   create: {
     *     // ... data to create a University
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the University we want to update
     *   }
     * })
     */
    upsert<T extends UniversityUpsertArgs>(args: SelectSubset<T, UniversityUpsertArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Universities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityCountArgs} args - Arguments to filter Universities to count.
     * @example
     * // Count the number of Universities
     * const count = await prisma.university.count({
     *   where: {
     *     // ... the filter for the Universities we want to count
     *   }
     * })
    **/
    count<T extends UniversityCountArgs>(
      args?: Subset<T, UniversityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a University.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversityAggregateArgs>(args: Subset<T, UniversityAggregateArgs>): Prisma.PrismaPromise<GetUniversityAggregateType<T>>

    /**
     * Group by University.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversityGroupByArgs['orderBy'] }
        : { orderBy?: UniversityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the University model
   */
  readonly fields: UniversityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for University.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    images<T extends University$imagesArgs<ExtArgs> = {}>(args?: Subset<T, University$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    programs<T extends University$programsArgs<ExtArgs> = {}>(args?: Subset<T, University$programsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    departments<T extends University$departmentsArgs<ExtArgs> = {}>(args?: Subset<T, University$departmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    admissions<T extends University$admissionsArgs<ExtArgs> = {}>(args?: Subset<T, University$admissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applications<T extends University$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, University$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tuitionBreakdowns<T extends University$tuitionBreakdownsArgs<ExtArgs> = {}>(args?: Subset<T, University$tuitionBreakdownsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    scholarships<T extends University$scholarshipsArgs<ExtArgs> = {}>(args?: Subset<T, University$scholarshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    feeStructures<T extends University$feeStructuresArgs<ExtArgs> = {}>(args?: Subset<T, University$feeStructuresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    financialAids<T extends University$financialAidsArgs<ExtArgs> = {}>(args?: Subset<T, University$financialAidsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    savedByUsers<T extends University$savedByUsersArgs<ExtArgs> = {}>(args?: Subset<T, University$savedByUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calendarEvents<T extends University$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, University$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the University model
   */
  interface UniversityFieldRefs {
    readonly id: FieldRef<"University", 'String'>
    readonly universityName: FieldRef<"University", 'String'>
    readonly slug: FieldRef<"University", 'String'>
    readonly city: FieldRef<"University", 'String'>
    readonly state: FieldRef<"University", 'String'>
    readonly country: FieldRef<"University", 'String'>
    readonly fullAddress: FieldRef<"University", 'String'>
    readonly shortDescription: FieldRef<"University", 'String'>
    readonly overview: FieldRef<"University", 'String'>
    readonly history: FieldRef<"University", 'String'>
    readonly missionStatement: FieldRef<"University", 'String'>
    readonly visionStatement: FieldRef<"University", 'String'>
    readonly accreditationDetails: FieldRef<"University", 'String'>
    readonly whyChooseHighlights: FieldRef<"University", 'String[]'>
    readonly careerOutcomes: FieldRef<"University", 'String'>
    readonly ftGlobalRanking: FieldRef<"University", 'Int'>
    readonly ftRegionalRanking: FieldRef<"University", 'Int'>
    readonly ftRankingYear: FieldRef<"University", 'Int'>
    readonly usNewsRanking: FieldRef<"University", 'Int'>
    readonly qsRanking: FieldRef<"University", 'Int'>
    readonly timesRanking: FieldRef<"University", 'Int'>
    readonly acceptanceRate: FieldRef<"University", 'Float'>
    readonly gmatAverageScore: FieldRef<"University", 'Int'>
    readonly gmatScoreMin: FieldRef<"University", 'Int'>
    readonly gmatScoreMax: FieldRef<"University", 'Int'>
    readonly minimumGpa: FieldRef<"University", 'Float'>
    readonly languageTestRequirements: FieldRef<"University", 'String'>
    readonly tuitionFees: FieldRef<"University", 'Float'>
    readonly additionalFees: FieldRef<"University", 'Float'>
    readonly totalCost: FieldRef<"University", 'Float'>
    readonly currency: FieldRef<"University", 'String'>
    readonly scholarshipInfo: FieldRef<"University", 'String'>
    readonly financialAidDetails: FieldRef<"University", 'String'>
    readonly admissionsOfficeContact: FieldRef<"University", 'String'>
    readonly internationalOfficeContact: FieldRef<"University", 'String'>
    readonly generalInquiriesContact: FieldRef<"University", 'String'>
    readonly websiteUrl: FieldRef<"University", 'String'>
    readonly metaTitle: FieldRef<"University", 'String'>
    readonly metaDescription: FieldRef<"University", 'String'>
    readonly metaKeywords: FieldRef<"University", 'String'>
    readonly canonicalUrl: FieldRef<"University", 'String'>
    readonly isActive: FieldRef<"University", 'Boolean'>
    readonly isFeatured: FieldRef<"University", 'Boolean'>
    readonly createdAt: FieldRef<"University", 'DateTime'>
    readonly updatedAt: FieldRef<"University", 'DateTime'>
    readonly averageDeadlines: FieldRef<"University", 'String'>
    readonly studentsPerYear: FieldRef<"University", 'Int'>
    readonly brochureUrl: FieldRef<"University", 'String'>
    readonly additionalDocumentUrls: FieldRef<"University", 'String[]'>
    readonly averageProgramLengthMonths: FieldRef<"University", 'Int'>
    readonly intakes: FieldRef<"University", 'String'>
  }
    

  // Custom InputTypes
  /**
   * University findUnique
   */
  export type UniversityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University findUniqueOrThrow
   */
  export type UniversityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University findFirst
   */
  export type UniversityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Universities.
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Universities.
     */
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * University findFirstOrThrow
   */
  export type UniversityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which University to fetch.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Universities.
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Universities.
     */
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * University findMany
   */
  export type UniversityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter, which Universities to fetch.
     */
    where?: UniversityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Universities to fetch.
     */
    orderBy?: UniversityOrderByWithRelationInput | UniversityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Universities.
     */
    cursor?: UniversityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Universities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Universities.
     */
    skip?: number
    distinct?: UniversityScalarFieldEnum | UniversityScalarFieldEnum[]
  }

  /**
   * University create
   */
  export type UniversityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * The data needed to create a University.
     */
    data: XOR<UniversityCreateInput, UniversityUncheckedCreateInput>
  }

  /**
   * University createMany
   */
  export type UniversityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Universities.
     */
    data: UniversityCreateManyInput | UniversityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * University createManyAndReturn
   */
  export type UniversityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * The data used to create many Universities.
     */
    data: UniversityCreateManyInput | UniversityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * University update
   */
  export type UniversityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * The data needed to update a University.
     */
    data: XOR<UniversityUpdateInput, UniversityUncheckedUpdateInput>
    /**
     * Choose, which University to update.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University updateMany
   */
  export type UniversityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Universities.
     */
    data: XOR<UniversityUpdateManyMutationInput, UniversityUncheckedUpdateManyInput>
    /**
     * Filter which Universities to update
     */
    where?: UniversityWhereInput
    /**
     * Limit how many Universities to update.
     */
    limit?: number
  }

  /**
   * University updateManyAndReturn
   */
  export type UniversityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * The data used to update Universities.
     */
    data: XOR<UniversityUpdateManyMutationInput, UniversityUncheckedUpdateManyInput>
    /**
     * Filter which Universities to update
     */
    where?: UniversityWhereInput
    /**
     * Limit how many Universities to update.
     */
    limit?: number
  }

  /**
   * University upsert
   */
  export type UniversityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * The filter to search for the University to update in case it exists.
     */
    where: UniversityWhereUniqueInput
    /**
     * In case the University found by the `where` argument doesn't exist, create a new University with this data.
     */
    create: XOR<UniversityCreateInput, UniversityUncheckedCreateInput>
    /**
     * In case the University was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversityUpdateInput, UniversityUncheckedUpdateInput>
  }

  /**
   * University delete
   */
  export type UniversityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    /**
     * Filter which University to delete.
     */
    where: UniversityWhereUniqueInput
  }

  /**
   * University deleteMany
   */
  export type UniversityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Universities to delete
     */
    where?: UniversityWhereInput
    /**
     * Limit how many Universities to delete.
     */
    limit?: number
  }

  /**
   * University.images
   */
  export type University$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    where?: UniversityImageWhereInput
    orderBy?: UniversityImageOrderByWithRelationInput | UniversityImageOrderByWithRelationInput[]
    cursor?: UniversityImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UniversityImageScalarFieldEnum | UniversityImageScalarFieldEnum[]
  }

  /**
   * University.programs
   */
  export type University$programsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    where?: ProgramWhereInput
    orderBy?: ProgramOrderByWithRelationInput | ProgramOrderByWithRelationInput[]
    cursor?: ProgramWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProgramScalarFieldEnum | ProgramScalarFieldEnum[]
  }

  /**
   * University.departments
   */
  export type University$departmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    where?: DepartmentWhereInput
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    cursor?: DepartmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * University.admissions
   */
  export type University$admissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    where?: AdmissionWhereInput
    orderBy?: AdmissionOrderByWithRelationInput | AdmissionOrderByWithRelationInput[]
    cursor?: AdmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdmissionScalarFieldEnum | AdmissionScalarFieldEnum[]
  }

  /**
   * University.applications
   */
  export type University$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * University.tuitionBreakdowns
   */
  export type University$tuitionBreakdownsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    where?: TuitionBreakdownWhereInput
    orderBy?: TuitionBreakdownOrderByWithRelationInput | TuitionBreakdownOrderByWithRelationInput[]
    cursor?: TuitionBreakdownWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TuitionBreakdownScalarFieldEnum | TuitionBreakdownScalarFieldEnum[]
  }

  /**
   * University.scholarships
   */
  export type University$scholarshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    where?: ScholarshipWhereInput
    orderBy?: ScholarshipOrderByWithRelationInput | ScholarshipOrderByWithRelationInput[]
    cursor?: ScholarshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScholarshipScalarFieldEnum | ScholarshipScalarFieldEnum[]
  }

  /**
   * University.feeStructures
   */
  export type University$feeStructuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    where?: FeeStructureWhereInput
    orderBy?: FeeStructureOrderByWithRelationInput | FeeStructureOrderByWithRelationInput[]
    cursor?: FeeStructureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FeeStructureScalarFieldEnum | FeeStructureScalarFieldEnum[]
  }

  /**
   * University.financialAids
   */
  export type University$financialAidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    where?: FinancialAidWhereInput
    orderBy?: FinancialAidOrderByWithRelationInput | FinancialAidOrderByWithRelationInput[]
    cursor?: FinancialAidWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancialAidScalarFieldEnum | FinancialAidScalarFieldEnum[]
  }

  /**
   * University.savedByUsers
   */
  export type University$savedByUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * University.calendarEvents
   */
  export type University$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * University without action
   */
  export type UniversityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
  }


  /**
   * Model UniversityImage
   */

  export type AggregateUniversityImage = {
    _count: UniversityImageCountAggregateOutputType | null
    _avg: UniversityImageAvgAggregateOutputType | null
    _sum: UniversityImageSumAggregateOutputType | null
    _min: UniversityImageMinAggregateOutputType | null
    _max: UniversityImageMaxAggregateOutputType | null
  }

  export type UniversityImageAvgAggregateOutputType = {
    fileSize: number | null
    width: number | null
    height: number | null
    displayOrder: number | null
  }

  export type UniversityImageSumAggregateOutputType = {
    fileSize: number | null
    width: number | null
    height: number | null
    displayOrder: number | null
  }

  export type UniversityImageMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    imageUrl: string | null
    imageType: string | null
    imageTitle: string | null
    imageAltText: string | null
    imageCaption: string | null
    fileSize: number | null
    width: number | null
    height: number | null
    isPrimary: boolean | null
    displayOrder: number | null
    createdAt: Date | null
  }

  export type UniversityImageMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    imageUrl: string | null
    imageType: string | null
    imageTitle: string | null
    imageAltText: string | null
    imageCaption: string | null
    fileSize: number | null
    width: number | null
    height: number | null
    isPrimary: boolean | null
    displayOrder: number | null
    createdAt: Date | null
  }

  export type UniversityImageCountAggregateOutputType = {
    id: number
    universityId: number
    imageUrl: number
    imageType: number
    imageTitle: number
    imageAltText: number
    imageCaption: number
    fileSize: number
    width: number
    height: number
    isPrimary: number
    displayOrder: number
    createdAt: number
    _all: number
  }


  export type UniversityImageAvgAggregateInputType = {
    fileSize?: true
    width?: true
    height?: true
    displayOrder?: true
  }

  export type UniversityImageSumAggregateInputType = {
    fileSize?: true
    width?: true
    height?: true
    displayOrder?: true
  }

  export type UniversityImageMinAggregateInputType = {
    id?: true
    universityId?: true
    imageUrl?: true
    imageType?: true
    imageTitle?: true
    imageAltText?: true
    imageCaption?: true
    fileSize?: true
    width?: true
    height?: true
    isPrimary?: true
    displayOrder?: true
    createdAt?: true
  }

  export type UniversityImageMaxAggregateInputType = {
    id?: true
    universityId?: true
    imageUrl?: true
    imageType?: true
    imageTitle?: true
    imageAltText?: true
    imageCaption?: true
    fileSize?: true
    width?: true
    height?: true
    isPrimary?: true
    displayOrder?: true
    createdAt?: true
  }

  export type UniversityImageCountAggregateInputType = {
    id?: true
    universityId?: true
    imageUrl?: true
    imageType?: true
    imageTitle?: true
    imageAltText?: true
    imageCaption?: true
    fileSize?: true
    width?: true
    height?: true
    isPrimary?: true
    displayOrder?: true
    createdAt?: true
    _all?: true
  }

  export type UniversityImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityImage to aggregate.
     */
    where?: UniversityImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityImages to fetch.
     */
    orderBy?: UniversityImageOrderByWithRelationInput | UniversityImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniversityImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UniversityImages
    **/
    _count?: true | UniversityImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UniversityImageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UniversityImageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniversityImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniversityImageMaxAggregateInputType
  }

  export type GetUniversityImageAggregateType<T extends UniversityImageAggregateArgs> = {
        [P in keyof T & keyof AggregateUniversityImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniversityImage[P]>
      : GetScalarType<T[P], AggregateUniversityImage[P]>
  }




  export type UniversityImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniversityImageWhereInput
    orderBy?: UniversityImageOrderByWithAggregationInput | UniversityImageOrderByWithAggregationInput[]
    by: UniversityImageScalarFieldEnum[] | UniversityImageScalarFieldEnum
    having?: UniversityImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniversityImageCountAggregateInputType | true
    _avg?: UniversityImageAvgAggregateInputType
    _sum?: UniversityImageSumAggregateInputType
    _min?: UniversityImageMinAggregateInputType
    _max?: UniversityImageMaxAggregateInputType
  }

  export type UniversityImageGroupByOutputType = {
    id: string
    universityId: string
    imageUrl: string
    imageType: string | null
    imageTitle: string | null
    imageAltText: string
    imageCaption: string | null
    fileSize: number | null
    width: number | null
    height: number | null
    isPrimary: boolean
    displayOrder: number
    createdAt: Date
    _count: UniversityImageCountAggregateOutputType | null
    _avg: UniversityImageAvgAggregateOutputType | null
    _sum: UniversityImageSumAggregateOutputType | null
    _min: UniversityImageMinAggregateOutputType | null
    _max: UniversityImageMaxAggregateOutputType | null
  }

  type GetUniversityImageGroupByPayload<T extends UniversityImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniversityImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniversityImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniversityImageGroupByOutputType[P]>
            : GetScalarType<T[P], UniversityImageGroupByOutputType[P]>
        }
      >
    >


  export type UniversityImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    imageUrl?: boolean
    imageType?: boolean
    imageTitle?: boolean
    imageAltText?: boolean
    imageCaption?: boolean
    fileSize?: boolean
    width?: boolean
    height?: boolean
    isPrimary?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityImage"]>

  export type UniversityImageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    imageUrl?: boolean
    imageType?: boolean
    imageTitle?: boolean
    imageAltText?: boolean
    imageCaption?: boolean
    fileSize?: boolean
    width?: boolean
    height?: boolean
    isPrimary?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityImage"]>

  export type UniversityImageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    imageUrl?: boolean
    imageType?: boolean
    imageTitle?: boolean
    imageAltText?: boolean
    imageCaption?: boolean
    fileSize?: boolean
    width?: boolean
    height?: boolean
    isPrimary?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["universityImage"]>

  export type UniversityImageSelectScalar = {
    id?: boolean
    universityId?: boolean
    imageUrl?: boolean
    imageType?: boolean
    imageTitle?: boolean
    imageAltText?: boolean
    imageCaption?: boolean
    fileSize?: boolean
    width?: boolean
    height?: boolean
    isPrimary?: boolean
    displayOrder?: boolean
    createdAt?: boolean
  }

  export type UniversityImageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "imageUrl" | "imageType" | "imageTitle" | "imageAltText" | "imageCaption" | "fileSize" | "width" | "height" | "isPrimary" | "displayOrder" | "createdAt", ExtArgs["result"]["universityImage"]>
  export type UniversityImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type UniversityImageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type UniversityImageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }

  export type $UniversityImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UniversityImage"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      imageUrl: string
      imageType: string | null
      imageTitle: string | null
      imageAltText: string
      imageCaption: string | null
      fileSize: number | null
      width: number | null
      height: number | null
      isPrimary: boolean
      displayOrder: number
      createdAt: Date
    }, ExtArgs["result"]["universityImage"]>
    composites: {}
  }

  type UniversityImageGetPayload<S extends boolean | null | undefined | UniversityImageDefaultArgs> = $Result.GetResult<Prisma.$UniversityImagePayload, S>

  type UniversityImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniversityImageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniversityImageCountAggregateInputType | true
    }

  export interface UniversityImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UniversityImage'], meta: { name: 'UniversityImage' } }
    /**
     * Find zero or one UniversityImage that matches the filter.
     * @param {UniversityImageFindUniqueArgs} args - Arguments to find a UniversityImage
     * @example
     * // Get one UniversityImage
     * const universityImage = await prisma.universityImage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniversityImageFindUniqueArgs>(args: SelectSubset<T, UniversityImageFindUniqueArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UniversityImage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniversityImageFindUniqueOrThrowArgs} args - Arguments to find a UniversityImage
     * @example
     * // Get one UniversityImage
     * const universityImage = await prisma.universityImage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniversityImageFindUniqueOrThrowArgs>(args: SelectSubset<T, UniversityImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityImage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityImageFindFirstArgs} args - Arguments to find a UniversityImage
     * @example
     * // Get one UniversityImage
     * const universityImage = await prisma.universityImage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniversityImageFindFirstArgs>(args?: SelectSubset<T, UniversityImageFindFirstArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniversityImage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityImageFindFirstOrThrowArgs} args - Arguments to find a UniversityImage
     * @example
     * // Get one UniversityImage
     * const universityImage = await prisma.universityImage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniversityImageFindFirstOrThrowArgs>(args?: SelectSubset<T, UniversityImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UniversityImages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UniversityImages
     * const universityImages = await prisma.universityImage.findMany()
     * 
     * // Get first 10 UniversityImages
     * const universityImages = await prisma.universityImage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const universityImageWithIdOnly = await prisma.universityImage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UniversityImageFindManyArgs>(args?: SelectSubset<T, UniversityImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UniversityImage.
     * @param {UniversityImageCreateArgs} args - Arguments to create a UniversityImage.
     * @example
     * // Create one UniversityImage
     * const UniversityImage = await prisma.universityImage.create({
     *   data: {
     *     // ... data to create a UniversityImage
     *   }
     * })
     * 
     */
    create<T extends UniversityImageCreateArgs>(args: SelectSubset<T, UniversityImageCreateArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UniversityImages.
     * @param {UniversityImageCreateManyArgs} args - Arguments to create many UniversityImages.
     * @example
     * // Create many UniversityImages
     * const universityImage = await prisma.universityImage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniversityImageCreateManyArgs>(args?: SelectSubset<T, UniversityImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UniversityImages and returns the data saved in the database.
     * @param {UniversityImageCreateManyAndReturnArgs} args - Arguments to create many UniversityImages.
     * @example
     * // Create many UniversityImages
     * const universityImage = await prisma.universityImage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UniversityImages and only return the `id`
     * const universityImageWithIdOnly = await prisma.universityImage.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UniversityImageCreateManyAndReturnArgs>(args?: SelectSubset<T, UniversityImageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UniversityImage.
     * @param {UniversityImageDeleteArgs} args - Arguments to delete one UniversityImage.
     * @example
     * // Delete one UniversityImage
     * const UniversityImage = await prisma.universityImage.delete({
     *   where: {
     *     // ... filter to delete one UniversityImage
     *   }
     * })
     * 
     */
    delete<T extends UniversityImageDeleteArgs>(args: SelectSubset<T, UniversityImageDeleteArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UniversityImage.
     * @param {UniversityImageUpdateArgs} args - Arguments to update one UniversityImage.
     * @example
     * // Update one UniversityImage
     * const universityImage = await prisma.universityImage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniversityImageUpdateArgs>(args: SelectSubset<T, UniversityImageUpdateArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UniversityImages.
     * @param {UniversityImageDeleteManyArgs} args - Arguments to filter UniversityImages to delete.
     * @example
     * // Delete a few UniversityImages
     * const { count } = await prisma.universityImage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniversityImageDeleteManyArgs>(args?: SelectSubset<T, UniversityImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UniversityImages
     * const universityImage = await prisma.universityImage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniversityImageUpdateManyArgs>(args: SelectSubset<T, UniversityImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniversityImages and returns the data updated in the database.
     * @param {UniversityImageUpdateManyAndReturnArgs} args - Arguments to update many UniversityImages.
     * @example
     * // Update many UniversityImages
     * const universityImage = await prisma.universityImage.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UniversityImages and only return the `id`
     * const universityImageWithIdOnly = await prisma.universityImage.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UniversityImageUpdateManyAndReturnArgs>(args: SelectSubset<T, UniversityImageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UniversityImage.
     * @param {UniversityImageUpsertArgs} args - Arguments to update or create a UniversityImage.
     * @example
     * // Update or create a UniversityImage
     * const universityImage = await prisma.universityImage.upsert({
     *   create: {
     *     // ... data to create a UniversityImage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UniversityImage we want to update
     *   }
     * })
     */
    upsert<T extends UniversityImageUpsertArgs>(args: SelectSubset<T, UniversityImageUpsertArgs<ExtArgs>>): Prisma__UniversityImageClient<$Result.GetResult<Prisma.$UniversityImagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UniversityImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityImageCountArgs} args - Arguments to filter UniversityImages to count.
     * @example
     * // Count the number of UniversityImages
     * const count = await prisma.universityImage.count({
     *   where: {
     *     // ... the filter for the UniversityImages we want to count
     *   }
     * })
    **/
    count<T extends UniversityImageCountArgs>(
      args?: Subset<T, UniversityImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniversityImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UniversityImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniversityImageAggregateArgs>(args: Subset<T, UniversityImageAggregateArgs>): Prisma.PrismaPromise<GetUniversityImageAggregateType<T>>

    /**
     * Group by UniversityImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniversityImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniversityImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniversityImageGroupByArgs['orderBy'] }
        : { orderBy?: UniversityImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniversityImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniversityImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UniversityImage model
   */
  readonly fields: UniversityImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UniversityImage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniversityImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UniversityImage model
   */
  interface UniversityImageFieldRefs {
    readonly id: FieldRef<"UniversityImage", 'String'>
    readonly universityId: FieldRef<"UniversityImage", 'String'>
    readonly imageUrl: FieldRef<"UniversityImage", 'String'>
    readonly imageType: FieldRef<"UniversityImage", 'String'>
    readonly imageTitle: FieldRef<"UniversityImage", 'String'>
    readonly imageAltText: FieldRef<"UniversityImage", 'String'>
    readonly imageCaption: FieldRef<"UniversityImage", 'String'>
    readonly fileSize: FieldRef<"UniversityImage", 'Int'>
    readonly width: FieldRef<"UniversityImage", 'Int'>
    readonly height: FieldRef<"UniversityImage", 'Int'>
    readonly isPrimary: FieldRef<"UniversityImage", 'Boolean'>
    readonly displayOrder: FieldRef<"UniversityImage", 'Int'>
    readonly createdAt: FieldRef<"UniversityImage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UniversityImage findUnique
   */
  export type UniversityImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * Filter, which UniversityImage to fetch.
     */
    where: UniversityImageWhereUniqueInput
  }

  /**
   * UniversityImage findUniqueOrThrow
   */
  export type UniversityImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * Filter, which UniversityImage to fetch.
     */
    where: UniversityImageWhereUniqueInput
  }

  /**
   * UniversityImage findFirst
   */
  export type UniversityImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * Filter, which UniversityImage to fetch.
     */
    where?: UniversityImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityImages to fetch.
     */
    orderBy?: UniversityImageOrderByWithRelationInput | UniversityImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityImages.
     */
    cursor?: UniversityImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityImages.
     */
    distinct?: UniversityImageScalarFieldEnum | UniversityImageScalarFieldEnum[]
  }

  /**
   * UniversityImage findFirstOrThrow
   */
  export type UniversityImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * Filter, which UniversityImage to fetch.
     */
    where?: UniversityImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityImages to fetch.
     */
    orderBy?: UniversityImageOrderByWithRelationInput | UniversityImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniversityImages.
     */
    cursor?: UniversityImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniversityImages.
     */
    distinct?: UniversityImageScalarFieldEnum | UniversityImageScalarFieldEnum[]
  }

  /**
   * UniversityImage findMany
   */
  export type UniversityImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * Filter, which UniversityImages to fetch.
     */
    where?: UniversityImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniversityImages to fetch.
     */
    orderBy?: UniversityImageOrderByWithRelationInput | UniversityImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UniversityImages.
     */
    cursor?: UniversityImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniversityImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniversityImages.
     */
    skip?: number
    distinct?: UniversityImageScalarFieldEnum | UniversityImageScalarFieldEnum[]
  }

  /**
   * UniversityImage create
   */
  export type UniversityImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * The data needed to create a UniversityImage.
     */
    data: XOR<UniversityImageCreateInput, UniversityImageUncheckedCreateInput>
  }

  /**
   * UniversityImage createMany
   */
  export type UniversityImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UniversityImages.
     */
    data: UniversityImageCreateManyInput | UniversityImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UniversityImage createManyAndReturn
   */
  export type UniversityImageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * The data used to create many UniversityImages.
     */
    data: UniversityImageCreateManyInput | UniversityImageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityImage update
   */
  export type UniversityImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * The data needed to update a UniversityImage.
     */
    data: XOR<UniversityImageUpdateInput, UniversityImageUncheckedUpdateInput>
    /**
     * Choose, which UniversityImage to update.
     */
    where: UniversityImageWhereUniqueInput
  }

  /**
   * UniversityImage updateMany
   */
  export type UniversityImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UniversityImages.
     */
    data: XOR<UniversityImageUpdateManyMutationInput, UniversityImageUncheckedUpdateManyInput>
    /**
     * Filter which UniversityImages to update
     */
    where?: UniversityImageWhereInput
    /**
     * Limit how many UniversityImages to update.
     */
    limit?: number
  }

  /**
   * UniversityImage updateManyAndReturn
   */
  export type UniversityImageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * The data used to update UniversityImages.
     */
    data: XOR<UniversityImageUpdateManyMutationInput, UniversityImageUncheckedUpdateManyInput>
    /**
     * Filter which UniversityImages to update
     */
    where?: UniversityImageWhereInput
    /**
     * Limit how many UniversityImages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UniversityImage upsert
   */
  export type UniversityImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * The filter to search for the UniversityImage to update in case it exists.
     */
    where: UniversityImageWhereUniqueInput
    /**
     * In case the UniversityImage found by the `where` argument doesn't exist, create a new UniversityImage with this data.
     */
    create: XOR<UniversityImageCreateInput, UniversityImageUncheckedCreateInput>
    /**
     * In case the UniversityImage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniversityImageUpdateInput, UniversityImageUncheckedUpdateInput>
  }

  /**
   * UniversityImage delete
   */
  export type UniversityImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
    /**
     * Filter which UniversityImage to delete.
     */
    where: UniversityImageWhereUniqueInput
  }

  /**
   * UniversityImage deleteMany
   */
  export type UniversityImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniversityImages to delete
     */
    where?: UniversityImageWhereInput
    /**
     * Limit how many UniversityImages to delete.
     */
    limit?: number
  }

  /**
   * UniversityImage without action
   */
  export type UniversityImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniversityImage
     */
    select?: UniversityImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniversityImage
     */
    omit?: UniversityImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityImageInclude<ExtArgs> | null
  }


  /**
   * Model ProgramDepartment
   */

  export type AggregateProgramDepartment = {
    _count: ProgramDepartmentCountAggregateOutputType | null
    _min: ProgramDepartmentMinAggregateOutputType | null
    _max: ProgramDepartmentMaxAggregateOutputType | null
  }

  export type ProgramDepartmentMinAggregateOutputType = {
    id: string | null
    programId: string | null
    departmentId: string | null
    createdAt: Date | null
  }

  export type ProgramDepartmentMaxAggregateOutputType = {
    id: string | null
    programId: string | null
    departmentId: string | null
    createdAt: Date | null
  }

  export type ProgramDepartmentCountAggregateOutputType = {
    id: number
    programId: number
    departmentId: number
    createdAt: number
    _all: number
  }


  export type ProgramDepartmentMinAggregateInputType = {
    id?: true
    programId?: true
    departmentId?: true
    createdAt?: true
  }

  export type ProgramDepartmentMaxAggregateInputType = {
    id?: true
    programId?: true
    departmentId?: true
    createdAt?: true
  }

  export type ProgramDepartmentCountAggregateInputType = {
    id?: true
    programId?: true
    departmentId?: true
    createdAt?: true
    _all?: true
  }

  export type ProgramDepartmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProgramDepartment to aggregate.
     */
    where?: ProgramDepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramDepartments to fetch.
     */
    orderBy?: ProgramDepartmentOrderByWithRelationInput | ProgramDepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProgramDepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramDepartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramDepartments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgramDepartments
    **/
    _count?: true | ProgramDepartmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgramDepartmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgramDepartmentMaxAggregateInputType
  }

  export type GetProgramDepartmentAggregateType<T extends ProgramDepartmentAggregateArgs> = {
        [P in keyof T & keyof AggregateProgramDepartment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgramDepartment[P]>
      : GetScalarType<T[P], AggregateProgramDepartment[P]>
  }




  export type ProgramDepartmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramDepartmentWhereInput
    orderBy?: ProgramDepartmentOrderByWithAggregationInput | ProgramDepartmentOrderByWithAggregationInput[]
    by: ProgramDepartmentScalarFieldEnum[] | ProgramDepartmentScalarFieldEnum
    having?: ProgramDepartmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgramDepartmentCountAggregateInputType | true
    _min?: ProgramDepartmentMinAggregateInputType
    _max?: ProgramDepartmentMaxAggregateInputType
  }

  export type ProgramDepartmentGroupByOutputType = {
    id: string
    programId: string
    departmentId: string
    createdAt: Date
    _count: ProgramDepartmentCountAggregateOutputType | null
    _min: ProgramDepartmentMinAggregateOutputType | null
    _max: ProgramDepartmentMaxAggregateOutputType | null
  }

  type GetProgramDepartmentGroupByPayload<T extends ProgramDepartmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProgramDepartmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProgramDepartmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProgramDepartmentGroupByOutputType[P]>
            : GetScalarType<T[P], ProgramDepartmentGroupByOutputType[P]>
        }
      >
    >


  export type ProgramDepartmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    departmentId?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    department?: boolean | DepartmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programDepartment"]>

  export type ProgramDepartmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    departmentId?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    department?: boolean | DepartmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programDepartment"]>

  export type ProgramDepartmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    departmentId?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    department?: boolean | DepartmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programDepartment"]>

  export type ProgramDepartmentSelectScalar = {
    id?: boolean
    programId?: boolean
    departmentId?: boolean
    createdAt?: boolean
  }

  export type ProgramDepartmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "programId" | "departmentId" | "createdAt", ExtArgs["result"]["programDepartment"]>
  export type ProgramDepartmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    department?: boolean | DepartmentDefaultArgs<ExtArgs>
  }
  export type ProgramDepartmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    department?: boolean | DepartmentDefaultArgs<ExtArgs>
  }
  export type ProgramDepartmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    department?: boolean | DepartmentDefaultArgs<ExtArgs>
  }

  export type $ProgramDepartmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProgramDepartment"
    objects: {
      program: Prisma.$ProgramPayload<ExtArgs>
      department: Prisma.$DepartmentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      programId: string
      departmentId: string
      createdAt: Date
    }, ExtArgs["result"]["programDepartment"]>
    composites: {}
  }

  type ProgramDepartmentGetPayload<S extends boolean | null | undefined | ProgramDepartmentDefaultArgs> = $Result.GetResult<Prisma.$ProgramDepartmentPayload, S>

  type ProgramDepartmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProgramDepartmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProgramDepartmentCountAggregateInputType | true
    }

  export interface ProgramDepartmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProgramDepartment'], meta: { name: 'ProgramDepartment' } }
    /**
     * Find zero or one ProgramDepartment that matches the filter.
     * @param {ProgramDepartmentFindUniqueArgs} args - Arguments to find a ProgramDepartment
     * @example
     * // Get one ProgramDepartment
     * const programDepartment = await prisma.programDepartment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProgramDepartmentFindUniqueArgs>(args: SelectSubset<T, ProgramDepartmentFindUniqueArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProgramDepartment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProgramDepartmentFindUniqueOrThrowArgs} args - Arguments to find a ProgramDepartment
     * @example
     * // Get one ProgramDepartment
     * const programDepartment = await prisma.programDepartment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProgramDepartmentFindUniqueOrThrowArgs>(args: SelectSubset<T, ProgramDepartmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProgramDepartment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramDepartmentFindFirstArgs} args - Arguments to find a ProgramDepartment
     * @example
     * // Get one ProgramDepartment
     * const programDepartment = await prisma.programDepartment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProgramDepartmentFindFirstArgs>(args?: SelectSubset<T, ProgramDepartmentFindFirstArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProgramDepartment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramDepartmentFindFirstOrThrowArgs} args - Arguments to find a ProgramDepartment
     * @example
     * // Get one ProgramDepartment
     * const programDepartment = await prisma.programDepartment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProgramDepartmentFindFirstOrThrowArgs>(args?: SelectSubset<T, ProgramDepartmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProgramDepartments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramDepartmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgramDepartments
     * const programDepartments = await prisma.programDepartment.findMany()
     * 
     * // Get first 10 ProgramDepartments
     * const programDepartments = await prisma.programDepartment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const programDepartmentWithIdOnly = await prisma.programDepartment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProgramDepartmentFindManyArgs>(args?: SelectSubset<T, ProgramDepartmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProgramDepartment.
     * @param {ProgramDepartmentCreateArgs} args - Arguments to create a ProgramDepartment.
     * @example
     * // Create one ProgramDepartment
     * const ProgramDepartment = await prisma.programDepartment.create({
     *   data: {
     *     // ... data to create a ProgramDepartment
     *   }
     * })
     * 
     */
    create<T extends ProgramDepartmentCreateArgs>(args: SelectSubset<T, ProgramDepartmentCreateArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProgramDepartments.
     * @param {ProgramDepartmentCreateManyArgs} args - Arguments to create many ProgramDepartments.
     * @example
     * // Create many ProgramDepartments
     * const programDepartment = await prisma.programDepartment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProgramDepartmentCreateManyArgs>(args?: SelectSubset<T, ProgramDepartmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProgramDepartments and returns the data saved in the database.
     * @param {ProgramDepartmentCreateManyAndReturnArgs} args - Arguments to create many ProgramDepartments.
     * @example
     * // Create many ProgramDepartments
     * const programDepartment = await prisma.programDepartment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProgramDepartments and only return the `id`
     * const programDepartmentWithIdOnly = await prisma.programDepartment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProgramDepartmentCreateManyAndReturnArgs>(args?: SelectSubset<T, ProgramDepartmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProgramDepartment.
     * @param {ProgramDepartmentDeleteArgs} args - Arguments to delete one ProgramDepartment.
     * @example
     * // Delete one ProgramDepartment
     * const ProgramDepartment = await prisma.programDepartment.delete({
     *   where: {
     *     // ... filter to delete one ProgramDepartment
     *   }
     * })
     * 
     */
    delete<T extends ProgramDepartmentDeleteArgs>(args: SelectSubset<T, ProgramDepartmentDeleteArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProgramDepartment.
     * @param {ProgramDepartmentUpdateArgs} args - Arguments to update one ProgramDepartment.
     * @example
     * // Update one ProgramDepartment
     * const programDepartment = await prisma.programDepartment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProgramDepartmentUpdateArgs>(args: SelectSubset<T, ProgramDepartmentUpdateArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProgramDepartments.
     * @param {ProgramDepartmentDeleteManyArgs} args - Arguments to filter ProgramDepartments to delete.
     * @example
     * // Delete a few ProgramDepartments
     * const { count } = await prisma.programDepartment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProgramDepartmentDeleteManyArgs>(args?: SelectSubset<T, ProgramDepartmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgramDepartments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramDepartmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgramDepartments
     * const programDepartment = await prisma.programDepartment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProgramDepartmentUpdateManyArgs>(args: SelectSubset<T, ProgramDepartmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgramDepartments and returns the data updated in the database.
     * @param {ProgramDepartmentUpdateManyAndReturnArgs} args - Arguments to update many ProgramDepartments.
     * @example
     * // Update many ProgramDepartments
     * const programDepartment = await prisma.programDepartment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProgramDepartments and only return the `id`
     * const programDepartmentWithIdOnly = await prisma.programDepartment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProgramDepartmentUpdateManyAndReturnArgs>(args: SelectSubset<T, ProgramDepartmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProgramDepartment.
     * @param {ProgramDepartmentUpsertArgs} args - Arguments to update or create a ProgramDepartment.
     * @example
     * // Update or create a ProgramDepartment
     * const programDepartment = await prisma.programDepartment.upsert({
     *   create: {
     *     // ... data to create a ProgramDepartment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgramDepartment we want to update
     *   }
     * })
     */
    upsert<T extends ProgramDepartmentUpsertArgs>(args: SelectSubset<T, ProgramDepartmentUpsertArgs<ExtArgs>>): Prisma__ProgramDepartmentClient<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProgramDepartments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramDepartmentCountArgs} args - Arguments to filter ProgramDepartments to count.
     * @example
     * // Count the number of ProgramDepartments
     * const count = await prisma.programDepartment.count({
     *   where: {
     *     // ... the filter for the ProgramDepartments we want to count
     *   }
     * })
    **/
    count<T extends ProgramDepartmentCountArgs>(
      args?: Subset<T, ProgramDepartmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgramDepartmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgramDepartment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramDepartmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgramDepartmentAggregateArgs>(args: Subset<T, ProgramDepartmentAggregateArgs>): Prisma.PrismaPromise<GetProgramDepartmentAggregateType<T>>

    /**
     * Group by ProgramDepartment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramDepartmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgramDepartmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgramDepartmentGroupByArgs['orderBy'] }
        : { orderBy?: ProgramDepartmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgramDepartmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramDepartmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProgramDepartment model
   */
  readonly fields: ProgramDepartmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgramDepartment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProgramDepartmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    program<T extends ProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramDefaultArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    department<T extends DepartmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DepartmentDefaultArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProgramDepartment model
   */
  interface ProgramDepartmentFieldRefs {
    readonly id: FieldRef<"ProgramDepartment", 'String'>
    readonly programId: FieldRef<"ProgramDepartment", 'String'>
    readonly departmentId: FieldRef<"ProgramDepartment", 'String'>
    readonly createdAt: FieldRef<"ProgramDepartment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProgramDepartment findUnique
   */
  export type ProgramDepartmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * Filter, which ProgramDepartment to fetch.
     */
    where: ProgramDepartmentWhereUniqueInput
  }

  /**
   * ProgramDepartment findUniqueOrThrow
   */
  export type ProgramDepartmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * Filter, which ProgramDepartment to fetch.
     */
    where: ProgramDepartmentWhereUniqueInput
  }

  /**
   * ProgramDepartment findFirst
   */
  export type ProgramDepartmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * Filter, which ProgramDepartment to fetch.
     */
    where?: ProgramDepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramDepartments to fetch.
     */
    orderBy?: ProgramDepartmentOrderByWithRelationInput | ProgramDepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgramDepartments.
     */
    cursor?: ProgramDepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramDepartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramDepartments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgramDepartments.
     */
    distinct?: ProgramDepartmentScalarFieldEnum | ProgramDepartmentScalarFieldEnum[]
  }

  /**
   * ProgramDepartment findFirstOrThrow
   */
  export type ProgramDepartmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * Filter, which ProgramDepartment to fetch.
     */
    where?: ProgramDepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramDepartments to fetch.
     */
    orderBy?: ProgramDepartmentOrderByWithRelationInput | ProgramDepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgramDepartments.
     */
    cursor?: ProgramDepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramDepartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramDepartments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgramDepartments.
     */
    distinct?: ProgramDepartmentScalarFieldEnum | ProgramDepartmentScalarFieldEnum[]
  }

  /**
   * ProgramDepartment findMany
   */
  export type ProgramDepartmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * Filter, which ProgramDepartments to fetch.
     */
    where?: ProgramDepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramDepartments to fetch.
     */
    orderBy?: ProgramDepartmentOrderByWithRelationInput | ProgramDepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgramDepartments.
     */
    cursor?: ProgramDepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramDepartments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramDepartments.
     */
    skip?: number
    distinct?: ProgramDepartmentScalarFieldEnum | ProgramDepartmentScalarFieldEnum[]
  }

  /**
   * ProgramDepartment create
   */
  export type ProgramDepartmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * The data needed to create a ProgramDepartment.
     */
    data: XOR<ProgramDepartmentCreateInput, ProgramDepartmentUncheckedCreateInput>
  }

  /**
   * ProgramDepartment createMany
   */
  export type ProgramDepartmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProgramDepartments.
     */
    data: ProgramDepartmentCreateManyInput | ProgramDepartmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProgramDepartment createManyAndReturn
   */
  export type ProgramDepartmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * The data used to create many ProgramDepartments.
     */
    data: ProgramDepartmentCreateManyInput | ProgramDepartmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProgramDepartment update
   */
  export type ProgramDepartmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * The data needed to update a ProgramDepartment.
     */
    data: XOR<ProgramDepartmentUpdateInput, ProgramDepartmentUncheckedUpdateInput>
    /**
     * Choose, which ProgramDepartment to update.
     */
    where: ProgramDepartmentWhereUniqueInput
  }

  /**
   * ProgramDepartment updateMany
   */
  export type ProgramDepartmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProgramDepartments.
     */
    data: XOR<ProgramDepartmentUpdateManyMutationInput, ProgramDepartmentUncheckedUpdateManyInput>
    /**
     * Filter which ProgramDepartments to update
     */
    where?: ProgramDepartmentWhereInput
    /**
     * Limit how many ProgramDepartments to update.
     */
    limit?: number
  }

  /**
   * ProgramDepartment updateManyAndReturn
   */
  export type ProgramDepartmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * The data used to update ProgramDepartments.
     */
    data: XOR<ProgramDepartmentUpdateManyMutationInput, ProgramDepartmentUncheckedUpdateManyInput>
    /**
     * Filter which ProgramDepartments to update
     */
    where?: ProgramDepartmentWhereInput
    /**
     * Limit how many ProgramDepartments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProgramDepartment upsert
   */
  export type ProgramDepartmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * The filter to search for the ProgramDepartment to update in case it exists.
     */
    where: ProgramDepartmentWhereUniqueInput
    /**
     * In case the ProgramDepartment found by the `where` argument doesn't exist, create a new ProgramDepartment with this data.
     */
    create: XOR<ProgramDepartmentCreateInput, ProgramDepartmentUncheckedCreateInput>
    /**
     * In case the ProgramDepartment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProgramDepartmentUpdateInput, ProgramDepartmentUncheckedUpdateInput>
  }

  /**
   * ProgramDepartment delete
   */
  export type ProgramDepartmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    /**
     * Filter which ProgramDepartment to delete.
     */
    where: ProgramDepartmentWhereUniqueInput
  }

  /**
   * ProgramDepartment deleteMany
   */
  export type ProgramDepartmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProgramDepartments to delete
     */
    where?: ProgramDepartmentWhereInput
    /**
     * Limit how many ProgramDepartments to delete.
     */
    limit?: number
  }

  /**
   * ProgramDepartment without action
   */
  export type ProgramDepartmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
  }


  /**
   * Model Department
   */

  export type AggregateDepartment = {
    _count: DepartmentCountAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  export type DepartmentMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    name: string | null
    slug: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DepartmentMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    name: string | null
    slug: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DepartmentCountAggregateOutputType = {
    id: number
    universityId: number
    name: number
    slug: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DepartmentMinAggregateInputType = {
    id?: true
    universityId?: true
    name?: true
    slug?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DepartmentMaxAggregateInputType = {
    id?: true
    universityId?: true
    name?: true
    slug?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DepartmentCountAggregateInputType = {
    id?: true
    universityId?: true
    name?: true
    slug?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DepartmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Department to aggregate.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Departments
    **/
    _count?: true | DepartmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartmentMaxAggregateInputType
  }

  export type GetDepartmentAggregateType<T extends DepartmentAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartment[P]>
      : GetScalarType<T[P], AggregateDepartment[P]>
  }




  export type DepartmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepartmentWhereInput
    orderBy?: DepartmentOrderByWithAggregationInput | DepartmentOrderByWithAggregationInput[]
    by: DepartmentScalarFieldEnum[] | DepartmentScalarFieldEnum
    having?: DepartmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartmentCountAggregateInputType | true
    _min?: DepartmentMinAggregateInputType
    _max?: DepartmentMaxAggregateInputType
  }

  export type DepartmentGroupByOutputType = {
    id: string
    universityId: string
    name: string
    slug: string
    createdAt: Date
    updatedAt: Date
    _count: DepartmentCountAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  type GetDepartmentGroupByPayload<T extends DepartmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
            : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
        }
      >
    >


  export type DepartmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    name?: boolean
    slug?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    programs?: boolean | Department$programsArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    name?: boolean
    slug?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    name?: boolean
    slug?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type DepartmentSelectScalar = {
    id?: boolean
    universityId?: boolean
    name?: boolean
    slug?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type DepartmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "name" | "slug" | "createdAt" | "updatedAt", ExtArgs["result"]["department"]>
  export type DepartmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    programs?: boolean | Department$programsArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DepartmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type DepartmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }

  export type $DepartmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Department"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
      programs: Prisma.$ProgramDepartmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      name: string
      slug: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["department"]>
    composites: {}
  }

  type DepartmentGetPayload<S extends boolean | null | undefined | DepartmentDefaultArgs> = $Result.GetResult<Prisma.$DepartmentPayload, S>

  type DepartmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DepartmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepartmentCountAggregateInputType | true
    }

  export interface DepartmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Department'], meta: { name: 'Department' } }
    /**
     * Find zero or one Department that matches the filter.
     * @param {DepartmentFindUniqueArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepartmentFindUniqueArgs>(args: SelectSubset<T, DepartmentFindUniqueArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Department that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DepartmentFindUniqueOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepartmentFindUniqueOrThrowArgs>(args: SelectSubset<T, DepartmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindFirstArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepartmentFindFirstArgs>(args?: SelectSubset<T, DepartmentFindFirstArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindFirstOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepartmentFindFirstOrThrowArgs>(args?: SelectSubset<T, DepartmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Departments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departments
     * const departments = await prisma.department.findMany()
     * 
     * // Get first 10 Departments
     * const departments = await prisma.department.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const departmentWithIdOnly = await prisma.department.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepartmentFindManyArgs>(args?: SelectSubset<T, DepartmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Department.
     * @param {DepartmentCreateArgs} args - Arguments to create a Department.
     * @example
     * // Create one Department
     * const Department = await prisma.department.create({
     *   data: {
     *     // ... data to create a Department
     *   }
     * })
     * 
     */
    create<T extends DepartmentCreateArgs>(args: SelectSubset<T, DepartmentCreateArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Departments.
     * @param {DepartmentCreateManyArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepartmentCreateManyArgs>(args?: SelectSubset<T, DepartmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departments and returns the data saved in the database.
     * @param {DepartmentCreateManyAndReturnArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepartmentCreateManyAndReturnArgs>(args?: SelectSubset<T, DepartmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Department.
     * @param {DepartmentDeleteArgs} args - Arguments to delete one Department.
     * @example
     * // Delete one Department
     * const Department = await prisma.department.delete({
     *   where: {
     *     // ... filter to delete one Department
     *   }
     * })
     * 
     */
    delete<T extends DepartmentDeleteArgs>(args: SelectSubset<T, DepartmentDeleteArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Department.
     * @param {DepartmentUpdateArgs} args - Arguments to update one Department.
     * @example
     * // Update one Department
     * const department = await prisma.department.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepartmentUpdateArgs>(args: SelectSubset<T, DepartmentUpdateArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Departments.
     * @param {DepartmentDeleteManyArgs} args - Arguments to filter Departments to delete.
     * @example
     * // Delete a few Departments
     * const { count } = await prisma.department.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepartmentDeleteManyArgs>(args?: SelectSubset<T, DepartmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepartmentUpdateManyArgs>(args: SelectSubset<T, DepartmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments and returns the data updated in the database.
     * @param {DepartmentUpdateManyAndReturnArgs} args - Arguments to update many Departments.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DepartmentUpdateManyAndReturnArgs>(args: SelectSubset<T, DepartmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Department.
     * @param {DepartmentUpsertArgs} args - Arguments to update or create a Department.
     * @example
     * // Update or create a Department
     * const department = await prisma.department.upsert({
     *   create: {
     *     // ... data to create a Department
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Department we want to update
     *   }
     * })
     */
    upsert<T extends DepartmentUpsertArgs>(args: SelectSubset<T, DepartmentUpsertArgs<ExtArgs>>): Prisma__DepartmentClient<$Result.GetResult<Prisma.$DepartmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentCountArgs} args - Arguments to filter Departments to count.
     * @example
     * // Count the number of Departments
     * const count = await prisma.department.count({
     *   where: {
     *     // ... the filter for the Departments we want to count
     *   }
     * })
    **/
    count<T extends DepartmentCountArgs>(
      args?: Subset<T, DepartmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartmentAggregateArgs>(args: Subset<T, DepartmentAggregateArgs>): Prisma.PrismaPromise<GetDepartmentAggregateType<T>>

    /**
     * Group by Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepartmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepartmentGroupByArgs['orderBy'] }
        : { orderBy?: DepartmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepartmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Department model
   */
  readonly fields: DepartmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Department.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepartmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    programs<T extends Department$programsArgs<ExtArgs> = {}>(args?: Subset<T, Department$programsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Department model
   */
  interface DepartmentFieldRefs {
    readonly id: FieldRef<"Department", 'String'>
    readonly universityId: FieldRef<"Department", 'String'>
    readonly name: FieldRef<"Department", 'String'>
    readonly slug: FieldRef<"Department", 'String'>
    readonly createdAt: FieldRef<"Department", 'DateTime'>
    readonly updatedAt: FieldRef<"Department", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Department findUnique
   */
  export type DepartmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department findUniqueOrThrow
   */
  export type DepartmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department findFirst
   */
  export type DepartmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department findFirstOrThrow
   */
  export type DepartmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Department to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department findMany
   */
  export type DepartmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter, which Departments to fetch.
     */
    where?: DepartmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Departments to fetch.
     */
    orderBy?: DepartmentOrderByWithRelationInput | DepartmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Departments.
     */
    cursor?: DepartmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Departments.
     */
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * Department create
   */
  export type DepartmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Department.
     */
    data: XOR<DepartmentCreateInput, DepartmentUncheckedCreateInput>
  }

  /**
   * Department createMany
   */
  export type DepartmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Departments.
     */
    data: DepartmentCreateManyInput | DepartmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Department createManyAndReturn
   */
  export type DepartmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * The data used to create many Departments.
     */
    data: DepartmentCreateManyInput | DepartmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Department update
   */
  export type DepartmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Department.
     */
    data: XOR<DepartmentUpdateInput, DepartmentUncheckedUpdateInput>
    /**
     * Choose, which Department to update.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department updateMany
   */
  export type DepartmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Departments.
     */
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyInput>
    /**
     * Filter which Departments to update
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to update.
     */
    limit?: number
  }

  /**
   * Department updateManyAndReturn
   */
  export type DepartmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * The data used to update Departments.
     */
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyInput>
    /**
     * Filter which Departments to update
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Department upsert
   */
  export type DepartmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Department to update in case it exists.
     */
    where: DepartmentWhereUniqueInput
    /**
     * In case the Department found by the `where` argument doesn't exist, create a new Department with this data.
     */
    create: XOR<DepartmentCreateInput, DepartmentUncheckedCreateInput>
    /**
     * In case the Department was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepartmentUpdateInput, DepartmentUncheckedUpdateInput>
  }

  /**
   * Department delete
   */
  export type DepartmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
    /**
     * Filter which Department to delete.
     */
    where: DepartmentWhereUniqueInput
  }

  /**
   * Department deleteMany
   */
  export type DepartmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Departments to delete
     */
    where?: DepartmentWhereInput
    /**
     * Limit how many Departments to delete.
     */
    limit?: number
  }

  /**
   * Department.programs
   */
  export type Department$programsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    where?: ProgramDepartmentWhereInput
    orderBy?: ProgramDepartmentOrderByWithRelationInput | ProgramDepartmentOrderByWithRelationInput[]
    cursor?: ProgramDepartmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProgramDepartmentScalarFieldEnum | ProgramDepartmentScalarFieldEnum[]
  }

  /**
   * Department without action
   */
  export type DepartmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Department
     */
    select?: DepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Department
     */
    omit?: DepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepartmentInclude<ExtArgs> | null
  }


  /**
   * Model Program
   */

  export type AggregateProgram = {
    _count: ProgramCountAggregateOutputType | null
    _avg: ProgramAvgAggregateOutputType | null
    _sum: ProgramSumAggregateOutputType | null
    _min: ProgramMinAggregateOutputType | null
    _max: ProgramMaxAggregateOutputType | null
  }

  export type ProgramAvgAggregateOutputType = {
    programLength: number | null
    averageEntranceScore: number | null
    programTuitionFees: number | null
    programAdditionalFees: number | null
  }

  export type ProgramSumAggregateOutputType = {
    programLength: number | null
    averageEntranceScore: number | null
    programTuitionFees: number | null
    programAdditionalFees: number | null
  }

  export type ProgramMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    programName: string | null
    programSlug: string | null
    degreeType: string | null
    programLength: number | null
    specializations: string | null
    programDescription: string | null
    curriculumOverview: string | null
    admissionRequirements: string | null
    averageEntranceScore: number | null
    programTuitionFees: number | null
    programAdditionalFees: number | null
    programMetaTitle: string | null
    programMetaDescription: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProgramMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    programName: string | null
    programSlug: string | null
    degreeType: string | null
    programLength: number | null
    specializations: string | null
    programDescription: string | null
    curriculumOverview: string | null
    admissionRequirements: string | null
    averageEntranceScore: number | null
    programTuitionFees: number | null
    programAdditionalFees: number | null
    programMetaTitle: string | null
    programMetaDescription: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProgramCountAggregateOutputType = {
    id: number
    universityId: number
    programName: number
    programSlug: number
    degreeType: number
    programLength: number
    specializations: number
    programDescription: number
    curriculumOverview: number
    admissionRequirements: number
    averageEntranceScore: number
    programTuitionFees: number
    programAdditionalFees: number
    programMetaTitle: number
    programMetaDescription: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProgramAvgAggregateInputType = {
    programLength?: true
    averageEntranceScore?: true
    programTuitionFees?: true
    programAdditionalFees?: true
  }

  export type ProgramSumAggregateInputType = {
    programLength?: true
    averageEntranceScore?: true
    programTuitionFees?: true
    programAdditionalFees?: true
  }

  export type ProgramMinAggregateInputType = {
    id?: true
    universityId?: true
    programName?: true
    programSlug?: true
    degreeType?: true
    programLength?: true
    specializations?: true
    programDescription?: true
    curriculumOverview?: true
    admissionRequirements?: true
    averageEntranceScore?: true
    programTuitionFees?: true
    programAdditionalFees?: true
    programMetaTitle?: true
    programMetaDescription?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProgramMaxAggregateInputType = {
    id?: true
    universityId?: true
    programName?: true
    programSlug?: true
    degreeType?: true
    programLength?: true
    specializations?: true
    programDescription?: true
    curriculumOverview?: true
    admissionRequirements?: true
    averageEntranceScore?: true
    programTuitionFees?: true
    programAdditionalFees?: true
    programMetaTitle?: true
    programMetaDescription?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProgramCountAggregateInputType = {
    id?: true
    universityId?: true
    programName?: true
    programSlug?: true
    degreeType?: true
    programLength?: true
    specializations?: true
    programDescription?: true
    curriculumOverview?: true
    admissionRequirements?: true
    averageEntranceScore?: true
    programTuitionFees?: true
    programAdditionalFees?: true
    programMetaTitle?: true
    programMetaDescription?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProgramAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Program to aggregate.
     */
    where?: ProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Programs to fetch.
     */
    orderBy?: ProgramOrderByWithRelationInput | ProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Programs
    **/
    _count?: true | ProgramCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProgramAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProgramSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgramMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgramMaxAggregateInputType
  }

  export type GetProgramAggregateType<T extends ProgramAggregateArgs> = {
        [P in keyof T & keyof AggregateProgram]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgram[P]>
      : GetScalarType<T[P], AggregateProgram[P]>
  }




  export type ProgramGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramWhereInput
    orderBy?: ProgramOrderByWithAggregationInput | ProgramOrderByWithAggregationInput[]
    by: ProgramScalarFieldEnum[] | ProgramScalarFieldEnum
    having?: ProgramScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgramCountAggregateInputType | true
    _avg?: ProgramAvgAggregateInputType
    _sum?: ProgramSumAggregateInputType
    _min?: ProgramMinAggregateInputType
    _max?: ProgramMaxAggregateInputType
  }

  export type ProgramGroupByOutputType = {
    id: string
    universityId: string
    programName: string
    programSlug: string
    degreeType: string | null
    programLength: number | null
    specializations: string | null
    programDescription: string | null
    curriculumOverview: string | null
    admissionRequirements: string | null
    averageEntranceScore: number | null
    programTuitionFees: number | null
    programAdditionalFees: number | null
    programMetaTitle: string | null
    programMetaDescription: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProgramCountAggregateOutputType | null
    _avg: ProgramAvgAggregateOutputType | null
    _sum: ProgramSumAggregateOutputType | null
    _min: ProgramMinAggregateOutputType | null
    _max: ProgramMaxAggregateOutputType | null
  }

  type GetProgramGroupByPayload<T extends ProgramGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProgramGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProgramGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProgramGroupByOutputType[P]>
            : GetScalarType<T[P], ProgramGroupByOutputType[P]>
        }
      >
    >


  export type ProgramSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programName?: boolean
    programSlug?: boolean
    degreeType?: boolean
    programLength?: boolean
    specializations?: boolean
    programDescription?: boolean
    curriculumOverview?: boolean
    admissionRequirements?: boolean
    averageEntranceScore?: boolean
    programTuitionFees?: boolean
    programAdditionalFees?: boolean
    programMetaTitle?: boolean
    programMetaDescription?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    departments?: boolean | Program$departmentsArgs<ExtArgs>
    syllabus?: boolean | Program$syllabusArgs<ExtArgs>
    rankings?: boolean | Program$rankingsArgs<ExtArgs>
    externalLinks?: boolean | Program$externalLinksArgs<ExtArgs>
    admissions?: boolean | Program$admissionsArgs<ExtArgs>
    applications?: boolean | Program$applicationsArgs<ExtArgs>
    tuitionBreakdowns?: boolean | Program$tuitionBreakdownsArgs<ExtArgs>
    scholarships?: boolean | Program$scholarshipsArgs<ExtArgs>
    feeStructures?: boolean | Program$feeStructuresArgs<ExtArgs>
    financialAids?: boolean | Program$financialAidsArgs<ExtArgs>
    essayPrompts?: boolean | Program$essayPromptsArgs<ExtArgs>
    calendarEvents?: boolean | Program$calendarEventsArgs<ExtArgs>
    essays?: boolean | Program$essaysArgs<ExtArgs>
    _count?: boolean | ProgramCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["program"]>

  export type ProgramSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programName?: boolean
    programSlug?: boolean
    degreeType?: boolean
    programLength?: boolean
    specializations?: boolean
    programDescription?: boolean
    curriculumOverview?: boolean
    admissionRequirements?: boolean
    averageEntranceScore?: boolean
    programTuitionFees?: boolean
    programAdditionalFees?: boolean
    programMetaTitle?: boolean
    programMetaDescription?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["program"]>

  export type ProgramSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programName?: boolean
    programSlug?: boolean
    degreeType?: boolean
    programLength?: boolean
    specializations?: boolean
    programDescription?: boolean
    curriculumOverview?: boolean
    admissionRequirements?: boolean
    averageEntranceScore?: boolean
    programTuitionFees?: boolean
    programAdditionalFees?: boolean
    programMetaTitle?: boolean
    programMetaDescription?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["program"]>

  export type ProgramSelectScalar = {
    id?: boolean
    universityId?: boolean
    programName?: boolean
    programSlug?: boolean
    degreeType?: boolean
    programLength?: boolean
    specializations?: boolean
    programDescription?: boolean
    curriculumOverview?: boolean
    admissionRequirements?: boolean
    averageEntranceScore?: boolean
    programTuitionFees?: boolean
    programAdditionalFees?: boolean
    programMetaTitle?: boolean
    programMetaDescription?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProgramOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "programName" | "programSlug" | "degreeType" | "programLength" | "specializations" | "programDescription" | "curriculumOverview" | "admissionRequirements" | "averageEntranceScore" | "programTuitionFees" | "programAdditionalFees" | "programMetaTitle" | "programMetaDescription" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["program"]>
  export type ProgramInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    departments?: boolean | Program$departmentsArgs<ExtArgs>
    syllabus?: boolean | Program$syllabusArgs<ExtArgs>
    rankings?: boolean | Program$rankingsArgs<ExtArgs>
    externalLinks?: boolean | Program$externalLinksArgs<ExtArgs>
    admissions?: boolean | Program$admissionsArgs<ExtArgs>
    applications?: boolean | Program$applicationsArgs<ExtArgs>
    tuitionBreakdowns?: boolean | Program$tuitionBreakdownsArgs<ExtArgs>
    scholarships?: boolean | Program$scholarshipsArgs<ExtArgs>
    feeStructures?: boolean | Program$feeStructuresArgs<ExtArgs>
    financialAids?: boolean | Program$financialAidsArgs<ExtArgs>
    essayPrompts?: boolean | Program$essayPromptsArgs<ExtArgs>
    calendarEvents?: boolean | Program$calendarEventsArgs<ExtArgs>
    essays?: boolean | Program$essaysArgs<ExtArgs>
    _count?: boolean | ProgramCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProgramIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }
  export type ProgramIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
  }

  export type $ProgramPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Program"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
      departments: Prisma.$ProgramDepartmentPayload<ExtArgs>[]
      syllabus: Prisma.$SyllabusPayload<ExtArgs> | null
      rankings: Prisma.$ProgramRankingPayload<ExtArgs>[]
      externalLinks: Prisma.$ExternalLinkPayload<ExtArgs>[]
      admissions: Prisma.$AdmissionPayload<ExtArgs>[]
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
      tuitionBreakdowns: Prisma.$TuitionBreakdownPayload<ExtArgs>[]
      scholarships: Prisma.$ScholarshipPayload<ExtArgs>[]
      feeStructures: Prisma.$FeeStructurePayload<ExtArgs>[]
      financialAids: Prisma.$FinancialAidPayload<ExtArgs>[]
      essayPrompts: Prisma.$EssayPromptPayload<ExtArgs>[]
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
      essays: Prisma.$EssayPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      programName: string
      programSlug: string
      degreeType: string | null
      programLength: number | null
      specializations: string | null
      programDescription: string | null
      curriculumOverview: string | null
      admissionRequirements: string | null
      averageEntranceScore: number | null
      programTuitionFees: number | null
      programAdditionalFees: number | null
      programMetaTitle: string | null
      programMetaDescription: string | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["program"]>
    composites: {}
  }

  type ProgramGetPayload<S extends boolean | null | undefined | ProgramDefaultArgs> = $Result.GetResult<Prisma.$ProgramPayload, S>

  type ProgramCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProgramFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProgramCountAggregateInputType | true
    }

  export interface ProgramDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Program'], meta: { name: 'Program' } }
    /**
     * Find zero or one Program that matches the filter.
     * @param {ProgramFindUniqueArgs} args - Arguments to find a Program
     * @example
     * // Get one Program
     * const program = await prisma.program.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProgramFindUniqueArgs>(args: SelectSubset<T, ProgramFindUniqueArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Program that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProgramFindUniqueOrThrowArgs} args - Arguments to find a Program
     * @example
     * // Get one Program
     * const program = await prisma.program.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProgramFindUniqueOrThrowArgs>(args: SelectSubset<T, ProgramFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Program that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramFindFirstArgs} args - Arguments to find a Program
     * @example
     * // Get one Program
     * const program = await prisma.program.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProgramFindFirstArgs>(args?: SelectSubset<T, ProgramFindFirstArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Program that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramFindFirstOrThrowArgs} args - Arguments to find a Program
     * @example
     * // Get one Program
     * const program = await prisma.program.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProgramFindFirstOrThrowArgs>(args?: SelectSubset<T, ProgramFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Programs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Programs
     * const programs = await prisma.program.findMany()
     * 
     * // Get first 10 Programs
     * const programs = await prisma.program.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const programWithIdOnly = await prisma.program.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProgramFindManyArgs>(args?: SelectSubset<T, ProgramFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Program.
     * @param {ProgramCreateArgs} args - Arguments to create a Program.
     * @example
     * // Create one Program
     * const Program = await prisma.program.create({
     *   data: {
     *     // ... data to create a Program
     *   }
     * })
     * 
     */
    create<T extends ProgramCreateArgs>(args: SelectSubset<T, ProgramCreateArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Programs.
     * @param {ProgramCreateManyArgs} args - Arguments to create many Programs.
     * @example
     * // Create many Programs
     * const program = await prisma.program.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProgramCreateManyArgs>(args?: SelectSubset<T, ProgramCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Programs and returns the data saved in the database.
     * @param {ProgramCreateManyAndReturnArgs} args - Arguments to create many Programs.
     * @example
     * // Create many Programs
     * const program = await prisma.program.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Programs and only return the `id`
     * const programWithIdOnly = await prisma.program.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProgramCreateManyAndReturnArgs>(args?: SelectSubset<T, ProgramCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Program.
     * @param {ProgramDeleteArgs} args - Arguments to delete one Program.
     * @example
     * // Delete one Program
     * const Program = await prisma.program.delete({
     *   where: {
     *     // ... filter to delete one Program
     *   }
     * })
     * 
     */
    delete<T extends ProgramDeleteArgs>(args: SelectSubset<T, ProgramDeleteArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Program.
     * @param {ProgramUpdateArgs} args - Arguments to update one Program.
     * @example
     * // Update one Program
     * const program = await prisma.program.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProgramUpdateArgs>(args: SelectSubset<T, ProgramUpdateArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Programs.
     * @param {ProgramDeleteManyArgs} args - Arguments to filter Programs to delete.
     * @example
     * // Delete a few Programs
     * const { count } = await prisma.program.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProgramDeleteManyArgs>(args?: SelectSubset<T, ProgramDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Programs
     * const program = await prisma.program.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProgramUpdateManyArgs>(args: SelectSubset<T, ProgramUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Programs and returns the data updated in the database.
     * @param {ProgramUpdateManyAndReturnArgs} args - Arguments to update many Programs.
     * @example
     * // Update many Programs
     * const program = await prisma.program.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Programs and only return the `id`
     * const programWithIdOnly = await prisma.program.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProgramUpdateManyAndReturnArgs>(args: SelectSubset<T, ProgramUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Program.
     * @param {ProgramUpsertArgs} args - Arguments to update or create a Program.
     * @example
     * // Update or create a Program
     * const program = await prisma.program.upsert({
     *   create: {
     *     // ... data to create a Program
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Program we want to update
     *   }
     * })
     */
    upsert<T extends ProgramUpsertArgs>(args: SelectSubset<T, ProgramUpsertArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Programs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramCountArgs} args - Arguments to filter Programs to count.
     * @example
     * // Count the number of Programs
     * const count = await prisma.program.count({
     *   where: {
     *     // ... the filter for the Programs we want to count
     *   }
     * })
    **/
    count<T extends ProgramCountArgs>(
      args?: Subset<T, ProgramCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgramCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Program.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgramAggregateArgs>(args: Subset<T, ProgramAggregateArgs>): Prisma.PrismaPromise<GetProgramAggregateType<T>>

    /**
     * Group by Program.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgramGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgramGroupByArgs['orderBy'] }
        : { orderBy?: ProgramGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgramGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Program model
   */
  readonly fields: ProgramFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Program.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProgramClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    departments<T extends Program$departmentsArgs<ExtArgs> = {}>(args?: Subset<T, Program$departmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramDepartmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    syllabus<T extends Program$syllabusArgs<ExtArgs> = {}>(args?: Subset<T, Program$syllabusArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    rankings<T extends Program$rankingsArgs<ExtArgs> = {}>(args?: Subset<T, Program$rankingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    externalLinks<T extends Program$externalLinksArgs<ExtArgs> = {}>(args?: Subset<T, Program$externalLinksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    admissions<T extends Program$admissionsArgs<ExtArgs> = {}>(args?: Subset<T, Program$admissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applications<T extends Program$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, Program$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tuitionBreakdowns<T extends Program$tuitionBreakdownsArgs<ExtArgs> = {}>(args?: Subset<T, Program$tuitionBreakdownsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    scholarships<T extends Program$scholarshipsArgs<ExtArgs> = {}>(args?: Subset<T, Program$scholarshipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    feeStructures<T extends Program$feeStructuresArgs<ExtArgs> = {}>(args?: Subset<T, Program$feeStructuresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    financialAids<T extends Program$financialAidsArgs<ExtArgs> = {}>(args?: Subset<T, Program$financialAidsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essayPrompts<T extends Program$essayPromptsArgs<ExtArgs> = {}>(args?: Subset<T, Program$essayPromptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calendarEvents<T extends Program$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, Program$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essays<T extends Program$essaysArgs<ExtArgs> = {}>(args?: Subset<T, Program$essaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Program model
   */
  interface ProgramFieldRefs {
    readonly id: FieldRef<"Program", 'String'>
    readonly universityId: FieldRef<"Program", 'String'>
    readonly programName: FieldRef<"Program", 'String'>
    readonly programSlug: FieldRef<"Program", 'String'>
    readonly degreeType: FieldRef<"Program", 'String'>
    readonly programLength: FieldRef<"Program", 'Int'>
    readonly specializations: FieldRef<"Program", 'String'>
    readonly programDescription: FieldRef<"Program", 'String'>
    readonly curriculumOverview: FieldRef<"Program", 'String'>
    readonly admissionRequirements: FieldRef<"Program", 'String'>
    readonly averageEntranceScore: FieldRef<"Program", 'Float'>
    readonly programTuitionFees: FieldRef<"Program", 'Float'>
    readonly programAdditionalFees: FieldRef<"Program", 'Float'>
    readonly programMetaTitle: FieldRef<"Program", 'String'>
    readonly programMetaDescription: FieldRef<"Program", 'String'>
    readonly isActive: FieldRef<"Program", 'Boolean'>
    readonly createdAt: FieldRef<"Program", 'DateTime'>
    readonly updatedAt: FieldRef<"Program", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Program findUnique
   */
  export type ProgramFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * Filter, which Program to fetch.
     */
    where: ProgramWhereUniqueInput
  }

  /**
   * Program findUniqueOrThrow
   */
  export type ProgramFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * Filter, which Program to fetch.
     */
    where: ProgramWhereUniqueInput
  }

  /**
   * Program findFirst
   */
  export type ProgramFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * Filter, which Program to fetch.
     */
    where?: ProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Programs to fetch.
     */
    orderBy?: ProgramOrderByWithRelationInput | ProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Programs.
     */
    cursor?: ProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Programs.
     */
    distinct?: ProgramScalarFieldEnum | ProgramScalarFieldEnum[]
  }

  /**
   * Program findFirstOrThrow
   */
  export type ProgramFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * Filter, which Program to fetch.
     */
    where?: ProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Programs to fetch.
     */
    orderBy?: ProgramOrderByWithRelationInput | ProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Programs.
     */
    cursor?: ProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Programs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Programs.
     */
    distinct?: ProgramScalarFieldEnum | ProgramScalarFieldEnum[]
  }

  /**
   * Program findMany
   */
  export type ProgramFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * Filter, which Programs to fetch.
     */
    where?: ProgramWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Programs to fetch.
     */
    orderBy?: ProgramOrderByWithRelationInput | ProgramOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Programs.
     */
    cursor?: ProgramWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Programs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Programs.
     */
    skip?: number
    distinct?: ProgramScalarFieldEnum | ProgramScalarFieldEnum[]
  }

  /**
   * Program create
   */
  export type ProgramCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * The data needed to create a Program.
     */
    data: XOR<ProgramCreateInput, ProgramUncheckedCreateInput>
  }

  /**
   * Program createMany
   */
  export type ProgramCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Programs.
     */
    data: ProgramCreateManyInput | ProgramCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Program createManyAndReturn
   */
  export type ProgramCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * The data used to create many Programs.
     */
    data: ProgramCreateManyInput | ProgramCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Program update
   */
  export type ProgramUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * The data needed to update a Program.
     */
    data: XOR<ProgramUpdateInput, ProgramUncheckedUpdateInput>
    /**
     * Choose, which Program to update.
     */
    where: ProgramWhereUniqueInput
  }

  /**
   * Program updateMany
   */
  export type ProgramUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Programs.
     */
    data: XOR<ProgramUpdateManyMutationInput, ProgramUncheckedUpdateManyInput>
    /**
     * Filter which Programs to update
     */
    where?: ProgramWhereInput
    /**
     * Limit how many Programs to update.
     */
    limit?: number
  }

  /**
   * Program updateManyAndReturn
   */
  export type ProgramUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * The data used to update Programs.
     */
    data: XOR<ProgramUpdateManyMutationInput, ProgramUncheckedUpdateManyInput>
    /**
     * Filter which Programs to update
     */
    where?: ProgramWhereInput
    /**
     * Limit how many Programs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Program upsert
   */
  export type ProgramUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * The filter to search for the Program to update in case it exists.
     */
    where: ProgramWhereUniqueInput
    /**
     * In case the Program found by the `where` argument doesn't exist, create a new Program with this data.
     */
    create: XOR<ProgramCreateInput, ProgramUncheckedCreateInput>
    /**
     * In case the Program was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProgramUpdateInput, ProgramUncheckedUpdateInput>
  }

  /**
   * Program delete
   */
  export type ProgramDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    /**
     * Filter which Program to delete.
     */
    where: ProgramWhereUniqueInput
  }

  /**
   * Program deleteMany
   */
  export type ProgramDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Programs to delete
     */
    where?: ProgramWhereInput
    /**
     * Limit how many Programs to delete.
     */
    limit?: number
  }

  /**
   * Program.departments
   */
  export type Program$departmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramDepartment
     */
    select?: ProgramDepartmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramDepartment
     */
    omit?: ProgramDepartmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramDepartmentInclude<ExtArgs> | null
    where?: ProgramDepartmentWhereInput
    orderBy?: ProgramDepartmentOrderByWithRelationInput | ProgramDepartmentOrderByWithRelationInput[]
    cursor?: ProgramDepartmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProgramDepartmentScalarFieldEnum | ProgramDepartmentScalarFieldEnum[]
  }

  /**
   * Program.syllabus
   */
  export type Program$syllabusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    where?: SyllabusWhereInput
  }

  /**
   * Program.rankings
   */
  export type Program$rankingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    where?: ProgramRankingWhereInput
    orderBy?: ProgramRankingOrderByWithRelationInput | ProgramRankingOrderByWithRelationInput[]
    cursor?: ProgramRankingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProgramRankingScalarFieldEnum | ProgramRankingScalarFieldEnum[]
  }

  /**
   * Program.externalLinks
   */
  export type Program$externalLinksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    where?: ExternalLinkWhereInput
    orderBy?: ExternalLinkOrderByWithRelationInput | ExternalLinkOrderByWithRelationInput[]
    cursor?: ExternalLinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ExternalLinkScalarFieldEnum | ExternalLinkScalarFieldEnum[]
  }

  /**
   * Program.admissions
   */
  export type Program$admissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    where?: AdmissionWhereInput
    orderBy?: AdmissionOrderByWithRelationInput | AdmissionOrderByWithRelationInput[]
    cursor?: AdmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdmissionScalarFieldEnum | AdmissionScalarFieldEnum[]
  }

  /**
   * Program.applications
   */
  export type Program$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Program.tuitionBreakdowns
   */
  export type Program$tuitionBreakdownsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    where?: TuitionBreakdownWhereInput
    orderBy?: TuitionBreakdownOrderByWithRelationInput | TuitionBreakdownOrderByWithRelationInput[]
    cursor?: TuitionBreakdownWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TuitionBreakdownScalarFieldEnum | TuitionBreakdownScalarFieldEnum[]
  }

  /**
   * Program.scholarships
   */
  export type Program$scholarshipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    where?: ScholarshipWhereInput
    orderBy?: ScholarshipOrderByWithRelationInput | ScholarshipOrderByWithRelationInput[]
    cursor?: ScholarshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScholarshipScalarFieldEnum | ScholarshipScalarFieldEnum[]
  }

  /**
   * Program.feeStructures
   */
  export type Program$feeStructuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    where?: FeeStructureWhereInput
    orderBy?: FeeStructureOrderByWithRelationInput | FeeStructureOrderByWithRelationInput[]
    cursor?: FeeStructureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FeeStructureScalarFieldEnum | FeeStructureScalarFieldEnum[]
  }

  /**
   * Program.financialAids
   */
  export type Program$financialAidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    where?: FinancialAidWhereInput
    orderBy?: FinancialAidOrderByWithRelationInput | FinancialAidOrderByWithRelationInput[]
    cursor?: FinancialAidWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancialAidScalarFieldEnum | FinancialAidScalarFieldEnum[]
  }

  /**
   * Program.essayPrompts
   */
  export type Program$essayPromptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    where?: EssayPromptWhereInput
    orderBy?: EssayPromptOrderByWithRelationInput | EssayPromptOrderByWithRelationInput[]
    cursor?: EssayPromptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayPromptScalarFieldEnum | EssayPromptScalarFieldEnum[]
  }

  /**
   * Program.calendarEvents
   */
  export type Program$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * Program.essays
   */
  export type Program$essaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    where?: EssayWhereInput
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    cursor?: EssayWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayScalarFieldEnum | EssayScalarFieldEnum[]
  }

  /**
   * Program without action
   */
  export type ProgramDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
  }


  /**
   * Model Syllabus
   */

  export type AggregateSyllabus = {
    _count: SyllabusCountAggregateOutputType | null
    _min: SyllabusMinAggregateOutputType | null
    _max: SyllabusMaxAggregateOutputType | null
  }

  export type SyllabusMinAggregateOutputType = {
    id: string | null
    programId: string | null
    fileUrl: string | null
    uploadedAt: Date | null
  }

  export type SyllabusMaxAggregateOutputType = {
    id: string | null
    programId: string | null
    fileUrl: string | null
    uploadedAt: Date | null
  }

  export type SyllabusCountAggregateOutputType = {
    id: number
    programId: number
    fileUrl: number
    uploadedAt: number
    _all: number
  }


  export type SyllabusMinAggregateInputType = {
    id?: true
    programId?: true
    fileUrl?: true
    uploadedAt?: true
  }

  export type SyllabusMaxAggregateInputType = {
    id?: true
    programId?: true
    fileUrl?: true
    uploadedAt?: true
  }

  export type SyllabusCountAggregateInputType = {
    id?: true
    programId?: true
    fileUrl?: true
    uploadedAt?: true
    _all?: true
  }

  export type SyllabusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Syllabus to aggregate.
     */
    where?: SyllabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Syllabi to fetch.
     */
    orderBy?: SyllabusOrderByWithRelationInput | SyllabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SyllabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Syllabi from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Syllabi.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Syllabi
    **/
    _count?: true | SyllabusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SyllabusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SyllabusMaxAggregateInputType
  }

  export type GetSyllabusAggregateType<T extends SyllabusAggregateArgs> = {
        [P in keyof T & keyof AggregateSyllabus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSyllabus[P]>
      : GetScalarType<T[P], AggregateSyllabus[P]>
  }




  export type SyllabusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SyllabusWhereInput
    orderBy?: SyllabusOrderByWithAggregationInput | SyllabusOrderByWithAggregationInput[]
    by: SyllabusScalarFieldEnum[] | SyllabusScalarFieldEnum
    having?: SyllabusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SyllabusCountAggregateInputType | true
    _min?: SyllabusMinAggregateInputType
    _max?: SyllabusMaxAggregateInputType
  }

  export type SyllabusGroupByOutputType = {
    id: string
    programId: string
    fileUrl: string
    uploadedAt: Date
    _count: SyllabusCountAggregateOutputType | null
    _min: SyllabusMinAggregateOutputType | null
    _max: SyllabusMaxAggregateOutputType | null
  }

  type GetSyllabusGroupByPayload<T extends SyllabusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SyllabusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SyllabusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SyllabusGroupByOutputType[P]>
            : GetScalarType<T[P], SyllabusGroupByOutputType[P]>
        }
      >
    >


  export type SyllabusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["syllabus"]>

  export type SyllabusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["syllabus"]>

  export type SyllabusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["syllabus"]>

  export type SyllabusSelectScalar = {
    id?: boolean
    programId?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
  }

  export type SyllabusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "programId" | "fileUrl" | "uploadedAt", ExtArgs["result"]["syllabus"]>
  export type SyllabusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }
  export type SyllabusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }
  export type SyllabusIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }

  export type $SyllabusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Syllabus"
    objects: {
      program: Prisma.$ProgramPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      programId: string
      fileUrl: string
      uploadedAt: Date
    }, ExtArgs["result"]["syllabus"]>
    composites: {}
  }

  type SyllabusGetPayload<S extends boolean | null | undefined | SyllabusDefaultArgs> = $Result.GetResult<Prisma.$SyllabusPayload, S>

  type SyllabusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SyllabusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SyllabusCountAggregateInputType | true
    }

  export interface SyllabusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Syllabus'], meta: { name: 'Syllabus' } }
    /**
     * Find zero or one Syllabus that matches the filter.
     * @param {SyllabusFindUniqueArgs} args - Arguments to find a Syllabus
     * @example
     * // Get one Syllabus
     * const syllabus = await prisma.syllabus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SyllabusFindUniqueArgs>(args: SelectSubset<T, SyllabusFindUniqueArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Syllabus that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SyllabusFindUniqueOrThrowArgs} args - Arguments to find a Syllabus
     * @example
     * // Get one Syllabus
     * const syllabus = await prisma.syllabus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SyllabusFindUniqueOrThrowArgs>(args: SelectSubset<T, SyllabusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Syllabus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SyllabusFindFirstArgs} args - Arguments to find a Syllabus
     * @example
     * // Get one Syllabus
     * const syllabus = await prisma.syllabus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SyllabusFindFirstArgs>(args?: SelectSubset<T, SyllabusFindFirstArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Syllabus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SyllabusFindFirstOrThrowArgs} args - Arguments to find a Syllabus
     * @example
     * // Get one Syllabus
     * const syllabus = await prisma.syllabus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SyllabusFindFirstOrThrowArgs>(args?: SelectSubset<T, SyllabusFindFirstOrThrowArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Syllabi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SyllabusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Syllabi
     * const syllabi = await prisma.syllabus.findMany()
     * 
     * // Get first 10 Syllabi
     * const syllabi = await prisma.syllabus.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const syllabusWithIdOnly = await prisma.syllabus.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SyllabusFindManyArgs>(args?: SelectSubset<T, SyllabusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Syllabus.
     * @param {SyllabusCreateArgs} args - Arguments to create a Syllabus.
     * @example
     * // Create one Syllabus
     * const Syllabus = await prisma.syllabus.create({
     *   data: {
     *     // ... data to create a Syllabus
     *   }
     * })
     * 
     */
    create<T extends SyllabusCreateArgs>(args: SelectSubset<T, SyllabusCreateArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Syllabi.
     * @param {SyllabusCreateManyArgs} args - Arguments to create many Syllabi.
     * @example
     * // Create many Syllabi
     * const syllabus = await prisma.syllabus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SyllabusCreateManyArgs>(args?: SelectSubset<T, SyllabusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Syllabi and returns the data saved in the database.
     * @param {SyllabusCreateManyAndReturnArgs} args - Arguments to create many Syllabi.
     * @example
     * // Create many Syllabi
     * const syllabus = await prisma.syllabus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Syllabi and only return the `id`
     * const syllabusWithIdOnly = await prisma.syllabus.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SyllabusCreateManyAndReturnArgs>(args?: SelectSubset<T, SyllabusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Syllabus.
     * @param {SyllabusDeleteArgs} args - Arguments to delete one Syllabus.
     * @example
     * // Delete one Syllabus
     * const Syllabus = await prisma.syllabus.delete({
     *   where: {
     *     // ... filter to delete one Syllabus
     *   }
     * })
     * 
     */
    delete<T extends SyllabusDeleteArgs>(args: SelectSubset<T, SyllabusDeleteArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Syllabus.
     * @param {SyllabusUpdateArgs} args - Arguments to update one Syllabus.
     * @example
     * // Update one Syllabus
     * const syllabus = await prisma.syllabus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SyllabusUpdateArgs>(args: SelectSubset<T, SyllabusUpdateArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Syllabi.
     * @param {SyllabusDeleteManyArgs} args - Arguments to filter Syllabi to delete.
     * @example
     * // Delete a few Syllabi
     * const { count } = await prisma.syllabus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SyllabusDeleteManyArgs>(args?: SelectSubset<T, SyllabusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Syllabi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SyllabusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Syllabi
     * const syllabus = await prisma.syllabus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SyllabusUpdateManyArgs>(args: SelectSubset<T, SyllabusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Syllabi and returns the data updated in the database.
     * @param {SyllabusUpdateManyAndReturnArgs} args - Arguments to update many Syllabi.
     * @example
     * // Update many Syllabi
     * const syllabus = await prisma.syllabus.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Syllabi and only return the `id`
     * const syllabusWithIdOnly = await prisma.syllabus.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SyllabusUpdateManyAndReturnArgs>(args: SelectSubset<T, SyllabusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Syllabus.
     * @param {SyllabusUpsertArgs} args - Arguments to update or create a Syllabus.
     * @example
     * // Update or create a Syllabus
     * const syllabus = await prisma.syllabus.upsert({
     *   create: {
     *     // ... data to create a Syllabus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Syllabus we want to update
     *   }
     * })
     */
    upsert<T extends SyllabusUpsertArgs>(args: SelectSubset<T, SyllabusUpsertArgs<ExtArgs>>): Prisma__SyllabusClient<$Result.GetResult<Prisma.$SyllabusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Syllabi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SyllabusCountArgs} args - Arguments to filter Syllabi to count.
     * @example
     * // Count the number of Syllabi
     * const count = await prisma.syllabus.count({
     *   where: {
     *     // ... the filter for the Syllabi we want to count
     *   }
     * })
    **/
    count<T extends SyllabusCountArgs>(
      args?: Subset<T, SyllabusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SyllabusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Syllabus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SyllabusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SyllabusAggregateArgs>(args: Subset<T, SyllabusAggregateArgs>): Prisma.PrismaPromise<GetSyllabusAggregateType<T>>

    /**
     * Group by Syllabus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SyllabusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SyllabusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SyllabusGroupByArgs['orderBy'] }
        : { orderBy?: SyllabusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SyllabusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSyllabusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Syllabus model
   */
  readonly fields: SyllabusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Syllabus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SyllabusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    program<T extends ProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramDefaultArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Syllabus model
   */
  interface SyllabusFieldRefs {
    readonly id: FieldRef<"Syllabus", 'String'>
    readonly programId: FieldRef<"Syllabus", 'String'>
    readonly fileUrl: FieldRef<"Syllabus", 'String'>
    readonly uploadedAt: FieldRef<"Syllabus", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Syllabus findUnique
   */
  export type SyllabusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * Filter, which Syllabus to fetch.
     */
    where: SyllabusWhereUniqueInput
  }

  /**
   * Syllabus findUniqueOrThrow
   */
  export type SyllabusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * Filter, which Syllabus to fetch.
     */
    where: SyllabusWhereUniqueInput
  }

  /**
   * Syllabus findFirst
   */
  export type SyllabusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * Filter, which Syllabus to fetch.
     */
    where?: SyllabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Syllabi to fetch.
     */
    orderBy?: SyllabusOrderByWithRelationInput | SyllabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Syllabi.
     */
    cursor?: SyllabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Syllabi from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Syllabi.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Syllabi.
     */
    distinct?: SyllabusScalarFieldEnum | SyllabusScalarFieldEnum[]
  }

  /**
   * Syllabus findFirstOrThrow
   */
  export type SyllabusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * Filter, which Syllabus to fetch.
     */
    where?: SyllabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Syllabi to fetch.
     */
    orderBy?: SyllabusOrderByWithRelationInput | SyllabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Syllabi.
     */
    cursor?: SyllabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Syllabi from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Syllabi.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Syllabi.
     */
    distinct?: SyllabusScalarFieldEnum | SyllabusScalarFieldEnum[]
  }

  /**
   * Syllabus findMany
   */
  export type SyllabusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * Filter, which Syllabi to fetch.
     */
    where?: SyllabusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Syllabi to fetch.
     */
    orderBy?: SyllabusOrderByWithRelationInput | SyllabusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Syllabi.
     */
    cursor?: SyllabusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Syllabi from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Syllabi.
     */
    skip?: number
    distinct?: SyllabusScalarFieldEnum | SyllabusScalarFieldEnum[]
  }

  /**
   * Syllabus create
   */
  export type SyllabusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * The data needed to create a Syllabus.
     */
    data: XOR<SyllabusCreateInput, SyllabusUncheckedCreateInput>
  }

  /**
   * Syllabus createMany
   */
  export type SyllabusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Syllabi.
     */
    data: SyllabusCreateManyInput | SyllabusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Syllabus createManyAndReturn
   */
  export type SyllabusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * The data used to create many Syllabi.
     */
    data: SyllabusCreateManyInput | SyllabusCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Syllabus update
   */
  export type SyllabusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * The data needed to update a Syllabus.
     */
    data: XOR<SyllabusUpdateInput, SyllabusUncheckedUpdateInput>
    /**
     * Choose, which Syllabus to update.
     */
    where: SyllabusWhereUniqueInput
  }

  /**
   * Syllabus updateMany
   */
  export type SyllabusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Syllabi.
     */
    data: XOR<SyllabusUpdateManyMutationInput, SyllabusUncheckedUpdateManyInput>
    /**
     * Filter which Syllabi to update
     */
    where?: SyllabusWhereInput
    /**
     * Limit how many Syllabi to update.
     */
    limit?: number
  }

  /**
   * Syllabus updateManyAndReturn
   */
  export type SyllabusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * The data used to update Syllabi.
     */
    data: XOR<SyllabusUpdateManyMutationInput, SyllabusUncheckedUpdateManyInput>
    /**
     * Filter which Syllabi to update
     */
    where?: SyllabusWhereInput
    /**
     * Limit how many Syllabi to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Syllabus upsert
   */
  export type SyllabusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * The filter to search for the Syllabus to update in case it exists.
     */
    where: SyllabusWhereUniqueInput
    /**
     * In case the Syllabus found by the `where` argument doesn't exist, create a new Syllabus with this data.
     */
    create: XOR<SyllabusCreateInput, SyllabusUncheckedCreateInput>
    /**
     * In case the Syllabus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SyllabusUpdateInput, SyllabusUncheckedUpdateInput>
  }

  /**
   * Syllabus delete
   */
  export type SyllabusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
    /**
     * Filter which Syllabus to delete.
     */
    where: SyllabusWhereUniqueInput
  }

  /**
   * Syllabus deleteMany
   */
  export type SyllabusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Syllabi to delete
     */
    where?: SyllabusWhereInput
    /**
     * Limit how many Syllabi to delete.
     */
    limit?: number
  }

  /**
   * Syllabus without action
   */
  export type SyllabusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Syllabus
     */
    select?: SyllabusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Syllabus
     */
    omit?: SyllabusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SyllabusInclude<ExtArgs> | null
  }


  /**
   * Model ProgramRanking
   */

  export type AggregateProgramRanking = {
    _count: ProgramRankingCountAggregateOutputType | null
    _avg: ProgramRankingAvgAggregateOutputType | null
    _sum: ProgramRankingSumAggregateOutputType | null
    _min: ProgramRankingMinAggregateOutputType | null
    _max: ProgramRankingMaxAggregateOutputType | null
  }

  export type ProgramRankingAvgAggregateOutputType = {
    year: number | null
    rank: number | null
  }

  export type ProgramRankingSumAggregateOutputType = {
    year: number | null
    rank: number | null
  }

  export type ProgramRankingMinAggregateOutputType = {
    id: string | null
    programId: string | null
    year: number | null
    rank: number | null
    source: string | null
    createdAt: Date | null
  }

  export type ProgramRankingMaxAggregateOutputType = {
    id: string | null
    programId: string | null
    year: number | null
    rank: number | null
    source: string | null
    createdAt: Date | null
  }

  export type ProgramRankingCountAggregateOutputType = {
    id: number
    programId: number
    year: number
    rank: number
    source: number
    createdAt: number
    _all: number
  }


  export type ProgramRankingAvgAggregateInputType = {
    year?: true
    rank?: true
  }

  export type ProgramRankingSumAggregateInputType = {
    year?: true
    rank?: true
  }

  export type ProgramRankingMinAggregateInputType = {
    id?: true
    programId?: true
    year?: true
    rank?: true
    source?: true
    createdAt?: true
  }

  export type ProgramRankingMaxAggregateInputType = {
    id?: true
    programId?: true
    year?: true
    rank?: true
    source?: true
    createdAt?: true
  }

  export type ProgramRankingCountAggregateInputType = {
    id?: true
    programId?: true
    year?: true
    rank?: true
    source?: true
    createdAt?: true
    _all?: true
  }

  export type ProgramRankingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProgramRanking to aggregate.
     */
    where?: ProgramRankingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramRankings to fetch.
     */
    orderBy?: ProgramRankingOrderByWithRelationInput | ProgramRankingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProgramRankingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramRankings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProgramRankings
    **/
    _count?: true | ProgramRankingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProgramRankingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProgramRankingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProgramRankingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProgramRankingMaxAggregateInputType
  }

  export type GetProgramRankingAggregateType<T extends ProgramRankingAggregateArgs> = {
        [P in keyof T & keyof AggregateProgramRanking]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProgramRanking[P]>
      : GetScalarType<T[P], AggregateProgramRanking[P]>
  }




  export type ProgramRankingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProgramRankingWhereInput
    orderBy?: ProgramRankingOrderByWithAggregationInput | ProgramRankingOrderByWithAggregationInput[]
    by: ProgramRankingScalarFieldEnum[] | ProgramRankingScalarFieldEnum
    having?: ProgramRankingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProgramRankingCountAggregateInputType | true
    _avg?: ProgramRankingAvgAggregateInputType
    _sum?: ProgramRankingSumAggregateInputType
    _min?: ProgramRankingMinAggregateInputType
    _max?: ProgramRankingMaxAggregateInputType
  }

  export type ProgramRankingGroupByOutputType = {
    id: string
    programId: string
    year: number
    rank: number
    source: string | null
    createdAt: Date
    _count: ProgramRankingCountAggregateOutputType | null
    _avg: ProgramRankingAvgAggregateOutputType | null
    _sum: ProgramRankingSumAggregateOutputType | null
    _min: ProgramRankingMinAggregateOutputType | null
    _max: ProgramRankingMaxAggregateOutputType | null
  }

  type GetProgramRankingGroupByPayload<T extends ProgramRankingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProgramRankingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProgramRankingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProgramRankingGroupByOutputType[P]>
            : GetScalarType<T[P], ProgramRankingGroupByOutputType[P]>
        }
      >
    >


  export type ProgramRankingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    year?: boolean
    rank?: boolean
    source?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programRanking"]>

  export type ProgramRankingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    year?: boolean
    rank?: boolean
    source?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programRanking"]>

  export type ProgramRankingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    year?: boolean
    rank?: boolean
    source?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["programRanking"]>

  export type ProgramRankingSelectScalar = {
    id?: boolean
    programId?: boolean
    year?: boolean
    rank?: boolean
    source?: boolean
    createdAt?: boolean
  }

  export type ProgramRankingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "programId" | "year" | "rank" | "source" | "createdAt", ExtArgs["result"]["programRanking"]>
  export type ProgramRankingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }
  export type ProgramRankingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }
  export type ProgramRankingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }

  export type $ProgramRankingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProgramRanking"
    objects: {
      program: Prisma.$ProgramPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      programId: string
      year: number
      rank: number
      source: string | null
      createdAt: Date
    }, ExtArgs["result"]["programRanking"]>
    composites: {}
  }

  type ProgramRankingGetPayload<S extends boolean | null | undefined | ProgramRankingDefaultArgs> = $Result.GetResult<Prisma.$ProgramRankingPayload, S>

  type ProgramRankingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProgramRankingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProgramRankingCountAggregateInputType | true
    }

  export interface ProgramRankingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProgramRanking'], meta: { name: 'ProgramRanking' } }
    /**
     * Find zero or one ProgramRanking that matches the filter.
     * @param {ProgramRankingFindUniqueArgs} args - Arguments to find a ProgramRanking
     * @example
     * // Get one ProgramRanking
     * const programRanking = await prisma.programRanking.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProgramRankingFindUniqueArgs>(args: SelectSubset<T, ProgramRankingFindUniqueArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProgramRanking that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProgramRankingFindUniqueOrThrowArgs} args - Arguments to find a ProgramRanking
     * @example
     * // Get one ProgramRanking
     * const programRanking = await prisma.programRanking.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProgramRankingFindUniqueOrThrowArgs>(args: SelectSubset<T, ProgramRankingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProgramRanking that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramRankingFindFirstArgs} args - Arguments to find a ProgramRanking
     * @example
     * // Get one ProgramRanking
     * const programRanking = await prisma.programRanking.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProgramRankingFindFirstArgs>(args?: SelectSubset<T, ProgramRankingFindFirstArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProgramRanking that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramRankingFindFirstOrThrowArgs} args - Arguments to find a ProgramRanking
     * @example
     * // Get one ProgramRanking
     * const programRanking = await prisma.programRanking.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProgramRankingFindFirstOrThrowArgs>(args?: SelectSubset<T, ProgramRankingFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProgramRankings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramRankingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProgramRankings
     * const programRankings = await prisma.programRanking.findMany()
     * 
     * // Get first 10 ProgramRankings
     * const programRankings = await prisma.programRanking.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const programRankingWithIdOnly = await prisma.programRanking.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProgramRankingFindManyArgs>(args?: SelectSubset<T, ProgramRankingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProgramRanking.
     * @param {ProgramRankingCreateArgs} args - Arguments to create a ProgramRanking.
     * @example
     * // Create one ProgramRanking
     * const ProgramRanking = await prisma.programRanking.create({
     *   data: {
     *     // ... data to create a ProgramRanking
     *   }
     * })
     * 
     */
    create<T extends ProgramRankingCreateArgs>(args: SelectSubset<T, ProgramRankingCreateArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProgramRankings.
     * @param {ProgramRankingCreateManyArgs} args - Arguments to create many ProgramRankings.
     * @example
     * // Create many ProgramRankings
     * const programRanking = await prisma.programRanking.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProgramRankingCreateManyArgs>(args?: SelectSubset<T, ProgramRankingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProgramRankings and returns the data saved in the database.
     * @param {ProgramRankingCreateManyAndReturnArgs} args - Arguments to create many ProgramRankings.
     * @example
     * // Create many ProgramRankings
     * const programRanking = await prisma.programRanking.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProgramRankings and only return the `id`
     * const programRankingWithIdOnly = await prisma.programRanking.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProgramRankingCreateManyAndReturnArgs>(args?: SelectSubset<T, ProgramRankingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProgramRanking.
     * @param {ProgramRankingDeleteArgs} args - Arguments to delete one ProgramRanking.
     * @example
     * // Delete one ProgramRanking
     * const ProgramRanking = await prisma.programRanking.delete({
     *   where: {
     *     // ... filter to delete one ProgramRanking
     *   }
     * })
     * 
     */
    delete<T extends ProgramRankingDeleteArgs>(args: SelectSubset<T, ProgramRankingDeleteArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProgramRanking.
     * @param {ProgramRankingUpdateArgs} args - Arguments to update one ProgramRanking.
     * @example
     * // Update one ProgramRanking
     * const programRanking = await prisma.programRanking.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProgramRankingUpdateArgs>(args: SelectSubset<T, ProgramRankingUpdateArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProgramRankings.
     * @param {ProgramRankingDeleteManyArgs} args - Arguments to filter ProgramRankings to delete.
     * @example
     * // Delete a few ProgramRankings
     * const { count } = await prisma.programRanking.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProgramRankingDeleteManyArgs>(args?: SelectSubset<T, ProgramRankingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgramRankings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramRankingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProgramRankings
     * const programRanking = await prisma.programRanking.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProgramRankingUpdateManyArgs>(args: SelectSubset<T, ProgramRankingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProgramRankings and returns the data updated in the database.
     * @param {ProgramRankingUpdateManyAndReturnArgs} args - Arguments to update many ProgramRankings.
     * @example
     * // Update many ProgramRankings
     * const programRanking = await prisma.programRanking.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProgramRankings and only return the `id`
     * const programRankingWithIdOnly = await prisma.programRanking.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProgramRankingUpdateManyAndReturnArgs>(args: SelectSubset<T, ProgramRankingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProgramRanking.
     * @param {ProgramRankingUpsertArgs} args - Arguments to update or create a ProgramRanking.
     * @example
     * // Update or create a ProgramRanking
     * const programRanking = await prisma.programRanking.upsert({
     *   create: {
     *     // ... data to create a ProgramRanking
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProgramRanking we want to update
     *   }
     * })
     */
    upsert<T extends ProgramRankingUpsertArgs>(args: SelectSubset<T, ProgramRankingUpsertArgs<ExtArgs>>): Prisma__ProgramRankingClient<$Result.GetResult<Prisma.$ProgramRankingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProgramRankings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramRankingCountArgs} args - Arguments to filter ProgramRankings to count.
     * @example
     * // Count the number of ProgramRankings
     * const count = await prisma.programRanking.count({
     *   where: {
     *     // ... the filter for the ProgramRankings we want to count
     *   }
     * })
    **/
    count<T extends ProgramRankingCountArgs>(
      args?: Subset<T, ProgramRankingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProgramRankingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProgramRanking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramRankingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProgramRankingAggregateArgs>(args: Subset<T, ProgramRankingAggregateArgs>): Prisma.PrismaPromise<GetProgramRankingAggregateType<T>>

    /**
     * Group by ProgramRanking.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProgramRankingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProgramRankingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProgramRankingGroupByArgs['orderBy'] }
        : { orderBy?: ProgramRankingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProgramRankingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProgramRankingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProgramRanking model
   */
  readonly fields: ProgramRankingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProgramRanking.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProgramRankingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    program<T extends ProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramDefaultArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProgramRanking model
   */
  interface ProgramRankingFieldRefs {
    readonly id: FieldRef<"ProgramRanking", 'String'>
    readonly programId: FieldRef<"ProgramRanking", 'String'>
    readonly year: FieldRef<"ProgramRanking", 'Int'>
    readonly rank: FieldRef<"ProgramRanking", 'Int'>
    readonly source: FieldRef<"ProgramRanking", 'String'>
    readonly createdAt: FieldRef<"ProgramRanking", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProgramRanking findUnique
   */
  export type ProgramRankingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * Filter, which ProgramRanking to fetch.
     */
    where: ProgramRankingWhereUniqueInput
  }

  /**
   * ProgramRanking findUniqueOrThrow
   */
  export type ProgramRankingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * Filter, which ProgramRanking to fetch.
     */
    where: ProgramRankingWhereUniqueInput
  }

  /**
   * ProgramRanking findFirst
   */
  export type ProgramRankingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * Filter, which ProgramRanking to fetch.
     */
    where?: ProgramRankingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramRankings to fetch.
     */
    orderBy?: ProgramRankingOrderByWithRelationInput | ProgramRankingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgramRankings.
     */
    cursor?: ProgramRankingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramRankings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgramRankings.
     */
    distinct?: ProgramRankingScalarFieldEnum | ProgramRankingScalarFieldEnum[]
  }

  /**
   * ProgramRanking findFirstOrThrow
   */
  export type ProgramRankingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * Filter, which ProgramRanking to fetch.
     */
    where?: ProgramRankingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramRankings to fetch.
     */
    orderBy?: ProgramRankingOrderByWithRelationInput | ProgramRankingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProgramRankings.
     */
    cursor?: ProgramRankingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramRankings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProgramRankings.
     */
    distinct?: ProgramRankingScalarFieldEnum | ProgramRankingScalarFieldEnum[]
  }

  /**
   * ProgramRanking findMany
   */
  export type ProgramRankingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * Filter, which ProgramRankings to fetch.
     */
    where?: ProgramRankingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProgramRankings to fetch.
     */
    orderBy?: ProgramRankingOrderByWithRelationInput | ProgramRankingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProgramRankings.
     */
    cursor?: ProgramRankingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProgramRankings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProgramRankings.
     */
    skip?: number
    distinct?: ProgramRankingScalarFieldEnum | ProgramRankingScalarFieldEnum[]
  }

  /**
   * ProgramRanking create
   */
  export type ProgramRankingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * The data needed to create a ProgramRanking.
     */
    data: XOR<ProgramRankingCreateInput, ProgramRankingUncheckedCreateInput>
  }

  /**
   * ProgramRanking createMany
   */
  export type ProgramRankingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProgramRankings.
     */
    data: ProgramRankingCreateManyInput | ProgramRankingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProgramRanking createManyAndReturn
   */
  export type ProgramRankingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * The data used to create many ProgramRankings.
     */
    data: ProgramRankingCreateManyInput | ProgramRankingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProgramRanking update
   */
  export type ProgramRankingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * The data needed to update a ProgramRanking.
     */
    data: XOR<ProgramRankingUpdateInput, ProgramRankingUncheckedUpdateInput>
    /**
     * Choose, which ProgramRanking to update.
     */
    where: ProgramRankingWhereUniqueInput
  }

  /**
   * ProgramRanking updateMany
   */
  export type ProgramRankingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProgramRankings.
     */
    data: XOR<ProgramRankingUpdateManyMutationInput, ProgramRankingUncheckedUpdateManyInput>
    /**
     * Filter which ProgramRankings to update
     */
    where?: ProgramRankingWhereInput
    /**
     * Limit how many ProgramRankings to update.
     */
    limit?: number
  }

  /**
   * ProgramRanking updateManyAndReturn
   */
  export type ProgramRankingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * The data used to update ProgramRankings.
     */
    data: XOR<ProgramRankingUpdateManyMutationInput, ProgramRankingUncheckedUpdateManyInput>
    /**
     * Filter which ProgramRankings to update
     */
    where?: ProgramRankingWhereInput
    /**
     * Limit how many ProgramRankings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProgramRanking upsert
   */
  export type ProgramRankingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * The filter to search for the ProgramRanking to update in case it exists.
     */
    where: ProgramRankingWhereUniqueInput
    /**
     * In case the ProgramRanking found by the `where` argument doesn't exist, create a new ProgramRanking with this data.
     */
    create: XOR<ProgramRankingCreateInput, ProgramRankingUncheckedCreateInput>
    /**
     * In case the ProgramRanking was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProgramRankingUpdateInput, ProgramRankingUncheckedUpdateInput>
  }

  /**
   * ProgramRanking delete
   */
  export type ProgramRankingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
    /**
     * Filter which ProgramRanking to delete.
     */
    where: ProgramRankingWhereUniqueInput
  }

  /**
   * ProgramRanking deleteMany
   */
  export type ProgramRankingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProgramRankings to delete
     */
    where?: ProgramRankingWhereInput
    /**
     * Limit how many ProgramRankings to delete.
     */
    limit?: number
  }

  /**
   * ProgramRanking without action
   */
  export type ProgramRankingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProgramRanking
     */
    select?: ProgramRankingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProgramRanking
     */
    omit?: ProgramRankingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramRankingInclude<ExtArgs> | null
  }


  /**
   * Model ExternalLink
   */

  export type AggregateExternalLink = {
    _count: ExternalLinkCountAggregateOutputType | null
    _min: ExternalLinkMinAggregateOutputType | null
    _max: ExternalLinkMaxAggregateOutputType | null
  }

  export type ExternalLinkMinAggregateOutputType = {
    id: string | null
    programId: string | null
    title: string | null
    url: string | null
    createdAt: Date | null
  }

  export type ExternalLinkMaxAggregateOutputType = {
    id: string | null
    programId: string | null
    title: string | null
    url: string | null
    createdAt: Date | null
  }

  export type ExternalLinkCountAggregateOutputType = {
    id: number
    programId: number
    title: number
    url: number
    createdAt: number
    _all: number
  }


  export type ExternalLinkMinAggregateInputType = {
    id?: true
    programId?: true
    title?: true
    url?: true
    createdAt?: true
  }

  export type ExternalLinkMaxAggregateInputType = {
    id?: true
    programId?: true
    title?: true
    url?: true
    createdAt?: true
  }

  export type ExternalLinkCountAggregateInputType = {
    id?: true
    programId?: true
    title?: true
    url?: true
    createdAt?: true
    _all?: true
  }

  export type ExternalLinkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExternalLink to aggregate.
     */
    where?: ExternalLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalLinks to fetch.
     */
    orderBy?: ExternalLinkOrderByWithRelationInput | ExternalLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ExternalLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ExternalLinks
    **/
    _count?: true | ExternalLinkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ExternalLinkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ExternalLinkMaxAggregateInputType
  }

  export type GetExternalLinkAggregateType<T extends ExternalLinkAggregateArgs> = {
        [P in keyof T & keyof AggregateExternalLink]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateExternalLink[P]>
      : GetScalarType<T[P], AggregateExternalLink[P]>
  }




  export type ExternalLinkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ExternalLinkWhereInput
    orderBy?: ExternalLinkOrderByWithAggregationInput | ExternalLinkOrderByWithAggregationInput[]
    by: ExternalLinkScalarFieldEnum[] | ExternalLinkScalarFieldEnum
    having?: ExternalLinkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ExternalLinkCountAggregateInputType | true
    _min?: ExternalLinkMinAggregateInputType
    _max?: ExternalLinkMaxAggregateInputType
  }

  export type ExternalLinkGroupByOutputType = {
    id: string
    programId: string
    title: string
    url: string
    createdAt: Date
    _count: ExternalLinkCountAggregateOutputType | null
    _min: ExternalLinkMinAggregateOutputType | null
    _max: ExternalLinkMaxAggregateOutputType | null
  }

  type GetExternalLinkGroupByPayload<T extends ExternalLinkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ExternalLinkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ExternalLinkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ExternalLinkGroupByOutputType[P]>
            : GetScalarType<T[P], ExternalLinkGroupByOutputType[P]>
        }
      >
    >


  export type ExternalLinkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    title?: boolean
    url?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["externalLink"]>

  export type ExternalLinkSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    title?: boolean
    url?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["externalLink"]>

  export type ExternalLinkSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    programId?: boolean
    title?: boolean
    url?: boolean
    createdAt?: boolean
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["externalLink"]>

  export type ExternalLinkSelectScalar = {
    id?: boolean
    programId?: boolean
    title?: boolean
    url?: boolean
    createdAt?: boolean
  }

  export type ExternalLinkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "programId" | "title" | "url" | "createdAt", ExtArgs["result"]["externalLink"]>
  export type ExternalLinkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }
  export type ExternalLinkIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }
  export type ExternalLinkIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }

  export type $ExternalLinkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ExternalLink"
    objects: {
      program: Prisma.$ProgramPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      programId: string
      title: string
      url: string
      createdAt: Date
    }, ExtArgs["result"]["externalLink"]>
    composites: {}
  }

  type ExternalLinkGetPayload<S extends boolean | null | undefined | ExternalLinkDefaultArgs> = $Result.GetResult<Prisma.$ExternalLinkPayload, S>

  type ExternalLinkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ExternalLinkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ExternalLinkCountAggregateInputType | true
    }

  export interface ExternalLinkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ExternalLink'], meta: { name: 'ExternalLink' } }
    /**
     * Find zero or one ExternalLink that matches the filter.
     * @param {ExternalLinkFindUniqueArgs} args - Arguments to find a ExternalLink
     * @example
     * // Get one ExternalLink
     * const externalLink = await prisma.externalLink.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ExternalLinkFindUniqueArgs>(args: SelectSubset<T, ExternalLinkFindUniqueArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ExternalLink that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ExternalLinkFindUniqueOrThrowArgs} args - Arguments to find a ExternalLink
     * @example
     * // Get one ExternalLink
     * const externalLink = await prisma.externalLink.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ExternalLinkFindUniqueOrThrowArgs>(args: SelectSubset<T, ExternalLinkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ExternalLink that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalLinkFindFirstArgs} args - Arguments to find a ExternalLink
     * @example
     * // Get one ExternalLink
     * const externalLink = await prisma.externalLink.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ExternalLinkFindFirstArgs>(args?: SelectSubset<T, ExternalLinkFindFirstArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ExternalLink that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalLinkFindFirstOrThrowArgs} args - Arguments to find a ExternalLink
     * @example
     * // Get one ExternalLink
     * const externalLink = await prisma.externalLink.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ExternalLinkFindFirstOrThrowArgs>(args?: SelectSubset<T, ExternalLinkFindFirstOrThrowArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ExternalLinks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalLinkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ExternalLinks
     * const externalLinks = await prisma.externalLink.findMany()
     * 
     * // Get first 10 ExternalLinks
     * const externalLinks = await prisma.externalLink.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const externalLinkWithIdOnly = await prisma.externalLink.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ExternalLinkFindManyArgs>(args?: SelectSubset<T, ExternalLinkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ExternalLink.
     * @param {ExternalLinkCreateArgs} args - Arguments to create a ExternalLink.
     * @example
     * // Create one ExternalLink
     * const ExternalLink = await prisma.externalLink.create({
     *   data: {
     *     // ... data to create a ExternalLink
     *   }
     * })
     * 
     */
    create<T extends ExternalLinkCreateArgs>(args: SelectSubset<T, ExternalLinkCreateArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ExternalLinks.
     * @param {ExternalLinkCreateManyArgs} args - Arguments to create many ExternalLinks.
     * @example
     * // Create many ExternalLinks
     * const externalLink = await prisma.externalLink.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ExternalLinkCreateManyArgs>(args?: SelectSubset<T, ExternalLinkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ExternalLinks and returns the data saved in the database.
     * @param {ExternalLinkCreateManyAndReturnArgs} args - Arguments to create many ExternalLinks.
     * @example
     * // Create many ExternalLinks
     * const externalLink = await prisma.externalLink.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ExternalLinks and only return the `id`
     * const externalLinkWithIdOnly = await prisma.externalLink.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ExternalLinkCreateManyAndReturnArgs>(args?: SelectSubset<T, ExternalLinkCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ExternalLink.
     * @param {ExternalLinkDeleteArgs} args - Arguments to delete one ExternalLink.
     * @example
     * // Delete one ExternalLink
     * const ExternalLink = await prisma.externalLink.delete({
     *   where: {
     *     // ... filter to delete one ExternalLink
     *   }
     * })
     * 
     */
    delete<T extends ExternalLinkDeleteArgs>(args: SelectSubset<T, ExternalLinkDeleteArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ExternalLink.
     * @param {ExternalLinkUpdateArgs} args - Arguments to update one ExternalLink.
     * @example
     * // Update one ExternalLink
     * const externalLink = await prisma.externalLink.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ExternalLinkUpdateArgs>(args: SelectSubset<T, ExternalLinkUpdateArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ExternalLinks.
     * @param {ExternalLinkDeleteManyArgs} args - Arguments to filter ExternalLinks to delete.
     * @example
     * // Delete a few ExternalLinks
     * const { count } = await prisma.externalLink.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ExternalLinkDeleteManyArgs>(args?: SelectSubset<T, ExternalLinkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ExternalLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalLinkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ExternalLinks
     * const externalLink = await prisma.externalLink.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ExternalLinkUpdateManyArgs>(args: SelectSubset<T, ExternalLinkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ExternalLinks and returns the data updated in the database.
     * @param {ExternalLinkUpdateManyAndReturnArgs} args - Arguments to update many ExternalLinks.
     * @example
     * // Update many ExternalLinks
     * const externalLink = await prisma.externalLink.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ExternalLinks and only return the `id`
     * const externalLinkWithIdOnly = await prisma.externalLink.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ExternalLinkUpdateManyAndReturnArgs>(args: SelectSubset<T, ExternalLinkUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ExternalLink.
     * @param {ExternalLinkUpsertArgs} args - Arguments to update or create a ExternalLink.
     * @example
     * // Update or create a ExternalLink
     * const externalLink = await prisma.externalLink.upsert({
     *   create: {
     *     // ... data to create a ExternalLink
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ExternalLink we want to update
     *   }
     * })
     */
    upsert<T extends ExternalLinkUpsertArgs>(args: SelectSubset<T, ExternalLinkUpsertArgs<ExtArgs>>): Prisma__ExternalLinkClient<$Result.GetResult<Prisma.$ExternalLinkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ExternalLinks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalLinkCountArgs} args - Arguments to filter ExternalLinks to count.
     * @example
     * // Count the number of ExternalLinks
     * const count = await prisma.externalLink.count({
     *   where: {
     *     // ... the filter for the ExternalLinks we want to count
     *   }
     * })
    **/
    count<T extends ExternalLinkCountArgs>(
      args?: Subset<T, ExternalLinkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ExternalLinkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ExternalLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalLinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ExternalLinkAggregateArgs>(args: Subset<T, ExternalLinkAggregateArgs>): Prisma.PrismaPromise<GetExternalLinkAggregateType<T>>

    /**
     * Group by ExternalLink.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ExternalLinkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ExternalLinkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ExternalLinkGroupByArgs['orderBy'] }
        : { orderBy?: ExternalLinkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ExternalLinkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetExternalLinkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ExternalLink model
   */
  readonly fields: ExternalLinkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ExternalLink.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ExternalLinkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    program<T extends ProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramDefaultArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ExternalLink model
   */
  interface ExternalLinkFieldRefs {
    readonly id: FieldRef<"ExternalLink", 'String'>
    readonly programId: FieldRef<"ExternalLink", 'String'>
    readonly title: FieldRef<"ExternalLink", 'String'>
    readonly url: FieldRef<"ExternalLink", 'String'>
    readonly createdAt: FieldRef<"ExternalLink", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ExternalLink findUnique
   */
  export type ExternalLinkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * Filter, which ExternalLink to fetch.
     */
    where: ExternalLinkWhereUniqueInput
  }

  /**
   * ExternalLink findUniqueOrThrow
   */
  export type ExternalLinkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * Filter, which ExternalLink to fetch.
     */
    where: ExternalLinkWhereUniqueInput
  }

  /**
   * ExternalLink findFirst
   */
  export type ExternalLinkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * Filter, which ExternalLink to fetch.
     */
    where?: ExternalLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalLinks to fetch.
     */
    orderBy?: ExternalLinkOrderByWithRelationInput | ExternalLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExternalLinks.
     */
    cursor?: ExternalLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExternalLinks.
     */
    distinct?: ExternalLinkScalarFieldEnum | ExternalLinkScalarFieldEnum[]
  }

  /**
   * ExternalLink findFirstOrThrow
   */
  export type ExternalLinkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * Filter, which ExternalLink to fetch.
     */
    where?: ExternalLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalLinks to fetch.
     */
    orderBy?: ExternalLinkOrderByWithRelationInput | ExternalLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ExternalLinks.
     */
    cursor?: ExternalLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalLinks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ExternalLinks.
     */
    distinct?: ExternalLinkScalarFieldEnum | ExternalLinkScalarFieldEnum[]
  }

  /**
   * ExternalLink findMany
   */
  export type ExternalLinkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * Filter, which ExternalLinks to fetch.
     */
    where?: ExternalLinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ExternalLinks to fetch.
     */
    orderBy?: ExternalLinkOrderByWithRelationInput | ExternalLinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ExternalLinks.
     */
    cursor?: ExternalLinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ExternalLinks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ExternalLinks.
     */
    skip?: number
    distinct?: ExternalLinkScalarFieldEnum | ExternalLinkScalarFieldEnum[]
  }

  /**
   * ExternalLink create
   */
  export type ExternalLinkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * The data needed to create a ExternalLink.
     */
    data: XOR<ExternalLinkCreateInput, ExternalLinkUncheckedCreateInput>
  }

  /**
   * ExternalLink createMany
   */
  export type ExternalLinkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ExternalLinks.
     */
    data: ExternalLinkCreateManyInput | ExternalLinkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ExternalLink createManyAndReturn
   */
  export type ExternalLinkCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * The data used to create many ExternalLinks.
     */
    data: ExternalLinkCreateManyInput | ExternalLinkCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ExternalLink update
   */
  export type ExternalLinkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * The data needed to update a ExternalLink.
     */
    data: XOR<ExternalLinkUpdateInput, ExternalLinkUncheckedUpdateInput>
    /**
     * Choose, which ExternalLink to update.
     */
    where: ExternalLinkWhereUniqueInput
  }

  /**
   * ExternalLink updateMany
   */
  export type ExternalLinkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ExternalLinks.
     */
    data: XOR<ExternalLinkUpdateManyMutationInput, ExternalLinkUncheckedUpdateManyInput>
    /**
     * Filter which ExternalLinks to update
     */
    where?: ExternalLinkWhereInput
    /**
     * Limit how many ExternalLinks to update.
     */
    limit?: number
  }

  /**
   * ExternalLink updateManyAndReturn
   */
  export type ExternalLinkUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * The data used to update ExternalLinks.
     */
    data: XOR<ExternalLinkUpdateManyMutationInput, ExternalLinkUncheckedUpdateManyInput>
    /**
     * Filter which ExternalLinks to update
     */
    where?: ExternalLinkWhereInput
    /**
     * Limit how many ExternalLinks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ExternalLink upsert
   */
  export type ExternalLinkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * The filter to search for the ExternalLink to update in case it exists.
     */
    where: ExternalLinkWhereUniqueInput
    /**
     * In case the ExternalLink found by the `where` argument doesn't exist, create a new ExternalLink with this data.
     */
    create: XOR<ExternalLinkCreateInput, ExternalLinkUncheckedCreateInput>
    /**
     * In case the ExternalLink was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ExternalLinkUpdateInput, ExternalLinkUncheckedUpdateInput>
  }

  /**
   * ExternalLink delete
   */
  export type ExternalLinkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
    /**
     * Filter which ExternalLink to delete.
     */
    where: ExternalLinkWhereUniqueInput
  }

  /**
   * ExternalLink deleteMany
   */
  export type ExternalLinkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ExternalLinks to delete
     */
    where?: ExternalLinkWhereInput
    /**
     * Limit how many ExternalLinks to delete.
     */
    limit?: number
  }

  /**
   * ExternalLink without action
   */
  export type ExternalLinkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ExternalLink
     */
    select?: ExternalLinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ExternalLink
     */
    omit?: ExternalLinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ExternalLinkInclude<ExtArgs> | null
  }


  /**
   * Model Admission
   */

  export type AggregateAdmission = {
    _count: AdmissionCountAggregateOutputType | null
    _avg: AdmissionAvgAggregateOutputType | null
    _sum: AdmissionSumAggregateOutputType | null
    _min: AdmissionMinAggregateOutputType | null
    _max: AdmissionMaxAggregateOutputType | null
  }

  export type AdmissionAvgAggregateOutputType = {
    minimumGpa: number | null
    maximumGpa: number | null
    gmatMinScore: number | null
    gmatMaxScore: number | null
    gmatAverageScore: number | null
    greMinScore: number | null
    greMaxScore: number | null
    greAverageScore: number | null
    ieltsMinScore: number | null
    toeflMinScore: number | null
    pteMinScore: number | null
    duolingoMinScore: number | null
    minWorkExperience: number | null
    maxWorkExperience: number | null
    applicationFee: number | null
    acceptanceRate: number | null
    totalApplications: number | null
    totalAccepted: number | null
    statisticsYear: number | null
  }

  export type AdmissionSumAggregateOutputType = {
    minimumGpa: number | null
    maximumGpa: number | null
    gmatMinScore: number | null
    gmatMaxScore: number | null
    gmatAverageScore: number | null
    greMinScore: number | null
    greMaxScore: number | null
    greAverageScore: number | null
    ieltsMinScore: number | null
    toeflMinScore: number | null
    pteMinScore: number | null
    duolingoMinScore: number | null
    minWorkExperience: number | null
    maxWorkExperience: number | null
    applicationFee: number | null
    acceptanceRate: number | null
    totalApplications: number | null
    totalAccepted: number | null
    statisticsYear: number | null
  }

  export type AdmissionMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    minimumGpa: number | null
    maximumGpa: number | null
    gmatMinScore: number | null
    gmatMaxScore: number | null
    gmatAverageScore: number | null
    greMinScore: number | null
    greMaxScore: number | null
    greAverageScore: number | null
    ieltsMinScore: number | null
    toeflMinScore: number | null
    pteMinScore: number | null
    duolingoMinScore: number | null
    languageExemptions: string | null
    workExperienceRequired: boolean | null
    minWorkExperience: number | null
    maxWorkExperience: number | null
    preferredIndustries: string | null
    applicationFee: number | null
    currency: string | null
    documentsRequired: string | null
    additionalRequirements: string | null
    acceptanceRate: number | null
    totalApplications: number | null
    totalAccepted: number | null
    statisticsYear: number | null
    isActive: boolean | null
    admissionStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdmissionMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    minimumGpa: number | null
    maximumGpa: number | null
    gmatMinScore: number | null
    gmatMaxScore: number | null
    gmatAverageScore: number | null
    greMinScore: number | null
    greMaxScore: number | null
    greAverageScore: number | null
    ieltsMinScore: number | null
    toeflMinScore: number | null
    pteMinScore: number | null
    duolingoMinScore: number | null
    languageExemptions: string | null
    workExperienceRequired: boolean | null
    minWorkExperience: number | null
    maxWorkExperience: number | null
    preferredIndustries: string | null
    applicationFee: number | null
    currency: string | null
    documentsRequired: string | null
    additionalRequirements: string | null
    acceptanceRate: number | null
    totalApplications: number | null
    totalAccepted: number | null
    statisticsYear: number | null
    isActive: boolean | null
    admissionStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdmissionCountAggregateOutputType = {
    id: number
    universityId: number
    programId: number
    minimumGpa: number
    maximumGpa: number
    gmatMinScore: number
    gmatMaxScore: number
    gmatAverageScore: number
    greMinScore: number
    greMaxScore: number
    greAverageScore: number
    ieltsMinScore: number
    toeflMinScore: number
    pteMinScore: number
    duolingoMinScore: number
    languageExemptions: number
    workExperienceRequired: number
    minWorkExperience: number
    maxWorkExperience: number
    preferredIndustries: number
    applicationFee: number
    currency: number
    documentsRequired: number
    additionalRequirements: number
    acceptanceRate: number
    totalApplications: number
    totalAccepted: number
    statisticsYear: number
    isActive: number
    admissionStatus: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AdmissionAvgAggregateInputType = {
    minimumGpa?: true
    maximumGpa?: true
    gmatMinScore?: true
    gmatMaxScore?: true
    gmatAverageScore?: true
    greMinScore?: true
    greMaxScore?: true
    greAverageScore?: true
    ieltsMinScore?: true
    toeflMinScore?: true
    pteMinScore?: true
    duolingoMinScore?: true
    minWorkExperience?: true
    maxWorkExperience?: true
    applicationFee?: true
    acceptanceRate?: true
    totalApplications?: true
    totalAccepted?: true
    statisticsYear?: true
  }

  export type AdmissionSumAggregateInputType = {
    minimumGpa?: true
    maximumGpa?: true
    gmatMinScore?: true
    gmatMaxScore?: true
    gmatAverageScore?: true
    greMinScore?: true
    greMaxScore?: true
    greAverageScore?: true
    ieltsMinScore?: true
    toeflMinScore?: true
    pteMinScore?: true
    duolingoMinScore?: true
    minWorkExperience?: true
    maxWorkExperience?: true
    applicationFee?: true
    acceptanceRate?: true
    totalApplications?: true
    totalAccepted?: true
    statisticsYear?: true
  }

  export type AdmissionMinAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    minimumGpa?: true
    maximumGpa?: true
    gmatMinScore?: true
    gmatMaxScore?: true
    gmatAverageScore?: true
    greMinScore?: true
    greMaxScore?: true
    greAverageScore?: true
    ieltsMinScore?: true
    toeflMinScore?: true
    pteMinScore?: true
    duolingoMinScore?: true
    languageExemptions?: true
    workExperienceRequired?: true
    minWorkExperience?: true
    maxWorkExperience?: true
    preferredIndustries?: true
    applicationFee?: true
    currency?: true
    documentsRequired?: true
    additionalRequirements?: true
    acceptanceRate?: true
    totalApplications?: true
    totalAccepted?: true
    statisticsYear?: true
    isActive?: true
    admissionStatus?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdmissionMaxAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    minimumGpa?: true
    maximumGpa?: true
    gmatMinScore?: true
    gmatMaxScore?: true
    gmatAverageScore?: true
    greMinScore?: true
    greMaxScore?: true
    greAverageScore?: true
    ieltsMinScore?: true
    toeflMinScore?: true
    pteMinScore?: true
    duolingoMinScore?: true
    languageExemptions?: true
    workExperienceRequired?: true
    minWorkExperience?: true
    maxWorkExperience?: true
    preferredIndustries?: true
    applicationFee?: true
    currency?: true
    documentsRequired?: true
    additionalRequirements?: true
    acceptanceRate?: true
    totalApplications?: true
    totalAccepted?: true
    statisticsYear?: true
    isActive?: true
    admissionStatus?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdmissionCountAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    minimumGpa?: true
    maximumGpa?: true
    gmatMinScore?: true
    gmatMaxScore?: true
    gmatAverageScore?: true
    greMinScore?: true
    greMaxScore?: true
    greAverageScore?: true
    ieltsMinScore?: true
    toeflMinScore?: true
    pteMinScore?: true
    duolingoMinScore?: true
    languageExemptions?: true
    workExperienceRequired?: true
    minWorkExperience?: true
    maxWorkExperience?: true
    preferredIndustries?: true
    applicationFee?: true
    currency?: true
    documentsRequired?: true
    additionalRequirements?: true
    acceptanceRate?: true
    totalApplications?: true
    totalAccepted?: true
    statisticsYear?: true
    isActive?: true
    admissionStatus?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AdmissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admission to aggregate.
     */
    where?: AdmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admissions to fetch.
     */
    orderBy?: AdmissionOrderByWithRelationInput | AdmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admissions
    **/
    _count?: true | AdmissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdmissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdmissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdmissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdmissionMaxAggregateInputType
  }

  export type GetAdmissionAggregateType<T extends AdmissionAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmission[P]>
      : GetScalarType<T[P], AggregateAdmission[P]>
  }




  export type AdmissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdmissionWhereInput
    orderBy?: AdmissionOrderByWithAggregationInput | AdmissionOrderByWithAggregationInput[]
    by: AdmissionScalarFieldEnum[] | AdmissionScalarFieldEnum
    having?: AdmissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdmissionCountAggregateInputType | true
    _avg?: AdmissionAvgAggregateInputType
    _sum?: AdmissionSumAggregateInputType
    _min?: AdmissionMinAggregateInputType
    _max?: AdmissionMaxAggregateInputType
  }

  export type AdmissionGroupByOutputType = {
    id: string
    universityId: string
    programId: string
    minimumGpa: number | null
    maximumGpa: number | null
    gmatMinScore: number | null
    gmatMaxScore: number | null
    gmatAverageScore: number | null
    greMinScore: number | null
    greMaxScore: number | null
    greAverageScore: number | null
    ieltsMinScore: number | null
    toeflMinScore: number | null
    pteMinScore: number | null
    duolingoMinScore: number | null
    languageExemptions: string | null
    workExperienceRequired: boolean
    minWorkExperience: number | null
    maxWorkExperience: number | null
    preferredIndustries: string | null
    applicationFee: number | null
    currency: string
    documentsRequired: string | null
    additionalRequirements: string | null
    acceptanceRate: number | null
    totalApplications: number | null
    totalAccepted: number | null
    statisticsYear: number | null
    isActive: boolean
    admissionStatus: string
    createdAt: Date
    updatedAt: Date
    _count: AdmissionCountAggregateOutputType | null
    _avg: AdmissionAvgAggregateOutputType | null
    _sum: AdmissionSumAggregateOutputType | null
    _min: AdmissionMinAggregateOutputType | null
    _max: AdmissionMaxAggregateOutputType | null
  }

  type GetAdmissionGroupByPayload<T extends AdmissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdmissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdmissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdmissionGroupByOutputType[P]>
            : GetScalarType<T[P], AdmissionGroupByOutputType[P]>
        }
      >
    >


  export type AdmissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    minimumGpa?: boolean
    maximumGpa?: boolean
    gmatMinScore?: boolean
    gmatMaxScore?: boolean
    gmatAverageScore?: boolean
    greMinScore?: boolean
    greMaxScore?: boolean
    greAverageScore?: boolean
    ieltsMinScore?: boolean
    toeflMinScore?: boolean
    pteMinScore?: boolean
    duolingoMinScore?: boolean
    languageExemptions?: boolean
    workExperienceRequired?: boolean
    minWorkExperience?: boolean
    maxWorkExperience?: boolean
    preferredIndustries?: boolean
    applicationFee?: boolean
    currency?: boolean
    documentsRequired?: boolean
    additionalRequirements?: boolean
    acceptanceRate?: boolean
    totalApplications?: boolean
    totalAccepted?: boolean
    statisticsYear?: boolean
    isActive?: boolean
    admissionStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intakes?: boolean | Admission$intakesArgs<ExtArgs>
    deadlines?: boolean | Admission$deadlinesArgs<ExtArgs>
    applications?: boolean | Admission$applicationsArgs<ExtArgs>
    essayPrompts?: boolean | Admission$essayPromptsArgs<ExtArgs>
    calendarEvents?: boolean | Admission$calendarEventsArgs<ExtArgs>
    _count?: boolean | AdmissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admission"]>

  export type AdmissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    minimumGpa?: boolean
    maximumGpa?: boolean
    gmatMinScore?: boolean
    gmatMaxScore?: boolean
    gmatAverageScore?: boolean
    greMinScore?: boolean
    greMaxScore?: boolean
    greAverageScore?: boolean
    ieltsMinScore?: boolean
    toeflMinScore?: boolean
    pteMinScore?: boolean
    duolingoMinScore?: boolean
    languageExemptions?: boolean
    workExperienceRequired?: boolean
    minWorkExperience?: boolean
    maxWorkExperience?: boolean
    preferredIndustries?: boolean
    applicationFee?: boolean
    currency?: boolean
    documentsRequired?: boolean
    additionalRequirements?: boolean
    acceptanceRate?: boolean
    totalApplications?: boolean
    totalAccepted?: boolean
    statisticsYear?: boolean
    isActive?: boolean
    admissionStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admission"]>

  export type AdmissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    minimumGpa?: boolean
    maximumGpa?: boolean
    gmatMinScore?: boolean
    gmatMaxScore?: boolean
    gmatAverageScore?: boolean
    greMinScore?: boolean
    greMaxScore?: boolean
    greAverageScore?: boolean
    ieltsMinScore?: boolean
    toeflMinScore?: boolean
    pteMinScore?: boolean
    duolingoMinScore?: boolean
    languageExemptions?: boolean
    workExperienceRequired?: boolean
    minWorkExperience?: boolean
    maxWorkExperience?: boolean
    preferredIndustries?: boolean
    applicationFee?: boolean
    currency?: boolean
    documentsRequired?: boolean
    additionalRequirements?: boolean
    acceptanceRate?: boolean
    totalApplications?: boolean
    totalAccepted?: boolean
    statisticsYear?: boolean
    isActive?: boolean
    admissionStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admission"]>

  export type AdmissionSelectScalar = {
    id?: boolean
    universityId?: boolean
    programId?: boolean
    minimumGpa?: boolean
    maximumGpa?: boolean
    gmatMinScore?: boolean
    gmatMaxScore?: boolean
    gmatAverageScore?: boolean
    greMinScore?: boolean
    greMaxScore?: boolean
    greAverageScore?: boolean
    ieltsMinScore?: boolean
    toeflMinScore?: boolean
    pteMinScore?: boolean
    duolingoMinScore?: boolean
    languageExemptions?: boolean
    workExperienceRequired?: boolean
    minWorkExperience?: boolean
    maxWorkExperience?: boolean
    preferredIndustries?: boolean
    applicationFee?: boolean
    currency?: boolean
    documentsRequired?: boolean
    additionalRequirements?: boolean
    acceptanceRate?: boolean
    totalApplications?: boolean
    totalAccepted?: boolean
    statisticsYear?: boolean
    isActive?: boolean
    admissionStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AdmissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "programId" | "minimumGpa" | "maximumGpa" | "gmatMinScore" | "gmatMaxScore" | "gmatAverageScore" | "greMinScore" | "greMaxScore" | "greAverageScore" | "ieltsMinScore" | "toeflMinScore" | "pteMinScore" | "duolingoMinScore" | "languageExemptions" | "workExperienceRequired" | "minWorkExperience" | "maxWorkExperience" | "preferredIndustries" | "applicationFee" | "currency" | "documentsRequired" | "additionalRequirements" | "acceptanceRate" | "totalApplications" | "totalAccepted" | "statisticsYear" | "isActive" | "admissionStatus" | "createdAt" | "updatedAt", ExtArgs["result"]["admission"]>
  export type AdmissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intakes?: boolean | Admission$intakesArgs<ExtArgs>
    deadlines?: boolean | Admission$deadlinesArgs<ExtArgs>
    applications?: boolean | Admission$applicationsArgs<ExtArgs>
    essayPrompts?: boolean | Admission$essayPromptsArgs<ExtArgs>
    calendarEvents?: boolean | Admission$calendarEventsArgs<ExtArgs>
    _count?: boolean | AdmissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AdmissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }
  export type AdmissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
  }

  export type $AdmissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admission"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
      program: Prisma.$ProgramPayload<ExtArgs>
      intakes: Prisma.$IntakePayload<ExtArgs>[]
      deadlines: Prisma.$AdmissionDeadlinePayload<ExtArgs>[]
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
      essayPrompts: Prisma.$EssayPromptPayload<ExtArgs>[]
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      programId: string
      minimumGpa: number | null
      maximumGpa: number | null
      gmatMinScore: number | null
      gmatMaxScore: number | null
      gmatAverageScore: number | null
      greMinScore: number | null
      greMaxScore: number | null
      greAverageScore: number | null
      ieltsMinScore: number | null
      toeflMinScore: number | null
      pteMinScore: number | null
      duolingoMinScore: number | null
      languageExemptions: string | null
      workExperienceRequired: boolean
      minWorkExperience: number | null
      maxWorkExperience: number | null
      preferredIndustries: string | null
      applicationFee: number | null
      currency: string
      documentsRequired: string | null
      additionalRequirements: string | null
      acceptanceRate: number | null
      totalApplications: number | null
      totalAccepted: number | null
      statisticsYear: number | null
      isActive: boolean
      admissionStatus: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["admission"]>
    composites: {}
  }

  type AdmissionGetPayload<S extends boolean | null | undefined | AdmissionDefaultArgs> = $Result.GetResult<Prisma.$AdmissionPayload, S>

  type AdmissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdmissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdmissionCountAggregateInputType | true
    }

  export interface AdmissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admission'], meta: { name: 'Admission' } }
    /**
     * Find zero or one Admission that matches the filter.
     * @param {AdmissionFindUniqueArgs} args - Arguments to find a Admission
     * @example
     * // Get one Admission
     * const admission = await prisma.admission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdmissionFindUniqueArgs>(args: SelectSubset<T, AdmissionFindUniqueArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdmissionFindUniqueOrThrowArgs} args - Arguments to find a Admission
     * @example
     * // Get one Admission
     * const admission = await prisma.admission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdmissionFindUniqueOrThrowArgs>(args: SelectSubset<T, AdmissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionFindFirstArgs} args - Arguments to find a Admission
     * @example
     * // Get one Admission
     * const admission = await prisma.admission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdmissionFindFirstArgs>(args?: SelectSubset<T, AdmissionFindFirstArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionFindFirstOrThrowArgs} args - Arguments to find a Admission
     * @example
     * // Get one Admission
     * const admission = await prisma.admission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdmissionFindFirstOrThrowArgs>(args?: SelectSubset<T, AdmissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admissions
     * const admissions = await prisma.admission.findMany()
     * 
     * // Get first 10 Admissions
     * const admissions = await prisma.admission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const admissionWithIdOnly = await prisma.admission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdmissionFindManyArgs>(args?: SelectSubset<T, AdmissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admission.
     * @param {AdmissionCreateArgs} args - Arguments to create a Admission.
     * @example
     * // Create one Admission
     * const Admission = await prisma.admission.create({
     *   data: {
     *     // ... data to create a Admission
     *   }
     * })
     * 
     */
    create<T extends AdmissionCreateArgs>(args: SelectSubset<T, AdmissionCreateArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admissions.
     * @param {AdmissionCreateManyArgs} args - Arguments to create many Admissions.
     * @example
     * // Create many Admissions
     * const admission = await prisma.admission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdmissionCreateManyArgs>(args?: SelectSubset<T, AdmissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admissions and returns the data saved in the database.
     * @param {AdmissionCreateManyAndReturnArgs} args - Arguments to create many Admissions.
     * @example
     * // Create many Admissions
     * const admission = await prisma.admission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admissions and only return the `id`
     * const admissionWithIdOnly = await prisma.admission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdmissionCreateManyAndReturnArgs>(args?: SelectSubset<T, AdmissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admission.
     * @param {AdmissionDeleteArgs} args - Arguments to delete one Admission.
     * @example
     * // Delete one Admission
     * const Admission = await prisma.admission.delete({
     *   where: {
     *     // ... filter to delete one Admission
     *   }
     * })
     * 
     */
    delete<T extends AdmissionDeleteArgs>(args: SelectSubset<T, AdmissionDeleteArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admission.
     * @param {AdmissionUpdateArgs} args - Arguments to update one Admission.
     * @example
     * // Update one Admission
     * const admission = await prisma.admission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdmissionUpdateArgs>(args: SelectSubset<T, AdmissionUpdateArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admissions.
     * @param {AdmissionDeleteManyArgs} args - Arguments to filter Admissions to delete.
     * @example
     * // Delete a few Admissions
     * const { count } = await prisma.admission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdmissionDeleteManyArgs>(args?: SelectSubset<T, AdmissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admissions
     * const admission = await prisma.admission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdmissionUpdateManyArgs>(args: SelectSubset<T, AdmissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admissions and returns the data updated in the database.
     * @param {AdmissionUpdateManyAndReturnArgs} args - Arguments to update many Admissions.
     * @example
     * // Update many Admissions
     * const admission = await prisma.admission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admissions and only return the `id`
     * const admissionWithIdOnly = await prisma.admission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdmissionUpdateManyAndReturnArgs>(args: SelectSubset<T, AdmissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admission.
     * @param {AdmissionUpsertArgs} args - Arguments to update or create a Admission.
     * @example
     * // Update or create a Admission
     * const admission = await prisma.admission.upsert({
     *   create: {
     *     // ... data to create a Admission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admission we want to update
     *   }
     * })
     */
    upsert<T extends AdmissionUpsertArgs>(args: SelectSubset<T, AdmissionUpsertArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionCountArgs} args - Arguments to filter Admissions to count.
     * @example
     * // Count the number of Admissions
     * const count = await prisma.admission.count({
     *   where: {
     *     // ... the filter for the Admissions we want to count
     *   }
     * })
    **/
    count<T extends AdmissionCountArgs>(
      args?: Subset<T, AdmissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdmissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdmissionAggregateArgs>(args: Subset<T, AdmissionAggregateArgs>): Prisma.PrismaPromise<GetAdmissionAggregateType<T>>

    /**
     * Group by Admission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdmissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdmissionGroupByArgs['orderBy'] }
        : { orderBy?: AdmissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdmissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdmissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admission model
   */
  readonly fields: AdmissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdmissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    program<T extends ProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramDefaultArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    intakes<T extends Admission$intakesArgs<ExtArgs> = {}>(args?: Subset<T, Admission$intakesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deadlines<T extends Admission$deadlinesArgs<ExtArgs> = {}>(args?: Subset<T, Admission$deadlinesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applications<T extends Admission$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, Admission$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essayPrompts<T extends Admission$essayPromptsArgs<ExtArgs> = {}>(args?: Subset<T, Admission$essayPromptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calendarEvents<T extends Admission$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, Admission$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admission model
   */
  interface AdmissionFieldRefs {
    readonly id: FieldRef<"Admission", 'String'>
    readonly universityId: FieldRef<"Admission", 'String'>
    readonly programId: FieldRef<"Admission", 'String'>
    readonly minimumGpa: FieldRef<"Admission", 'Float'>
    readonly maximumGpa: FieldRef<"Admission", 'Float'>
    readonly gmatMinScore: FieldRef<"Admission", 'Int'>
    readonly gmatMaxScore: FieldRef<"Admission", 'Int'>
    readonly gmatAverageScore: FieldRef<"Admission", 'Int'>
    readonly greMinScore: FieldRef<"Admission", 'Int'>
    readonly greMaxScore: FieldRef<"Admission", 'Int'>
    readonly greAverageScore: FieldRef<"Admission", 'Int'>
    readonly ieltsMinScore: FieldRef<"Admission", 'Float'>
    readonly toeflMinScore: FieldRef<"Admission", 'Int'>
    readonly pteMinScore: FieldRef<"Admission", 'Int'>
    readonly duolingoMinScore: FieldRef<"Admission", 'Int'>
    readonly languageExemptions: FieldRef<"Admission", 'String'>
    readonly workExperienceRequired: FieldRef<"Admission", 'Boolean'>
    readonly minWorkExperience: FieldRef<"Admission", 'Int'>
    readonly maxWorkExperience: FieldRef<"Admission", 'Int'>
    readonly preferredIndustries: FieldRef<"Admission", 'String'>
    readonly applicationFee: FieldRef<"Admission", 'Float'>
    readonly currency: FieldRef<"Admission", 'String'>
    readonly documentsRequired: FieldRef<"Admission", 'String'>
    readonly additionalRequirements: FieldRef<"Admission", 'String'>
    readonly acceptanceRate: FieldRef<"Admission", 'Float'>
    readonly totalApplications: FieldRef<"Admission", 'Int'>
    readonly totalAccepted: FieldRef<"Admission", 'Int'>
    readonly statisticsYear: FieldRef<"Admission", 'Int'>
    readonly isActive: FieldRef<"Admission", 'Boolean'>
    readonly admissionStatus: FieldRef<"Admission", 'String'>
    readonly createdAt: FieldRef<"Admission", 'DateTime'>
    readonly updatedAt: FieldRef<"Admission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Admission findUnique
   */
  export type AdmissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * Filter, which Admission to fetch.
     */
    where: AdmissionWhereUniqueInput
  }

  /**
   * Admission findUniqueOrThrow
   */
  export type AdmissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * Filter, which Admission to fetch.
     */
    where: AdmissionWhereUniqueInput
  }

  /**
   * Admission findFirst
   */
  export type AdmissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * Filter, which Admission to fetch.
     */
    where?: AdmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admissions to fetch.
     */
    orderBy?: AdmissionOrderByWithRelationInput | AdmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admissions.
     */
    cursor?: AdmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admissions.
     */
    distinct?: AdmissionScalarFieldEnum | AdmissionScalarFieldEnum[]
  }

  /**
   * Admission findFirstOrThrow
   */
  export type AdmissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * Filter, which Admission to fetch.
     */
    where?: AdmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admissions to fetch.
     */
    orderBy?: AdmissionOrderByWithRelationInput | AdmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admissions.
     */
    cursor?: AdmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admissions.
     */
    distinct?: AdmissionScalarFieldEnum | AdmissionScalarFieldEnum[]
  }

  /**
   * Admission findMany
   */
  export type AdmissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * Filter, which Admissions to fetch.
     */
    where?: AdmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admissions to fetch.
     */
    orderBy?: AdmissionOrderByWithRelationInput | AdmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admissions.
     */
    cursor?: AdmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admissions.
     */
    skip?: number
    distinct?: AdmissionScalarFieldEnum | AdmissionScalarFieldEnum[]
  }

  /**
   * Admission create
   */
  export type AdmissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Admission.
     */
    data: XOR<AdmissionCreateInput, AdmissionUncheckedCreateInput>
  }

  /**
   * Admission createMany
   */
  export type AdmissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admissions.
     */
    data: AdmissionCreateManyInput | AdmissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admission createManyAndReturn
   */
  export type AdmissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * The data used to create many Admissions.
     */
    data: AdmissionCreateManyInput | AdmissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Admission update
   */
  export type AdmissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Admission.
     */
    data: XOR<AdmissionUpdateInput, AdmissionUncheckedUpdateInput>
    /**
     * Choose, which Admission to update.
     */
    where: AdmissionWhereUniqueInput
  }

  /**
   * Admission updateMany
   */
  export type AdmissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admissions.
     */
    data: XOR<AdmissionUpdateManyMutationInput, AdmissionUncheckedUpdateManyInput>
    /**
     * Filter which Admissions to update
     */
    where?: AdmissionWhereInput
    /**
     * Limit how many Admissions to update.
     */
    limit?: number
  }

  /**
   * Admission updateManyAndReturn
   */
  export type AdmissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * The data used to update Admissions.
     */
    data: XOR<AdmissionUpdateManyMutationInput, AdmissionUncheckedUpdateManyInput>
    /**
     * Filter which Admissions to update
     */
    where?: AdmissionWhereInput
    /**
     * Limit how many Admissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Admission upsert
   */
  export type AdmissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Admission to update in case it exists.
     */
    where: AdmissionWhereUniqueInput
    /**
     * In case the Admission found by the `where` argument doesn't exist, create a new Admission with this data.
     */
    create: XOR<AdmissionCreateInput, AdmissionUncheckedCreateInput>
    /**
     * In case the Admission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdmissionUpdateInput, AdmissionUncheckedUpdateInput>
  }

  /**
   * Admission delete
   */
  export type AdmissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    /**
     * Filter which Admission to delete.
     */
    where: AdmissionWhereUniqueInput
  }

  /**
   * Admission deleteMany
   */
  export type AdmissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admissions to delete
     */
    where?: AdmissionWhereInput
    /**
     * Limit how many Admissions to delete.
     */
    limit?: number
  }

  /**
   * Admission.intakes
   */
  export type Admission$intakesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    where?: IntakeWhereInput
    orderBy?: IntakeOrderByWithRelationInput | IntakeOrderByWithRelationInput[]
    cursor?: IntakeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IntakeScalarFieldEnum | IntakeScalarFieldEnum[]
  }

  /**
   * Admission.deadlines
   */
  export type Admission$deadlinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    where?: AdmissionDeadlineWhereInput
    orderBy?: AdmissionDeadlineOrderByWithRelationInput | AdmissionDeadlineOrderByWithRelationInput[]
    cursor?: AdmissionDeadlineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdmissionDeadlineScalarFieldEnum | AdmissionDeadlineScalarFieldEnum[]
  }

  /**
   * Admission.applications
   */
  export type Admission$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Admission.essayPrompts
   */
  export type Admission$essayPromptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    where?: EssayPromptWhereInput
    orderBy?: EssayPromptOrderByWithRelationInput | EssayPromptOrderByWithRelationInput[]
    cursor?: EssayPromptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayPromptScalarFieldEnum | EssayPromptScalarFieldEnum[]
  }

  /**
   * Admission.calendarEvents
   */
  export type Admission$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * Admission without action
   */
  export type AdmissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
  }


  /**
   * Model Intake
   */

  export type AggregateIntake = {
    _count: IntakeCountAggregateOutputType | null
    _avg: IntakeAvgAggregateOutputType | null
    _sum: IntakeSumAggregateOutputType | null
    _min: IntakeMinAggregateOutputType | null
    _max: IntakeMaxAggregateOutputType | null
  }

  export type IntakeAvgAggregateOutputType = {
    intakeYear: number | null
    intakeMonth: number | null
    totalSeats: number | null
    availableSeats: number | null
    internationalSeats: number | null
    domesticSeats: number | null
  }

  export type IntakeSumAggregateOutputType = {
    intakeYear: number | null
    intakeMonth: number | null
    totalSeats: number | null
    availableSeats: number | null
    internationalSeats: number | null
    domesticSeats: number | null
  }

  export type IntakeMinAggregateOutputType = {
    id: string | null
    admissionId: string | null
    intakeName: string | null
    intakeType: string | null
    intakeYear: number | null
    intakeMonth: number | null
    totalSeats: number | null
    availableSeats: number | null
    internationalSeats: number | null
    domesticSeats: number | null
    startDate: Date | null
    endDate: Date | null
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    isActive: boolean | null
    intakeStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IntakeMaxAggregateOutputType = {
    id: string | null
    admissionId: string | null
    intakeName: string | null
    intakeType: string | null
    intakeYear: number | null
    intakeMonth: number | null
    totalSeats: number | null
    availableSeats: number | null
    internationalSeats: number | null
    domesticSeats: number | null
    startDate: Date | null
    endDate: Date | null
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    isActive: boolean | null
    intakeStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IntakeCountAggregateOutputType = {
    id: number
    admissionId: number
    intakeName: number
    intakeType: number
    intakeYear: number
    intakeMonth: number
    totalSeats: number
    availableSeats: number
    internationalSeats: number
    domesticSeats: number
    startDate: number
    endDate: number
    applicationOpenDate: number
    applicationCloseDate: number
    isActive: number
    intakeStatus: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type IntakeAvgAggregateInputType = {
    intakeYear?: true
    intakeMonth?: true
    totalSeats?: true
    availableSeats?: true
    internationalSeats?: true
    domesticSeats?: true
  }

  export type IntakeSumAggregateInputType = {
    intakeYear?: true
    intakeMonth?: true
    totalSeats?: true
    availableSeats?: true
    internationalSeats?: true
    domesticSeats?: true
  }

  export type IntakeMinAggregateInputType = {
    id?: true
    admissionId?: true
    intakeName?: true
    intakeType?: true
    intakeYear?: true
    intakeMonth?: true
    totalSeats?: true
    availableSeats?: true
    internationalSeats?: true
    domesticSeats?: true
    startDate?: true
    endDate?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    isActive?: true
    intakeStatus?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IntakeMaxAggregateInputType = {
    id?: true
    admissionId?: true
    intakeName?: true
    intakeType?: true
    intakeYear?: true
    intakeMonth?: true
    totalSeats?: true
    availableSeats?: true
    internationalSeats?: true
    domesticSeats?: true
    startDate?: true
    endDate?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    isActive?: true
    intakeStatus?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IntakeCountAggregateInputType = {
    id?: true
    admissionId?: true
    intakeName?: true
    intakeType?: true
    intakeYear?: true
    intakeMonth?: true
    totalSeats?: true
    availableSeats?: true
    internationalSeats?: true
    domesticSeats?: true
    startDate?: true
    endDate?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    isActive?: true
    intakeStatus?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type IntakeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Intake to aggregate.
     */
    where?: IntakeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Intakes to fetch.
     */
    orderBy?: IntakeOrderByWithRelationInput | IntakeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IntakeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Intakes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Intakes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Intakes
    **/
    _count?: true | IntakeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IntakeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IntakeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IntakeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IntakeMaxAggregateInputType
  }

  export type GetIntakeAggregateType<T extends IntakeAggregateArgs> = {
        [P in keyof T & keyof AggregateIntake]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIntake[P]>
      : GetScalarType<T[P], AggregateIntake[P]>
  }




  export type IntakeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IntakeWhereInput
    orderBy?: IntakeOrderByWithAggregationInput | IntakeOrderByWithAggregationInput[]
    by: IntakeScalarFieldEnum[] | IntakeScalarFieldEnum
    having?: IntakeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IntakeCountAggregateInputType | true
    _avg?: IntakeAvgAggregateInputType
    _sum?: IntakeSumAggregateInputType
    _min?: IntakeMinAggregateInputType
    _max?: IntakeMaxAggregateInputType
  }

  export type IntakeGroupByOutputType = {
    id: string
    admissionId: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats: number | null
    availableSeats: number | null
    internationalSeats: number | null
    domesticSeats: number | null
    startDate: Date | null
    endDate: Date | null
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    isActive: boolean
    intakeStatus: string
    createdAt: Date
    updatedAt: Date
    _count: IntakeCountAggregateOutputType | null
    _avg: IntakeAvgAggregateOutputType | null
    _sum: IntakeSumAggregateOutputType | null
    _min: IntakeMinAggregateOutputType | null
    _max: IntakeMaxAggregateOutputType | null
  }

  type GetIntakeGroupByPayload<T extends IntakeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IntakeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IntakeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IntakeGroupByOutputType[P]>
            : GetScalarType<T[P], IntakeGroupByOutputType[P]>
        }
      >
    >


  export type IntakeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    intakeName?: boolean
    intakeType?: boolean
    intakeYear?: boolean
    intakeMonth?: boolean
    totalSeats?: boolean
    availableSeats?: boolean
    internationalSeats?: boolean
    domesticSeats?: boolean
    startDate?: boolean
    endDate?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    isActive?: boolean
    intakeStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    deadlines?: boolean | Intake$deadlinesArgs<ExtArgs>
    applications?: boolean | Intake$applicationsArgs<ExtArgs>
    essayPrompts?: boolean | Intake$essayPromptsArgs<ExtArgs>
    calendarEvents?: boolean | Intake$calendarEventsArgs<ExtArgs>
    _count?: boolean | IntakeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["intake"]>

  export type IntakeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    intakeName?: boolean
    intakeType?: boolean
    intakeYear?: boolean
    intakeMonth?: boolean
    totalSeats?: boolean
    availableSeats?: boolean
    internationalSeats?: boolean
    domesticSeats?: boolean
    startDate?: boolean
    endDate?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    isActive?: boolean
    intakeStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["intake"]>

  export type IntakeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    intakeName?: boolean
    intakeType?: boolean
    intakeYear?: boolean
    intakeMonth?: boolean
    totalSeats?: boolean
    availableSeats?: boolean
    internationalSeats?: boolean
    domesticSeats?: boolean
    startDate?: boolean
    endDate?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    isActive?: boolean
    intakeStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["intake"]>

  export type IntakeSelectScalar = {
    id?: boolean
    admissionId?: boolean
    intakeName?: boolean
    intakeType?: boolean
    intakeYear?: boolean
    intakeMonth?: boolean
    totalSeats?: boolean
    availableSeats?: boolean
    internationalSeats?: boolean
    domesticSeats?: boolean
    startDate?: boolean
    endDate?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    isActive?: boolean
    intakeStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type IntakeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "admissionId" | "intakeName" | "intakeType" | "intakeYear" | "intakeMonth" | "totalSeats" | "availableSeats" | "internationalSeats" | "domesticSeats" | "startDate" | "endDate" | "applicationOpenDate" | "applicationCloseDate" | "isActive" | "intakeStatus" | "createdAt" | "updatedAt", ExtArgs["result"]["intake"]>
  export type IntakeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    deadlines?: boolean | Intake$deadlinesArgs<ExtArgs>
    applications?: boolean | Intake$applicationsArgs<ExtArgs>
    essayPrompts?: boolean | Intake$essayPromptsArgs<ExtArgs>
    calendarEvents?: boolean | Intake$calendarEventsArgs<ExtArgs>
    _count?: boolean | IntakeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type IntakeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
  }
  export type IntakeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
  }

  export type $IntakePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Intake"
    objects: {
      admission: Prisma.$AdmissionPayload<ExtArgs>
      deadlines: Prisma.$AdmissionDeadlinePayload<ExtArgs>[]
      applications: Prisma.$ApplicationPayload<ExtArgs>[]
      essayPrompts: Prisma.$EssayPromptPayload<ExtArgs>[]
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      admissionId: string
      intakeName: string
      intakeType: string
      intakeYear: number
      intakeMonth: number
      totalSeats: number | null
      availableSeats: number | null
      internationalSeats: number | null
      domesticSeats: number | null
      startDate: Date | null
      endDate: Date | null
      applicationOpenDate: Date | null
      applicationCloseDate: Date | null
      isActive: boolean
      intakeStatus: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["intake"]>
    composites: {}
  }

  type IntakeGetPayload<S extends boolean | null | undefined | IntakeDefaultArgs> = $Result.GetResult<Prisma.$IntakePayload, S>

  type IntakeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<IntakeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IntakeCountAggregateInputType | true
    }

  export interface IntakeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Intake'], meta: { name: 'Intake' } }
    /**
     * Find zero or one Intake that matches the filter.
     * @param {IntakeFindUniqueArgs} args - Arguments to find a Intake
     * @example
     * // Get one Intake
     * const intake = await prisma.intake.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IntakeFindUniqueArgs>(args: SelectSubset<T, IntakeFindUniqueArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Intake that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {IntakeFindUniqueOrThrowArgs} args - Arguments to find a Intake
     * @example
     * // Get one Intake
     * const intake = await prisma.intake.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IntakeFindUniqueOrThrowArgs>(args: SelectSubset<T, IntakeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Intake that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IntakeFindFirstArgs} args - Arguments to find a Intake
     * @example
     * // Get one Intake
     * const intake = await prisma.intake.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IntakeFindFirstArgs>(args?: SelectSubset<T, IntakeFindFirstArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Intake that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IntakeFindFirstOrThrowArgs} args - Arguments to find a Intake
     * @example
     * // Get one Intake
     * const intake = await prisma.intake.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IntakeFindFirstOrThrowArgs>(args?: SelectSubset<T, IntakeFindFirstOrThrowArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Intakes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IntakeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Intakes
     * const intakes = await prisma.intake.findMany()
     * 
     * // Get first 10 Intakes
     * const intakes = await prisma.intake.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const intakeWithIdOnly = await prisma.intake.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IntakeFindManyArgs>(args?: SelectSubset<T, IntakeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Intake.
     * @param {IntakeCreateArgs} args - Arguments to create a Intake.
     * @example
     * // Create one Intake
     * const Intake = await prisma.intake.create({
     *   data: {
     *     // ... data to create a Intake
     *   }
     * })
     * 
     */
    create<T extends IntakeCreateArgs>(args: SelectSubset<T, IntakeCreateArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Intakes.
     * @param {IntakeCreateManyArgs} args - Arguments to create many Intakes.
     * @example
     * // Create many Intakes
     * const intake = await prisma.intake.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IntakeCreateManyArgs>(args?: SelectSubset<T, IntakeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Intakes and returns the data saved in the database.
     * @param {IntakeCreateManyAndReturnArgs} args - Arguments to create many Intakes.
     * @example
     * // Create many Intakes
     * const intake = await prisma.intake.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Intakes and only return the `id`
     * const intakeWithIdOnly = await prisma.intake.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IntakeCreateManyAndReturnArgs>(args?: SelectSubset<T, IntakeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Intake.
     * @param {IntakeDeleteArgs} args - Arguments to delete one Intake.
     * @example
     * // Delete one Intake
     * const Intake = await prisma.intake.delete({
     *   where: {
     *     // ... filter to delete one Intake
     *   }
     * })
     * 
     */
    delete<T extends IntakeDeleteArgs>(args: SelectSubset<T, IntakeDeleteArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Intake.
     * @param {IntakeUpdateArgs} args - Arguments to update one Intake.
     * @example
     * // Update one Intake
     * const intake = await prisma.intake.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IntakeUpdateArgs>(args: SelectSubset<T, IntakeUpdateArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Intakes.
     * @param {IntakeDeleteManyArgs} args - Arguments to filter Intakes to delete.
     * @example
     * // Delete a few Intakes
     * const { count } = await prisma.intake.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IntakeDeleteManyArgs>(args?: SelectSubset<T, IntakeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Intakes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IntakeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Intakes
     * const intake = await prisma.intake.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IntakeUpdateManyArgs>(args: SelectSubset<T, IntakeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Intakes and returns the data updated in the database.
     * @param {IntakeUpdateManyAndReturnArgs} args - Arguments to update many Intakes.
     * @example
     * // Update many Intakes
     * const intake = await prisma.intake.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Intakes and only return the `id`
     * const intakeWithIdOnly = await prisma.intake.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends IntakeUpdateManyAndReturnArgs>(args: SelectSubset<T, IntakeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Intake.
     * @param {IntakeUpsertArgs} args - Arguments to update or create a Intake.
     * @example
     * // Update or create a Intake
     * const intake = await prisma.intake.upsert({
     *   create: {
     *     // ... data to create a Intake
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Intake we want to update
     *   }
     * })
     */
    upsert<T extends IntakeUpsertArgs>(args: SelectSubset<T, IntakeUpsertArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Intakes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IntakeCountArgs} args - Arguments to filter Intakes to count.
     * @example
     * // Count the number of Intakes
     * const count = await prisma.intake.count({
     *   where: {
     *     // ... the filter for the Intakes we want to count
     *   }
     * })
    **/
    count<T extends IntakeCountArgs>(
      args?: Subset<T, IntakeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IntakeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Intake.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IntakeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IntakeAggregateArgs>(args: Subset<T, IntakeAggregateArgs>): Prisma.PrismaPromise<GetIntakeAggregateType<T>>

    /**
     * Group by Intake.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IntakeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IntakeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IntakeGroupByArgs['orderBy'] }
        : { orderBy?: IntakeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IntakeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIntakeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Intake model
   */
  readonly fields: IntakeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Intake.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IntakeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admission<T extends AdmissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AdmissionDefaultArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    deadlines<T extends Intake$deadlinesArgs<ExtArgs> = {}>(args?: Subset<T, Intake$deadlinesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applications<T extends Intake$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, Intake$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essayPrompts<T extends Intake$essayPromptsArgs<ExtArgs> = {}>(args?: Subset<T, Intake$essayPromptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calendarEvents<T extends Intake$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, Intake$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Intake model
   */
  interface IntakeFieldRefs {
    readonly id: FieldRef<"Intake", 'String'>
    readonly admissionId: FieldRef<"Intake", 'String'>
    readonly intakeName: FieldRef<"Intake", 'String'>
    readonly intakeType: FieldRef<"Intake", 'String'>
    readonly intakeYear: FieldRef<"Intake", 'Int'>
    readonly intakeMonth: FieldRef<"Intake", 'Int'>
    readonly totalSeats: FieldRef<"Intake", 'Int'>
    readonly availableSeats: FieldRef<"Intake", 'Int'>
    readonly internationalSeats: FieldRef<"Intake", 'Int'>
    readonly domesticSeats: FieldRef<"Intake", 'Int'>
    readonly startDate: FieldRef<"Intake", 'DateTime'>
    readonly endDate: FieldRef<"Intake", 'DateTime'>
    readonly applicationOpenDate: FieldRef<"Intake", 'DateTime'>
    readonly applicationCloseDate: FieldRef<"Intake", 'DateTime'>
    readonly isActive: FieldRef<"Intake", 'Boolean'>
    readonly intakeStatus: FieldRef<"Intake", 'String'>
    readonly createdAt: FieldRef<"Intake", 'DateTime'>
    readonly updatedAt: FieldRef<"Intake", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Intake findUnique
   */
  export type IntakeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * Filter, which Intake to fetch.
     */
    where: IntakeWhereUniqueInput
  }

  /**
   * Intake findUniqueOrThrow
   */
  export type IntakeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * Filter, which Intake to fetch.
     */
    where: IntakeWhereUniqueInput
  }

  /**
   * Intake findFirst
   */
  export type IntakeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * Filter, which Intake to fetch.
     */
    where?: IntakeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Intakes to fetch.
     */
    orderBy?: IntakeOrderByWithRelationInput | IntakeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Intakes.
     */
    cursor?: IntakeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Intakes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Intakes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Intakes.
     */
    distinct?: IntakeScalarFieldEnum | IntakeScalarFieldEnum[]
  }

  /**
   * Intake findFirstOrThrow
   */
  export type IntakeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * Filter, which Intake to fetch.
     */
    where?: IntakeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Intakes to fetch.
     */
    orderBy?: IntakeOrderByWithRelationInput | IntakeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Intakes.
     */
    cursor?: IntakeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Intakes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Intakes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Intakes.
     */
    distinct?: IntakeScalarFieldEnum | IntakeScalarFieldEnum[]
  }

  /**
   * Intake findMany
   */
  export type IntakeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * Filter, which Intakes to fetch.
     */
    where?: IntakeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Intakes to fetch.
     */
    orderBy?: IntakeOrderByWithRelationInput | IntakeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Intakes.
     */
    cursor?: IntakeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Intakes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Intakes.
     */
    skip?: number
    distinct?: IntakeScalarFieldEnum | IntakeScalarFieldEnum[]
  }

  /**
   * Intake create
   */
  export type IntakeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * The data needed to create a Intake.
     */
    data: XOR<IntakeCreateInput, IntakeUncheckedCreateInput>
  }

  /**
   * Intake createMany
   */
  export type IntakeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Intakes.
     */
    data: IntakeCreateManyInput | IntakeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Intake createManyAndReturn
   */
  export type IntakeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * The data used to create many Intakes.
     */
    data: IntakeCreateManyInput | IntakeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Intake update
   */
  export type IntakeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * The data needed to update a Intake.
     */
    data: XOR<IntakeUpdateInput, IntakeUncheckedUpdateInput>
    /**
     * Choose, which Intake to update.
     */
    where: IntakeWhereUniqueInput
  }

  /**
   * Intake updateMany
   */
  export type IntakeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Intakes.
     */
    data: XOR<IntakeUpdateManyMutationInput, IntakeUncheckedUpdateManyInput>
    /**
     * Filter which Intakes to update
     */
    where?: IntakeWhereInput
    /**
     * Limit how many Intakes to update.
     */
    limit?: number
  }

  /**
   * Intake updateManyAndReturn
   */
  export type IntakeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * The data used to update Intakes.
     */
    data: XOR<IntakeUpdateManyMutationInput, IntakeUncheckedUpdateManyInput>
    /**
     * Filter which Intakes to update
     */
    where?: IntakeWhereInput
    /**
     * Limit how many Intakes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Intake upsert
   */
  export type IntakeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * The filter to search for the Intake to update in case it exists.
     */
    where: IntakeWhereUniqueInput
    /**
     * In case the Intake found by the `where` argument doesn't exist, create a new Intake with this data.
     */
    create: XOR<IntakeCreateInput, IntakeUncheckedCreateInput>
    /**
     * In case the Intake was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IntakeUpdateInput, IntakeUncheckedUpdateInput>
  }

  /**
   * Intake delete
   */
  export type IntakeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    /**
     * Filter which Intake to delete.
     */
    where: IntakeWhereUniqueInput
  }

  /**
   * Intake deleteMany
   */
  export type IntakeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Intakes to delete
     */
    where?: IntakeWhereInput
    /**
     * Limit how many Intakes to delete.
     */
    limit?: number
  }

  /**
   * Intake.deadlines
   */
  export type Intake$deadlinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    where?: AdmissionDeadlineWhereInput
    orderBy?: AdmissionDeadlineOrderByWithRelationInput | AdmissionDeadlineOrderByWithRelationInput[]
    cursor?: AdmissionDeadlineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdmissionDeadlineScalarFieldEnum | AdmissionDeadlineScalarFieldEnum[]
  }

  /**
   * Intake.applications
   */
  export type Intake$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    cursor?: ApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Intake.essayPrompts
   */
  export type Intake$essayPromptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    where?: EssayPromptWhereInput
    orderBy?: EssayPromptOrderByWithRelationInput | EssayPromptOrderByWithRelationInput[]
    cursor?: EssayPromptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayPromptScalarFieldEnum | EssayPromptScalarFieldEnum[]
  }

  /**
   * Intake.calendarEvents
   */
  export type Intake$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * Intake without action
   */
  export type IntakeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
  }


  /**
   * Model AdmissionDeadline
   */

  export type AggregateAdmissionDeadline = {
    _count: AdmissionDeadlineCountAggregateOutputType | null
    _min: AdmissionDeadlineMinAggregateOutputType | null
    _max: AdmissionDeadlineMaxAggregateOutputType | null
  }

  export type AdmissionDeadlineMinAggregateOutputType = {
    id: string | null
    admissionId: string | null
    intakeId: string | null
    deadlineType: string | null
    deadlineDate: Date | null
    deadlineTime: string | null
    timezone: string | null
    title: string | null
    description: string | null
    isExtended: boolean | null
    originalDeadline: Date | null
    priority: string | null
    isActive: boolean | null
    reminderSent: boolean | null
    reminderDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdmissionDeadlineMaxAggregateOutputType = {
    id: string | null
    admissionId: string | null
    intakeId: string | null
    deadlineType: string | null
    deadlineDate: Date | null
    deadlineTime: string | null
    timezone: string | null
    title: string | null
    description: string | null
    isExtended: boolean | null
    originalDeadline: Date | null
    priority: string | null
    isActive: boolean | null
    reminderSent: boolean | null
    reminderDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdmissionDeadlineCountAggregateOutputType = {
    id: number
    admissionId: number
    intakeId: number
    deadlineType: number
    deadlineDate: number
    deadlineTime: number
    timezone: number
    title: number
    description: number
    isExtended: number
    originalDeadline: number
    priority: number
    isActive: number
    reminderSent: number
    reminderDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AdmissionDeadlineMinAggregateInputType = {
    id?: true
    admissionId?: true
    intakeId?: true
    deadlineType?: true
    deadlineDate?: true
    deadlineTime?: true
    timezone?: true
    title?: true
    description?: true
    isExtended?: true
    originalDeadline?: true
    priority?: true
    isActive?: true
    reminderSent?: true
    reminderDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdmissionDeadlineMaxAggregateInputType = {
    id?: true
    admissionId?: true
    intakeId?: true
    deadlineType?: true
    deadlineDate?: true
    deadlineTime?: true
    timezone?: true
    title?: true
    description?: true
    isExtended?: true
    originalDeadline?: true
    priority?: true
    isActive?: true
    reminderSent?: true
    reminderDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdmissionDeadlineCountAggregateInputType = {
    id?: true
    admissionId?: true
    intakeId?: true
    deadlineType?: true
    deadlineDate?: true
    deadlineTime?: true
    timezone?: true
    title?: true
    description?: true
    isExtended?: true
    originalDeadline?: true
    priority?: true
    isActive?: true
    reminderSent?: true
    reminderDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AdmissionDeadlineAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdmissionDeadline to aggregate.
     */
    where?: AdmissionDeadlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdmissionDeadlines to fetch.
     */
    orderBy?: AdmissionDeadlineOrderByWithRelationInput | AdmissionDeadlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdmissionDeadlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdmissionDeadlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdmissionDeadlines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AdmissionDeadlines
    **/
    _count?: true | AdmissionDeadlineCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdmissionDeadlineMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdmissionDeadlineMaxAggregateInputType
  }

  export type GetAdmissionDeadlineAggregateType<T extends AdmissionDeadlineAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmissionDeadline]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmissionDeadline[P]>
      : GetScalarType<T[P], AggregateAdmissionDeadline[P]>
  }




  export type AdmissionDeadlineGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdmissionDeadlineWhereInput
    orderBy?: AdmissionDeadlineOrderByWithAggregationInput | AdmissionDeadlineOrderByWithAggregationInput[]
    by: AdmissionDeadlineScalarFieldEnum[] | AdmissionDeadlineScalarFieldEnum
    having?: AdmissionDeadlineScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdmissionDeadlineCountAggregateInputType | true
    _min?: AdmissionDeadlineMinAggregateInputType
    _max?: AdmissionDeadlineMaxAggregateInputType
  }

  export type AdmissionDeadlineGroupByOutputType = {
    id: string
    admissionId: string
    intakeId: string | null
    deadlineType: string
    deadlineDate: Date
    deadlineTime: string | null
    timezone: string
    title: string
    description: string | null
    isExtended: boolean
    originalDeadline: Date | null
    priority: string
    isActive: boolean
    reminderSent: boolean
    reminderDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: AdmissionDeadlineCountAggregateOutputType | null
    _min: AdmissionDeadlineMinAggregateOutputType | null
    _max: AdmissionDeadlineMaxAggregateOutputType | null
  }

  type GetAdmissionDeadlineGroupByPayload<T extends AdmissionDeadlineGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdmissionDeadlineGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdmissionDeadlineGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdmissionDeadlineGroupByOutputType[P]>
            : GetScalarType<T[P], AdmissionDeadlineGroupByOutputType[P]>
        }
      >
    >


  export type AdmissionDeadlineSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    intakeId?: boolean
    deadlineType?: boolean
    deadlineDate?: boolean
    deadlineTime?: boolean
    timezone?: boolean
    title?: boolean
    description?: boolean
    isExtended?: boolean
    originalDeadline?: boolean
    priority?: boolean
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    intake?: boolean | AdmissionDeadline$intakeArgs<ExtArgs>
    calendarEvents?: boolean | AdmissionDeadline$calendarEventsArgs<ExtArgs>
    _count?: boolean | AdmissionDeadlineCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admissionDeadline"]>

  export type AdmissionDeadlineSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    intakeId?: boolean
    deadlineType?: boolean
    deadlineDate?: boolean
    deadlineTime?: boolean
    timezone?: boolean
    title?: boolean
    description?: boolean
    isExtended?: boolean
    originalDeadline?: boolean
    priority?: boolean
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    intake?: boolean | AdmissionDeadline$intakeArgs<ExtArgs>
  }, ExtArgs["result"]["admissionDeadline"]>

  export type AdmissionDeadlineSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    intakeId?: boolean
    deadlineType?: boolean
    deadlineDate?: boolean
    deadlineTime?: boolean
    timezone?: boolean
    title?: boolean
    description?: boolean
    isExtended?: boolean
    originalDeadline?: boolean
    priority?: boolean
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    intake?: boolean | AdmissionDeadline$intakeArgs<ExtArgs>
  }, ExtArgs["result"]["admissionDeadline"]>

  export type AdmissionDeadlineSelectScalar = {
    id?: boolean
    admissionId?: boolean
    intakeId?: boolean
    deadlineType?: boolean
    deadlineDate?: boolean
    deadlineTime?: boolean
    timezone?: boolean
    title?: boolean
    description?: boolean
    isExtended?: boolean
    originalDeadline?: boolean
    priority?: boolean
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AdmissionDeadlineOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "admissionId" | "intakeId" | "deadlineType" | "deadlineDate" | "deadlineTime" | "timezone" | "title" | "description" | "isExtended" | "originalDeadline" | "priority" | "isActive" | "reminderSent" | "reminderDate" | "createdAt" | "updatedAt", ExtArgs["result"]["admissionDeadline"]>
  export type AdmissionDeadlineInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    intake?: boolean | AdmissionDeadline$intakeArgs<ExtArgs>
    calendarEvents?: boolean | AdmissionDeadline$calendarEventsArgs<ExtArgs>
    _count?: boolean | AdmissionDeadlineCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AdmissionDeadlineIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    intake?: boolean | AdmissionDeadline$intakeArgs<ExtArgs>
  }
  export type AdmissionDeadlineIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    intake?: boolean | AdmissionDeadline$intakeArgs<ExtArgs>
  }

  export type $AdmissionDeadlinePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AdmissionDeadline"
    objects: {
      admission: Prisma.$AdmissionPayload<ExtArgs>
      intake: Prisma.$IntakePayload<ExtArgs> | null
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      admissionId: string
      intakeId: string | null
      deadlineType: string
      deadlineDate: Date
      deadlineTime: string | null
      timezone: string
      title: string
      description: string | null
      isExtended: boolean
      originalDeadline: Date | null
      priority: string
      isActive: boolean
      reminderSent: boolean
      reminderDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["admissionDeadline"]>
    composites: {}
  }

  type AdmissionDeadlineGetPayload<S extends boolean | null | undefined | AdmissionDeadlineDefaultArgs> = $Result.GetResult<Prisma.$AdmissionDeadlinePayload, S>

  type AdmissionDeadlineCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdmissionDeadlineFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdmissionDeadlineCountAggregateInputType | true
    }

  export interface AdmissionDeadlineDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AdmissionDeadline'], meta: { name: 'AdmissionDeadline' } }
    /**
     * Find zero or one AdmissionDeadline that matches the filter.
     * @param {AdmissionDeadlineFindUniqueArgs} args - Arguments to find a AdmissionDeadline
     * @example
     * // Get one AdmissionDeadline
     * const admissionDeadline = await prisma.admissionDeadline.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdmissionDeadlineFindUniqueArgs>(args: SelectSubset<T, AdmissionDeadlineFindUniqueArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AdmissionDeadline that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdmissionDeadlineFindUniqueOrThrowArgs} args - Arguments to find a AdmissionDeadline
     * @example
     * // Get one AdmissionDeadline
     * const admissionDeadline = await prisma.admissionDeadline.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdmissionDeadlineFindUniqueOrThrowArgs>(args: SelectSubset<T, AdmissionDeadlineFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdmissionDeadline that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionDeadlineFindFirstArgs} args - Arguments to find a AdmissionDeadline
     * @example
     * // Get one AdmissionDeadline
     * const admissionDeadline = await prisma.admissionDeadline.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdmissionDeadlineFindFirstArgs>(args?: SelectSubset<T, AdmissionDeadlineFindFirstArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AdmissionDeadline that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionDeadlineFindFirstOrThrowArgs} args - Arguments to find a AdmissionDeadline
     * @example
     * // Get one AdmissionDeadline
     * const admissionDeadline = await prisma.admissionDeadline.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdmissionDeadlineFindFirstOrThrowArgs>(args?: SelectSubset<T, AdmissionDeadlineFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AdmissionDeadlines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionDeadlineFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AdmissionDeadlines
     * const admissionDeadlines = await prisma.admissionDeadline.findMany()
     * 
     * // Get first 10 AdmissionDeadlines
     * const admissionDeadlines = await prisma.admissionDeadline.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const admissionDeadlineWithIdOnly = await prisma.admissionDeadline.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdmissionDeadlineFindManyArgs>(args?: SelectSubset<T, AdmissionDeadlineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AdmissionDeadline.
     * @param {AdmissionDeadlineCreateArgs} args - Arguments to create a AdmissionDeadline.
     * @example
     * // Create one AdmissionDeadline
     * const AdmissionDeadline = await prisma.admissionDeadline.create({
     *   data: {
     *     // ... data to create a AdmissionDeadline
     *   }
     * })
     * 
     */
    create<T extends AdmissionDeadlineCreateArgs>(args: SelectSubset<T, AdmissionDeadlineCreateArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AdmissionDeadlines.
     * @param {AdmissionDeadlineCreateManyArgs} args - Arguments to create many AdmissionDeadlines.
     * @example
     * // Create many AdmissionDeadlines
     * const admissionDeadline = await prisma.admissionDeadline.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdmissionDeadlineCreateManyArgs>(args?: SelectSubset<T, AdmissionDeadlineCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AdmissionDeadlines and returns the data saved in the database.
     * @param {AdmissionDeadlineCreateManyAndReturnArgs} args - Arguments to create many AdmissionDeadlines.
     * @example
     * // Create many AdmissionDeadlines
     * const admissionDeadline = await prisma.admissionDeadline.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AdmissionDeadlines and only return the `id`
     * const admissionDeadlineWithIdOnly = await prisma.admissionDeadline.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdmissionDeadlineCreateManyAndReturnArgs>(args?: SelectSubset<T, AdmissionDeadlineCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AdmissionDeadline.
     * @param {AdmissionDeadlineDeleteArgs} args - Arguments to delete one AdmissionDeadline.
     * @example
     * // Delete one AdmissionDeadline
     * const AdmissionDeadline = await prisma.admissionDeadline.delete({
     *   where: {
     *     // ... filter to delete one AdmissionDeadline
     *   }
     * })
     * 
     */
    delete<T extends AdmissionDeadlineDeleteArgs>(args: SelectSubset<T, AdmissionDeadlineDeleteArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AdmissionDeadline.
     * @param {AdmissionDeadlineUpdateArgs} args - Arguments to update one AdmissionDeadline.
     * @example
     * // Update one AdmissionDeadline
     * const admissionDeadline = await prisma.admissionDeadline.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdmissionDeadlineUpdateArgs>(args: SelectSubset<T, AdmissionDeadlineUpdateArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AdmissionDeadlines.
     * @param {AdmissionDeadlineDeleteManyArgs} args - Arguments to filter AdmissionDeadlines to delete.
     * @example
     * // Delete a few AdmissionDeadlines
     * const { count } = await prisma.admissionDeadline.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdmissionDeadlineDeleteManyArgs>(args?: SelectSubset<T, AdmissionDeadlineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdmissionDeadlines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionDeadlineUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AdmissionDeadlines
     * const admissionDeadline = await prisma.admissionDeadline.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdmissionDeadlineUpdateManyArgs>(args: SelectSubset<T, AdmissionDeadlineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AdmissionDeadlines and returns the data updated in the database.
     * @param {AdmissionDeadlineUpdateManyAndReturnArgs} args - Arguments to update many AdmissionDeadlines.
     * @example
     * // Update many AdmissionDeadlines
     * const admissionDeadline = await prisma.admissionDeadline.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AdmissionDeadlines and only return the `id`
     * const admissionDeadlineWithIdOnly = await prisma.admissionDeadline.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdmissionDeadlineUpdateManyAndReturnArgs>(args: SelectSubset<T, AdmissionDeadlineUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AdmissionDeadline.
     * @param {AdmissionDeadlineUpsertArgs} args - Arguments to update or create a AdmissionDeadline.
     * @example
     * // Update or create a AdmissionDeadline
     * const admissionDeadline = await prisma.admissionDeadline.upsert({
     *   create: {
     *     // ... data to create a AdmissionDeadline
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AdmissionDeadline we want to update
     *   }
     * })
     */
    upsert<T extends AdmissionDeadlineUpsertArgs>(args: SelectSubset<T, AdmissionDeadlineUpsertArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AdmissionDeadlines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionDeadlineCountArgs} args - Arguments to filter AdmissionDeadlines to count.
     * @example
     * // Count the number of AdmissionDeadlines
     * const count = await prisma.admissionDeadline.count({
     *   where: {
     *     // ... the filter for the AdmissionDeadlines we want to count
     *   }
     * })
    **/
    count<T extends AdmissionDeadlineCountArgs>(
      args?: Subset<T, AdmissionDeadlineCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdmissionDeadlineCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AdmissionDeadline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionDeadlineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdmissionDeadlineAggregateArgs>(args: Subset<T, AdmissionDeadlineAggregateArgs>): Prisma.PrismaPromise<GetAdmissionDeadlineAggregateType<T>>

    /**
     * Group by AdmissionDeadline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdmissionDeadlineGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdmissionDeadlineGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdmissionDeadlineGroupByArgs['orderBy'] }
        : { orderBy?: AdmissionDeadlineGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdmissionDeadlineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdmissionDeadlineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AdmissionDeadline model
   */
  readonly fields: AdmissionDeadlineFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AdmissionDeadline.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdmissionDeadlineClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admission<T extends AdmissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AdmissionDefaultArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    intake<T extends AdmissionDeadline$intakeArgs<ExtArgs> = {}>(args?: Subset<T, AdmissionDeadline$intakeArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    calendarEvents<T extends AdmissionDeadline$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, AdmissionDeadline$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AdmissionDeadline model
   */
  interface AdmissionDeadlineFieldRefs {
    readonly id: FieldRef<"AdmissionDeadline", 'String'>
    readonly admissionId: FieldRef<"AdmissionDeadline", 'String'>
    readonly intakeId: FieldRef<"AdmissionDeadline", 'String'>
    readonly deadlineType: FieldRef<"AdmissionDeadline", 'String'>
    readonly deadlineDate: FieldRef<"AdmissionDeadline", 'DateTime'>
    readonly deadlineTime: FieldRef<"AdmissionDeadline", 'String'>
    readonly timezone: FieldRef<"AdmissionDeadline", 'String'>
    readonly title: FieldRef<"AdmissionDeadline", 'String'>
    readonly description: FieldRef<"AdmissionDeadline", 'String'>
    readonly isExtended: FieldRef<"AdmissionDeadline", 'Boolean'>
    readonly originalDeadline: FieldRef<"AdmissionDeadline", 'DateTime'>
    readonly priority: FieldRef<"AdmissionDeadline", 'String'>
    readonly isActive: FieldRef<"AdmissionDeadline", 'Boolean'>
    readonly reminderSent: FieldRef<"AdmissionDeadline", 'Boolean'>
    readonly reminderDate: FieldRef<"AdmissionDeadline", 'DateTime'>
    readonly createdAt: FieldRef<"AdmissionDeadline", 'DateTime'>
    readonly updatedAt: FieldRef<"AdmissionDeadline", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AdmissionDeadline findUnique
   */
  export type AdmissionDeadlineFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * Filter, which AdmissionDeadline to fetch.
     */
    where: AdmissionDeadlineWhereUniqueInput
  }

  /**
   * AdmissionDeadline findUniqueOrThrow
   */
  export type AdmissionDeadlineFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * Filter, which AdmissionDeadline to fetch.
     */
    where: AdmissionDeadlineWhereUniqueInput
  }

  /**
   * AdmissionDeadline findFirst
   */
  export type AdmissionDeadlineFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * Filter, which AdmissionDeadline to fetch.
     */
    where?: AdmissionDeadlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdmissionDeadlines to fetch.
     */
    orderBy?: AdmissionDeadlineOrderByWithRelationInput | AdmissionDeadlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdmissionDeadlines.
     */
    cursor?: AdmissionDeadlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdmissionDeadlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdmissionDeadlines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdmissionDeadlines.
     */
    distinct?: AdmissionDeadlineScalarFieldEnum | AdmissionDeadlineScalarFieldEnum[]
  }

  /**
   * AdmissionDeadline findFirstOrThrow
   */
  export type AdmissionDeadlineFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * Filter, which AdmissionDeadline to fetch.
     */
    where?: AdmissionDeadlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdmissionDeadlines to fetch.
     */
    orderBy?: AdmissionDeadlineOrderByWithRelationInput | AdmissionDeadlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AdmissionDeadlines.
     */
    cursor?: AdmissionDeadlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdmissionDeadlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdmissionDeadlines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AdmissionDeadlines.
     */
    distinct?: AdmissionDeadlineScalarFieldEnum | AdmissionDeadlineScalarFieldEnum[]
  }

  /**
   * AdmissionDeadline findMany
   */
  export type AdmissionDeadlineFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * Filter, which AdmissionDeadlines to fetch.
     */
    where?: AdmissionDeadlineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AdmissionDeadlines to fetch.
     */
    orderBy?: AdmissionDeadlineOrderByWithRelationInput | AdmissionDeadlineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AdmissionDeadlines.
     */
    cursor?: AdmissionDeadlineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AdmissionDeadlines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AdmissionDeadlines.
     */
    skip?: number
    distinct?: AdmissionDeadlineScalarFieldEnum | AdmissionDeadlineScalarFieldEnum[]
  }

  /**
   * AdmissionDeadline create
   */
  export type AdmissionDeadlineCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * The data needed to create a AdmissionDeadline.
     */
    data: XOR<AdmissionDeadlineCreateInput, AdmissionDeadlineUncheckedCreateInput>
  }

  /**
   * AdmissionDeadline createMany
   */
  export type AdmissionDeadlineCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AdmissionDeadlines.
     */
    data: AdmissionDeadlineCreateManyInput | AdmissionDeadlineCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AdmissionDeadline createManyAndReturn
   */
  export type AdmissionDeadlineCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * The data used to create many AdmissionDeadlines.
     */
    data: AdmissionDeadlineCreateManyInput | AdmissionDeadlineCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdmissionDeadline update
   */
  export type AdmissionDeadlineUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * The data needed to update a AdmissionDeadline.
     */
    data: XOR<AdmissionDeadlineUpdateInput, AdmissionDeadlineUncheckedUpdateInput>
    /**
     * Choose, which AdmissionDeadline to update.
     */
    where: AdmissionDeadlineWhereUniqueInput
  }

  /**
   * AdmissionDeadline updateMany
   */
  export type AdmissionDeadlineUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AdmissionDeadlines.
     */
    data: XOR<AdmissionDeadlineUpdateManyMutationInput, AdmissionDeadlineUncheckedUpdateManyInput>
    /**
     * Filter which AdmissionDeadlines to update
     */
    where?: AdmissionDeadlineWhereInput
    /**
     * Limit how many AdmissionDeadlines to update.
     */
    limit?: number
  }

  /**
   * AdmissionDeadline updateManyAndReturn
   */
  export type AdmissionDeadlineUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * The data used to update AdmissionDeadlines.
     */
    data: XOR<AdmissionDeadlineUpdateManyMutationInput, AdmissionDeadlineUncheckedUpdateManyInput>
    /**
     * Filter which AdmissionDeadlines to update
     */
    where?: AdmissionDeadlineWhereInput
    /**
     * Limit how many AdmissionDeadlines to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AdmissionDeadline upsert
   */
  export type AdmissionDeadlineUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * The filter to search for the AdmissionDeadline to update in case it exists.
     */
    where: AdmissionDeadlineWhereUniqueInput
    /**
     * In case the AdmissionDeadline found by the `where` argument doesn't exist, create a new AdmissionDeadline with this data.
     */
    create: XOR<AdmissionDeadlineCreateInput, AdmissionDeadlineUncheckedCreateInput>
    /**
     * In case the AdmissionDeadline was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdmissionDeadlineUpdateInput, AdmissionDeadlineUncheckedUpdateInput>
  }

  /**
   * AdmissionDeadline delete
   */
  export type AdmissionDeadlineDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    /**
     * Filter which AdmissionDeadline to delete.
     */
    where: AdmissionDeadlineWhereUniqueInput
  }

  /**
   * AdmissionDeadline deleteMany
   */
  export type AdmissionDeadlineDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AdmissionDeadlines to delete
     */
    where?: AdmissionDeadlineWhereInput
    /**
     * Limit how many AdmissionDeadlines to delete.
     */
    limit?: number
  }

  /**
   * AdmissionDeadline.intake
   */
  export type AdmissionDeadline$intakeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    where?: IntakeWhereInput
  }

  /**
   * AdmissionDeadline.calendarEvents
   */
  export type AdmissionDeadline$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * AdmissionDeadline without action
   */
  export type AdmissionDeadlineDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
  }


  /**
   * Model Application
   */

  export type AggregateApplication = {
    _count: ApplicationCountAggregateOutputType | null
    _avg: ApplicationAvgAggregateOutputType | null
    _sum: ApplicationSumAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  export type ApplicationAvgAggregateOutputType = {
    currentGpa: number | null
    gmatScore: number | null
    greScore: number | null
    ieltsScore: number | null
    toeflScore: number | null
    pteScore: number | null
    duolingoScore: number | null
    workExperienceMonths: number | null
    completionPercentage: number | null
    applicationFeesAmount: number | null
  }

  export type ApplicationSumAggregateOutputType = {
    currentGpa: number | null
    gmatScore: number | null
    greScore: number | null
    ieltsScore: number | null
    toeflScore: number | null
    pteScore: number | null
    duolingoScore: number | null
    workExperienceMonths: number | null
    completionPercentage: number | null
    applicationFeesAmount: number | null
  }

  export type ApplicationMinAggregateOutputType = {
    id: string | null
    admissionId: string | null
    universityId: string | null
    programId: string | null
    intakeId: string | null
    userId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    dateOfBirth: Date | null
    nationality: string | null
    currentGpa: number | null
    gmatScore: number | null
    greScore: number | null
    ieltsScore: number | null
    toeflScore: number | null
    pteScore: number | null
    duolingoScore: number | null
    workExperienceMonths: number | null
    workExperienceDetails: string | null
    applicationStatus: string | null
    currentStage: string | null
    stageUpdatedAt: Date | null
    completionPercentage: number | null
    nextDeadlineId: string | null
    completedDeadlines: string | null
    missedDeadlines: string | null
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    lastActivityAt: Date | null
    applicationFeesPaid: boolean | null
    applicationFeesAmount: number | null
    documentsUploaded: string | null
    documentsVerified: boolean | null
    lastContactDate: Date | null
    contactNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationMaxAggregateOutputType = {
    id: string | null
    admissionId: string | null
    universityId: string | null
    programId: string | null
    intakeId: string | null
    userId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    dateOfBirth: Date | null
    nationality: string | null
    currentGpa: number | null
    gmatScore: number | null
    greScore: number | null
    ieltsScore: number | null
    toeflScore: number | null
    pteScore: number | null
    duolingoScore: number | null
    workExperienceMonths: number | null
    workExperienceDetails: string | null
    applicationStatus: string | null
    currentStage: string | null
    stageUpdatedAt: Date | null
    completionPercentage: number | null
    nextDeadlineId: string | null
    completedDeadlines: string | null
    missedDeadlines: string | null
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    lastActivityAt: Date | null
    applicationFeesPaid: boolean | null
    applicationFeesAmount: number | null
    documentsUploaded: string | null
    documentsVerified: boolean | null
    lastContactDate: Date | null
    contactNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationCountAggregateOutputType = {
    id: number
    admissionId: number
    universityId: number
    programId: number
    intakeId: number
    userId: number
    firstName: number
    lastName: number
    email: number
    phone: number
    dateOfBirth: number
    nationality: number
    currentGpa: number
    gmatScore: number
    greScore: number
    ieltsScore: number
    toeflScore: number
    pteScore: number
    duolingoScore: number
    workExperienceMonths: number
    workExperienceDetails: number
    applicationStatus: number
    currentStage: number
    stageUpdatedAt: number
    completionPercentage: number
    nextDeadlineId: number
    completedDeadlines: number
    missedDeadlines: number
    submissionDate: number
    reviewDate: number
    decisionDate: number
    lastActivityAt: number
    applicationFeesPaid: number
    applicationFeesAmount: number
    documentsUploaded: number
    documentsVerified: number
    lastContactDate: number
    contactNotes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ApplicationAvgAggregateInputType = {
    currentGpa?: true
    gmatScore?: true
    greScore?: true
    ieltsScore?: true
    toeflScore?: true
    pteScore?: true
    duolingoScore?: true
    workExperienceMonths?: true
    completionPercentage?: true
    applicationFeesAmount?: true
  }

  export type ApplicationSumAggregateInputType = {
    currentGpa?: true
    gmatScore?: true
    greScore?: true
    ieltsScore?: true
    toeflScore?: true
    pteScore?: true
    duolingoScore?: true
    workExperienceMonths?: true
    completionPercentage?: true
    applicationFeesAmount?: true
  }

  export type ApplicationMinAggregateInputType = {
    id?: true
    admissionId?: true
    universityId?: true
    programId?: true
    intakeId?: true
    userId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    dateOfBirth?: true
    nationality?: true
    currentGpa?: true
    gmatScore?: true
    greScore?: true
    ieltsScore?: true
    toeflScore?: true
    pteScore?: true
    duolingoScore?: true
    workExperienceMonths?: true
    workExperienceDetails?: true
    applicationStatus?: true
    currentStage?: true
    stageUpdatedAt?: true
    completionPercentage?: true
    nextDeadlineId?: true
    completedDeadlines?: true
    missedDeadlines?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    lastActivityAt?: true
    applicationFeesPaid?: true
    applicationFeesAmount?: true
    documentsUploaded?: true
    documentsVerified?: true
    lastContactDate?: true
    contactNotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ApplicationMaxAggregateInputType = {
    id?: true
    admissionId?: true
    universityId?: true
    programId?: true
    intakeId?: true
    userId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    dateOfBirth?: true
    nationality?: true
    currentGpa?: true
    gmatScore?: true
    greScore?: true
    ieltsScore?: true
    toeflScore?: true
    pteScore?: true
    duolingoScore?: true
    workExperienceMonths?: true
    workExperienceDetails?: true
    applicationStatus?: true
    currentStage?: true
    stageUpdatedAt?: true
    completionPercentage?: true
    nextDeadlineId?: true
    completedDeadlines?: true
    missedDeadlines?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    lastActivityAt?: true
    applicationFeesPaid?: true
    applicationFeesAmount?: true
    documentsUploaded?: true
    documentsVerified?: true
    lastContactDate?: true
    contactNotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ApplicationCountAggregateInputType = {
    id?: true
    admissionId?: true
    universityId?: true
    programId?: true
    intakeId?: true
    userId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    dateOfBirth?: true
    nationality?: true
    currentGpa?: true
    gmatScore?: true
    greScore?: true
    ieltsScore?: true
    toeflScore?: true
    pteScore?: true
    duolingoScore?: true
    workExperienceMonths?: true
    workExperienceDetails?: true
    applicationStatus?: true
    currentStage?: true
    stageUpdatedAt?: true
    completionPercentage?: true
    nextDeadlineId?: true
    completedDeadlines?: true
    missedDeadlines?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    lastActivityAt?: true
    applicationFeesPaid?: true
    applicationFeesAmount?: true
    documentsUploaded?: true
    documentsVerified?: true
    lastContactDate?: true
    contactNotes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Application to aggregate.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Applications
    **/
    _count?: true | ApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApplicationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApplicationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationMaxAggregateInputType
  }

  export type GetApplicationAggregateType<T extends ApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplication[P]>
      : GetScalarType<T[P], AggregateApplication[P]>
  }




  export type ApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationWhereInput
    orderBy?: ApplicationOrderByWithAggregationInput | ApplicationOrderByWithAggregationInput[]
    by: ApplicationScalarFieldEnum[] | ApplicationScalarFieldEnum
    having?: ApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationCountAggregateInputType | true
    _avg?: ApplicationAvgAggregateInputType
    _sum?: ApplicationSumAggregateInputType
    _min?: ApplicationMinAggregateInputType
    _max?: ApplicationMaxAggregateInputType
  }

  export type ApplicationGroupByOutputType = {
    id: string
    admissionId: string
    universityId: string
    programId: string
    intakeId: string | null
    userId: string | null
    firstName: string
    lastName: string
    email: string
    phone: string | null
    dateOfBirth: Date | null
    nationality: string | null
    currentGpa: number | null
    gmatScore: number | null
    greScore: number | null
    ieltsScore: number | null
    toeflScore: number | null
    pteScore: number | null
    duolingoScore: number | null
    workExperienceMonths: number | null
    workExperienceDetails: string | null
    applicationStatus: string
    currentStage: string
    stageUpdatedAt: Date
    completionPercentage: number
    nextDeadlineId: string | null
    completedDeadlines: string | null
    missedDeadlines: string | null
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    lastActivityAt: Date
    applicationFeesPaid: boolean
    applicationFeesAmount: number | null
    documentsUploaded: string | null
    documentsVerified: boolean
    lastContactDate: Date | null
    contactNotes: string | null
    createdAt: Date
    updatedAt: Date
    _count: ApplicationCountAggregateOutputType | null
    _avg: ApplicationAvgAggregateOutputType | null
    _sum: ApplicationSumAggregateOutputType | null
    _min: ApplicationMinAggregateOutputType | null
    _max: ApplicationMaxAggregateOutputType | null
  }

  type GetApplicationGroupByPayload<T extends ApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    universityId?: boolean
    programId?: boolean
    intakeId?: boolean
    userId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    nationality?: boolean
    currentGpa?: boolean
    gmatScore?: boolean
    greScore?: boolean
    ieltsScore?: boolean
    toeflScore?: boolean
    pteScore?: boolean
    duolingoScore?: boolean
    workExperienceMonths?: boolean
    workExperienceDetails?: boolean
    applicationStatus?: boolean
    currentStage?: boolean
    stageUpdatedAt?: boolean
    completionPercentage?: boolean
    nextDeadlineId?: boolean
    completedDeadlines?: boolean
    missedDeadlines?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    lastActivityAt?: boolean
    applicationFeesPaid?: boolean
    applicationFeesAmount?: boolean
    documentsUploaded?: boolean
    documentsVerified?: boolean
    lastContactDate?: boolean
    contactNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intake?: boolean | Application$intakeArgs<ExtArgs>
    user?: boolean | Application$userArgs<ExtArgs>
    documents?: boolean | Application$documentsArgs<ExtArgs>
    applicationProgress?: boolean | Application$applicationProgressArgs<ExtArgs>
    interviews?: boolean | Application$interviewsArgs<ExtArgs>
    scholarshipApplications?: boolean | Application$scholarshipApplicationsArgs<ExtArgs>
    financialAidApplications?: boolean | Application$financialAidApplicationsArgs<ExtArgs>
    essaySubmissions?: boolean | Application$essaySubmissionsArgs<ExtArgs>
    calendarEvents?: boolean | Application$calendarEventsArgs<ExtArgs>
    essays?: boolean | Application$essaysArgs<ExtArgs>
    _count?: boolean | ApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    universityId?: boolean
    programId?: boolean
    intakeId?: boolean
    userId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    nationality?: boolean
    currentGpa?: boolean
    gmatScore?: boolean
    greScore?: boolean
    ieltsScore?: boolean
    toeflScore?: boolean
    pteScore?: boolean
    duolingoScore?: boolean
    workExperienceMonths?: boolean
    workExperienceDetails?: boolean
    applicationStatus?: boolean
    currentStage?: boolean
    stageUpdatedAt?: boolean
    completionPercentage?: boolean
    nextDeadlineId?: boolean
    completedDeadlines?: boolean
    missedDeadlines?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    lastActivityAt?: boolean
    applicationFeesPaid?: boolean
    applicationFeesAmount?: boolean
    documentsUploaded?: boolean
    documentsVerified?: boolean
    lastContactDate?: boolean
    contactNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intake?: boolean | Application$intakeArgs<ExtArgs>
    user?: boolean | Application$userArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    universityId?: boolean
    programId?: boolean
    intakeId?: boolean
    userId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    nationality?: boolean
    currentGpa?: boolean
    gmatScore?: boolean
    greScore?: boolean
    ieltsScore?: boolean
    toeflScore?: boolean
    pteScore?: boolean
    duolingoScore?: boolean
    workExperienceMonths?: boolean
    workExperienceDetails?: boolean
    applicationStatus?: boolean
    currentStage?: boolean
    stageUpdatedAt?: boolean
    completionPercentage?: boolean
    nextDeadlineId?: boolean
    completedDeadlines?: boolean
    missedDeadlines?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    lastActivityAt?: boolean
    applicationFeesPaid?: boolean
    applicationFeesAmount?: boolean
    documentsUploaded?: boolean
    documentsVerified?: boolean
    lastContactDate?: boolean
    contactNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intake?: boolean | Application$intakeArgs<ExtArgs>
    user?: boolean | Application$userArgs<ExtArgs>
  }, ExtArgs["result"]["application"]>

  export type ApplicationSelectScalar = {
    id?: boolean
    admissionId?: boolean
    universityId?: boolean
    programId?: boolean
    intakeId?: boolean
    userId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    nationality?: boolean
    currentGpa?: boolean
    gmatScore?: boolean
    greScore?: boolean
    ieltsScore?: boolean
    toeflScore?: boolean
    pteScore?: boolean
    duolingoScore?: boolean
    workExperienceMonths?: boolean
    workExperienceDetails?: boolean
    applicationStatus?: boolean
    currentStage?: boolean
    stageUpdatedAt?: boolean
    completionPercentage?: boolean
    nextDeadlineId?: boolean
    completedDeadlines?: boolean
    missedDeadlines?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    lastActivityAt?: boolean
    applicationFeesPaid?: boolean
    applicationFeesAmount?: boolean
    documentsUploaded?: boolean
    documentsVerified?: boolean
    lastContactDate?: boolean
    contactNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "admissionId" | "universityId" | "programId" | "intakeId" | "userId" | "firstName" | "lastName" | "email" | "phone" | "dateOfBirth" | "nationality" | "currentGpa" | "gmatScore" | "greScore" | "ieltsScore" | "toeflScore" | "pteScore" | "duolingoScore" | "workExperienceMonths" | "workExperienceDetails" | "applicationStatus" | "currentStage" | "stageUpdatedAt" | "completionPercentage" | "nextDeadlineId" | "completedDeadlines" | "missedDeadlines" | "submissionDate" | "reviewDate" | "decisionDate" | "lastActivityAt" | "applicationFeesPaid" | "applicationFeesAmount" | "documentsUploaded" | "documentsVerified" | "lastContactDate" | "contactNotes" | "createdAt" | "updatedAt", ExtArgs["result"]["application"]>
  export type ApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intake?: boolean | Application$intakeArgs<ExtArgs>
    user?: boolean | Application$userArgs<ExtArgs>
    documents?: boolean | Application$documentsArgs<ExtArgs>
    applicationProgress?: boolean | Application$applicationProgressArgs<ExtArgs>
    interviews?: boolean | Application$interviewsArgs<ExtArgs>
    scholarshipApplications?: boolean | Application$scholarshipApplicationsArgs<ExtArgs>
    financialAidApplications?: boolean | Application$financialAidApplicationsArgs<ExtArgs>
    essaySubmissions?: boolean | Application$essaySubmissionsArgs<ExtArgs>
    calendarEvents?: boolean | Application$calendarEventsArgs<ExtArgs>
    essays?: boolean | Application$essaysArgs<ExtArgs>
    _count?: boolean | ApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intake?: boolean | Application$intakeArgs<ExtArgs>
    user?: boolean | Application$userArgs<ExtArgs>
  }
  export type ApplicationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | AdmissionDefaultArgs<ExtArgs>
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    intake?: boolean | Application$intakeArgs<ExtArgs>
    user?: boolean | Application$userArgs<ExtArgs>
  }

  export type $ApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Application"
    objects: {
      admission: Prisma.$AdmissionPayload<ExtArgs>
      university: Prisma.$UniversityPayload<ExtArgs>
      program: Prisma.$ProgramPayload<ExtArgs>
      intake: Prisma.$IntakePayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs> | null
      documents: Prisma.$ApplicationDocumentPayload<ExtArgs>[]
      applicationProgress: Prisma.$ApplicationProgressPayload<ExtArgs>[]
      interviews: Prisma.$InterviewPayload<ExtArgs>[]
      scholarshipApplications: Prisma.$ScholarshipApplicationPayload<ExtArgs>[]
      financialAidApplications: Prisma.$FinancialAidApplicationPayload<ExtArgs>[]
      essaySubmissions: Prisma.$EssaySubmissionPayload<ExtArgs>[]
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
      essays: Prisma.$EssayPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      admissionId: string
      universityId: string
      programId: string
      intakeId: string | null
      userId: string | null
      firstName: string
      lastName: string
      email: string
      phone: string | null
      dateOfBirth: Date | null
      nationality: string | null
      currentGpa: number | null
      gmatScore: number | null
      greScore: number | null
      ieltsScore: number | null
      toeflScore: number | null
      pteScore: number | null
      duolingoScore: number | null
      workExperienceMonths: number | null
      workExperienceDetails: string | null
      applicationStatus: string
      currentStage: string
      stageUpdatedAt: Date
      completionPercentage: number
      nextDeadlineId: string | null
      completedDeadlines: string | null
      missedDeadlines: string | null
      submissionDate: Date | null
      reviewDate: Date | null
      decisionDate: Date | null
      lastActivityAt: Date
      applicationFeesPaid: boolean
      applicationFeesAmount: number | null
      documentsUploaded: string | null
      documentsVerified: boolean
      lastContactDate: Date | null
      contactNotes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["application"]>
    composites: {}
  }

  type ApplicationGetPayload<S extends boolean | null | undefined | ApplicationDefaultArgs> = $Result.GetResult<Prisma.$ApplicationPayload, S>

  type ApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApplicationCountAggregateInputType | true
    }

  export interface ApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Application'], meta: { name: 'Application' } }
    /**
     * Find zero or one Application that matches the filter.
     * @param {ApplicationFindUniqueArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationFindUniqueArgs>(args: SelectSubset<T, ApplicationFindUniqueArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Application that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApplicationFindUniqueOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Application that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationFindFirstArgs>(args?: SelectSubset<T, ApplicationFindFirstArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Application that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindFirstOrThrowArgs} args - Arguments to find a Application
     * @example
     * // Get one Application
     * const application = await prisma.application.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Applications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Applications
     * const applications = await prisma.application.findMany()
     * 
     * // Get first 10 Applications
     * const applications = await prisma.application.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationWithIdOnly = await prisma.application.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApplicationFindManyArgs>(args?: SelectSubset<T, ApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Application.
     * @param {ApplicationCreateArgs} args - Arguments to create a Application.
     * @example
     * // Create one Application
     * const Application = await prisma.application.create({
     *   data: {
     *     // ... data to create a Application
     *   }
     * })
     * 
     */
    create<T extends ApplicationCreateArgs>(args: SelectSubset<T, ApplicationCreateArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Applications.
     * @param {ApplicationCreateManyArgs} args - Arguments to create many Applications.
     * @example
     * // Create many Applications
     * const application = await prisma.application.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationCreateManyArgs>(args?: SelectSubset<T, ApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Applications and returns the data saved in the database.
     * @param {ApplicationCreateManyAndReturnArgs} args - Arguments to create many Applications.
     * @example
     * // Create many Applications
     * const application = await prisma.application.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Applications and only return the `id`
     * const applicationWithIdOnly = await prisma.application.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, ApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Application.
     * @param {ApplicationDeleteArgs} args - Arguments to delete one Application.
     * @example
     * // Delete one Application
     * const Application = await prisma.application.delete({
     *   where: {
     *     // ... filter to delete one Application
     *   }
     * })
     * 
     */
    delete<T extends ApplicationDeleteArgs>(args: SelectSubset<T, ApplicationDeleteArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Application.
     * @param {ApplicationUpdateArgs} args - Arguments to update one Application.
     * @example
     * // Update one Application
     * const application = await prisma.application.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationUpdateArgs>(args: SelectSubset<T, ApplicationUpdateArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Applications.
     * @param {ApplicationDeleteManyArgs} args - Arguments to filter Applications to delete.
     * @example
     * // Delete a few Applications
     * const { count } = await prisma.application.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationDeleteManyArgs>(args?: SelectSubset<T, ApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Applications
     * const application = await prisma.application.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationUpdateManyArgs>(args: SelectSubset<T, ApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Applications and returns the data updated in the database.
     * @param {ApplicationUpdateManyAndReturnArgs} args - Arguments to update many Applications.
     * @example
     * // Update many Applications
     * const application = await prisma.application.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Applications and only return the `id`
     * const applicationWithIdOnly = await prisma.application.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApplicationUpdateManyAndReturnArgs>(args: SelectSubset<T, ApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Application.
     * @param {ApplicationUpsertArgs} args - Arguments to update or create a Application.
     * @example
     * // Update or create a Application
     * const application = await prisma.application.upsert({
     *   create: {
     *     // ... data to create a Application
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Application we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationUpsertArgs>(args: SelectSubset<T, ApplicationUpsertArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Applications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationCountArgs} args - Arguments to filter Applications to count.
     * @example
     * // Count the number of Applications
     * const count = await prisma.application.count({
     *   where: {
     *     // ... the filter for the Applications we want to count
     *   }
     * })
    **/
    count<T extends ApplicationCountArgs>(
      args?: Subset<T, ApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationAggregateArgs>(args: Subset<T, ApplicationAggregateArgs>): Prisma.PrismaPromise<GetApplicationAggregateType<T>>

    /**
     * Group by Application.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Application model
   */
  readonly fields: ApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Application.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admission<T extends AdmissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AdmissionDefaultArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    program<T extends ProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramDefaultArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    intake<T extends Application$intakeArgs<ExtArgs> = {}>(args?: Subset<T, Application$intakeArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends Application$userArgs<ExtArgs> = {}>(args?: Subset<T, Application$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    documents<T extends Application$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Application$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applicationProgress<T extends Application$applicationProgressArgs<ExtArgs> = {}>(args?: Subset<T, Application$applicationProgressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    interviews<T extends Application$interviewsArgs<ExtArgs> = {}>(args?: Subset<T, Application$interviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    scholarshipApplications<T extends Application$scholarshipApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, Application$scholarshipApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    financialAidApplications<T extends Application$financialAidApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, Application$financialAidApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essaySubmissions<T extends Application$essaySubmissionsArgs<ExtArgs> = {}>(args?: Subset<T, Application$essaySubmissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calendarEvents<T extends Application$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, Application$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essays<T extends Application$essaysArgs<ExtArgs> = {}>(args?: Subset<T, Application$essaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Application model
   */
  interface ApplicationFieldRefs {
    readonly id: FieldRef<"Application", 'String'>
    readonly admissionId: FieldRef<"Application", 'String'>
    readonly universityId: FieldRef<"Application", 'String'>
    readonly programId: FieldRef<"Application", 'String'>
    readonly intakeId: FieldRef<"Application", 'String'>
    readonly userId: FieldRef<"Application", 'String'>
    readonly firstName: FieldRef<"Application", 'String'>
    readonly lastName: FieldRef<"Application", 'String'>
    readonly email: FieldRef<"Application", 'String'>
    readonly phone: FieldRef<"Application", 'String'>
    readonly dateOfBirth: FieldRef<"Application", 'DateTime'>
    readonly nationality: FieldRef<"Application", 'String'>
    readonly currentGpa: FieldRef<"Application", 'Float'>
    readonly gmatScore: FieldRef<"Application", 'Int'>
    readonly greScore: FieldRef<"Application", 'Int'>
    readonly ieltsScore: FieldRef<"Application", 'Float'>
    readonly toeflScore: FieldRef<"Application", 'Int'>
    readonly pteScore: FieldRef<"Application", 'Int'>
    readonly duolingoScore: FieldRef<"Application", 'Int'>
    readonly workExperienceMonths: FieldRef<"Application", 'Int'>
    readonly workExperienceDetails: FieldRef<"Application", 'String'>
    readonly applicationStatus: FieldRef<"Application", 'String'>
    readonly currentStage: FieldRef<"Application", 'String'>
    readonly stageUpdatedAt: FieldRef<"Application", 'DateTime'>
    readonly completionPercentage: FieldRef<"Application", 'Float'>
    readonly nextDeadlineId: FieldRef<"Application", 'String'>
    readonly completedDeadlines: FieldRef<"Application", 'String'>
    readonly missedDeadlines: FieldRef<"Application", 'String'>
    readonly submissionDate: FieldRef<"Application", 'DateTime'>
    readonly reviewDate: FieldRef<"Application", 'DateTime'>
    readonly decisionDate: FieldRef<"Application", 'DateTime'>
    readonly lastActivityAt: FieldRef<"Application", 'DateTime'>
    readonly applicationFeesPaid: FieldRef<"Application", 'Boolean'>
    readonly applicationFeesAmount: FieldRef<"Application", 'Float'>
    readonly documentsUploaded: FieldRef<"Application", 'String'>
    readonly documentsVerified: FieldRef<"Application", 'Boolean'>
    readonly lastContactDate: FieldRef<"Application", 'DateTime'>
    readonly contactNotes: FieldRef<"Application", 'String'>
    readonly createdAt: FieldRef<"Application", 'DateTime'>
    readonly updatedAt: FieldRef<"Application", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Application findUnique
   */
  export type ApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application findUniqueOrThrow
   */
  export type ApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application findFirst
   */
  export type ApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application findFirstOrThrow
   */
  export type ApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Application to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Applications.
     */
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application findMany
   */
  export type ApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter, which Applications to fetch.
     */
    where?: ApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Applications to fetch.
     */
    orderBy?: ApplicationOrderByWithRelationInput | ApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Applications.
     */
    cursor?: ApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Applications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Applications.
     */
    skip?: number
    distinct?: ApplicationScalarFieldEnum | ApplicationScalarFieldEnum[]
  }

  /**
   * Application create
   */
  export type ApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a Application.
     */
    data: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
  }

  /**
   * Application createMany
   */
  export type ApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Applications.
     */
    data: ApplicationCreateManyInput | ApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Application createManyAndReturn
   */
  export type ApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * The data used to create many Applications.
     */
    data: ApplicationCreateManyInput | ApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Application update
   */
  export type ApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a Application.
     */
    data: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
    /**
     * Choose, which Application to update.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application updateMany
   */
  export type ApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Applications.
     */
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyInput>
    /**
     * Filter which Applications to update
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to update.
     */
    limit?: number
  }

  /**
   * Application updateManyAndReturn
   */
  export type ApplicationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * The data used to update Applications.
     */
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyInput>
    /**
     * Filter which Applications to update
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Application upsert
   */
  export type ApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the Application to update in case it exists.
     */
    where: ApplicationWhereUniqueInput
    /**
     * In case the Application found by the `where` argument doesn't exist, create a new Application with this data.
     */
    create: XOR<ApplicationCreateInput, ApplicationUncheckedCreateInput>
    /**
     * In case the Application was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationUpdateInput, ApplicationUncheckedUpdateInput>
  }

  /**
   * Application delete
   */
  export type ApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    /**
     * Filter which Application to delete.
     */
    where: ApplicationWhereUniqueInput
  }

  /**
   * Application deleteMany
   */
  export type ApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Applications to delete
     */
    where?: ApplicationWhereInput
    /**
     * Limit how many Applications to delete.
     */
    limit?: number
  }

  /**
   * Application.intake
   */
  export type Application$intakeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    where?: IntakeWhereInput
  }

  /**
   * Application.user
   */
  export type Application$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Application.documents
   */
  export type Application$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    where?: ApplicationDocumentWhereInput
    orderBy?: ApplicationDocumentOrderByWithRelationInput | ApplicationDocumentOrderByWithRelationInput[]
    cursor?: ApplicationDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationDocumentScalarFieldEnum | ApplicationDocumentScalarFieldEnum[]
  }

  /**
   * Application.applicationProgress
   */
  export type Application$applicationProgressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    where?: ApplicationProgressWhereInput
    orderBy?: ApplicationProgressOrderByWithRelationInput | ApplicationProgressOrderByWithRelationInput[]
    cursor?: ApplicationProgressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApplicationProgressScalarFieldEnum | ApplicationProgressScalarFieldEnum[]
  }

  /**
   * Application.interviews
   */
  export type Application$interviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    where?: InterviewWhereInput
    orderBy?: InterviewOrderByWithRelationInput | InterviewOrderByWithRelationInput[]
    cursor?: InterviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InterviewScalarFieldEnum | InterviewScalarFieldEnum[]
  }

  /**
   * Application.scholarshipApplications
   */
  export type Application$scholarshipApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    where?: ScholarshipApplicationWhereInput
    orderBy?: ScholarshipApplicationOrderByWithRelationInput | ScholarshipApplicationOrderByWithRelationInput[]
    cursor?: ScholarshipApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScholarshipApplicationScalarFieldEnum | ScholarshipApplicationScalarFieldEnum[]
  }

  /**
   * Application.financialAidApplications
   */
  export type Application$financialAidApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    where?: FinancialAidApplicationWhereInput
    orderBy?: FinancialAidApplicationOrderByWithRelationInput | FinancialAidApplicationOrderByWithRelationInput[]
    cursor?: FinancialAidApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancialAidApplicationScalarFieldEnum | FinancialAidApplicationScalarFieldEnum[]
  }

  /**
   * Application.essaySubmissions
   */
  export type Application$essaySubmissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    where?: EssaySubmissionWhereInput
    orderBy?: EssaySubmissionOrderByWithRelationInput | EssaySubmissionOrderByWithRelationInput[]
    cursor?: EssaySubmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssaySubmissionScalarFieldEnum | EssaySubmissionScalarFieldEnum[]
  }

  /**
   * Application.calendarEvents
   */
  export type Application$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * Application.essays
   */
  export type Application$essaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    where?: EssayWhereInput
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    cursor?: EssayWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayScalarFieldEnum | EssayScalarFieldEnum[]
  }

  /**
   * Application without action
   */
  export type ApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
  }


  /**
   * Model ApplicationProgress
   */

  export type AggregateApplicationProgress = {
    _count: ApplicationProgressCountAggregateOutputType | null
    _min: ApplicationProgressMinAggregateOutputType | null
    _max: ApplicationProgressMaxAggregateOutputType | null
  }

  export type ApplicationProgressMinAggregateOutputType = {
    id: string | null
    applicationId: string | null
    stageName: string | null
    stageStatus: string | null
    startedAt: Date | null
    completedAt: Date | null
    notes: string | null
    completedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationProgressMaxAggregateOutputType = {
    id: string | null
    applicationId: string | null
    stageName: string | null
    stageStatus: string | null
    startedAt: Date | null
    completedAt: Date | null
    notes: string | null
    completedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationProgressCountAggregateOutputType = {
    id: number
    applicationId: number
    stageName: number
    stageStatus: number
    startedAt: number
    completedAt: number
    notes: number
    completedBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ApplicationProgressMinAggregateInputType = {
    id?: true
    applicationId?: true
    stageName?: true
    stageStatus?: true
    startedAt?: true
    completedAt?: true
    notes?: true
    completedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ApplicationProgressMaxAggregateInputType = {
    id?: true
    applicationId?: true
    stageName?: true
    stageStatus?: true
    startedAt?: true
    completedAt?: true
    notes?: true
    completedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ApplicationProgressCountAggregateInputType = {
    id?: true
    applicationId?: true
    stageName?: true
    stageStatus?: true
    startedAt?: true
    completedAt?: true
    notes?: true
    completedBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ApplicationProgressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationProgress to aggregate.
     */
    where?: ApplicationProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationProgresses to fetch.
     */
    orderBy?: ApplicationProgressOrderByWithRelationInput | ApplicationProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApplicationProgresses
    **/
    _count?: true | ApplicationProgressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationProgressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationProgressMaxAggregateInputType
  }

  export type GetApplicationProgressAggregateType<T extends ApplicationProgressAggregateArgs> = {
        [P in keyof T & keyof AggregateApplicationProgress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplicationProgress[P]>
      : GetScalarType<T[P], AggregateApplicationProgress[P]>
  }




  export type ApplicationProgressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationProgressWhereInput
    orderBy?: ApplicationProgressOrderByWithAggregationInput | ApplicationProgressOrderByWithAggregationInput[]
    by: ApplicationProgressScalarFieldEnum[] | ApplicationProgressScalarFieldEnum
    having?: ApplicationProgressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationProgressCountAggregateInputType | true
    _min?: ApplicationProgressMinAggregateInputType
    _max?: ApplicationProgressMaxAggregateInputType
  }

  export type ApplicationProgressGroupByOutputType = {
    id: string
    applicationId: string
    stageName: string
    stageStatus: string
    startedAt: Date | null
    completedAt: Date | null
    notes: string | null
    completedBy: string | null
    createdAt: Date
    updatedAt: Date
    _count: ApplicationProgressCountAggregateOutputType | null
    _min: ApplicationProgressMinAggregateOutputType | null
    _max: ApplicationProgressMaxAggregateOutputType | null
  }

  type GetApplicationProgressGroupByPayload<T extends ApplicationProgressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationProgressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationProgressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationProgressGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationProgressGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationProgressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    stageName?: boolean
    stageStatus?: boolean
    startedAt?: boolean
    completedAt?: boolean
    notes?: boolean
    completedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationProgress"]>

  export type ApplicationProgressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    stageName?: boolean
    stageStatus?: boolean
    startedAt?: boolean
    completedAt?: boolean
    notes?: boolean
    completedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationProgress"]>

  export type ApplicationProgressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    stageName?: boolean
    stageStatus?: boolean
    startedAt?: boolean
    completedAt?: boolean
    notes?: boolean
    completedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationProgress"]>

  export type ApplicationProgressSelectScalar = {
    id?: boolean
    applicationId?: boolean
    stageName?: boolean
    stageStatus?: boolean
    startedAt?: boolean
    completedAt?: boolean
    notes?: boolean
    completedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ApplicationProgressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "applicationId" | "stageName" | "stageStatus" | "startedAt" | "completedAt" | "notes" | "completedBy" | "createdAt" | "updatedAt", ExtArgs["result"]["applicationProgress"]>
  export type ApplicationProgressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }
  export type ApplicationProgressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }
  export type ApplicationProgressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }

  export type $ApplicationProgressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApplicationProgress"
    objects: {
      application: Prisma.$ApplicationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      applicationId: string
      stageName: string
      stageStatus: string
      startedAt: Date | null
      completedAt: Date | null
      notes: string | null
      completedBy: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["applicationProgress"]>
    composites: {}
  }

  type ApplicationProgressGetPayload<S extends boolean | null | undefined | ApplicationProgressDefaultArgs> = $Result.GetResult<Prisma.$ApplicationProgressPayload, S>

  type ApplicationProgressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApplicationProgressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApplicationProgressCountAggregateInputType | true
    }

  export interface ApplicationProgressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApplicationProgress'], meta: { name: 'ApplicationProgress' } }
    /**
     * Find zero or one ApplicationProgress that matches the filter.
     * @param {ApplicationProgressFindUniqueArgs} args - Arguments to find a ApplicationProgress
     * @example
     * // Get one ApplicationProgress
     * const applicationProgress = await prisma.applicationProgress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationProgressFindUniqueArgs>(args: SelectSubset<T, ApplicationProgressFindUniqueArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ApplicationProgress that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApplicationProgressFindUniqueOrThrowArgs} args - Arguments to find a ApplicationProgress
     * @example
     * // Get one ApplicationProgress
     * const applicationProgress = await prisma.applicationProgress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationProgressFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationProgressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApplicationProgress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationProgressFindFirstArgs} args - Arguments to find a ApplicationProgress
     * @example
     * // Get one ApplicationProgress
     * const applicationProgress = await prisma.applicationProgress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationProgressFindFirstArgs>(args?: SelectSubset<T, ApplicationProgressFindFirstArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApplicationProgress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationProgressFindFirstOrThrowArgs} args - Arguments to find a ApplicationProgress
     * @example
     * // Get one ApplicationProgress
     * const applicationProgress = await prisma.applicationProgress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationProgressFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationProgressFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ApplicationProgresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationProgressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApplicationProgresses
     * const applicationProgresses = await prisma.applicationProgress.findMany()
     * 
     * // Get first 10 ApplicationProgresses
     * const applicationProgresses = await prisma.applicationProgress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationProgressWithIdOnly = await prisma.applicationProgress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApplicationProgressFindManyArgs>(args?: SelectSubset<T, ApplicationProgressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ApplicationProgress.
     * @param {ApplicationProgressCreateArgs} args - Arguments to create a ApplicationProgress.
     * @example
     * // Create one ApplicationProgress
     * const ApplicationProgress = await prisma.applicationProgress.create({
     *   data: {
     *     // ... data to create a ApplicationProgress
     *   }
     * })
     * 
     */
    create<T extends ApplicationProgressCreateArgs>(args: SelectSubset<T, ApplicationProgressCreateArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ApplicationProgresses.
     * @param {ApplicationProgressCreateManyArgs} args - Arguments to create many ApplicationProgresses.
     * @example
     * // Create many ApplicationProgresses
     * const applicationProgress = await prisma.applicationProgress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationProgressCreateManyArgs>(args?: SelectSubset<T, ApplicationProgressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ApplicationProgresses and returns the data saved in the database.
     * @param {ApplicationProgressCreateManyAndReturnArgs} args - Arguments to create many ApplicationProgresses.
     * @example
     * // Create many ApplicationProgresses
     * const applicationProgress = await prisma.applicationProgress.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ApplicationProgresses and only return the `id`
     * const applicationProgressWithIdOnly = await prisma.applicationProgress.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApplicationProgressCreateManyAndReturnArgs>(args?: SelectSubset<T, ApplicationProgressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ApplicationProgress.
     * @param {ApplicationProgressDeleteArgs} args - Arguments to delete one ApplicationProgress.
     * @example
     * // Delete one ApplicationProgress
     * const ApplicationProgress = await prisma.applicationProgress.delete({
     *   where: {
     *     // ... filter to delete one ApplicationProgress
     *   }
     * })
     * 
     */
    delete<T extends ApplicationProgressDeleteArgs>(args: SelectSubset<T, ApplicationProgressDeleteArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ApplicationProgress.
     * @param {ApplicationProgressUpdateArgs} args - Arguments to update one ApplicationProgress.
     * @example
     * // Update one ApplicationProgress
     * const applicationProgress = await prisma.applicationProgress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationProgressUpdateArgs>(args: SelectSubset<T, ApplicationProgressUpdateArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ApplicationProgresses.
     * @param {ApplicationProgressDeleteManyArgs} args - Arguments to filter ApplicationProgresses to delete.
     * @example
     * // Delete a few ApplicationProgresses
     * const { count } = await prisma.applicationProgress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationProgressDeleteManyArgs>(args?: SelectSubset<T, ApplicationProgressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationProgresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationProgressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApplicationProgresses
     * const applicationProgress = await prisma.applicationProgress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationProgressUpdateManyArgs>(args: SelectSubset<T, ApplicationProgressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationProgresses and returns the data updated in the database.
     * @param {ApplicationProgressUpdateManyAndReturnArgs} args - Arguments to update many ApplicationProgresses.
     * @example
     * // Update many ApplicationProgresses
     * const applicationProgress = await prisma.applicationProgress.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ApplicationProgresses and only return the `id`
     * const applicationProgressWithIdOnly = await prisma.applicationProgress.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApplicationProgressUpdateManyAndReturnArgs>(args: SelectSubset<T, ApplicationProgressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ApplicationProgress.
     * @param {ApplicationProgressUpsertArgs} args - Arguments to update or create a ApplicationProgress.
     * @example
     * // Update or create a ApplicationProgress
     * const applicationProgress = await prisma.applicationProgress.upsert({
     *   create: {
     *     // ... data to create a ApplicationProgress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApplicationProgress we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationProgressUpsertArgs>(args: SelectSubset<T, ApplicationProgressUpsertArgs<ExtArgs>>): Prisma__ApplicationProgressClient<$Result.GetResult<Prisma.$ApplicationProgressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ApplicationProgresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationProgressCountArgs} args - Arguments to filter ApplicationProgresses to count.
     * @example
     * // Count the number of ApplicationProgresses
     * const count = await prisma.applicationProgress.count({
     *   where: {
     *     // ... the filter for the ApplicationProgresses we want to count
     *   }
     * })
    **/
    count<T extends ApplicationProgressCountArgs>(
      args?: Subset<T, ApplicationProgressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationProgressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApplicationProgress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationProgressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationProgressAggregateArgs>(args: Subset<T, ApplicationProgressAggregateArgs>): Prisma.PrismaPromise<GetApplicationProgressAggregateType<T>>

    /**
     * Group by ApplicationProgress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationProgressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationProgressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationProgressGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationProgressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationProgressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationProgressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApplicationProgress model
   */
  readonly fields: ApplicationProgressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApplicationProgress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationProgressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    application<T extends ApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ApplicationDefaultArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApplicationProgress model
   */
  interface ApplicationProgressFieldRefs {
    readonly id: FieldRef<"ApplicationProgress", 'String'>
    readonly applicationId: FieldRef<"ApplicationProgress", 'String'>
    readonly stageName: FieldRef<"ApplicationProgress", 'String'>
    readonly stageStatus: FieldRef<"ApplicationProgress", 'String'>
    readonly startedAt: FieldRef<"ApplicationProgress", 'DateTime'>
    readonly completedAt: FieldRef<"ApplicationProgress", 'DateTime'>
    readonly notes: FieldRef<"ApplicationProgress", 'String'>
    readonly completedBy: FieldRef<"ApplicationProgress", 'String'>
    readonly createdAt: FieldRef<"ApplicationProgress", 'DateTime'>
    readonly updatedAt: FieldRef<"ApplicationProgress", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ApplicationProgress findUnique
   */
  export type ApplicationProgressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationProgress to fetch.
     */
    where: ApplicationProgressWhereUniqueInput
  }

  /**
   * ApplicationProgress findUniqueOrThrow
   */
  export type ApplicationProgressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationProgress to fetch.
     */
    where: ApplicationProgressWhereUniqueInput
  }

  /**
   * ApplicationProgress findFirst
   */
  export type ApplicationProgressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationProgress to fetch.
     */
    where?: ApplicationProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationProgresses to fetch.
     */
    orderBy?: ApplicationProgressOrderByWithRelationInput | ApplicationProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationProgresses.
     */
    cursor?: ApplicationProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationProgresses.
     */
    distinct?: ApplicationProgressScalarFieldEnum | ApplicationProgressScalarFieldEnum[]
  }

  /**
   * ApplicationProgress findFirstOrThrow
   */
  export type ApplicationProgressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationProgress to fetch.
     */
    where?: ApplicationProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationProgresses to fetch.
     */
    orderBy?: ApplicationProgressOrderByWithRelationInput | ApplicationProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationProgresses.
     */
    cursor?: ApplicationProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationProgresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationProgresses.
     */
    distinct?: ApplicationProgressScalarFieldEnum | ApplicationProgressScalarFieldEnum[]
  }

  /**
   * ApplicationProgress findMany
   */
  export type ApplicationProgressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationProgresses to fetch.
     */
    where?: ApplicationProgressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationProgresses to fetch.
     */
    orderBy?: ApplicationProgressOrderByWithRelationInput | ApplicationProgressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApplicationProgresses.
     */
    cursor?: ApplicationProgressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationProgresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationProgresses.
     */
    skip?: number
    distinct?: ApplicationProgressScalarFieldEnum | ApplicationProgressScalarFieldEnum[]
  }

  /**
   * ApplicationProgress create
   */
  export type ApplicationProgressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * The data needed to create a ApplicationProgress.
     */
    data: XOR<ApplicationProgressCreateInput, ApplicationProgressUncheckedCreateInput>
  }

  /**
   * ApplicationProgress createMany
   */
  export type ApplicationProgressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApplicationProgresses.
     */
    data: ApplicationProgressCreateManyInput | ApplicationProgressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApplicationProgress createManyAndReturn
   */
  export type ApplicationProgressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * The data used to create many ApplicationProgresses.
     */
    data: ApplicationProgressCreateManyInput | ApplicationProgressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApplicationProgress update
   */
  export type ApplicationProgressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * The data needed to update a ApplicationProgress.
     */
    data: XOR<ApplicationProgressUpdateInput, ApplicationProgressUncheckedUpdateInput>
    /**
     * Choose, which ApplicationProgress to update.
     */
    where: ApplicationProgressWhereUniqueInput
  }

  /**
   * ApplicationProgress updateMany
   */
  export type ApplicationProgressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApplicationProgresses.
     */
    data: XOR<ApplicationProgressUpdateManyMutationInput, ApplicationProgressUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationProgresses to update
     */
    where?: ApplicationProgressWhereInput
    /**
     * Limit how many ApplicationProgresses to update.
     */
    limit?: number
  }

  /**
   * ApplicationProgress updateManyAndReturn
   */
  export type ApplicationProgressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * The data used to update ApplicationProgresses.
     */
    data: XOR<ApplicationProgressUpdateManyMutationInput, ApplicationProgressUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationProgresses to update
     */
    where?: ApplicationProgressWhereInput
    /**
     * Limit how many ApplicationProgresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApplicationProgress upsert
   */
  export type ApplicationProgressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * The filter to search for the ApplicationProgress to update in case it exists.
     */
    where: ApplicationProgressWhereUniqueInput
    /**
     * In case the ApplicationProgress found by the `where` argument doesn't exist, create a new ApplicationProgress with this data.
     */
    create: XOR<ApplicationProgressCreateInput, ApplicationProgressUncheckedCreateInput>
    /**
     * In case the ApplicationProgress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationProgressUpdateInput, ApplicationProgressUncheckedUpdateInput>
  }

  /**
   * ApplicationProgress delete
   */
  export type ApplicationProgressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
    /**
     * Filter which ApplicationProgress to delete.
     */
    where: ApplicationProgressWhereUniqueInput
  }

  /**
   * ApplicationProgress deleteMany
   */
  export type ApplicationProgressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationProgresses to delete
     */
    where?: ApplicationProgressWhereInput
    /**
     * Limit how many ApplicationProgresses to delete.
     */
    limit?: number
  }

  /**
   * ApplicationProgress without action
   */
  export type ApplicationProgressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationProgress
     */
    select?: ApplicationProgressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationProgress
     */
    omit?: ApplicationProgressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationProgressInclude<ExtArgs> | null
  }


  /**
   * Model ApplicationDocument
   */

  export type AggregateApplicationDocument = {
    _count: ApplicationDocumentCountAggregateOutputType | null
    _avg: ApplicationDocumentAvgAggregateOutputType | null
    _sum: ApplicationDocumentSumAggregateOutputType | null
    _min: ApplicationDocumentMinAggregateOutputType | null
    _max: ApplicationDocumentMaxAggregateOutputType | null
  }

  export type ApplicationDocumentAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type ApplicationDocumentSumAggregateOutputType = {
    fileSize: number | null
  }

  export type ApplicationDocumentMinAggregateOutputType = {
    id: string | null
    applicationId: string | null
    documentType: string | null
    documentCategory: string | null
    documentTitle: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    isRequired: boolean | null
    submissionDeadline: Date | null
    reminderSent: boolean | null
    isVerified: boolean | null
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    documentStatus: string | null
    uploadedAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationDocumentMaxAggregateOutputType = {
    id: string | null
    applicationId: string | null
    documentType: string | null
    documentCategory: string | null
    documentTitle: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    isRequired: boolean | null
    submissionDeadline: Date | null
    reminderSent: boolean | null
    isVerified: boolean | null
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    documentStatus: string | null
    uploadedAt: Date | null
    updatedAt: Date | null
  }

  export type ApplicationDocumentCountAggregateOutputType = {
    id: number
    applicationId: number
    documentType: number
    documentCategory: number
    documentTitle: number
    fileName: number
    fileUrl: number
    fileSize: number
    mimeType: number
    isRequired: number
    submissionDeadline: number
    reminderSent: number
    isVerified: number
    verifiedBy: number
    verifiedAt: number
    verificationNotes: number
    documentStatus: number
    uploadedAt: number
    updatedAt: number
    _all: number
  }


  export type ApplicationDocumentAvgAggregateInputType = {
    fileSize?: true
  }

  export type ApplicationDocumentSumAggregateInputType = {
    fileSize?: true
  }

  export type ApplicationDocumentMinAggregateInputType = {
    id?: true
    applicationId?: true
    documentType?: true
    documentCategory?: true
    documentTitle?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    isRequired?: true
    submissionDeadline?: true
    reminderSent?: true
    isVerified?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    documentStatus?: true
    uploadedAt?: true
    updatedAt?: true
  }

  export type ApplicationDocumentMaxAggregateInputType = {
    id?: true
    applicationId?: true
    documentType?: true
    documentCategory?: true
    documentTitle?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    isRequired?: true
    submissionDeadline?: true
    reminderSent?: true
    isVerified?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    documentStatus?: true
    uploadedAt?: true
    updatedAt?: true
  }

  export type ApplicationDocumentCountAggregateInputType = {
    id?: true
    applicationId?: true
    documentType?: true
    documentCategory?: true
    documentTitle?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    isRequired?: true
    submissionDeadline?: true
    reminderSent?: true
    isVerified?: true
    verifiedBy?: true
    verifiedAt?: true
    verificationNotes?: true
    documentStatus?: true
    uploadedAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ApplicationDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationDocument to aggregate.
     */
    where?: ApplicationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationDocuments to fetch.
     */
    orderBy?: ApplicationDocumentOrderByWithRelationInput | ApplicationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApplicationDocuments
    **/
    _count?: true | ApplicationDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApplicationDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApplicationDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationDocumentMaxAggregateInputType
  }

  export type GetApplicationDocumentAggregateType<T extends ApplicationDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateApplicationDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplicationDocument[P]>
      : GetScalarType<T[P], AggregateApplicationDocument[P]>
  }




  export type ApplicationDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationDocumentWhereInput
    orderBy?: ApplicationDocumentOrderByWithAggregationInput | ApplicationDocumentOrderByWithAggregationInput[]
    by: ApplicationDocumentScalarFieldEnum[] | ApplicationDocumentScalarFieldEnum
    having?: ApplicationDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationDocumentCountAggregateInputType | true
    _avg?: ApplicationDocumentAvgAggregateInputType
    _sum?: ApplicationDocumentSumAggregateInputType
    _min?: ApplicationDocumentMinAggregateInputType
    _max?: ApplicationDocumentMaxAggregateInputType
  }

  export type ApplicationDocumentGroupByOutputType = {
    id: string
    applicationId: string
    documentType: string
    documentCategory: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize: number | null
    mimeType: string | null
    isRequired: boolean
    submissionDeadline: Date | null
    reminderSent: boolean
    isVerified: boolean
    verifiedBy: string | null
    verifiedAt: Date | null
    verificationNotes: string | null
    documentStatus: string
    uploadedAt: Date
    updatedAt: Date
    _count: ApplicationDocumentCountAggregateOutputType | null
    _avg: ApplicationDocumentAvgAggregateOutputType | null
    _sum: ApplicationDocumentSumAggregateOutputType | null
    _min: ApplicationDocumentMinAggregateOutputType | null
    _max: ApplicationDocumentMaxAggregateOutputType | null
  }

  type GetApplicationDocumentGroupByPayload<T extends ApplicationDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationDocumentGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    documentType?: boolean
    documentCategory?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    submissionDeadline?: boolean
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    documentStatus?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationDocument"]>

  export type ApplicationDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    documentType?: boolean
    documentCategory?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    submissionDeadline?: boolean
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    documentStatus?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationDocument"]>

  export type ApplicationDocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    documentType?: boolean
    documentCategory?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    submissionDeadline?: boolean
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    documentStatus?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["applicationDocument"]>

  export type ApplicationDocumentSelectScalar = {
    id?: boolean
    applicationId?: boolean
    documentType?: boolean
    documentCategory?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    submissionDeadline?: boolean
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: boolean
    verifiedAt?: boolean
    verificationNotes?: boolean
    documentStatus?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
  }

  export type ApplicationDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "applicationId" | "documentType" | "documentCategory" | "documentTitle" | "fileName" | "fileUrl" | "fileSize" | "mimeType" | "isRequired" | "submissionDeadline" | "reminderSent" | "isVerified" | "verifiedBy" | "verifiedAt" | "verificationNotes" | "documentStatus" | "uploadedAt" | "updatedAt", ExtArgs["result"]["applicationDocument"]>
  export type ApplicationDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }
  export type ApplicationDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }
  export type ApplicationDocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }

  export type $ApplicationDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApplicationDocument"
    objects: {
      application: Prisma.$ApplicationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      applicationId: string
      documentType: string
      documentCategory: string
      documentTitle: string
      fileName: string
      fileUrl: string
      fileSize: number | null
      mimeType: string | null
      isRequired: boolean
      submissionDeadline: Date | null
      reminderSent: boolean
      isVerified: boolean
      verifiedBy: string | null
      verifiedAt: Date | null
      verificationNotes: string | null
      documentStatus: string
      uploadedAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["applicationDocument"]>
    composites: {}
  }

  type ApplicationDocumentGetPayload<S extends boolean | null | undefined | ApplicationDocumentDefaultArgs> = $Result.GetResult<Prisma.$ApplicationDocumentPayload, S>

  type ApplicationDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApplicationDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApplicationDocumentCountAggregateInputType | true
    }

  export interface ApplicationDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApplicationDocument'], meta: { name: 'ApplicationDocument' } }
    /**
     * Find zero or one ApplicationDocument that matches the filter.
     * @param {ApplicationDocumentFindUniqueArgs} args - Arguments to find a ApplicationDocument
     * @example
     * // Get one ApplicationDocument
     * const applicationDocument = await prisma.applicationDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationDocumentFindUniqueArgs>(args: SelectSubset<T, ApplicationDocumentFindUniqueArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ApplicationDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApplicationDocumentFindUniqueOrThrowArgs} args - Arguments to find a ApplicationDocument
     * @example
     * // Get one ApplicationDocument
     * const applicationDocument = await prisma.applicationDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApplicationDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationDocumentFindFirstArgs} args - Arguments to find a ApplicationDocument
     * @example
     * // Get one ApplicationDocument
     * const applicationDocument = await prisma.applicationDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationDocumentFindFirstArgs>(args?: SelectSubset<T, ApplicationDocumentFindFirstArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ApplicationDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationDocumentFindFirstOrThrowArgs} args - Arguments to find a ApplicationDocument
     * @example
     * // Get one ApplicationDocument
     * const applicationDocument = await prisma.applicationDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ApplicationDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApplicationDocuments
     * const applicationDocuments = await prisma.applicationDocument.findMany()
     * 
     * // Get first 10 ApplicationDocuments
     * const applicationDocuments = await prisma.applicationDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationDocumentWithIdOnly = await prisma.applicationDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApplicationDocumentFindManyArgs>(args?: SelectSubset<T, ApplicationDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ApplicationDocument.
     * @param {ApplicationDocumentCreateArgs} args - Arguments to create a ApplicationDocument.
     * @example
     * // Create one ApplicationDocument
     * const ApplicationDocument = await prisma.applicationDocument.create({
     *   data: {
     *     // ... data to create a ApplicationDocument
     *   }
     * })
     * 
     */
    create<T extends ApplicationDocumentCreateArgs>(args: SelectSubset<T, ApplicationDocumentCreateArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ApplicationDocuments.
     * @param {ApplicationDocumentCreateManyArgs} args - Arguments to create many ApplicationDocuments.
     * @example
     * // Create many ApplicationDocuments
     * const applicationDocument = await prisma.applicationDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationDocumentCreateManyArgs>(args?: SelectSubset<T, ApplicationDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ApplicationDocuments and returns the data saved in the database.
     * @param {ApplicationDocumentCreateManyAndReturnArgs} args - Arguments to create many ApplicationDocuments.
     * @example
     * // Create many ApplicationDocuments
     * const applicationDocument = await prisma.applicationDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ApplicationDocuments and only return the `id`
     * const applicationDocumentWithIdOnly = await prisma.applicationDocument.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApplicationDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, ApplicationDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ApplicationDocument.
     * @param {ApplicationDocumentDeleteArgs} args - Arguments to delete one ApplicationDocument.
     * @example
     * // Delete one ApplicationDocument
     * const ApplicationDocument = await prisma.applicationDocument.delete({
     *   where: {
     *     // ... filter to delete one ApplicationDocument
     *   }
     * })
     * 
     */
    delete<T extends ApplicationDocumentDeleteArgs>(args: SelectSubset<T, ApplicationDocumentDeleteArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ApplicationDocument.
     * @param {ApplicationDocumentUpdateArgs} args - Arguments to update one ApplicationDocument.
     * @example
     * // Update one ApplicationDocument
     * const applicationDocument = await prisma.applicationDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationDocumentUpdateArgs>(args: SelectSubset<T, ApplicationDocumentUpdateArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ApplicationDocuments.
     * @param {ApplicationDocumentDeleteManyArgs} args - Arguments to filter ApplicationDocuments to delete.
     * @example
     * // Delete a few ApplicationDocuments
     * const { count } = await prisma.applicationDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationDocumentDeleteManyArgs>(args?: SelectSubset<T, ApplicationDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApplicationDocuments
     * const applicationDocument = await prisma.applicationDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationDocumentUpdateManyArgs>(args: SelectSubset<T, ApplicationDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationDocuments and returns the data updated in the database.
     * @param {ApplicationDocumentUpdateManyAndReturnArgs} args - Arguments to update many ApplicationDocuments.
     * @example
     * // Update many ApplicationDocuments
     * const applicationDocument = await prisma.applicationDocument.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ApplicationDocuments and only return the `id`
     * const applicationDocumentWithIdOnly = await prisma.applicationDocument.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApplicationDocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, ApplicationDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ApplicationDocument.
     * @param {ApplicationDocumentUpsertArgs} args - Arguments to update or create a ApplicationDocument.
     * @example
     * // Update or create a ApplicationDocument
     * const applicationDocument = await prisma.applicationDocument.upsert({
     *   create: {
     *     // ... data to create a ApplicationDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApplicationDocument we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationDocumentUpsertArgs>(args: SelectSubset<T, ApplicationDocumentUpsertArgs<ExtArgs>>): Prisma__ApplicationDocumentClient<$Result.GetResult<Prisma.$ApplicationDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ApplicationDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationDocumentCountArgs} args - Arguments to filter ApplicationDocuments to count.
     * @example
     * // Count the number of ApplicationDocuments
     * const count = await prisma.applicationDocument.count({
     *   where: {
     *     // ... the filter for the ApplicationDocuments we want to count
     *   }
     * })
    **/
    count<T extends ApplicationDocumentCountArgs>(
      args?: Subset<T, ApplicationDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApplicationDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationDocumentAggregateArgs>(args: Subset<T, ApplicationDocumentAggregateArgs>): Prisma.PrismaPromise<GetApplicationDocumentAggregateType<T>>

    /**
     * Group by ApplicationDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationDocumentGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApplicationDocument model
   */
  readonly fields: ApplicationDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApplicationDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    application<T extends ApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ApplicationDefaultArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApplicationDocument model
   */
  interface ApplicationDocumentFieldRefs {
    readonly id: FieldRef<"ApplicationDocument", 'String'>
    readonly applicationId: FieldRef<"ApplicationDocument", 'String'>
    readonly documentType: FieldRef<"ApplicationDocument", 'String'>
    readonly documentCategory: FieldRef<"ApplicationDocument", 'String'>
    readonly documentTitle: FieldRef<"ApplicationDocument", 'String'>
    readonly fileName: FieldRef<"ApplicationDocument", 'String'>
    readonly fileUrl: FieldRef<"ApplicationDocument", 'String'>
    readonly fileSize: FieldRef<"ApplicationDocument", 'Int'>
    readonly mimeType: FieldRef<"ApplicationDocument", 'String'>
    readonly isRequired: FieldRef<"ApplicationDocument", 'Boolean'>
    readonly submissionDeadline: FieldRef<"ApplicationDocument", 'DateTime'>
    readonly reminderSent: FieldRef<"ApplicationDocument", 'Boolean'>
    readonly isVerified: FieldRef<"ApplicationDocument", 'Boolean'>
    readonly verifiedBy: FieldRef<"ApplicationDocument", 'String'>
    readonly verifiedAt: FieldRef<"ApplicationDocument", 'DateTime'>
    readonly verificationNotes: FieldRef<"ApplicationDocument", 'String'>
    readonly documentStatus: FieldRef<"ApplicationDocument", 'String'>
    readonly uploadedAt: FieldRef<"ApplicationDocument", 'DateTime'>
    readonly updatedAt: FieldRef<"ApplicationDocument", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ApplicationDocument findUnique
   */
  export type ApplicationDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationDocument to fetch.
     */
    where: ApplicationDocumentWhereUniqueInput
  }

  /**
   * ApplicationDocument findUniqueOrThrow
   */
  export type ApplicationDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationDocument to fetch.
     */
    where: ApplicationDocumentWhereUniqueInput
  }

  /**
   * ApplicationDocument findFirst
   */
  export type ApplicationDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationDocument to fetch.
     */
    where?: ApplicationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationDocuments to fetch.
     */
    orderBy?: ApplicationDocumentOrderByWithRelationInput | ApplicationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationDocuments.
     */
    cursor?: ApplicationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationDocuments.
     */
    distinct?: ApplicationDocumentScalarFieldEnum | ApplicationDocumentScalarFieldEnum[]
  }

  /**
   * ApplicationDocument findFirstOrThrow
   */
  export type ApplicationDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationDocument to fetch.
     */
    where?: ApplicationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationDocuments to fetch.
     */
    orderBy?: ApplicationDocumentOrderByWithRelationInput | ApplicationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationDocuments.
     */
    cursor?: ApplicationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationDocuments.
     */
    distinct?: ApplicationDocumentScalarFieldEnum | ApplicationDocumentScalarFieldEnum[]
  }

  /**
   * ApplicationDocument findMany
   */
  export type ApplicationDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ApplicationDocuments to fetch.
     */
    where?: ApplicationDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationDocuments to fetch.
     */
    orderBy?: ApplicationDocumentOrderByWithRelationInput | ApplicationDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApplicationDocuments.
     */
    cursor?: ApplicationDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationDocuments.
     */
    skip?: number
    distinct?: ApplicationDocumentScalarFieldEnum | ApplicationDocumentScalarFieldEnum[]
  }

  /**
   * ApplicationDocument create
   */
  export type ApplicationDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a ApplicationDocument.
     */
    data: XOR<ApplicationDocumentCreateInput, ApplicationDocumentUncheckedCreateInput>
  }

  /**
   * ApplicationDocument createMany
   */
  export type ApplicationDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApplicationDocuments.
     */
    data: ApplicationDocumentCreateManyInput | ApplicationDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApplicationDocument createManyAndReturn
   */
  export type ApplicationDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * The data used to create many ApplicationDocuments.
     */
    data: ApplicationDocumentCreateManyInput | ApplicationDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApplicationDocument update
   */
  export type ApplicationDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a ApplicationDocument.
     */
    data: XOR<ApplicationDocumentUpdateInput, ApplicationDocumentUncheckedUpdateInput>
    /**
     * Choose, which ApplicationDocument to update.
     */
    where: ApplicationDocumentWhereUniqueInput
  }

  /**
   * ApplicationDocument updateMany
   */
  export type ApplicationDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApplicationDocuments.
     */
    data: XOR<ApplicationDocumentUpdateManyMutationInput, ApplicationDocumentUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationDocuments to update
     */
    where?: ApplicationDocumentWhereInput
    /**
     * Limit how many ApplicationDocuments to update.
     */
    limit?: number
  }

  /**
   * ApplicationDocument updateManyAndReturn
   */
  export type ApplicationDocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * The data used to update ApplicationDocuments.
     */
    data: XOR<ApplicationDocumentUpdateManyMutationInput, ApplicationDocumentUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationDocuments to update
     */
    where?: ApplicationDocumentWhereInput
    /**
     * Limit how many ApplicationDocuments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApplicationDocument upsert
   */
  export type ApplicationDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the ApplicationDocument to update in case it exists.
     */
    where: ApplicationDocumentWhereUniqueInput
    /**
     * In case the ApplicationDocument found by the `where` argument doesn't exist, create a new ApplicationDocument with this data.
     */
    create: XOR<ApplicationDocumentCreateInput, ApplicationDocumentUncheckedCreateInput>
    /**
     * In case the ApplicationDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationDocumentUpdateInput, ApplicationDocumentUncheckedUpdateInput>
  }

  /**
   * ApplicationDocument delete
   */
  export type ApplicationDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
    /**
     * Filter which ApplicationDocument to delete.
     */
    where: ApplicationDocumentWhereUniqueInput
  }

  /**
   * ApplicationDocument deleteMany
   */
  export type ApplicationDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationDocuments to delete
     */
    where?: ApplicationDocumentWhereInput
    /**
     * Limit how many ApplicationDocuments to delete.
     */
    limit?: number
  }

  /**
   * ApplicationDocument without action
   */
  export type ApplicationDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationDocument
     */
    select?: ApplicationDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApplicationDocument
     */
    omit?: ApplicationDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationDocumentInclude<ExtArgs> | null
  }


  /**
   * Model Interview
   */

  export type AggregateInterview = {
    _count: InterviewCountAggregateOutputType | null
    _avg: InterviewAvgAggregateOutputType | null
    _sum: InterviewSumAggregateOutputType | null
    _min: InterviewMinAggregateOutputType | null
    _max: InterviewMaxAggregateOutputType | null
  }

  export type InterviewAvgAggregateOutputType = {
    duration: number | null
    interviewScore: number | null
  }

  export type InterviewSumAggregateOutputType = {
    duration: number | null
    interviewScore: number | null
  }

  export type InterviewMinAggregateOutputType = {
    id: string | null
    applicationId: string | null
    interviewType: string | null
    scheduledDate: Date | null
    scheduledTime: string | null
    timezone: string | null
    duration: number | null
    interviewerName: string | null
    interviewerEmail: string | null
    meetingLink: string | null
    meetingPassword: string | null
    location: string | null
    interviewStatus: string | null
    interviewScore: number | null
    interviewFeedback: string | null
    reminderSent: boolean | null
    confirmationReceived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InterviewMaxAggregateOutputType = {
    id: string | null
    applicationId: string | null
    interviewType: string | null
    scheduledDate: Date | null
    scheduledTime: string | null
    timezone: string | null
    duration: number | null
    interviewerName: string | null
    interviewerEmail: string | null
    meetingLink: string | null
    meetingPassword: string | null
    location: string | null
    interviewStatus: string | null
    interviewScore: number | null
    interviewFeedback: string | null
    reminderSent: boolean | null
    confirmationReceived: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InterviewCountAggregateOutputType = {
    id: number
    applicationId: number
    interviewType: number
    scheduledDate: number
    scheduledTime: number
    timezone: number
    duration: number
    interviewerName: number
    interviewerEmail: number
    meetingLink: number
    meetingPassword: number
    location: number
    interviewStatus: number
    interviewScore: number
    interviewFeedback: number
    reminderSent: number
    confirmationReceived: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InterviewAvgAggregateInputType = {
    duration?: true
    interviewScore?: true
  }

  export type InterviewSumAggregateInputType = {
    duration?: true
    interviewScore?: true
  }

  export type InterviewMinAggregateInputType = {
    id?: true
    applicationId?: true
    interviewType?: true
    scheduledDate?: true
    scheduledTime?: true
    timezone?: true
    duration?: true
    interviewerName?: true
    interviewerEmail?: true
    meetingLink?: true
    meetingPassword?: true
    location?: true
    interviewStatus?: true
    interviewScore?: true
    interviewFeedback?: true
    reminderSent?: true
    confirmationReceived?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InterviewMaxAggregateInputType = {
    id?: true
    applicationId?: true
    interviewType?: true
    scheduledDate?: true
    scheduledTime?: true
    timezone?: true
    duration?: true
    interviewerName?: true
    interviewerEmail?: true
    meetingLink?: true
    meetingPassword?: true
    location?: true
    interviewStatus?: true
    interviewScore?: true
    interviewFeedback?: true
    reminderSent?: true
    confirmationReceived?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InterviewCountAggregateInputType = {
    id?: true
    applicationId?: true
    interviewType?: true
    scheduledDate?: true
    scheduledTime?: true
    timezone?: true
    duration?: true
    interviewerName?: true
    interviewerEmail?: true
    meetingLink?: true
    meetingPassword?: true
    location?: true
    interviewStatus?: true
    interviewScore?: true
    interviewFeedback?: true
    reminderSent?: true
    confirmationReceived?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InterviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Interview to aggregate.
     */
    where?: InterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interviews to fetch.
     */
    orderBy?: InterviewOrderByWithRelationInput | InterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Interviews
    **/
    _count?: true | InterviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InterviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InterviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InterviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InterviewMaxAggregateInputType
  }

  export type GetInterviewAggregateType<T extends InterviewAggregateArgs> = {
        [P in keyof T & keyof AggregateInterview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInterview[P]>
      : GetScalarType<T[P], AggregateInterview[P]>
  }




  export type InterviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InterviewWhereInput
    orderBy?: InterviewOrderByWithAggregationInput | InterviewOrderByWithAggregationInput[]
    by: InterviewScalarFieldEnum[] | InterviewScalarFieldEnum
    having?: InterviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InterviewCountAggregateInputType | true
    _avg?: InterviewAvgAggregateInputType
    _sum?: InterviewSumAggregateInputType
    _min?: InterviewMinAggregateInputType
    _max?: InterviewMaxAggregateInputType
  }

  export type InterviewGroupByOutputType = {
    id: string
    applicationId: string
    interviewType: string
    scheduledDate: Date | null
    scheduledTime: string | null
    timezone: string
    duration: number | null
    interviewerName: string | null
    interviewerEmail: string | null
    meetingLink: string | null
    meetingPassword: string | null
    location: string | null
    interviewStatus: string
    interviewScore: number | null
    interviewFeedback: string | null
    reminderSent: boolean
    confirmationReceived: boolean
    createdAt: Date
    updatedAt: Date
    _count: InterviewCountAggregateOutputType | null
    _avg: InterviewAvgAggregateOutputType | null
    _sum: InterviewSumAggregateOutputType | null
    _min: InterviewMinAggregateOutputType | null
    _max: InterviewMaxAggregateOutputType | null
  }

  type GetInterviewGroupByPayload<T extends InterviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InterviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InterviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InterviewGroupByOutputType[P]>
            : GetScalarType<T[P], InterviewGroupByOutputType[P]>
        }
      >
    >


  export type InterviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    interviewType?: boolean
    scheduledDate?: boolean
    scheduledTime?: boolean
    timezone?: boolean
    duration?: boolean
    interviewerName?: boolean
    interviewerEmail?: boolean
    meetingLink?: boolean
    meetingPassword?: boolean
    location?: boolean
    interviewStatus?: boolean
    interviewScore?: boolean
    interviewFeedback?: boolean
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
    calendarEvents?: boolean | Interview$calendarEventsArgs<ExtArgs>
    _count?: boolean | InterviewCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["interview"]>

  export type InterviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    interviewType?: boolean
    scheduledDate?: boolean
    scheduledTime?: boolean
    timezone?: boolean
    duration?: boolean
    interviewerName?: boolean
    interviewerEmail?: boolean
    meetingLink?: boolean
    meetingPassword?: boolean
    location?: boolean
    interviewStatus?: boolean
    interviewScore?: boolean
    interviewFeedback?: boolean
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["interview"]>

  export type InterviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    applicationId?: boolean
    interviewType?: boolean
    scheduledDate?: boolean
    scheduledTime?: boolean
    timezone?: boolean
    duration?: boolean
    interviewerName?: boolean
    interviewerEmail?: boolean
    meetingLink?: boolean
    meetingPassword?: boolean
    location?: boolean
    interviewStatus?: boolean
    interviewScore?: boolean
    interviewFeedback?: boolean
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["interview"]>

  export type InterviewSelectScalar = {
    id?: boolean
    applicationId?: boolean
    interviewType?: boolean
    scheduledDate?: boolean
    scheduledTime?: boolean
    timezone?: boolean
    duration?: boolean
    interviewerName?: boolean
    interviewerEmail?: boolean
    meetingLink?: boolean
    meetingPassword?: boolean
    location?: boolean
    interviewStatus?: boolean
    interviewScore?: boolean
    interviewFeedback?: boolean
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InterviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "applicationId" | "interviewType" | "scheduledDate" | "scheduledTime" | "timezone" | "duration" | "interviewerName" | "interviewerEmail" | "meetingLink" | "meetingPassword" | "location" | "interviewStatus" | "interviewScore" | "interviewFeedback" | "reminderSent" | "confirmationReceived" | "createdAt" | "updatedAt", ExtArgs["result"]["interview"]>
  export type InterviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
    calendarEvents?: boolean | Interview$calendarEventsArgs<ExtArgs>
    _count?: boolean | InterviewCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InterviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }
  export type InterviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    application?: boolean | ApplicationDefaultArgs<ExtArgs>
  }

  export type $InterviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Interview"
    objects: {
      application: Prisma.$ApplicationPayload<ExtArgs>
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      applicationId: string
      interviewType: string
      scheduledDate: Date | null
      scheduledTime: string | null
      timezone: string
      duration: number | null
      interviewerName: string | null
      interviewerEmail: string | null
      meetingLink: string | null
      meetingPassword: string | null
      location: string | null
      interviewStatus: string
      interviewScore: number | null
      interviewFeedback: string | null
      reminderSent: boolean
      confirmationReceived: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["interview"]>
    composites: {}
  }

  type InterviewGetPayload<S extends boolean | null | undefined | InterviewDefaultArgs> = $Result.GetResult<Prisma.$InterviewPayload, S>

  type InterviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InterviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InterviewCountAggregateInputType | true
    }

  export interface InterviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Interview'], meta: { name: 'Interview' } }
    /**
     * Find zero or one Interview that matches the filter.
     * @param {InterviewFindUniqueArgs} args - Arguments to find a Interview
     * @example
     * // Get one Interview
     * const interview = await prisma.interview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InterviewFindUniqueArgs>(args: SelectSubset<T, InterviewFindUniqueArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Interview that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InterviewFindUniqueOrThrowArgs} args - Arguments to find a Interview
     * @example
     * // Get one Interview
     * const interview = await prisma.interview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InterviewFindUniqueOrThrowArgs>(args: SelectSubset<T, InterviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Interview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterviewFindFirstArgs} args - Arguments to find a Interview
     * @example
     * // Get one Interview
     * const interview = await prisma.interview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InterviewFindFirstArgs>(args?: SelectSubset<T, InterviewFindFirstArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Interview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterviewFindFirstOrThrowArgs} args - Arguments to find a Interview
     * @example
     * // Get one Interview
     * const interview = await prisma.interview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InterviewFindFirstOrThrowArgs>(args?: SelectSubset<T, InterviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Interviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Interviews
     * const interviews = await prisma.interview.findMany()
     * 
     * // Get first 10 Interviews
     * const interviews = await prisma.interview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const interviewWithIdOnly = await prisma.interview.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InterviewFindManyArgs>(args?: SelectSubset<T, InterviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Interview.
     * @param {InterviewCreateArgs} args - Arguments to create a Interview.
     * @example
     * // Create one Interview
     * const Interview = await prisma.interview.create({
     *   data: {
     *     // ... data to create a Interview
     *   }
     * })
     * 
     */
    create<T extends InterviewCreateArgs>(args: SelectSubset<T, InterviewCreateArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Interviews.
     * @param {InterviewCreateManyArgs} args - Arguments to create many Interviews.
     * @example
     * // Create many Interviews
     * const interview = await prisma.interview.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InterviewCreateManyArgs>(args?: SelectSubset<T, InterviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Interviews and returns the data saved in the database.
     * @param {InterviewCreateManyAndReturnArgs} args - Arguments to create many Interviews.
     * @example
     * // Create many Interviews
     * const interview = await prisma.interview.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Interviews and only return the `id`
     * const interviewWithIdOnly = await prisma.interview.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InterviewCreateManyAndReturnArgs>(args?: SelectSubset<T, InterviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Interview.
     * @param {InterviewDeleteArgs} args - Arguments to delete one Interview.
     * @example
     * // Delete one Interview
     * const Interview = await prisma.interview.delete({
     *   where: {
     *     // ... filter to delete one Interview
     *   }
     * })
     * 
     */
    delete<T extends InterviewDeleteArgs>(args: SelectSubset<T, InterviewDeleteArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Interview.
     * @param {InterviewUpdateArgs} args - Arguments to update one Interview.
     * @example
     * // Update one Interview
     * const interview = await prisma.interview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InterviewUpdateArgs>(args: SelectSubset<T, InterviewUpdateArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Interviews.
     * @param {InterviewDeleteManyArgs} args - Arguments to filter Interviews to delete.
     * @example
     * // Delete a few Interviews
     * const { count } = await prisma.interview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InterviewDeleteManyArgs>(args?: SelectSubset<T, InterviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Interviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Interviews
     * const interview = await prisma.interview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InterviewUpdateManyArgs>(args: SelectSubset<T, InterviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Interviews and returns the data updated in the database.
     * @param {InterviewUpdateManyAndReturnArgs} args - Arguments to update many Interviews.
     * @example
     * // Update many Interviews
     * const interview = await prisma.interview.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Interviews and only return the `id`
     * const interviewWithIdOnly = await prisma.interview.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InterviewUpdateManyAndReturnArgs>(args: SelectSubset<T, InterviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Interview.
     * @param {InterviewUpsertArgs} args - Arguments to update or create a Interview.
     * @example
     * // Update or create a Interview
     * const interview = await prisma.interview.upsert({
     *   create: {
     *     // ... data to create a Interview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Interview we want to update
     *   }
     * })
     */
    upsert<T extends InterviewUpsertArgs>(args: SelectSubset<T, InterviewUpsertArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Interviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterviewCountArgs} args - Arguments to filter Interviews to count.
     * @example
     * // Count the number of Interviews
     * const count = await prisma.interview.count({
     *   where: {
     *     // ... the filter for the Interviews we want to count
     *   }
     * })
    **/
    count<T extends InterviewCountArgs>(
      args?: Subset<T, InterviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InterviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Interview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InterviewAggregateArgs>(args: Subset<T, InterviewAggregateArgs>): Prisma.PrismaPromise<GetInterviewAggregateType<T>>

    /**
     * Group by Interview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InterviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InterviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InterviewGroupByArgs['orderBy'] }
        : { orderBy?: InterviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InterviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInterviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Interview model
   */
  readonly fields: InterviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Interview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InterviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    application<T extends ApplicationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ApplicationDefaultArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    calendarEvents<T extends Interview$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, Interview$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Interview model
   */
  interface InterviewFieldRefs {
    readonly id: FieldRef<"Interview", 'String'>
    readonly applicationId: FieldRef<"Interview", 'String'>
    readonly interviewType: FieldRef<"Interview", 'String'>
    readonly scheduledDate: FieldRef<"Interview", 'DateTime'>
    readonly scheduledTime: FieldRef<"Interview", 'String'>
    readonly timezone: FieldRef<"Interview", 'String'>
    readonly duration: FieldRef<"Interview", 'Int'>
    readonly interviewerName: FieldRef<"Interview", 'String'>
    readonly interviewerEmail: FieldRef<"Interview", 'String'>
    readonly meetingLink: FieldRef<"Interview", 'String'>
    readonly meetingPassword: FieldRef<"Interview", 'String'>
    readonly location: FieldRef<"Interview", 'String'>
    readonly interviewStatus: FieldRef<"Interview", 'String'>
    readonly interviewScore: FieldRef<"Interview", 'Float'>
    readonly interviewFeedback: FieldRef<"Interview", 'String'>
    readonly reminderSent: FieldRef<"Interview", 'Boolean'>
    readonly confirmationReceived: FieldRef<"Interview", 'Boolean'>
    readonly createdAt: FieldRef<"Interview", 'DateTime'>
    readonly updatedAt: FieldRef<"Interview", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Interview findUnique
   */
  export type InterviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * Filter, which Interview to fetch.
     */
    where: InterviewWhereUniqueInput
  }

  /**
   * Interview findUniqueOrThrow
   */
  export type InterviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * Filter, which Interview to fetch.
     */
    where: InterviewWhereUniqueInput
  }

  /**
   * Interview findFirst
   */
  export type InterviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * Filter, which Interview to fetch.
     */
    where?: InterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interviews to fetch.
     */
    orderBy?: InterviewOrderByWithRelationInput | InterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Interviews.
     */
    cursor?: InterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Interviews.
     */
    distinct?: InterviewScalarFieldEnum | InterviewScalarFieldEnum[]
  }

  /**
   * Interview findFirstOrThrow
   */
  export type InterviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * Filter, which Interview to fetch.
     */
    where?: InterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interviews to fetch.
     */
    orderBy?: InterviewOrderByWithRelationInput | InterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Interviews.
     */
    cursor?: InterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Interviews.
     */
    distinct?: InterviewScalarFieldEnum | InterviewScalarFieldEnum[]
  }

  /**
   * Interview findMany
   */
  export type InterviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * Filter, which Interviews to fetch.
     */
    where?: InterviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Interviews to fetch.
     */
    orderBy?: InterviewOrderByWithRelationInput | InterviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Interviews.
     */
    cursor?: InterviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Interviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Interviews.
     */
    skip?: number
    distinct?: InterviewScalarFieldEnum | InterviewScalarFieldEnum[]
  }

  /**
   * Interview create
   */
  export type InterviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Interview.
     */
    data: XOR<InterviewCreateInput, InterviewUncheckedCreateInput>
  }

  /**
   * Interview createMany
   */
  export type InterviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Interviews.
     */
    data: InterviewCreateManyInput | InterviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Interview createManyAndReturn
   */
  export type InterviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * The data used to create many Interviews.
     */
    data: InterviewCreateManyInput | InterviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Interview update
   */
  export type InterviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Interview.
     */
    data: XOR<InterviewUpdateInput, InterviewUncheckedUpdateInput>
    /**
     * Choose, which Interview to update.
     */
    where: InterviewWhereUniqueInput
  }

  /**
   * Interview updateMany
   */
  export type InterviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Interviews.
     */
    data: XOR<InterviewUpdateManyMutationInput, InterviewUncheckedUpdateManyInput>
    /**
     * Filter which Interviews to update
     */
    where?: InterviewWhereInput
    /**
     * Limit how many Interviews to update.
     */
    limit?: number
  }

  /**
   * Interview updateManyAndReturn
   */
  export type InterviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * The data used to update Interviews.
     */
    data: XOR<InterviewUpdateManyMutationInput, InterviewUncheckedUpdateManyInput>
    /**
     * Filter which Interviews to update
     */
    where?: InterviewWhereInput
    /**
     * Limit how many Interviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Interview upsert
   */
  export type InterviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Interview to update in case it exists.
     */
    where: InterviewWhereUniqueInput
    /**
     * In case the Interview found by the `where` argument doesn't exist, create a new Interview with this data.
     */
    create: XOR<InterviewCreateInput, InterviewUncheckedCreateInput>
    /**
     * In case the Interview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InterviewUpdateInput, InterviewUncheckedUpdateInput>
  }

  /**
   * Interview delete
   */
  export type InterviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    /**
     * Filter which Interview to delete.
     */
    where: InterviewWhereUniqueInput
  }

  /**
   * Interview deleteMany
   */
  export type InterviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Interviews to delete
     */
    where?: InterviewWhereInput
    /**
     * Limit how many Interviews to delete.
     */
    limit?: number
  }

  /**
   * Interview.calendarEvents
   */
  export type Interview$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * Interview without action
   */
  export type InterviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
  }


  /**
   * Model TuitionBreakdown
   */

  export type AggregateTuitionBreakdown = {
    _count: TuitionBreakdownCountAggregateOutputType | null
    _avg: TuitionBreakdownAvgAggregateOutputType | null
    _sum: TuitionBreakdownSumAggregateOutputType | null
    _min: TuitionBreakdownMinAggregateOutputType | null
    _max: TuitionBreakdownMaxAggregateOutputType | null
  }

  export type TuitionBreakdownAvgAggregateOutputType = {
    yearNumber: number | null
    baseTuition: number | null
    labFees: number | null
    libraryFees: number | null
    technologyFees: number | null
    activityFees: number | null
    healthInsurance: number | null
    dormitoryFees: number | null
    mealPlanFees: number | null
    applicationFee: number | null
    registrationFee: number | null
    examFees: number | null
    graduationFee: number | null
    totalTuition: number | null
    totalAdditionalFees: number | null
    grandTotal: number | null
    installmentCount: number | null
  }

  export type TuitionBreakdownSumAggregateOutputType = {
    yearNumber: number | null
    baseTuition: number | null
    labFees: number | null
    libraryFees: number | null
    technologyFees: number | null
    activityFees: number | null
    healthInsurance: number | null
    dormitoryFees: number | null
    mealPlanFees: number | null
    applicationFee: number | null
    registrationFee: number | null
    examFees: number | null
    graduationFee: number | null
    totalTuition: number | null
    totalAdditionalFees: number | null
    grandTotal: number | null
    installmentCount: number | null
  }

  export type TuitionBreakdownMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    academicYear: string | null
    yearNumber: number | null
    baseTuition: number | null
    labFees: number | null
    libraryFees: number | null
    technologyFees: number | null
    activityFees: number | null
    healthInsurance: number | null
    dormitoryFees: number | null
    mealPlanFees: number | null
    applicationFee: number | null
    registrationFee: number | null
    examFees: number | null
    graduationFee: number | null
    totalTuition: number | null
    totalAdditionalFees: number | null
    grandTotal: number | null
    currency: string | null
    currencySymbol: string | null
    paymentTerms: string | null
    installmentCount: number | null
    isActive: boolean | null
    effectiveDate: Date | null
    expiryDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TuitionBreakdownMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    academicYear: string | null
    yearNumber: number | null
    baseTuition: number | null
    labFees: number | null
    libraryFees: number | null
    technologyFees: number | null
    activityFees: number | null
    healthInsurance: number | null
    dormitoryFees: number | null
    mealPlanFees: number | null
    applicationFee: number | null
    registrationFee: number | null
    examFees: number | null
    graduationFee: number | null
    totalTuition: number | null
    totalAdditionalFees: number | null
    grandTotal: number | null
    currency: string | null
    currencySymbol: string | null
    paymentTerms: string | null
    installmentCount: number | null
    isActive: boolean | null
    effectiveDate: Date | null
    expiryDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TuitionBreakdownCountAggregateOutputType = {
    id: number
    universityId: number
    programId: number
    academicYear: number
    yearNumber: number
    baseTuition: number
    labFees: number
    libraryFees: number
    technologyFees: number
    activityFees: number
    healthInsurance: number
    dormitoryFees: number
    mealPlanFees: number
    applicationFee: number
    registrationFee: number
    examFees: number
    graduationFee: number
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency: number
    currencySymbol: number
    paymentTerms: number
    installmentCount: number
    isActive: number
    effectiveDate: number
    expiryDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TuitionBreakdownAvgAggregateInputType = {
    yearNumber?: true
    baseTuition?: true
    labFees?: true
    libraryFees?: true
    technologyFees?: true
    activityFees?: true
    healthInsurance?: true
    dormitoryFees?: true
    mealPlanFees?: true
    applicationFee?: true
    registrationFee?: true
    examFees?: true
    graduationFee?: true
    totalTuition?: true
    totalAdditionalFees?: true
    grandTotal?: true
    installmentCount?: true
  }

  export type TuitionBreakdownSumAggregateInputType = {
    yearNumber?: true
    baseTuition?: true
    labFees?: true
    libraryFees?: true
    technologyFees?: true
    activityFees?: true
    healthInsurance?: true
    dormitoryFees?: true
    mealPlanFees?: true
    applicationFee?: true
    registrationFee?: true
    examFees?: true
    graduationFee?: true
    totalTuition?: true
    totalAdditionalFees?: true
    grandTotal?: true
    installmentCount?: true
  }

  export type TuitionBreakdownMinAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    academicYear?: true
    yearNumber?: true
    baseTuition?: true
    labFees?: true
    libraryFees?: true
    technologyFees?: true
    activityFees?: true
    healthInsurance?: true
    dormitoryFees?: true
    mealPlanFees?: true
    applicationFee?: true
    registrationFee?: true
    examFees?: true
    graduationFee?: true
    totalTuition?: true
    totalAdditionalFees?: true
    grandTotal?: true
    currency?: true
    currencySymbol?: true
    paymentTerms?: true
    installmentCount?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TuitionBreakdownMaxAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    academicYear?: true
    yearNumber?: true
    baseTuition?: true
    labFees?: true
    libraryFees?: true
    technologyFees?: true
    activityFees?: true
    healthInsurance?: true
    dormitoryFees?: true
    mealPlanFees?: true
    applicationFee?: true
    registrationFee?: true
    examFees?: true
    graduationFee?: true
    totalTuition?: true
    totalAdditionalFees?: true
    grandTotal?: true
    currency?: true
    currencySymbol?: true
    paymentTerms?: true
    installmentCount?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TuitionBreakdownCountAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    academicYear?: true
    yearNumber?: true
    baseTuition?: true
    labFees?: true
    libraryFees?: true
    technologyFees?: true
    activityFees?: true
    healthInsurance?: true
    dormitoryFees?: true
    mealPlanFees?: true
    applicationFee?: true
    registrationFee?: true
    examFees?: true
    graduationFee?: true
    totalTuition?: true
    totalAdditionalFees?: true
    grandTotal?: true
    currency?: true
    currencySymbol?: true
    paymentTerms?: true
    installmentCount?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TuitionBreakdownAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TuitionBreakdown to aggregate.
     */
    where?: TuitionBreakdownWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TuitionBreakdowns to fetch.
     */
    orderBy?: TuitionBreakdownOrderByWithRelationInput | TuitionBreakdownOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TuitionBreakdownWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TuitionBreakdowns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TuitionBreakdowns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TuitionBreakdowns
    **/
    _count?: true | TuitionBreakdownCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TuitionBreakdownAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TuitionBreakdownSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TuitionBreakdownMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TuitionBreakdownMaxAggregateInputType
  }

  export type GetTuitionBreakdownAggregateType<T extends TuitionBreakdownAggregateArgs> = {
        [P in keyof T & keyof AggregateTuitionBreakdown]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTuitionBreakdown[P]>
      : GetScalarType<T[P], AggregateTuitionBreakdown[P]>
  }




  export type TuitionBreakdownGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TuitionBreakdownWhereInput
    orderBy?: TuitionBreakdownOrderByWithAggregationInput | TuitionBreakdownOrderByWithAggregationInput[]
    by: TuitionBreakdownScalarFieldEnum[] | TuitionBreakdownScalarFieldEnum
    having?: TuitionBreakdownScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TuitionBreakdownCountAggregateInputType | true
    _avg?: TuitionBreakdownAvgAggregateInputType
    _sum?: TuitionBreakdownSumAggregateInputType
    _min?: TuitionBreakdownMinAggregateInputType
    _max?: TuitionBreakdownMaxAggregateInputType
  }

  export type TuitionBreakdownGroupByOutputType = {
    id: string
    universityId: string
    programId: string | null
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees: number | null
    libraryFees: number | null
    technologyFees: number | null
    activityFees: number | null
    healthInsurance: number | null
    dormitoryFees: number | null
    mealPlanFees: number | null
    applicationFee: number | null
    registrationFee: number | null
    examFees: number | null
    graduationFee: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency: string
    currencySymbol: string
    paymentTerms: string | null
    installmentCount: number | null
    isActive: boolean
    effectiveDate: Date
    expiryDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: TuitionBreakdownCountAggregateOutputType | null
    _avg: TuitionBreakdownAvgAggregateOutputType | null
    _sum: TuitionBreakdownSumAggregateOutputType | null
    _min: TuitionBreakdownMinAggregateOutputType | null
    _max: TuitionBreakdownMaxAggregateOutputType | null
  }

  type GetTuitionBreakdownGroupByPayload<T extends TuitionBreakdownGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TuitionBreakdownGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TuitionBreakdownGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TuitionBreakdownGroupByOutputType[P]>
            : GetScalarType<T[P], TuitionBreakdownGroupByOutputType[P]>
        }
      >
    >


  export type TuitionBreakdownSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    academicYear?: boolean
    yearNumber?: boolean
    baseTuition?: boolean
    labFees?: boolean
    libraryFees?: boolean
    technologyFees?: boolean
    activityFees?: boolean
    healthInsurance?: boolean
    dormitoryFees?: boolean
    mealPlanFees?: boolean
    applicationFee?: boolean
    registrationFee?: boolean
    examFees?: boolean
    graduationFee?: boolean
    totalTuition?: boolean
    totalAdditionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | TuitionBreakdown$programArgs<ExtArgs>
    paymentSchedule?: boolean | TuitionBreakdown$paymentScheduleArgs<ExtArgs>
    _count?: boolean | TuitionBreakdownCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tuitionBreakdown"]>

  export type TuitionBreakdownSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    academicYear?: boolean
    yearNumber?: boolean
    baseTuition?: boolean
    labFees?: boolean
    libraryFees?: boolean
    technologyFees?: boolean
    activityFees?: boolean
    healthInsurance?: boolean
    dormitoryFees?: boolean
    mealPlanFees?: boolean
    applicationFee?: boolean
    registrationFee?: boolean
    examFees?: boolean
    graduationFee?: boolean
    totalTuition?: boolean
    totalAdditionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | TuitionBreakdown$programArgs<ExtArgs>
  }, ExtArgs["result"]["tuitionBreakdown"]>

  export type TuitionBreakdownSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    academicYear?: boolean
    yearNumber?: boolean
    baseTuition?: boolean
    labFees?: boolean
    libraryFees?: boolean
    technologyFees?: boolean
    activityFees?: boolean
    healthInsurance?: boolean
    dormitoryFees?: boolean
    mealPlanFees?: boolean
    applicationFee?: boolean
    registrationFee?: boolean
    examFees?: boolean
    graduationFee?: boolean
    totalTuition?: boolean
    totalAdditionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | TuitionBreakdown$programArgs<ExtArgs>
  }, ExtArgs["result"]["tuitionBreakdown"]>

  export type TuitionBreakdownSelectScalar = {
    id?: boolean
    universityId?: boolean
    programId?: boolean
    academicYear?: boolean
    yearNumber?: boolean
    baseTuition?: boolean
    labFees?: boolean
    libraryFees?: boolean
    technologyFees?: boolean
    activityFees?: boolean
    healthInsurance?: boolean
    dormitoryFees?: boolean
    mealPlanFees?: boolean
    applicationFee?: boolean
    registrationFee?: boolean
    examFees?: boolean
    graduationFee?: boolean
    totalTuition?: boolean
    totalAdditionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TuitionBreakdownOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "programId" | "academicYear" | "yearNumber" | "baseTuition" | "labFees" | "libraryFees" | "technologyFees" | "activityFees" | "healthInsurance" | "dormitoryFees" | "mealPlanFees" | "applicationFee" | "registrationFee" | "examFees" | "graduationFee" | "totalTuition" | "totalAdditionalFees" | "grandTotal" | "currency" | "currencySymbol" | "paymentTerms" | "installmentCount" | "isActive" | "effectiveDate" | "expiryDate" | "createdAt" | "updatedAt", ExtArgs["result"]["tuitionBreakdown"]>
  export type TuitionBreakdownInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | TuitionBreakdown$programArgs<ExtArgs>
    paymentSchedule?: boolean | TuitionBreakdown$paymentScheduleArgs<ExtArgs>
    _count?: boolean | TuitionBreakdownCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TuitionBreakdownIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | TuitionBreakdown$programArgs<ExtArgs>
  }
  export type TuitionBreakdownIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | TuitionBreakdown$programArgs<ExtArgs>
  }

  export type $TuitionBreakdownPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TuitionBreakdown"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
      program: Prisma.$ProgramPayload<ExtArgs> | null
      paymentSchedule: Prisma.$PaymentSchedulePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      programId: string | null
      academicYear: string
      yearNumber: number
      baseTuition: number
      labFees: number | null
      libraryFees: number | null
      technologyFees: number | null
      activityFees: number | null
      healthInsurance: number | null
      dormitoryFees: number | null
      mealPlanFees: number | null
      applicationFee: number | null
      registrationFee: number | null
      examFees: number | null
      graduationFee: number | null
      totalTuition: number
      totalAdditionalFees: number
      grandTotal: number
      currency: string
      currencySymbol: string
      paymentTerms: string | null
      installmentCount: number | null
      isActive: boolean
      effectiveDate: Date
      expiryDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["tuitionBreakdown"]>
    composites: {}
  }

  type TuitionBreakdownGetPayload<S extends boolean | null | undefined | TuitionBreakdownDefaultArgs> = $Result.GetResult<Prisma.$TuitionBreakdownPayload, S>

  type TuitionBreakdownCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TuitionBreakdownFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TuitionBreakdownCountAggregateInputType | true
    }

  export interface TuitionBreakdownDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TuitionBreakdown'], meta: { name: 'TuitionBreakdown' } }
    /**
     * Find zero or one TuitionBreakdown that matches the filter.
     * @param {TuitionBreakdownFindUniqueArgs} args - Arguments to find a TuitionBreakdown
     * @example
     * // Get one TuitionBreakdown
     * const tuitionBreakdown = await prisma.tuitionBreakdown.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TuitionBreakdownFindUniqueArgs>(args: SelectSubset<T, TuitionBreakdownFindUniqueArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TuitionBreakdown that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TuitionBreakdownFindUniqueOrThrowArgs} args - Arguments to find a TuitionBreakdown
     * @example
     * // Get one TuitionBreakdown
     * const tuitionBreakdown = await prisma.tuitionBreakdown.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TuitionBreakdownFindUniqueOrThrowArgs>(args: SelectSubset<T, TuitionBreakdownFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TuitionBreakdown that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TuitionBreakdownFindFirstArgs} args - Arguments to find a TuitionBreakdown
     * @example
     * // Get one TuitionBreakdown
     * const tuitionBreakdown = await prisma.tuitionBreakdown.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TuitionBreakdownFindFirstArgs>(args?: SelectSubset<T, TuitionBreakdownFindFirstArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TuitionBreakdown that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TuitionBreakdownFindFirstOrThrowArgs} args - Arguments to find a TuitionBreakdown
     * @example
     * // Get one TuitionBreakdown
     * const tuitionBreakdown = await prisma.tuitionBreakdown.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TuitionBreakdownFindFirstOrThrowArgs>(args?: SelectSubset<T, TuitionBreakdownFindFirstOrThrowArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TuitionBreakdowns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TuitionBreakdownFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TuitionBreakdowns
     * const tuitionBreakdowns = await prisma.tuitionBreakdown.findMany()
     * 
     * // Get first 10 TuitionBreakdowns
     * const tuitionBreakdowns = await prisma.tuitionBreakdown.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tuitionBreakdownWithIdOnly = await prisma.tuitionBreakdown.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TuitionBreakdownFindManyArgs>(args?: SelectSubset<T, TuitionBreakdownFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TuitionBreakdown.
     * @param {TuitionBreakdownCreateArgs} args - Arguments to create a TuitionBreakdown.
     * @example
     * // Create one TuitionBreakdown
     * const TuitionBreakdown = await prisma.tuitionBreakdown.create({
     *   data: {
     *     // ... data to create a TuitionBreakdown
     *   }
     * })
     * 
     */
    create<T extends TuitionBreakdownCreateArgs>(args: SelectSubset<T, TuitionBreakdownCreateArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TuitionBreakdowns.
     * @param {TuitionBreakdownCreateManyArgs} args - Arguments to create many TuitionBreakdowns.
     * @example
     * // Create many TuitionBreakdowns
     * const tuitionBreakdown = await prisma.tuitionBreakdown.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TuitionBreakdownCreateManyArgs>(args?: SelectSubset<T, TuitionBreakdownCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TuitionBreakdowns and returns the data saved in the database.
     * @param {TuitionBreakdownCreateManyAndReturnArgs} args - Arguments to create many TuitionBreakdowns.
     * @example
     * // Create many TuitionBreakdowns
     * const tuitionBreakdown = await prisma.tuitionBreakdown.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TuitionBreakdowns and only return the `id`
     * const tuitionBreakdownWithIdOnly = await prisma.tuitionBreakdown.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TuitionBreakdownCreateManyAndReturnArgs>(args?: SelectSubset<T, TuitionBreakdownCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TuitionBreakdown.
     * @param {TuitionBreakdownDeleteArgs} args - Arguments to delete one TuitionBreakdown.
     * @example
     * // Delete one TuitionBreakdown
     * const TuitionBreakdown = await prisma.tuitionBreakdown.delete({
     *   where: {
     *     // ... filter to delete one TuitionBreakdown
     *   }
     * })
     * 
     */
    delete<T extends TuitionBreakdownDeleteArgs>(args: SelectSubset<T, TuitionBreakdownDeleteArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TuitionBreakdown.
     * @param {TuitionBreakdownUpdateArgs} args - Arguments to update one TuitionBreakdown.
     * @example
     * // Update one TuitionBreakdown
     * const tuitionBreakdown = await prisma.tuitionBreakdown.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TuitionBreakdownUpdateArgs>(args: SelectSubset<T, TuitionBreakdownUpdateArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TuitionBreakdowns.
     * @param {TuitionBreakdownDeleteManyArgs} args - Arguments to filter TuitionBreakdowns to delete.
     * @example
     * // Delete a few TuitionBreakdowns
     * const { count } = await prisma.tuitionBreakdown.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TuitionBreakdownDeleteManyArgs>(args?: SelectSubset<T, TuitionBreakdownDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TuitionBreakdowns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TuitionBreakdownUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TuitionBreakdowns
     * const tuitionBreakdown = await prisma.tuitionBreakdown.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TuitionBreakdownUpdateManyArgs>(args: SelectSubset<T, TuitionBreakdownUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TuitionBreakdowns and returns the data updated in the database.
     * @param {TuitionBreakdownUpdateManyAndReturnArgs} args - Arguments to update many TuitionBreakdowns.
     * @example
     * // Update many TuitionBreakdowns
     * const tuitionBreakdown = await prisma.tuitionBreakdown.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TuitionBreakdowns and only return the `id`
     * const tuitionBreakdownWithIdOnly = await prisma.tuitionBreakdown.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TuitionBreakdownUpdateManyAndReturnArgs>(args: SelectSubset<T, TuitionBreakdownUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TuitionBreakdown.
     * @param {TuitionBreakdownUpsertArgs} args - Arguments to update or create a TuitionBreakdown.
     * @example
     * // Update or create a TuitionBreakdown
     * const tuitionBreakdown = await prisma.tuitionBreakdown.upsert({
     *   create: {
     *     // ... data to create a TuitionBreakdown
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TuitionBreakdown we want to update
     *   }
     * })
     */
    upsert<T extends TuitionBreakdownUpsertArgs>(args: SelectSubset<T, TuitionBreakdownUpsertArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TuitionBreakdowns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TuitionBreakdownCountArgs} args - Arguments to filter TuitionBreakdowns to count.
     * @example
     * // Count the number of TuitionBreakdowns
     * const count = await prisma.tuitionBreakdown.count({
     *   where: {
     *     // ... the filter for the TuitionBreakdowns we want to count
     *   }
     * })
    **/
    count<T extends TuitionBreakdownCountArgs>(
      args?: Subset<T, TuitionBreakdownCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TuitionBreakdownCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TuitionBreakdown.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TuitionBreakdownAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TuitionBreakdownAggregateArgs>(args: Subset<T, TuitionBreakdownAggregateArgs>): Prisma.PrismaPromise<GetTuitionBreakdownAggregateType<T>>

    /**
     * Group by TuitionBreakdown.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TuitionBreakdownGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TuitionBreakdownGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TuitionBreakdownGroupByArgs['orderBy'] }
        : { orderBy?: TuitionBreakdownGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TuitionBreakdownGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTuitionBreakdownGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TuitionBreakdown model
   */
  readonly fields: TuitionBreakdownFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TuitionBreakdown.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TuitionBreakdownClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    program<T extends TuitionBreakdown$programArgs<ExtArgs> = {}>(args?: Subset<T, TuitionBreakdown$programArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    paymentSchedule<T extends TuitionBreakdown$paymentScheduleArgs<ExtArgs> = {}>(args?: Subset<T, TuitionBreakdown$paymentScheduleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TuitionBreakdown model
   */
  interface TuitionBreakdownFieldRefs {
    readonly id: FieldRef<"TuitionBreakdown", 'String'>
    readonly universityId: FieldRef<"TuitionBreakdown", 'String'>
    readonly programId: FieldRef<"TuitionBreakdown", 'String'>
    readonly academicYear: FieldRef<"TuitionBreakdown", 'String'>
    readonly yearNumber: FieldRef<"TuitionBreakdown", 'Int'>
    readonly baseTuition: FieldRef<"TuitionBreakdown", 'Float'>
    readonly labFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly libraryFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly technologyFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly activityFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly healthInsurance: FieldRef<"TuitionBreakdown", 'Float'>
    readonly dormitoryFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly mealPlanFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly applicationFee: FieldRef<"TuitionBreakdown", 'Float'>
    readonly registrationFee: FieldRef<"TuitionBreakdown", 'Float'>
    readonly examFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly graduationFee: FieldRef<"TuitionBreakdown", 'Float'>
    readonly totalTuition: FieldRef<"TuitionBreakdown", 'Float'>
    readonly totalAdditionalFees: FieldRef<"TuitionBreakdown", 'Float'>
    readonly grandTotal: FieldRef<"TuitionBreakdown", 'Float'>
    readonly currency: FieldRef<"TuitionBreakdown", 'String'>
    readonly currencySymbol: FieldRef<"TuitionBreakdown", 'String'>
    readonly paymentTerms: FieldRef<"TuitionBreakdown", 'String'>
    readonly installmentCount: FieldRef<"TuitionBreakdown", 'Int'>
    readonly isActive: FieldRef<"TuitionBreakdown", 'Boolean'>
    readonly effectiveDate: FieldRef<"TuitionBreakdown", 'DateTime'>
    readonly expiryDate: FieldRef<"TuitionBreakdown", 'DateTime'>
    readonly createdAt: FieldRef<"TuitionBreakdown", 'DateTime'>
    readonly updatedAt: FieldRef<"TuitionBreakdown", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TuitionBreakdown findUnique
   */
  export type TuitionBreakdownFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * Filter, which TuitionBreakdown to fetch.
     */
    where: TuitionBreakdownWhereUniqueInput
  }

  /**
   * TuitionBreakdown findUniqueOrThrow
   */
  export type TuitionBreakdownFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * Filter, which TuitionBreakdown to fetch.
     */
    where: TuitionBreakdownWhereUniqueInput
  }

  /**
   * TuitionBreakdown findFirst
   */
  export type TuitionBreakdownFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * Filter, which TuitionBreakdown to fetch.
     */
    where?: TuitionBreakdownWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TuitionBreakdowns to fetch.
     */
    orderBy?: TuitionBreakdownOrderByWithRelationInput | TuitionBreakdownOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TuitionBreakdowns.
     */
    cursor?: TuitionBreakdownWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TuitionBreakdowns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TuitionBreakdowns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TuitionBreakdowns.
     */
    distinct?: TuitionBreakdownScalarFieldEnum | TuitionBreakdownScalarFieldEnum[]
  }

  /**
   * TuitionBreakdown findFirstOrThrow
   */
  export type TuitionBreakdownFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * Filter, which TuitionBreakdown to fetch.
     */
    where?: TuitionBreakdownWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TuitionBreakdowns to fetch.
     */
    orderBy?: TuitionBreakdownOrderByWithRelationInput | TuitionBreakdownOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TuitionBreakdowns.
     */
    cursor?: TuitionBreakdownWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TuitionBreakdowns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TuitionBreakdowns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TuitionBreakdowns.
     */
    distinct?: TuitionBreakdownScalarFieldEnum | TuitionBreakdownScalarFieldEnum[]
  }

  /**
   * TuitionBreakdown findMany
   */
  export type TuitionBreakdownFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * Filter, which TuitionBreakdowns to fetch.
     */
    where?: TuitionBreakdownWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TuitionBreakdowns to fetch.
     */
    orderBy?: TuitionBreakdownOrderByWithRelationInput | TuitionBreakdownOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TuitionBreakdowns.
     */
    cursor?: TuitionBreakdownWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TuitionBreakdowns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TuitionBreakdowns.
     */
    skip?: number
    distinct?: TuitionBreakdownScalarFieldEnum | TuitionBreakdownScalarFieldEnum[]
  }

  /**
   * TuitionBreakdown create
   */
  export type TuitionBreakdownCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * The data needed to create a TuitionBreakdown.
     */
    data: XOR<TuitionBreakdownCreateInput, TuitionBreakdownUncheckedCreateInput>
  }

  /**
   * TuitionBreakdown createMany
   */
  export type TuitionBreakdownCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TuitionBreakdowns.
     */
    data: TuitionBreakdownCreateManyInput | TuitionBreakdownCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TuitionBreakdown createManyAndReturn
   */
  export type TuitionBreakdownCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * The data used to create many TuitionBreakdowns.
     */
    data: TuitionBreakdownCreateManyInput | TuitionBreakdownCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TuitionBreakdown update
   */
  export type TuitionBreakdownUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * The data needed to update a TuitionBreakdown.
     */
    data: XOR<TuitionBreakdownUpdateInput, TuitionBreakdownUncheckedUpdateInput>
    /**
     * Choose, which TuitionBreakdown to update.
     */
    where: TuitionBreakdownWhereUniqueInput
  }

  /**
   * TuitionBreakdown updateMany
   */
  export type TuitionBreakdownUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TuitionBreakdowns.
     */
    data: XOR<TuitionBreakdownUpdateManyMutationInput, TuitionBreakdownUncheckedUpdateManyInput>
    /**
     * Filter which TuitionBreakdowns to update
     */
    where?: TuitionBreakdownWhereInput
    /**
     * Limit how many TuitionBreakdowns to update.
     */
    limit?: number
  }

  /**
   * TuitionBreakdown updateManyAndReturn
   */
  export type TuitionBreakdownUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * The data used to update TuitionBreakdowns.
     */
    data: XOR<TuitionBreakdownUpdateManyMutationInput, TuitionBreakdownUncheckedUpdateManyInput>
    /**
     * Filter which TuitionBreakdowns to update
     */
    where?: TuitionBreakdownWhereInput
    /**
     * Limit how many TuitionBreakdowns to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TuitionBreakdown upsert
   */
  export type TuitionBreakdownUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * The filter to search for the TuitionBreakdown to update in case it exists.
     */
    where: TuitionBreakdownWhereUniqueInput
    /**
     * In case the TuitionBreakdown found by the `where` argument doesn't exist, create a new TuitionBreakdown with this data.
     */
    create: XOR<TuitionBreakdownCreateInput, TuitionBreakdownUncheckedCreateInput>
    /**
     * In case the TuitionBreakdown was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TuitionBreakdownUpdateInput, TuitionBreakdownUncheckedUpdateInput>
  }

  /**
   * TuitionBreakdown delete
   */
  export type TuitionBreakdownDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
    /**
     * Filter which TuitionBreakdown to delete.
     */
    where: TuitionBreakdownWhereUniqueInput
  }

  /**
   * TuitionBreakdown deleteMany
   */
  export type TuitionBreakdownDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TuitionBreakdowns to delete
     */
    where?: TuitionBreakdownWhereInput
    /**
     * Limit how many TuitionBreakdowns to delete.
     */
    limit?: number
  }

  /**
   * TuitionBreakdown.program
   */
  export type TuitionBreakdown$programArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    where?: ProgramWhereInput
  }

  /**
   * TuitionBreakdown.paymentSchedule
   */
  export type TuitionBreakdown$paymentScheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    where?: PaymentScheduleWhereInput
    orderBy?: PaymentScheduleOrderByWithRelationInput | PaymentScheduleOrderByWithRelationInput[]
    cursor?: PaymentScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScheduleScalarFieldEnum | PaymentScheduleScalarFieldEnum[]
  }

  /**
   * TuitionBreakdown without action
   */
  export type TuitionBreakdownDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TuitionBreakdown
     */
    select?: TuitionBreakdownSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TuitionBreakdown
     */
    omit?: TuitionBreakdownOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TuitionBreakdownInclude<ExtArgs> | null
  }


  /**
   * Model PaymentSchedule
   */

  export type AggregatePaymentSchedule = {
    _count: PaymentScheduleCountAggregateOutputType | null
    _avg: PaymentScheduleAvgAggregateOutputType | null
    _sum: PaymentScheduleSumAggregateOutputType | null
    _min: PaymentScheduleMinAggregateOutputType | null
    _max: PaymentScheduleMaxAggregateOutputType | null
  }

  export type PaymentScheduleAvgAggregateOutputType = {
    installmentNumber: number | null
    amount: number | null
    lateFee: number | null
    gracePeroidDays: number | null
  }

  export type PaymentScheduleSumAggregateOutputType = {
    installmentNumber: number | null
    amount: number | null
    lateFee: number | null
    gracePeroidDays: number | null
  }

  export type PaymentScheduleMinAggregateOutputType = {
    id: string | null
    tuitionBreakdownId: string | null
    installmentNumber: number | null
    dueDate: Date | null
    amount: number | null
    description: string | null
    lateFee: number | null
    gracePeroidDays: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentScheduleMaxAggregateOutputType = {
    id: string | null
    tuitionBreakdownId: string | null
    installmentNumber: number | null
    dueDate: Date | null
    amount: number | null
    description: string | null
    lateFee: number | null
    gracePeroidDays: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentScheduleCountAggregateOutputType = {
    id: number
    tuitionBreakdownId: number
    installmentNumber: number
    dueDate: number
    amount: number
    description: number
    lateFee: number
    gracePeroidDays: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentScheduleAvgAggregateInputType = {
    installmentNumber?: true
    amount?: true
    lateFee?: true
    gracePeroidDays?: true
  }

  export type PaymentScheduleSumAggregateInputType = {
    installmentNumber?: true
    amount?: true
    lateFee?: true
    gracePeroidDays?: true
  }

  export type PaymentScheduleMinAggregateInputType = {
    id?: true
    tuitionBreakdownId?: true
    installmentNumber?: true
    dueDate?: true
    amount?: true
    description?: true
    lateFee?: true
    gracePeroidDays?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentScheduleMaxAggregateInputType = {
    id?: true
    tuitionBreakdownId?: true
    installmentNumber?: true
    dueDate?: true
    amount?: true
    description?: true
    lateFee?: true
    gracePeroidDays?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentScheduleCountAggregateInputType = {
    id?: true
    tuitionBreakdownId?: true
    installmentNumber?: true
    dueDate?: true
    amount?: true
    description?: true
    lateFee?: true
    gracePeroidDays?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentScheduleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentSchedule to aggregate.
     */
    where?: PaymentScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSchedules to fetch.
     */
    orderBy?: PaymentScheduleOrderByWithRelationInput | PaymentScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentSchedules
    **/
    _count?: true | PaymentScheduleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentScheduleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentScheduleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentScheduleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentScheduleMaxAggregateInputType
  }

  export type GetPaymentScheduleAggregateType<T extends PaymentScheduleAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentSchedule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentSchedule[P]>
      : GetScalarType<T[P], AggregatePaymentSchedule[P]>
  }




  export type PaymentScheduleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentScheduleWhereInput
    orderBy?: PaymentScheduleOrderByWithAggregationInput | PaymentScheduleOrderByWithAggregationInput[]
    by: PaymentScheduleScalarFieldEnum[] | PaymentScheduleScalarFieldEnum
    having?: PaymentScheduleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentScheduleCountAggregateInputType | true
    _avg?: PaymentScheduleAvgAggregateInputType
    _sum?: PaymentScheduleSumAggregateInputType
    _min?: PaymentScheduleMinAggregateInputType
    _max?: PaymentScheduleMaxAggregateInputType
  }

  export type PaymentScheduleGroupByOutputType = {
    id: string
    tuitionBreakdownId: string
    installmentNumber: number
    dueDate: Date
    amount: number
    description: string | null
    lateFee: number | null
    gracePeroidDays: number | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: PaymentScheduleCountAggregateOutputType | null
    _avg: PaymentScheduleAvgAggregateOutputType | null
    _sum: PaymentScheduleSumAggregateOutputType | null
    _min: PaymentScheduleMinAggregateOutputType | null
    _max: PaymentScheduleMaxAggregateOutputType | null
  }

  type GetPaymentScheduleGroupByPayload<T extends PaymentScheduleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentScheduleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentScheduleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentScheduleGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentScheduleGroupByOutputType[P]>
        }
      >
    >


  export type PaymentScheduleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tuitionBreakdownId?: boolean
    installmentNumber?: boolean
    dueDate?: boolean
    amount?: boolean
    description?: boolean
    lateFee?: boolean
    gracePeroidDays?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tuitionBreakdown?: boolean | TuitionBreakdownDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentSchedule"]>

  export type PaymentScheduleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tuitionBreakdownId?: boolean
    installmentNumber?: boolean
    dueDate?: boolean
    amount?: boolean
    description?: boolean
    lateFee?: boolean
    gracePeroidDays?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tuitionBreakdown?: boolean | TuitionBreakdownDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentSchedule"]>

  export type PaymentScheduleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tuitionBreakdownId?: boolean
    installmentNumber?: boolean
    dueDate?: boolean
    amount?: boolean
    description?: boolean
    lateFee?: boolean
    gracePeroidDays?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tuitionBreakdown?: boolean | TuitionBreakdownDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentSchedule"]>

  export type PaymentScheduleSelectScalar = {
    id?: boolean
    tuitionBreakdownId?: boolean
    installmentNumber?: boolean
    dueDate?: boolean
    amount?: boolean
    description?: boolean
    lateFee?: boolean
    gracePeroidDays?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentScheduleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tuitionBreakdownId" | "installmentNumber" | "dueDate" | "amount" | "description" | "lateFee" | "gracePeroidDays" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["paymentSchedule"]>
  export type PaymentScheduleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tuitionBreakdown?: boolean | TuitionBreakdownDefaultArgs<ExtArgs>
  }
  export type PaymentScheduleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tuitionBreakdown?: boolean | TuitionBreakdownDefaultArgs<ExtArgs>
  }
  export type PaymentScheduleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tuitionBreakdown?: boolean | TuitionBreakdownDefaultArgs<ExtArgs>
  }

  export type $PaymentSchedulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentSchedule"
    objects: {
      tuitionBreakdown: Prisma.$TuitionBreakdownPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tuitionBreakdownId: string
      installmentNumber: number
      dueDate: Date
      amount: number
      description: string | null
      lateFee: number | null
      gracePeroidDays: number | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["paymentSchedule"]>
    composites: {}
  }

  type PaymentScheduleGetPayload<S extends boolean | null | undefined | PaymentScheduleDefaultArgs> = $Result.GetResult<Prisma.$PaymentSchedulePayload, S>

  type PaymentScheduleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentScheduleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentScheduleCountAggregateInputType | true
    }

  export interface PaymentScheduleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentSchedule'], meta: { name: 'PaymentSchedule' } }
    /**
     * Find zero or one PaymentSchedule that matches the filter.
     * @param {PaymentScheduleFindUniqueArgs} args - Arguments to find a PaymentSchedule
     * @example
     * // Get one PaymentSchedule
     * const paymentSchedule = await prisma.paymentSchedule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentScheduleFindUniqueArgs>(args: SelectSubset<T, PaymentScheduleFindUniqueArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentSchedule that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentScheduleFindUniqueOrThrowArgs} args - Arguments to find a PaymentSchedule
     * @example
     * // Get one PaymentSchedule
     * const paymentSchedule = await prisma.paymentSchedule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentScheduleFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentScheduleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentSchedule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentScheduleFindFirstArgs} args - Arguments to find a PaymentSchedule
     * @example
     * // Get one PaymentSchedule
     * const paymentSchedule = await prisma.paymentSchedule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentScheduleFindFirstArgs>(args?: SelectSubset<T, PaymentScheduleFindFirstArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentSchedule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentScheduleFindFirstOrThrowArgs} args - Arguments to find a PaymentSchedule
     * @example
     * // Get one PaymentSchedule
     * const paymentSchedule = await prisma.paymentSchedule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentScheduleFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentScheduleFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentSchedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentScheduleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentSchedules
     * const paymentSchedules = await prisma.paymentSchedule.findMany()
     * 
     * // Get first 10 PaymentSchedules
     * const paymentSchedules = await prisma.paymentSchedule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentScheduleWithIdOnly = await prisma.paymentSchedule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentScheduleFindManyArgs>(args?: SelectSubset<T, PaymentScheduleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentSchedule.
     * @param {PaymentScheduleCreateArgs} args - Arguments to create a PaymentSchedule.
     * @example
     * // Create one PaymentSchedule
     * const PaymentSchedule = await prisma.paymentSchedule.create({
     *   data: {
     *     // ... data to create a PaymentSchedule
     *   }
     * })
     * 
     */
    create<T extends PaymentScheduleCreateArgs>(args: SelectSubset<T, PaymentScheduleCreateArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentSchedules.
     * @param {PaymentScheduleCreateManyArgs} args - Arguments to create many PaymentSchedules.
     * @example
     * // Create many PaymentSchedules
     * const paymentSchedule = await prisma.paymentSchedule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentScheduleCreateManyArgs>(args?: SelectSubset<T, PaymentScheduleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentSchedules and returns the data saved in the database.
     * @param {PaymentScheduleCreateManyAndReturnArgs} args - Arguments to create many PaymentSchedules.
     * @example
     * // Create many PaymentSchedules
     * const paymentSchedule = await prisma.paymentSchedule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentSchedules and only return the `id`
     * const paymentScheduleWithIdOnly = await prisma.paymentSchedule.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentScheduleCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentScheduleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentSchedule.
     * @param {PaymentScheduleDeleteArgs} args - Arguments to delete one PaymentSchedule.
     * @example
     * // Delete one PaymentSchedule
     * const PaymentSchedule = await prisma.paymentSchedule.delete({
     *   where: {
     *     // ... filter to delete one PaymentSchedule
     *   }
     * })
     * 
     */
    delete<T extends PaymentScheduleDeleteArgs>(args: SelectSubset<T, PaymentScheduleDeleteArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentSchedule.
     * @param {PaymentScheduleUpdateArgs} args - Arguments to update one PaymentSchedule.
     * @example
     * // Update one PaymentSchedule
     * const paymentSchedule = await prisma.paymentSchedule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentScheduleUpdateArgs>(args: SelectSubset<T, PaymentScheduleUpdateArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentSchedules.
     * @param {PaymentScheduleDeleteManyArgs} args - Arguments to filter PaymentSchedules to delete.
     * @example
     * // Delete a few PaymentSchedules
     * const { count } = await prisma.paymentSchedule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentScheduleDeleteManyArgs>(args?: SelectSubset<T, PaymentScheduleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentSchedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentScheduleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentSchedules
     * const paymentSchedule = await prisma.paymentSchedule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentScheduleUpdateManyArgs>(args: SelectSubset<T, PaymentScheduleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentSchedules and returns the data updated in the database.
     * @param {PaymentScheduleUpdateManyAndReturnArgs} args - Arguments to update many PaymentSchedules.
     * @example
     * // Update many PaymentSchedules
     * const paymentSchedule = await prisma.paymentSchedule.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentSchedules and only return the `id`
     * const paymentScheduleWithIdOnly = await prisma.paymentSchedule.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentScheduleUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentScheduleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentSchedule.
     * @param {PaymentScheduleUpsertArgs} args - Arguments to update or create a PaymentSchedule.
     * @example
     * // Update or create a PaymentSchedule
     * const paymentSchedule = await prisma.paymentSchedule.upsert({
     *   create: {
     *     // ... data to create a PaymentSchedule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentSchedule we want to update
     *   }
     * })
     */
    upsert<T extends PaymentScheduleUpsertArgs>(args: SelectSubset<T, PaymentScheduleUpsertArgs<ExtArgs>>): Prisma__PaymentScheduleClient<$Result.GetResult<Prisma.$PaymentSchedulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentSchedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentScheduleCountArgs} args - Arguments to filter PaymentSchedules to count.
     * @example
     * // Count the number of PaymentSchedules
     * const count = await prisma.paymentSchedule.count({
     *   where: {
     *     // ... the filter for the PaymentSchedules we want to count
     *   }
     * })
    **/
    count<T extends PaymentScheduleCountArgs>(
      args?: Subset<T, PaymentScheduleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentScheduleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentSchedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentScheduleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentScheduleAggregateArgs>(args: Subset<T, PaymentScheduleAggregateArgs>): Prisma.PrismaPromise<GetPaymentScheduleAggregateType<T>>

    /**
     * Group by PaymentSchedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentScheduleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentScheduleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentScheduleGroupByArgs['orderBy'] }
        : { orderBy?: PaymentScheduleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentScheduleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentScheduleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentSchedule model
   */
  readonly fields: PaymentScheduleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentSchedule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentScheduleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tuitionBreakdown<T extends TuitionBreakdownDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TuitionBreakdownDefaultArgs<ExtArgs>>): Prisma__TuitionBreakdownClient<$Result.GetResult<Prisma.$TuitionBreakdownPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentSchedule model
   */
  interface PaymentScheduleFieldRefs {
    readonly id: FieldRef<"PaymentSchedule", 'String'>
    readonly tuitionBreakdownId: FieldRef<"PaymentSchedule", 'String'>
    readonly installmentNumber: FieldRef<"PaymentSchedule", 'Int'>
    readonly dueDate: FieldRef<"PaymentSchedule", 'DateTime'>
    readonly amount: FieldRef<"PaymentSchedule", 'Float'>
    readonly description: FieldRef<"PaymentSchedule", 'String'>
    readonly lateFee: FieldRef<"PaymentSchedule", 'Float'>
    readonly gracePeroidDays: FieldRef<"PaymentSchedule", 'Int'>
    readonly isActive: FieldRef<"PaymentSchedule", 'Boolean'>
    readonly createdAt: FieldRef<"PaymentSchedule", 'DateTime'>
    readonly updatedAt: FieldRef<"PaymentSchedule", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentSchedule findUnique
   */
  export type PaymentScheduleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSchedule to fetch.
     */
    where: PaymentScheduleWhereUniqueInput
  }

  /**
   * PaymentSchedule findUniqueOrThrow
   */
  export type PaymentScheduleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSchedule to fetch.
     */
    where: PaymentScheduleWhereUniqueInput
  }

  /**
   * PaymentSchedule findFirst
   */
  export type PaymentScheduleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSchedule to fetch.
     */
    where?: PaymentScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSchedules to fetch.
     */
    orderBy?: PaymentScheduleOrderByWithRelationInput | PaymentScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentSchedules.
     */
    cursor?: PaymentScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentSchedules.
     */
    distinct?: PaymentScheduleScalarFieldEnum | PaymentScheduleScalarFieldEnum[]
  }

  /**
   * PaymentSchedule findFirstOrThrow
   */
  export type PaymentScheduleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSchedule to fetch.
     */
    where?: PaymentScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSchedules to fetch.
     */
    orderBy?: PaymentScheduleOrderByWithRelationInput | PaymentScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentSchedules.
     */
    cursor?: PaymentScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentSchedules.
     */
    distinct?: PaymentScheduleScalarFieldEnum | PaymentScheduleScalarFieldEnum[]
  }

  /**
   * PaymentSchedule findMany
   */
  export type PaymentScheduleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSchedules to fetch.
     */
    where?: PaymentScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSchedules to fetch.
     */
    orderBy?: PaymentScheduleOrderByWithRelationInput | PaymentScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentSchedules.
     */
    cursor?: PaymentScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSchedules.
     */
    skip?: number
    distinct?: PaymentScheduleScalarFieldEnum | PaymentScheduleScalarFieldEnum[]
  }

  /**
   * PaymentSchedule create
   */
  export type PaymentScheduleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentSchedule.
     */
    data: XOR<PaymentScheduleCreateInput, PaymentScheduleUncheckedCreateInput>
  }

  /**
   * PaymentSchedule createMany
   */
  export type PaymentScheduleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentSchedules.
     */
    data: PaymentScheduleCreateManyInput | PaymentScheduleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentSchedule createManyAndReturn
   */
  export type PaymentScheduleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentSchedules.
     */
    data: PaymentScheduleCreateManyInput | PaymentScheduleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentSchedule update
   */
  export type PaymentScheduleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentSchedule.
     */
    data: XOR<PaymentScheduleUpdateInput, PaymentScheduleUncheckedUpdateInput>
    /**
     * Choose, which PaymentSchedule to update.
     */
    where: PaymentScheduleWhereUniqueInput
  }

  /**
   * PaymentSchedule updateMany
   */
  export type PaymentScheduleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentSchedules.
     */
    data: XOR<PaymentScheduleUpdateManyMutationInput, PaymentScheduleUncheckedUpdateManyInput>
    /**
     * Filter which PaymentSchedules to update
     */
    where?: PaymentScheduleWhereInput
    /**
     * Limit how many PaymentSchedules to update.
     */
    limit?: number
  }

  /**
   * PaymentSchedule updateManyAndReturn
   */
  export type PaymentScheduleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * The data used to update PaymentSchedules.
     */
    data: XOR<PaymentScheduleUpdateManyMutationInput, PaymentScheduleUncheckedUpdateManyInput>
    /**
     * Filter which PaymentSchedules to update
     */
    where?: PaymentScheduleWhereInput
    /**
     * Limit how many PaymentSchedules to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentSchedule upsert
   */
  export type PaymentScheduleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentSchedule to update in case it exists.
     */
    where: PaymentScheduleWhereUniqueInput
    /**
     * In case the PaymentSchedule found by the `where` argument doesn't exist, create a new PaymentSchedule with this data.
     */
    create: XOR<PaymentScheduleCreateInput, PaymentScheduleUncheckedCreateInput>
    /**
     * In case the PaymentSchedule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentScheduleUpdateInput, PaymentScheduleUncheckedUpdateInput>
  }

  /**
   * PaymentSchedule delete
   */
  export type PaymentScheduleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
    /**
     * Filter which PaymentSchedule to delete.
     */
    where: PaymentScheduleWhereUniqueInput
  }

  /**
   * PaymentSchedule deleteMany
   */
  export type PaymentScheduleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentSchedules to delete
     */
    where?: PaymentScheduleWhereInput
    /**
     * Limit how many PaymentSchedules to delete.
     */
    limit?: number
  }

  /**
   * PaymentSchedule without action
   */
  export type PaymentScheduleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSchedule
     */
    select?: PaymentScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSchedule
     */
    omit?: PaymentScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentScheduleInclude<ExtArgs> | null
  }


  /**
   * Model Scholarship
   */

  export type AggregateScholarship = {
    _count: ScholarshipCountAggregateOutputType | null
    _avg: ScholarshipAvgAggregateOutputType | null
    _sum: ScholarshipSumAggregateOutputType | null
    _min: ScholarshipMinAggregateOutputType | null
    _max: ScholarshipMaxAggregateOutputType | null
  }

  export type ScholarshipAvgAggregateOutputType = {
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    totalAvailable: number | null
    currentlyAwarded: number | null
    minimumGpa: number | null
    minimumTestScore: number | null
  }

  export type ScholarshipSumAggregateOutputType = {
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    totalAvailable: number | null
    currentlyAwarded: number | null
    minimumGpa: number | null
    minimumTestScore: number | null
  }

  export type ScholarshipMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    scholarshipName: string | null
    scholarshipSlug: string | null
    scholarshipType: string | null
    description: string | null
    eligibilityCriteria: string | null
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    currency: string | null
    coverageTuition: boolean | null
    coverageFees: boolean | null
    coverageLiving: boolean | null
    coverageBooks: boolean | null
    applicationRequired: boolean | null
    applicationDeadline: Date | null
    documentsRequired: string | null
    totalAvailable: number | null
    currentlyAwarded: number | null
    minimumGpa: number | null
    minimumTestScore: number | null
    testType: string | null
    citizenshipRequired: string | null
    isActive: boolean | null
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    awardDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ScholarshipMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    scholarshipName: string | null
    scholarshipSlug: string | null
    scholarshipType: string | null
    description: string | null
    eligibilityCriteria: string | null
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    currency: string | null
    coverageTuition: boolean | null
    coverageFees: boolean | null
    coverageLiving: boolean | null
    coverageBooks: boolean | null
    applicationRequired: boolean | null
    applicationDeadline: Date | null
    documentsRequired: string | null
    totalAvailable: number | null
    currentlyAwarded: number | null
    minimumGpa: number | null
    minimumTestScore: number | null
    testType: string | null
    citizenshipRequired: string | null
    isActive: boolean | null
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    awardDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ScholarshipCountAggregateOutputType = {
    id: number
    universityId: number
    programId: number
    scholarshipName: number
    scholarshipSlug: number
    scholarshipType: number
    description: number
    eligibilityCriteria: number
    amount: number
    percentage: number
    maxAmount: number
    currency: number
    coverageTuition: number
    coverageFees: number
    coverageLiving: number
    coverageBooks: number
    applicationRequired: number
    applicationDeadline: number
    documentsRequired: number
    totalAvailable: number
    currentlyAwarded: number
    minimumGpa: number
    minimumTestScore: number
    testType: number
    citizenshipRequired: number
    isActive: number
    applicationOpenDate: number
    applicationCloseDate: number
    awardDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ScholarshipAvgAggregateInputType = {
    amount?: true
    percentage?: true
    maxAmount?: true
    totalAvailable?: true
    currentlyAwarded?: true
    minimumGpa?: true
    minimumTestScore?: true
  }

  export type ScholarshipSumAggregateInputType = {
    amount?: true
    percentage?: true
    maxAmount?: true
    totalAvailable?: true
    currentlyAwarded?: true
    minimumGpa?: true
    minimumTestScore?: true
  }

  export type ScholarshipMinAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    scholarshipName?: true
    scholarshipSlug?: true
    scholarshipType?: true
    description?: true
    eligibilityCriteria?: true
    amount?: true
    percentage?: true
    maxAmount?: true
    currency?: true
    coverageTuition?: true
    coverageFees?: true
    coverageLiving?: true
    coverageBooks?: true
    applicationRequired?: true
    applicationDeadline?: true
    documentsRequired?: true
    totalAvailable?: true
    currentlyAwarded?: true
    minimumGpa?: true
    minimumTestScore?: true
    testType?: true
    citizenshipRequired?: true
    isActive?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    awardDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ScholarshipMaxAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    scholarshipName?: true
    scholarshipSlug?: true
    scholarshipType?: true
    description?: true
    eligibilityCriteria?: true
    amount?: true
    percentage?: true
    maxAmount?: true
    currency?: true
    coverageTuition?: true
    coverageFees?: true
    coverageLiving?: true
    coverageBooks?: true
    applicationRequired?: true
    applicationDeadline?: true
    documentsRequired?: true
    totalAvailable?: true
    currentlyAwarded?: true
    minimumGpa?: true
    minimumTestScore?: true
    testType?: true
    citizenshipRequired?: true
    isActive?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    awardDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ScholarshipCountAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    scholarshipName?: true
    scholarshipSlug?: true
    scholarshipType?: true
    description?: true
    eligibilityCriteria?: true
    amount?: true
    percentage?: true
    maxAmount?: true
    currency?: true
    coverageTuition?: true
    coverageFees?: true
    coverageLiving?: true
    coverageBooks?: true
    applicationRequired?: true
    applicationDeadline?: true
    documentsRequired?: true
    totalAvailable?: true
    currentlyAwarded?: true
    minimumGpa?: true
    minimumTestScore?: true
    testType?: true
    citizenshipRequired?: true
    isActive?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    awardDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ScholarshipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Scholarship to aggregate.
     */
    where?: ScholarshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scholarships to fetch.
     */
    orderBy?: ScholarshipOrderByWithRelationInput | ScholarshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ScholarshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scholarships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scholarships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Scholarships
    **/
    _count?: true | ScholarshipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ScholarshipAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ScholarshipSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScholarshipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScholarshipMaxAggregateInputType
  }

  export type GetScholarshipAggregateType<T extends ScholarshipAggregateArgs> = {
        [P in keyof T & keyof AggregateScholarship]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScholarship[P]>
      : GetScalarType<T[P], AggregateScholarship[P]>
  }




  export type ScholarshipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipWhereInput
    orderBy?: ScholarshipOrderByWithAggregationInput | ScholarshipOrderByWithAggregationInput[]
    by: ScholarshipScalarFieldEnum[] | ScholarshipScalarFieldEnum
    having?: ScholarshipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScholarshipCountAggregateInputType | true
    _avg?: ScholarshipAvgAggregateInputType
    _sum?: ScholarshipSumAggregateInputType
    _min?: ScholarshipMinAggregateInputType
    _max?: ScholarshipMaxAggregateInputType
  }

  export type ScholarshipGroupByOutputType = {
    id: string
    universityId: string
    programId: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description: string | null
    eligibilityCriteria: string | null
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    currency: string
    coverageTuition: boolean
    coverageFees: boolean
    coverageLiving: boolean
    coverageBooks: boolean
    applicationRequired: boolean
    applicationDeadline: Date | null
    documentsRequired: string | null
    totalAvailable: number | null
    currentlyAwarded: number | null
    minimumGpa: number | null
    minimumTestScore: number | null
    testType: string | null
    citizenshipRequired: string | null
    isActive: boolean
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    awardDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ScholarshipCountAggregateOutputType | null
    _avg: ScholarshipAvgAggregateOutputType | null
    _sum: ScholarshipSumAggregateOutputType | null
    _min: ScholarshipMinAggregateOutputType | null
    _max: ScholarshipMaxAggregateOutputType | null
  }

  type GetScholarshipGroupByPayload<T extends ScholarshipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ScholarshipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ScholarshipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ScholarshipGroupByOutputType[P]>
            : GetScalarType<T[P], ScholarshipGroupByOutputType[P]>
        }
      >
    >


  export type ScholarshipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    scholarshipName?: boolean
    scholarshipSlug?: boolean
    scholarshipType?: boolean
    description?: boolean
    eligibilityCriteria?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    totalAvailable?: boolean
    currentlyAwarded?: boolean
    minimumGpa?: boolean
    minimumTestScore?: boolean
    testType?: boolean
    citizenshipRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    awardDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | Scholarship$programArgs<ExtArgs>
    documents?: boolean | Scholarship$documentsArgs<ExtArgs>
    applications?: boolean | Scholarship$applicationsArgs<ExtArgs>
    calendarEvents?: boolean | Scholarship$calendarEventsArgs<ExtArgs>
    _count?: boolean | ScholarshipCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["scholarship"]>

  export type ScholarshipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    scholarshipName?: boolean
    scholarshipSlug?: boolean
    scholarshipType?: boolean
    description?: boolean
    eligibilityCriteria?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    totalAvailable?: boolean
    currentlyAwarded?: boolean
    minimumGpa?: boolean
    minimumTestScore?: boolean
    testType?: boolean
    citizenshipRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    awardDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | Scholarship$programArgs<ExtArgs>
  }, ExtArgs["result"]["scholarship"]>

  export type ScholarshipSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    scholarshipName?: boolean
    scholarshipSlug?: boolean
    scholarshipType?: boolean
    description?: boolean
    eligibilityCriteria?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    totalAvailable?: boolean
    currentlyAwarded?: boolean
    minimumGpa?: boolean
    minimumTestScore?: boolean
    testType?: boolean
    citizenshipRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    awardDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | Scholarship$programArgs<ExtArgs>
  }, ExtArgs["result"]["scholarship"]>

  export type ScholarshipSelectScalar = {
    id?: boolean
    universityId?: boolean
    programId?: boolean
    scholarshipName?: boolean
    scholarshipSlug?: boolean
    scholarshipType?: boolean
    description?: boolean
    eligibilityCriteria?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    totalAvailable?: boolean
    currentlyAwarded?: boolean
    minimumGpa?: boolean
    minimumTestScore?: boolean
    testType?: boolean
    citizenshipRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    awardDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ScholarshipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "programId" | "scholarshipName" | "scholarshipSlug" | "scholarshipType" | "description" | "eligibilityCriteria" | "amount" | "percentage" | "maxAmount" | "currency" | "coverageTuition" | "coverageFees" | "coverageLiving" | "coverageBooks" | "applicationRequired" | "applicationDeadline" | "documentsRequired" | "totalAvailable" | "currentlyAwarded" | "minimumGpa" | "minimumTestScore" | "testType" | "citizenshipRequired" | "isActive" | "applicationOpenDate" | "applicationCloseDate" | "awardDate" | "createdAt" | "updatedAt", ExtArgs["result"]["scholarship"]>
  export type ScholarshipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | Scholarship$programArgs<ExtArgs>
    documents?: boolean | Scholarship$documentsArgs<ExtArgs>
    applications?: boolean | Scholarship$applicationsArgs<ExtArgs>
    calendarEvents?: boolean | Scholarship$calendarEventsArgs<ExtArgs>
    _count?: boolean | ScholarshipCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ScholarshipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | Scholarship$programArgs<ExtArgs>
  }
  export type ScholarshipIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | Scholarship$programArgs<ExtArgs>
  }

  export type $ScholarshipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Scholarship"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
      program: Prisma.$ProgramPayload<ExtArgs> | null
      documents: Prisma.$ScholarshipDocumentPayload<ExtArgs>[]
      applications: Prisma.$ScholarshipApplicationPayload<ExtArgs>[]
      calendarEvents: Prisma.$CalendarEventPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      programId: string | null
      scholarshipName: string
      scholarshipSlug: string
      scholarshipType: string
      description: string | null
      eligibilityCriteria: string | null
      amount: number | null
      percentage: number | null
      maxAmount: number | null
      currency: string
      coverageTuition: boolean
      coverageFees: boolean
      coverageLiving: boolean
      coverageBooks: boolean
      applicationRequired: boolean
      applicationDeadline: Date | null
      documentsRequired: string | null
      totalAvailable: number | null
      currentlyAwarded: number | null
      minimumGpa: number | null
      minimumTestScore: number | null
      testType: string | null
      citizenshipRequired: string | null
      isActive: boolean
      applicationOpenDate: Date | null
      applicationCloseDate: Date | null
      awardDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["scholarship"]>
    composites: {}
  }

  type ScholarshipGetPayload<S extends boolean | null | undefined | ScholarshipDefaultArgs> = $Result.GetResult<Prisma.$ScholarshipPayload, S>

  type ScholarshipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ScholarshipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ScholarshipCountAggregateInputType | true
    }

  export interface ScholarshipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Scholarship'], meta: { name: 'Scholarship' } }
    /**
     * Find zero or one Scholarship that matches the filter.
     * @param {ScholarshipFindUniqueArgs} args - Arguments to find a Scholarship
     * @example
     * // Get one Scholarship
     * const scholarship = await prisma.scholarship.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ScholarshipFindUniqueArgs>(args: SelectSubset<T, ScholarshipFindUniqueArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Scholarship that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ScholarshipFindUniqueOrThrowArgs} args - Arguments to find a Scholarship
     * @example
     * // Get one Scholarship
     * const scholarship = await prisma.scholarship.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ScholarshipFindUniqueOrThrowArgs>(args: SelectSubset<T, ScholarshipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Scholarship that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipFindFirstArgs} args - Arguments to find a Scholarship
     * @example
     * // Get one Scholarship
     * const scholarship = await prisma.scholarship.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ScholarshipFindFirstArgs>(args?: SelectSubset<T, ScholarshipFindFirstArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Scholarship that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipFindFirstOrThrowArgs} args - Arguments to find a Scholarship
     * @example
     * // Get one Scholarship
     * const scholarship = await prisma.scholarship.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ScholarshipFindFirstOrThrowArgs>(args?: SelectSubset<T, ScholarshipFindFirstOrThrowArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Scholarships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Scholarships
     * const scholarships = await prisma.scholarship.findMany()
     * 
     * // Get first 10 Scholarships
     * const scholarships = await prisma.scholarship.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scholarshipWithIdOnly = await prisma.scholarship.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ScholarshipFindManyArgs>(args?: SelectSubset<T, ScholarshipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Scholarship.
     * @param {ScholarshipCreateArgs} args - Arguments to create a Scholarship.
     * @example
     * // Create one Scholarship
     * const Scholarship = await prisma.scholarship.create({
     *   data: {
     *     // ... data to create a Scholarship
     *   }
     * })
     * 
     */
    create<T extends ScholarshipCreateArgs>(args: SelectSubset<T, ScholarshipCreateArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Scholarships.
     * @param {ScholarshipCreateManyArgs} args - Arguments to create many Scholarships.
     * @example
     * // Create many Scholarships
     * const scholarship = await prisma.scholarship.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ScholarshipCreateManyArgs>(args?: SelectSubset<T, ScholarshipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Scholarships and returns the data saved in the database.
     * @param {ScholarshipCreateManyAndReturnArgs} args - Arguments to create many Scholarships.
     * @example
     * // Create many Scholarships
     * const scholarship = await prisma.scholarship.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Scholarships and only return the `id`
     * const scholarshipWithIdOnly = await prisma.scholarship.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ScholarshipCreateManyAndReturnArgs>(args?: SelectSubset<T, ScholarshipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Scholarship.
     * @param {ScholarshipDeleteArgs} args - Arguments to delete one Scholarship.
     * @example
     * // Delete one Scholarship
     * const Scholarship = await prisma.scholarship.delete({
     *   where: {
     *     // ... filter to delete one Scholarship
     *   }
     * })
     * 
     */
    delete<T extends ScholarshipDeleteArgs>(args: SelectSubset<T, ScholarshipDeleteArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Scholarship.
     * @param {ScholarshipUpdateArgs} args - Arguments to update one Scholarship.
     * @example
     * // Update one Scholarship
     * const scholarship = await prisma.scholarship.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ScholarshipUpdateArgs>(args: SelectSubset<T, ScholarshipUpdateArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Scholarships.
     * @param {ScholarshipDeleteManyArgs} args - Arguments to filter Scholarships to delete.
     * @example
     * // Delete a few Scholarships
     * const { count } = await prisma.scholarship.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ScholarshipDeleteManyArgs>(args?: SelectSubset<T, ScholarshipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Scholarships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Scholarships
     * const scholarship = await prisma.scholarship.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ScholarshipUpdateManyArgs>(args: SelectSubset<T, ScholarshipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Scholarships and returns the data updated in the database.
     * @param {ScholarshipUpdateManyAndReturnArgs} args - Arguments to update many Scholarships.
     * @example
     * // Update many Scholarships
     * const scholarship = await prisma.scholarship.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Scholarships and only return the `id`
     * const scholarshipWithIdOnly = await prisma.scholarship.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ScholarshipUpdateManyAndReturnArgs>(args: SelectSubset<T, ScholarshipUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Scholarship.
     * @param {ScholarshipUpsertArgs} args - Arguments to update or create a Scholarship.
     * @example
     * // Update or create a Scholarship
     * const scholarship = await prisma.scholarship.upsert({
     *   create: {
     *     // ... data to create a Scholarship
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Scholarship we want to update
     *   }
     * })
     */
    upsert<T extends ScholarshipUpsertArgs>(args: SelectSubset<T, ScholarshipUpsertArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Scholarships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipCountArgs} args - Arguments to filter Scholarships to count.
     * @example
     * // Count the number of Scholarships
     * const count = await prisma.scholarship.count({
     *   where: {
     *     // ... the filter for the Scholarships we want to count
     *   }
     * })
    **/
    count<T extends ScholarshipCountArgs>(
      args?: Subset<T, ScholarshipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScholarshipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Scholarship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScholarshipAggregateArgs>(args: Subset<T, ScholarshipAggregateArgs>): Prisma.PrismaPromise<GetScholarshipAggregateType<T>>

    /**
     * Group by Scholarship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ScholarshipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ScholarshipGroupByArgs['orderBy'] }
        : { orderBy?: ScholarshipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ScholarshipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScholarshipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Scholarship model
   */
  readonly fields: ScholarshipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Scholarship.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ScholarshipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    program<T extends Scholarship$programArgs<ExtArgs> = {}>(args?: Subset<T, Scholarship$programArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    documents<T extends Scholarship$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Scholarship$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    applications<T extends Scholarship$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, Scholarship$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calendarEvents<T extends Scholarship$calendarEventsArgs<ExtArgs> = {}>(args?: Subset<T, Scholarship$calendarEventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Scholarship model
   */
  interface ScholarshipFieldRefs {
    readonly id: FieldRef<"Scholarship", 'String'>
    readonly universityId: FieldRef<"Scholarship", 'String'>
    readonly programId: FieldRef<"Scholarship", 'String'>
    readonly scholarshipName: FieldRef<"Scholarship", 'String'>
    readonly scholarshipSlug: FieldRef<"Scholarship", 'String'>
    readonly scholarshipType: FieldRef<"Scholarship", 'String'>
    readonly description: FieldRef<"Scholarship", 'String'>
    readonly eligibilityCriteria: FieldRef<"Scholarship", 'String'>
    readonly amount: FieldRef<"Scholarship", 'Float'>
    readonly percentage: FieldRef<"Scholarship", 'Float'>
    readonly maxAmount: FieldRef<"Scholarship", 'Float'>
    readonly currency: FieldRef<"Scholarship", 'String'>
    readonly coverageTuition: FieldRef<"Scholarship", 'Boolean'>
    readonly coverageFees: FieldRef<"Scholarship", 'Boolean'>
    readonly coverageLiving: FieldRef<"Scholarship", 'Boolean'>
    readonly coverageBooks: FieldRef<"Scholarship", 'Boolean'>
    readonly applicationRequired: FieldRef<"Scholarship", 'Boolean'>
    readonly applicationDeadline: FieldRef<"Scholarship", 'DateTime'>
    readonly documentsRequired: FieldRef<"Scholarship", 'String'>
    readonly totalAvailable: FieldRef<"Scholarship", 'Int'>
    readonly currentlyAwarded: FieldRef<"Scholarship", 'Int'>
    readonly minimumGpa: FieldRef<"Scholarship", 'Float'>
    readonly minimumTestScore: FieldRef<"Scholarship", 'Int'>
    readonly testType: FieldRef<"Scholarship", 'String'>
    readonly citizenshipRequired: FieldRef<"Scholarship", 'String'>
    readonly isActive: FieldRef<"Scholarship", 'Boolean'>
    readonly applicationOpenDate: FieldRef<"Scholarship", 'DateTime'>
    readonly applicationCloseDate: FieldRef<"Scholarship", 'DateTime'>
    readonly awardDate: FieldRef<"Scholarship", 'DateTime'>
    readonly createdAt: FieldRef<"Scholarship", 'DateTime'>
    readonly updatedAt: FieldRef<"Scholarship", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Scholarship findUnique
   */
  export type ScholarshipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * Filter, which Scholarship to fetch.
     */
    where: ScholarshipWhereUniqueInput
  }

  /**
   * Scholarship findUniqueOrThrow
   */
  export type ScholarshipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * Filter, which Scholarship to fetch.
     */
    where: ScholarshipWhereUniqueInput
  }

  /**
   * Scholarship findFirst
   */
  export type ScholarshipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * Filter, which Scholarship to fetch.
     */
    where?: ScholarshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scholarships to fetch.
     */
    orderBy?: ScholarshipOrderByWithRelationInput | ScholarshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Scholarships.
     */
    cursor?: ScholarshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scholarships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scholarships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Scholarships.
     */
    distinct?: ScholarshipScalarFieldEnum | ScholarshipScalarFieldEnum[]
  }

  /**
   * Scholarship findFirstOrThrow
   */
  export type ScholarshipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * Filter, which Scholarship to fetch.
     */
    where?: ScholarshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scholarships to fetch.
     */
    orderBy?: ScholarshipOrderByWithRelationInput | ScholarshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Scholarships.
     */
    cursor?: ScholarshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scholarships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scholarships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Scholarships.
     */
    distinct?: ScholarshipScalarFieldEnum | ScholarshipScalarFieldEnum[]
  }

  /**
   * Scholarship findMany
   */
  export type ScholarshipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * Filter, which Scholarships to fetch.
     */
    where?: ScholarshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Scholarships to fetch.
     */
    orderBy?: ScholarshipOrderByWithRelationInput | ScholarshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Scholarships.
     */
    cursor?: ScholarshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Scholarships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Scholarships.
     */
    skip?: number
    distinct?: ScholarshipScalarFieldEnum | ScholarshipScalarFieldEnum[]
  }

  /**
   * Scholarship create
   */
  export type ScholarshipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * The data needed to create a Scholarship.
     */
    data: XOR<ScholarshipCreateInput, ScholarshipUncheckedCreateInput>
  }

  /**
   * Scholarship createMany
   */
  export type ScholarshipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Scholarships.
     */
    data: ScholarshipCreateManyInput | ScholarshipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Scholarship createManyAndReturn
   */
  export type ScholarshipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * The data used to create many Scholarships.
     */
    data: ScholarshipCreateManyInput | ScholarshipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Scholarship update
   */
  export type ScholarshipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * The data needed to update a Scholarship.
     */
    data: XOR<ScholarshipUpdateInput, ScholarshipUncheckedUpdateInput>
    /**
     * Choose, which Scholarship to update.
     */
    where: ScholarshipWhereUniqueInput
  }

  /**
   * Scholarship updateMany
   */
  export type ScholarshipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Scholarships.
     */
    data: XOR<ScholarshipUpdateManyMutationInput, ScholarshipUncheckedUpdateManyInput>
    /**
     * Filter which Scholarships to update
     */
    where?: ScholarshipWhereInput
    /**
     * Limit how many Scholarships to update.
     */
    limit?: number
  }

  /**
   * Scholarship updateManyAndReturn
   */
  export type ScholarshipUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * The data used to update Scholarships.
     */
    data: XOR<ScholarshipUpdateManyMutationInput, ScholarshipUncheckedUpdateManyInput>
    /**
     * Filter which Scholarships to update
     */
    where?: ScholarshipWhereInput
    /**
     * Limit how many Scholarships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Scholarship upsert
   */
  export type ScholarshipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * The filter to search for the Scholarship to update in case it exists.
     */
    where: ScholarshipWhereUniqueInput
    /**
     * In case the Scholarship found by the `where` argument doesn't exist, create a new Scholarship with this data.
     */
    create: XOR<ScholarshipCreateInput, ScholarshipUncheckedCreateInput>
    /**
     * In case the Scholarship was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ScholarshipUpdateInput, ScholarshipUncheckedUpdateInput>
  }

  /**
   * Scholarship delete
   */
  export type ScholarshipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    /**
     * Filter which Scholarship to delete.
     */
    where: ScholarshipWhereUniqueInput
  }

  /**
   * Scholarship deleteMany
   */
  export type ScholarshipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Scholarships to delete
     */
    where?: ScholarshipWhereInput
    /**
     * Limit how many Scholarships to delete.
     */
    limit?: number
  }

  /**
   * Scholarship.program
   */
  export type Scholarship$programArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    where?: ProgramWhereInput
  }

  /**
   * Scholarship.documents
   */
  export type Scholarship$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    where?: ScholarshipDocumentWhereInput
    orderBy?: ScholarshipDocumentOrderByWithRelationInput | ScholarshipDocumentOrderByWithRelationInput[]
    cursor?: ScholarshipDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScholarshipDocumentScalarFieldEnum | ScholarshipDocumentScalarFieldEnum[]
  }

  /**
   * Scholarship.applications
   */
  export type Scholarship$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    where?: ScholarshipApplicationWhereInput
    orderBy?: ScholarshipApplicationOrderByWithRelationInput | ScholarshipApplicationOrderByWithRelationInput[]
    cursor?: ScholarshipApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ScholarshipApplicationScalarFieldEnum | ScholarshipApplicationScalarFieldEnum[]
  }

  /**
   * Scholarship.calendarEvents
   */
  export type Scholarship$calendarEventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    cursor?: CalendarEventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * Scholarship without action
   */
  export type ScholarshipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
  }


  /**
   * Model ScholarshipDocument
   */

  export type AggregateScholarshipDocument = {
    _count: ScholarshipDocumentCountAggregateOutputType | null
    _avg: ScholarshipDocumentAvgAggregateOutputType | null
    _sum: ScholarshipDocumentSumAggregateOutputType | null
    _min: ScholarshipDocumentMinAggregateOutputType | null
    _max: ScholarshipDocumentMaxAggregateOutputType | null
  }

  export type ScholarshipDocumentAvgAggregateOutputType = {
    fileSize: number | null
    displayOrder: number | null
    downloadCount: number | null
  }

  export type ScholarshipDocumentSumAggregateOutputType = {
    fileSize: number | null
    displayOrder: number | null
    downloadCount: number | null
  }

  export type ScholarshipDocumentMinAggregateOutputType = {
    id: string | null
    scholarshipId: string | null
    documentType: string | null
    documentTitle: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    isRequired: boolean | null
    displayOrder: number | null
    isPublic: boolean | null
    downloadCount: number | null
    uploadedAt: Date | null
    updatedAt: Date | null
  }

  export type ScholarshipDocumentMaxAggregateOutputType = {
    id: string | null
    scholarshipId: string | null
    documentType: string | null
    documentTitle: string | null
    fileName: string | null
    fileUrl: string | null
    fileSize: number | null
    mimeType: string | null
    isRequired: boolean | null
    displayOrder: number | null
    isPublic: boolean | null
    downloadCount: number | null
    uploadedAt: Date | null
    updatedAt: Date | null
  }

  export type ScholarshipDocumentCountAggregateOutputType = {
    id: number
    scholarshipId: number
    documentType: number
    documentTitle: number
    fileName: number
    fileUrl: number
    fileSize: number
    mimeType: number
    isRequired: number
    displayOrder: number
    isPublic: number
    downloadCount: number
    uploadedAt: number
    updatedAt: number
    _all: number
  }


  export type ScholarshipDocumentAvgAggregateInputType = {
    fileSize?: true
    displayOrder?: true
    downloadCount?: true
  }

  export type ScholarshipDocumentSumAggregateInputType = {
    fileSize?: true
    displayOrder?: true
    downloadCount?: true
  }

  export type ScholarshipDocumentMinAggregateInputType = {
    id?: true
    scholarshipId?: true
    documentType?: true
    documentTitle?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    isRequired?: true
    displayOrder?: true
    isPublic?: true
    downloadCount?: true
    uploadedAt?: true
    updatedAt?: true
  }

  export type ScholarshipDocumentMaxAggregateInputType = {
    id?: true
    scholarshipId?: true
    documentType?: true
    documentTitle?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    isRequired?: true
    displayOrder?: true
    isPublic?: true
    downloadCount?: true
    uploadedAt?: true
    updatedAt?: true
  }

  export type ScholarshipDocumentCountAggregateInputType = {
    id?: true
    scholarshipId?: true
    documentType?: true
    documentTitle?: true
    fileName?: true
    fileUrl?: true
    fileSize?: true
    mimeType?: true
    isRequired?: true
    displayOrder?: true
    isPublic?: true
    downloadCount?: true
    uploadedAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ScholarshipDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ScholarshipDocument to aggregate.
     */
    where?: ScholarshipDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipDocuments to fetch.
     */
    orderBy?: ScholarshipDocumentOrderByWithRelationInput | ScholarshipDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ScholarshipDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ScholarshipDocuments
    **/
    _count?: true | ScholarshipDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ScholarshipDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ScholarshipDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScholarshipDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScholarshipDocumentMaxAggregateInputType
  }

  export type GetScholarshipDocumentAggregateType<T extends ScholarshipDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateScholarshipDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScholarshipDocument[P]>
      : GetScalarType<T[P], AggregateScholarshipDocument[P]>
  }




  export type ScholarshipDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipDocumentWhereInput
    orderBy?: ScholarshipDocumentOrderByWithAggregationInput | ScholarshipDocumentOrderByWithAggregationInput[]
    by: ScholarshipDocumentScalarFieldEnum[] | ScholarshipDocumentScalarFieldEnum
    having?: ScholarshipDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScholarshipDocumentCountAggregateInputType | true
    _avg?: ScholarshipDocumentAvgAggregateInputType
    _sum?: ScholarshipDocumentSumAggregateInputType
    _min?: ScholarshipDocumentMinAggregateInputType
    _max?: ScholarshipDocumentMaxAggregateInputType
  }

  export type ScholarshipDocumentGroupByOutputType = {
    id: string
    scholarshipId: string
    documentType: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize: number | null
    mimeType: string | null
    isRequired: boolean
    displayOrder: number
    isPublic: boolean
    downloadCount: number
    uploadedAt: Date
    updatedAt: Date
    _count: ScholarshipDocumentCountAggregateOutputType | null
    _avg: ScholarshipDocumentAvgAggregateOutputType | null
    _sum: ScholarshipDocumentSumAggregateOutputType | null
    _min: ScholarshipDocumentMinAggregateOutputType | null
    _max: ScholarshipDocumentMaxAggregateOutputType | null
  }

  type GetScholarshipDocumentGroupByPayload<T extends ScholarshipDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ScholarshipDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ScholarshipDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ScholarshipDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], ScholarshipDocumentGroupByOutputType[P]>
        }
      >
    >


  export type ScholarshipDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scholarshipId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    displayOrder?: boolean
    isPublic?: boolean
    downloadCount?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["scholarshipDocument"]>

  export type ScholarshipDocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scholarshipId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    displayOrder?: boolean
    isPublic?: boolean
    downloadCount?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["scholarshipDocument"]>

  export type ScholarshipDocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scholarshipId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    displayOrder?: boolean
    isPublic?: boolean
    downloadCount?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["scholarshipDocument"]>

  export type ScholarshipDocumentSelectScalar = {
    id?: boolean
    scholarshipId?: boolean
    documentType?: boolean
    documentTitle?: boolean
    fileName?: boolean
    fileUrl?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRequired?: boolean
    displayOrder?: boolean
    isPublic?: boolean
    downloadCount?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
  }

  export type ScholarshipDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "scholarshipId" | "documentType" | "documentTitle" | "fileName" | "fileUrl" | "fileSize" | "mimeType" | "isRequired" | "displayOrder" | "isPublic" | "downloadCount" | "uploadedAt" | "updatedAt", ExtArgs["result"]["scholarshipDocument"]>
  export type ScholarshipDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
  }
  export type ScholarshipDocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
  }
  export type ScholarshipDocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
  }

  export type $ScholarshipDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ScholarshipDocument"
    objects: {
      scholarship: Prisma.$ScholarshipPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      scholarshipId: string
      documentType: string
      documentTitle: string
      fileName: string
      fileUrl: string
      fileSize: number | null
      mimeType: string | null
      isRequired: boolean
      displayOrder: number
      isPublic: boolean
      downloadCount: number
      uploadedAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["scholarshipDocument"]>
    composites: {}
  }

  type ScholarshipDocumentGetPayload<S extends boolean | null | undefined | ScholarshipDocumentDefaultArgs> = $Result.GetResult<Prisma.$ScholarshipDocumentPayload, S>

  type ScholarshipDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ScholarshipDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ScholarshipDocumentCountAggregateInputType | true
    }

  export interface ScholarshipDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ScholarshipDocument'], meta: { name: 'ScholarshipDocument' } }
    /**
     * Find zero or one ScholarshipDocument that matches the filter.
     * @param {ScholarshipDocumentFindUniqueArgs} args - Arguments to find a ScholarshipDocument
     * @example
     * // Get one ScholarshipDocument
     * const scholarshipDocument = await prisma.scholarshipDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ScholarshipDocumentFindUniqueArgs>(args: SelectSubset<T, ScholarshipDocumentFindUniqueArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ScholarshipDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ScholarshipDocumentFindUniqueOrThrowArgs} args - Arguments to find a ScholarshipDocument
     * @example
     * // Get one ScholarshipDocument
     * const scholarshipDocument = await prisma.scholarshipDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ScholarshipDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, ScholarshipDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ScholarshipDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipDocumentFindFirstArgs} args - Arguments to find a ScholarshipDocument
     * @example
     * // Get one ScholarshipDocument
     * const scholarshipDocument = await prisma.scholarshipDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ScholarshipDocumentFindFirstArgs>(args?: SelectSubset<T, ScholarshipDocumentFindFirstArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ScholarshipDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipDocumentFindFirstOrThrowArgs} args - Arguments to find a ScholarshipDocument
     * @example
     * // Get one ScholarshipDocument
     * const scholarshipDocument = await prisma.scholarshipDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ScholarshipDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, ScholarshipDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ScholarshipDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ScholarshipDocuments
     * const scholarshipDocuments = await prisma.scholarshipDocument.findMany()
     * 
     * // Get first 10 ScholarshipDocuments
     * const scholarshipDocuments = await prisma.scholarshipDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scholarshipDocumentWithIdOnly = await prisma.scholarshipDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ScholarshipDocumentFindManyArgs>(args?: SelectSubset<T, ScholarshipDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ScholarshipDocument.
     * @param {ScholarshipDocumentCreateArgs} args - Arguments to create a ScholarshipDocument.
     * @example
     * // Create one ScholarshipDocument
     * const ScholarshipDocument = await prisma.scholarshipDocument.create({
     *   data: {
     *     // ... data to create a ScholarshipDocument
     *   }
     * })
     * 
     */
    create<T extends ScholarshipDocumentCreateArgs>(args: SelectSubset<T, ScholarshipDocumentCreateArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ScholarshipDocuments.
     * @param {ScholarshipDocumentCreateManyArgs} args - Arguments to create many ScholarshipDocuments.
     * @example
     * // Create many ScholarshipDocuments
     * const scholarshipDocument = await prisma.scholarshipDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ScholarshipDocumentCreateManyArgs>(args?: SelectSubset<T, ScholarshipDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ScholarshipDocuments and returns the data saved in the database.
     * @param {ScholarshipDocumentCreateManyAndReturnArgs} args - Arguments to create many ScholarshipDocuments.
     * @example
     * // Create many ScholarshipDocuments
     * const scholarshipDocument = await prisma.scholarshipDocument.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ScholarshipDocuments and only return the `id`
     * const scholarshipDocumentWithIdOnly = await prisma.scholarshipDocument.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ScholarshipDocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, ScholarshipDocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ScholarshipDocument.
     * @param {ScholarshipDocumentDeleteArgs} args - Arguments to delete one ScholarshipDocument.
     * @example
     * // Delete one ScholarshipDocument
     * const ScholarshipDocument = await prisma.scholarshipDocument.delete({
     *   where: {
     *     // ... filter to delete one ScholarshipDocument
     *   }
     * })
     * 
     */
    delete<T extends ScholarshipDocumentDeleteArgs>(args: SelectSubset<T, ScholarshipDocumentDeleteArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ScholarshipDocument.
     * @param {ScholarshipDocumentUpdateArgs} args - Arguments to update one ScholarshipDocument.
     * @example
     * // Update one ScholarshipDocument
     * const scholarshipDocument = await prisma.scholarshipDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ScholarshipDocumentUpdateArgs>(args: SelectSubset<T, ScholarshipDocumentUpdateArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ScholarshipDocuments.
     * @param {ScholarshipDocumentDeleteManyArgs} args - Arguments to filter ScholarshipDocuments to delete.
     * @example
     * // Delete a few ScholarshipDocuments
     * const { count } = await prisma.scholarshipDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ScholarshipDocumentDeleteManyArgs>(args?: SelectSubset<T, ScholarshipDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ScholarshipDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ScholarshipDocuments
     * const scholarshipDocument = await prisma.scholarshipDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ScholarshipDocumentUpdateManyArgs>(args: SelectSubset<T, ScholarshipDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ScholarshipDocuments and returns the data updated in the database.
     * @param {ScholarshipDocumentUpdateManyAndReturnArgs} args - Arguments to update many ScholarshipDocuments.
     * @example
     * // Update many ScholarshipDocuments
     * const scholarshipDocument = await prisma.scholarshipDocument.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ScholarshipDocuments and only return the `id`
     * const scholarshipDocumentWithIdOnly = await prisma.scholarshipDocument.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ScholarshipDocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, ScholarshipDocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ScholarshipDocument.
     * @param {ScholarshipDocumentUpsertArgs} args - Arguments to update or create a ScholarshipDocument.
     * @example
     * // Update or create a ScholarshipDocument
     * const scholarshipDocument = await prisma.scholarshipDocument.upsert({
     *   create: {
     *     // ... data to create a ScholarshipDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ScholarshipDocument we want to update
     *   }
     * })
     */
    upsert<T extends ScholarshipDocumentUpsertArgs>(args: SelectSubset<T, ScholarshipDocumentUpsertArgs<ExtArgs>>): Prisma__ScholarshipDocumentClient<$Result.GetResult<Prisma.$ScholarshipDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ScholarshipDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipDocumentCountArgs} args - Arguments to filter ScholarshipDocuments to count.
     * @example
     * // Count the number of ScholarshipDocuments
     * const count = await prisma.scholarshipDocument.count({
     *   where: {
     *     // ... the filter for the ScholarshipDocuments we want to count
     *   }
     * })
    **/
    count<T extends ScholarshipDocumentCountArgs>(
      args?: Subset<T, ScholarshipDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScholarshipDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ScholarshipDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScholarshipDocumentAggregateArgs>(args: Subset<T, ScholarshipDocumentAggregateArgs>): Prisma.PrismaPromise<GetScholarshipDocumentAggregateType<T>>

    /**
     * Group by ScholarshipDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ScholarshipDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ScholarshipDocumentGroupByArgs['orderBy'] }
        : { orderBy?: ScholarshipDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ScholarshipDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScholarshipDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ScholarshipDocument model
   */
  readonly fields: ScholarshipDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ScholarshipDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ScholarshipDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    scholarship<T extends ScholarshipDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ScholarshipDefaultArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ScholarshipDocument model
   */
  interface ScholarshipDocumentFieldRefs {
    readonly id: FieldRef<"ScholarshipDocument", 'String'>
    readonly scholarshipId: FieldRef<"ScholarshipDocument", 'String'>
    readonly documentType: FieldRef<"ScholarshipDocument", 'String'>
    readonly documentTitle: FieldRef<"ScholarshipDocument", 'String'>
    readonly fileName: FieldRef<"ScholarshipDocument", 'String'>
    readonly fileUrl: FieldRef<"ScholarshipDocument", 'String'>
    readonly fileSize: FieldRef<"ScholarshipDocument", 'Int'>
    readonly mimeType: FieldRef<"ScholarshipDocument", 'String'>
    readonly isRequired: FieldRef<"ScholarshipDocument", 'Boolean'>
    readonly displayOrder: FieldRef<"ScholarshipDocument", 'Int'>
    readonly isPublic: FieldRef<"ScholarshipDocument", 'Boolean'>
    readonly downloadCount: FieldRef<"ScholarshipDocument", 'Int'>
    readonly uploadedAt: FieldRef<"ScholarshipDocument", 'DateTime'>
    readonly updatedAt: FieldRef<"ScholarshipDocument", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ScholarshipDocument findUnique
   */
  export type ScholarshipDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipDocument to fetch.
     */
    where: ScholarshipDocumentWhereUniqueInput
  }

  /**
   * ScholarshipDocument findUniqueOrThrow
   */
  export type ScholarshipDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipDocument to fetch.
     */
    where: ScholarshipDocumentWhereUniqueInput
  }

  /**
   * ScholarshipDocument findFirst
   */
  export type ScholarshipDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipDocument to fetch.
     */
    where?: ScholarshipDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipDocuments to fetch.
     */
    orderBy?: ScholarshipDocumentOrderByWithRelationInput | ScholarshipDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScholarshipDocuments.
     */
    cursor?: ScholarshipDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScholarshipDocuments.
     */
    distinct?: ScholarshipDocumentScalarFieldEnum | ScholarshipDocumentScalarFieldEnum[]
  }

  /**
   * ScholarshipDocument findFirstOrThrow
   */
  export type ScholarshipDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipDocument to fetch.
     */
    where?: ScholarshipDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipDocuments to fetch.
     */
    orderBy?: ScholarshipDocumentOrderByWithRelationInput | ScholarshipDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScholarshipDocuments.
     */
    cursor?: ScholarshipDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScholarshipDocuments.
     */
    distinct?: ScholarshipDocumentScalarFieldEnum | ScholarshipDocumentScalarFieldEnum[]
  }

  /**
   * ScholarshipDocument findMany
   */
  export type ScholarshipDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipDocuments to fetch.
     */
    where?: ScholarshipDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipDocuments to fetch.
     */
    orderBy?: ScholarshipDocumentOrderByWithRelationInput | ScholarshipDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ScholarshipDocuments.
     */
    cursor?: ScholarshipDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipDocuments.
     */
    skip?: number
    distinct?: ScholarshipDocumentScalarFieldEnum | ScholarshipDocumentScalarFieldEnum[]
  }

  /**
   * ScholarshipDocument create
   */
  export type ScholarshipDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a ScholarshipDocument.
     */
    data: XOR<ScholarshipDocumentCreateInput, ScholarshipDocumentUncheckedCreateInput>
  }

  /**
   * ScholarshipDocument createMany
   */
  export type ScholarshipDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ScholarshipDocuments.
     */
    data: ScholarshipDocumentCreateManyInput | ScholarshipDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ScholarshipDocument createManyAndReturn
   */
  export type ScholarshipDocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * The data used to create many ScholarshipDocuments.
     */
    data: ScholarshipDocumentCreateManyInput | ScholarshipDocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ScholarshipDocument update
   */
  export type ScholarshipDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a ScholarshipDocument.
     */
    data: XOR<ScholarshipDocumentUpdateInput, ScholarshipDocumentUncheckedUpdateInput>
    /**
     * Choose, which ScholarshipDocument to update.
     */
    where: ScholarshipDocumentWhereUniqueInput
  }

  /**
   * ScholarshipDocument updateMany
   */
  export type ScholarshipDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ScholarshipDocuments.
     */
    data: XOR<ScholarshipDocumentUpdateManyMutationInput, ScholarshipDocumentUncheckedUpdateManyInput>
    /**
     * Filter which ScholarshipDocuments to update
     */
    where?: ScholarshipDocumentWhereInput
    /**
     * Limit how many ScholarshipDocuments to update.
     */
    limit?: number
  }

  /**
   * ScholarshipDocument updateManyAndReturn
   */
  export type ScholarshipDocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * The data used to update ScholarshipDocuments.
     */
    data: XOR<ScholarshipDocumentUpdateManyMutationInput, ScholarshipDocumentUncheckedUpdateManyInput>
    /**
     * Filter which ScholarshipDocuments to update
     */
    where?: ScholarshipDocumentWhereInput
    /**
     * Limit how many ScholarshipDocuments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ScholarshipDocument upsert
   */
  export type ScholarshipDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the ScholarshipDocument to update in case it exists.
     */
    where: ScholarshipDocumentWhereUniqueInput
    /**
     * In case the ScholarshipDocument found by the `where` argument doesn't exist, create a new ScholarshipDocument with this data.
     */
    create: XOR<ScholarshipDocumentCreateInput, ScholarshipDocumentUncheckedCreateInput>
    /**
     * In case the ScholarshipDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ScholarshipDocumentUpdateInput, ScholarshipDocumentUncheckedUpdateInput>
  }

  /**
   * ScholarshipDocument delete
   */
  export type ScholarshipDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
    /**
     * Filter which ScholarshipDocument to delete.
     */
    where: ScholarshipDocumentWhereUniqueInput
  }

  /**
   * ScholarshipDocument deleteMany
   */
  export type ScholarshipDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ScholarshipDocuments to delete
     */
    where?: ScholarshipDocumentWhereInput
    /**
     * Limit how many ScholarshipDocuments to delete.
     */
    limit?: number
  }

  /**
   * ScholarshipDocument without action
   */
  export type ScholarshipDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipDocument
     */
    select?: ScholarshipDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipDocument
     */
    omit?: ScholarshipDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipDocumentInclude<ExtArgs> | null
  }


  /**
   * Model ScholarshipApplication
   */

  export type AggregateScholarshipApplication = {
    _count: ScholarshipApplicationCountAggregateOutputType | null
    _avg: ScholarshipApplicationAvgAggregateOutputType | null
    _sum: ScholarshipApplicationSumAggregateOutputType | null
    _min: ScholarshipApplicationMinAggregateOutputType | null
    _max: ScholarshipApplicationMaxAggregateOutputType | null
  }

  export type ScholarshipApplicationAvgAggregateOutputType = {
    currentGpa: number | null
    testScore: number | null
    familyIncome: number | null
    awardAmount: number | null
  }

  export type ScholarshipApplicationSumAggregateOutputType = {
    currentGpa: number | null
    testScore: number | null
    familyIncome: number | null
    awardAmount: number | null
  }

  export type ScholarshipApplicationMinAggregateOutputType = {
    id: string | null
    scholarshipId: string | null
    userId: string | null
    applicationId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    currentGpa: number | null
    testScore: number | null
    testType: string | null
    familyIncome: number | null
    financialNeed: string | null
    applicationStatus: string | null
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    awardAmount: number | null
    documentsUploaded: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ScholarshipApplicationMaxAggregateOutputType = {
    id: string | null
    scholarshipId: string | null
    userId: string | null
    applicationId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    currentGpa: number | null
    testScore: number | null
    testType: string | null
    familyIncome: number | null
    financialNeed: string | null
    applicationStatus: string | null
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    awardAmount: number | null
    documentsUploaded: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ScholarshipApplicationCountAggregateOutputType = {
    id: number
    scholarshipId: number
    userId: number
    applicationId: number
    firstName: number
    lastName: number
    email: number
    phone: number
    currentGpa: number
    testScore: number
    testType: number
    familyIncome: number
    financialNeed: number
    applicationStatus: number
    submissionDate: number
    reviewDate: number
    decisionDate: number
    awardAmount: number
    documentsUploaded: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ScholarshipApplicationAvgAggregateInputType = {
    currentGpa?: true
    testScore?: true
    familyIncome?: true
    awardAmount?: true
  }

  export type ScholarshipApplicationSumAggregateInputType = {
    currentGpa?: true
    testScore?: true
    familyIncome?: true
    awardAmount?: true
  }

  export type ScholarshipApplicationMinAggregateInputType = {
    id?: true
    scholarshipId?: true
    userId?: true
    applicationId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    currentGpa?: true
    testScore?: true
    testType?: true
    familyIncome?: true
    financialNeed?: true
    applicationStatus?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    awardAmount?: true
    documentsUploaded?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ScholarshipApplicationMaxAggregateInputType = {
    id?: true
    scholarshipId?: true
    userId?: true
    applicationId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    currentGpa?: true
    testScore?: true
    testType?: true
    familyIncome?: true
    financialNeed?: true
    applicationStatus?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    awardAmount?: true
    documentsUploaded?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ScholarshipApplicationCountAggregateInputType = {
    id?: true
    scholarshipId?: true
    userId?: true
    applicationId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    currentGpa?: true
    testScore?: true
    testType?: true
    familyIncome?: true
    financialNeed?: true
    applicationStatus?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    awardAmount?: true
    documentsUploaded?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ScholarshipApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ScholarshipApplication to aggregate.
     */
    where?: ScholarshipApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipApplications to fetch.
     */
    orderBy?: ScholarshipApplicationOrderByWithRelationInput | ScholarshipApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ScholarshipApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ScholarshipApplications
    **/
    _count?: true | ScholarshipApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ScholarshipApplicationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ScholarshipApplicationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ScholarshipApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ScholarshipApplicationMaxAggregateInputType
  }

  export type GetScholarshipApplicationAggregateType<T extends ScholarshipApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateScholarshipApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateScholarshipApplication[P]>
      : GetScalarType<T[P], AggregateScholarshipApplication[P]>
  }




  export type ScholarshipApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ScholarshipApplicationWhereInput
    orderBy?: ScholarshipApplicationOrderByWithAggregationInput | ScholarshipApplicationOrderByWithAggregationInput[]
    by: ScholarshipApplicationScalarFieldEnum[] | ScholarshipApplicationScalarFieldEnum
    having?: ScholarshipApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ScholarshipApplicationCountAggregateInputType | true
    _avg?: ScholarshipApplicationAvgAggregateInputType
    _sum?: ScholarshipApplicationSumAggregateInputType
    _min?: ScholarshipApplicationMinAggregateInputType
    _max?: ScholarshipApplicationMaxAggregateInputType
  }

  export type ScholarshipApplicationGroupByOutputType = {
    id: string
    scholarshipId: string
    userId: string | null
    applicationId: string | null
    firstName: string
    lastName: string
    email: string
    phone: string | null
    currentGpa: number | null
    testScore: number | null
    testType: string | null
    familyIncome: number | null
    financialNeed: string | null
    applicationStatus: string
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    awardAmount: number | null
    documentsUploaded: string | null
    createdAt: Date
    updatedAt: Date
    _count: ScholarshipApplicationCountAggregateOutputType | null
    _avg: ScholarshipApplicationAvgAggregateOutputType | null
    _sum: ScholarshipApplicationSumAggregateOutputType | null
    _min: ScholarshipApplicationMinAggregateOutputType | null
    _max: ScholarshipApplicationMaxAggregateOutputType | null
  }

  type GetScholarshipApplicationGroupByPayload<T extends ScholarshipApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ScholarshipApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ScholarshipApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ScholarshipApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], ScholarshipApplicationGroupByOutputType[P]>
        }
      >
    >


  export type ScholarshipApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scholarshipId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    currentGpa?: boolean
    testScore?: boolean
    testType?: boolean
    familyIncome?: boolean
    financialNeed?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    awardAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
    user?: boolean | ScholarshipApplication$userArgs<ExtArgs>
    application?: boolean | ScholarshipApplication$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["scholarshipApplication"]>

  export type ScholarshipApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scholarshipId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    currentGpa?: boolean
    testScore?: boolean
    testType?: boolean
    familyIncome?: boolean
    financialNeed?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    awardAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
    user?: boolean | ScholarshipApplication$userArgs<ExtArgs>
    application?: boolean | ScholarshipApplication$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["scholarshipApplication"]>

  export type ScholarshipApplicationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    scholarshipId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    currentGpa?: boolean
    testScore?: boolean
    testType?: boolean
    familyIncome?: boolean
    financialNeed?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    awardAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
    user?: boolean | ScholarshipApplication$userArgs<ExtArgs>
    application?: boolean | ScholarshipApplication$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["scholarshipApplication"]>

  export type ScholarshipApplicationSelectScalar = {
    id?: boolean
    scholarshipId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    currentGpa?: boolean
    testScore?: boolean
    testType?: boolean
    familyIncome?: boolean
    financialNeed?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    awardAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ScholarshipApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "scholarshipId" | "userId" | "applicationId" | "firstName" | "lastName" | "email" | "phone" | "currentGpa" | "testScore" | "testType" | "familyIncome" | "financialNeed" | "applicationStatus" | "submissionDate" | "reviewDate" | "decisionDate" | "awardAmount" | "documentsUploaded" | "createdAt" | "updatedAt", ExtArgs["result"]["scholarshipApplication"]>
  export type ScholarshipApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
    user?: boolean | ScholarshipApplication$userArgs<ExtArgs>
    application?: boolean | ScholarshipApplication$applicationArgs<ExtArgs>
  }
  export type ScholarshipApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
    user?: boolean | ScholarshipApplication$userArgs<ExtArgs>
    application?: boolean | ScholarshipApplication$applicationArgs<ExtArgs>
  }
  export type ScholarshipApplicationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    scholarship?: boolean | ScholarshipDefaultArgs<ExtArgs>
    user?: boolean | ScholarshipApplication$userArgs<ExtArgs>
    application?: boolean | ScholarshipApplication$applicationArgs<ExtArgs>
  }

  export type $ScholarshipApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ScholarshipApplication"
    objects: {
      scholarship: Prisma.$ScholarshipPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
      application: Prisma.$ApplicationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      scholarshipId: string
      userId: string | null
      applicationId: string | null
      firstName: string
      lastName: string
      email: string
      phone: string | null
      currentGpa: number | null
      testScore: number | null
      testType: string | null
      familyIncome: number | null
      financialNeed: string | null
      applicationStatus: string
      submissionDate: Date | null
      reviewDate: Date | null
      decisionDate: Date | null
      awardAmount: number | null
      documentsUploaded: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["scholarshipApplication"]>
    composites: {}
  }

  type ScholarshipApplicationGetPayload<S extends boolean | null | undefined | ScholarshipApplicationDefaultArgs> = $Result.GetResult<Prisma.$ScholarshipApplicationPayload, S>

  type ScholarshipApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ScholarshipApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ScholarshipApplicationCountAggregateInputType | true
    }

  export interface ScholarshipApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ScholarshipApplication'], meta: { name: 'ScholarshipApplication' } }
    /**
     * Find zero or one ScholarshipApplication that matches the filter.
     * @param {ScholarshipApplicationFindUniqueArgs} args - Arguments to find a ScholarshipApplication
     * @example
     * // Get one ScholarshipApplication
     * const scholarshipApplication = await prisma.scholarshipApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ScholarshipApplicationFindUniqueArgs>(args: SelectSubset<T, ScholarshipApplicationFindUniqueArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ScholarshipApplication that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ScholarshipApplicationFindUniqueOrThrowArgs} args - Arguments to find a ScholarshipApplication
     * @example
     * // Get one ScholarshipApplication
     * const scholarshipApplication = await prisma.scholarshipApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ScholarshipApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, ScholarshipApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ScholarshipApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipApplicationFindFirstArgs} args - Arguments to find a ScholarshipApplication
     * @example
     * // Get one ScholarshipApplication
     * const scholarshipApplication = await prisma.scholarshipApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ScholarshipApplicationFindFirstArgs>(args?: SelectSubset<T, ScholarshipApplicationFindFirstArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ScholarshipApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipApplicationFindFirstOrThrowArgs} args - Arguments to find a ScholarshipApplication
     * @example
     * // Get one ScholarshipApplication
     * const scholarshipApplication = await prisma.scholarshipApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ScholarshipApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, ScholarshipApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ScholarshipApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ScholarshipApplications
     * const scholarshipApplications = await prisma.scholarshipApplication.findMany()
     * 
     * // Get first 10 ScholarshipApplications
     * const scholarshipApplications = await prisma.scholarshipApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const scholarshipApplicationWithIdOnly = await prisma.scholarshipApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ScholarshipApplicationFindManyArgs>(args?: SelectSubset<T, ScholarshipApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ScholarshipApplication.
     * @param {ScholarshipApplicationCreateArgs} args - Arguments to create a ScholarshipApplication.
     * @example
     * // Create one ScholarshipApplication
     * const ScholarshipApplication = await prisma.scholarshipApplication.create({
     *   data: {
     *     // ... data to create a ScholarshipApplication
     *   }
     * })
     * 
     */
    create<T extends ScholarshipApplicationCreateArgs>(args: SelectSubset<T, ScholarshipApplicationCreateArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ScholarshipApplications.
     * @param {ScholarshipApplicationCreateManyArgs} args - Arguments to create many ScholarshipApplications.
     * @example
     * // Create many ScholarshipApplications
     * const scholarshipApplication = await prisma.scholarshipApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ScholarshipApplicationCreateManyArgs>(args?: SelectSubset<T, ScholarshipApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ScholarshipApplications and returns the data saved in the database.
     * @param {ScholarshipApplicationCreateManyAndReturnArgs} args - Arguments to create many ScholarshipApplications.
     * @example
     * // Create many ScholarshipApplications
     * const scholarshipApplication = await prisma.scholarshipApplication.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ScholarshipApplications and only return the `id`
     * const scholarshipApplicationWithIdOnly = await prisma.scholarshipApplication.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ScholarshipApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, ScholarshipApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ScholarshipApplication.
     * @param {ScholarshipApplicationDeleteArgs} args - Arguments to delete one ScholarshipApplication.
     * @example
     * // Delete one ScholarshipApplication
     * const ScholarshipApplication = await prisma.scholarshipApplication.delete({
     *   where: {
     *     // ... filter to delete one ScholarshipApplication
     *   }
     * })
     * 
     */
    delete<T extends ScholarshipApplicationDeleteArgs>(args: SelectSubset<T, ScholarshipApplicationDeleteArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ScholarshipApplication.
     * @param {ScholarshipApplicationUpdateArgs} args - Arguments to update one ScholarshipApplication.
     * @example
     * // Update one ScholarshipApplication
     * const scholarshipApplication = await prisma.scholarshipApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ScholarshipApplicationUpdateArgs>(args: SelectSubset<T, ScholarshipApplicationUpdateArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ScholarshipApplications.
     * @param {ScholarshipApplicationDeleteManyArgs} args - Arguments to filter ScholarshipApplications to delete.
     * @example
     * // Delete a few ScholarshipApplications
     * const { count } = await prisma.scholarshipApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ScholarshipApplicationDeleteManyArgs>(args?: SelectSubset<T, ScholarshipApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ScholarshipApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ScholarshipApplications
     * const scholarshipApplication = await prisma.scholarshipApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ScholarshipApplicationUpdateManyArgs>(args: SelectSubset<T, ScholarshipApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ScholarshipApplications and returns the data updated in the database.
     * @param {ScholarshipApplicationUpdateManyAndReturnArgs} args - Arguments to update many ScholarshipApplications.
     * @example
     * // Update many ScholarshipApplications
     * const scholarshipApplication = await prisma.scholarshipApplication.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ScholarshipApplications and only return the `id`
     * const scholarshipApplicationWithIdOnly = await prisma.scholarshipApplication.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ScholarshipApplicationUpdateManyAndReturnArgs>(args: SelectSubset<T, ScholarshipApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ScholarshipApplication.
     * @param {ScholarshipApplicationUpsertArgs} args - Arguments to update or create a ScholarshipApplication.
     * @example
     * // Update or create a ScholarshipApplication
     * const scholarshipApplication = await prisma.scholarshipApplication.upsert({
     *   create: {
     *     // ... data to create a ScholarshipApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ScholarshipApplication we want to update
     *   }
     * })
     */
    upsert<T extends ScholarshipApplicationUpsertArgs>(args: SelectSubset<T, ScholarshipApplicationUpsertArgs<ExtArgs>>): Prisma__ScholarshipApplicationClient<$Result.GetResult<Prisma.$ScholarshipApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ScholarshipApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipApplicationCountArgs} args - Arguments to filter ScholarshipApplications to count.
     * @example
     * // Count the number of ScholarshipApplications
     * const count = await prisma.scholarshipApplication.count({
     *   where: {
     *     // ... the filter for the ScholarshipApplications we want to count
     *   }
     * })
    **/
    count<T extends ScholarshipApplicationCountArgs>(
      args?: Subset<T, ScholarshipApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ScholarshipApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ScholarshipApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ScholarshipApplicationAggregateArgs>(args: Subset<T, ScholarshipApplicationAggregateArgs>): Prisma.PrismaPromise<GetScholarshipApplicationAggregateType<T>>

    /**
     * Group by ScholarshipApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ScholarshipApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ScholarshipApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ScholarshipApplicationGroupByArgs['orderBy'] }
        : { orderBy?: ScholarshipApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ScholarshipApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScholarshipApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ScholarshipApplication model
   */
  readonly fields: ScholarshipApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ScholarshipApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ScholarshipApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    scholarship<T extends ScholarshipDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ScholarshipDefaultArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends ScholarshipApplication$userArgs<ExtArgs> = {}>(args?: Subset<T, ScholarshipApplication$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    application<T extends ScholarshipApplication$applicationArgs<ExtArgs> = {}>(args?: Subset<T, ScholarshipApplication$applicationArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ScholarshipApplication model
   */
  interface ScholarshipApplicationFieldRefs {
    readonly id: FieldRef<"ScholarshipApplication", 'String'>
    readonly scholarshipId: FieldRef<"ScholarshipApplication", 'String'>
    readonly userId: FieldRef<"ScholarshipApplication", 'String'>
    readonly applicationId: FieldRef<"ScholarshipApplication", 'String'>
    readonly firstName: FieldRef<"ScholarshipApplication", 'String'>
    readonly lastName: FieldRef<"ScholarshipApplication", 'String'>
    readonly email: FieldRef<"ScholarshipApplication", 'String'>
    readonly phone: FieldRef<"ScholarshipApplication", 'String'>
    readonly currentGpa: FieldRef<"ScholarshipApplication", 'Float'>
    readonly testScore: FieldRef<"ScholarshipApplication", 'Int'>
    readonly testType: FieldRef<"ScholarshipApplication", 'String'>
    readonly familyIncome: FieldRef<"ScholarshipApplication", 'Float'>
    readonly financialNeed: FieldRef<"ScholarshipApplication", 'String'>
    readonly applicationStatus: FieldRef<"ScholarshipApplication", 'String'>
    readonly submissionDate: FieldRef<"ScholarshipApplication", 'DateTime'>
    readonly reviewDate: FieldRef<"ScholarshipApplication", 'DateTime'>
    readonly decisionDate: FieldRef<"ScholarshipApplication", 'DateTime'>
    readonly awardAmount: FieldRef<"ScholarshipApplication", 'Float'>
    readonly documentsUploaded: FieldRef<"ScholarshipApplication", 'String'>
    readonly createdAt: FieldRef<"ScholarshipApplication", 'DateTime'>
    readonly updatedAt: FieldRef<"ScholarshipApplication", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ScholarshipApplication findUnique
   */
  export type ScholarshipApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipApplication to fetch.
     */
    where: ScholarshipApplicationWhereUniqueInput
  }

  /**
   * ScholarshipApplication findUniqueOrThrow
   */
  export type ScholarshipApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipApplication to fetch.
     */
    where: ScholarshipApplicationWhereUniqueInput
  }

  /**
   * ScholarshipApplication findFirst
   */
  export type ScholarshipApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipApplication to fetch.
     */
    where?: ScholarshipApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipApplications to fetch.
     */
    orderBy?: ScholarshipApplicationOrderByWithRelationInput | ScholarshipApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScholarshipApplications.
     */
    cursor?: ScholarshipApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScholarshipApplications.
     */
    distinct?: ScholarshipApplicationScalarFieldEnum | ScholarshipApplicationScalarFieldEnum[]
  }

  /**
   * ScholarshipApplication findFirstOrThrow
   */
  export type ScholarshipApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipApplication to fetch.
     */
    where?: ScholarshipApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipApplications to fetch.
     */
    orderBy?: ScholarshipApplicationOrderByWithRelationInput | ScholarshipApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ScholarshipApplications.
     */
    cursor?: ScholarshipApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ScholarshipApplications.
     */
    distinct?: ScholarshipApplicationScalarFieldEnum | ScholarshipApplicationScalarFieldEnum[]
  }

  /**
   * ScholarshipApplication findMany
   */
  export type ScholarshipApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * Filter, which ScholarshipApplications to fetch.
     */
    where?: ScholarshipApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ScholarshipApplications to fetch.
     */
    orderBy?: ScholarshipApplicationOrderByWithRelationInput | ScholarshipApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ScholarshipApplications.
     */
    cursor?: ScholarshipApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ScholarshipApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ScholarshipApplications.
     */
    skip?: number
    distinct?: ScholarshipApplicationScalarFieldEnum | ScholarshipApplicationScalarFieldEnum[]
  }

  /**
   * ScholarshipApplication create
   */
  export type ScholarshipApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a ScholarshipApplication.
     */
    data: XOR<ScholarshipApplicationCreateInput, ScholarshipApplicationUncheckedCreateInput>
  }

  /**
   * ScholarshipApplication createMany
   */
  export type ScholarshipApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ScholarshipApplications.
     */
    data: ScholarshipApplicationCreateManyInput | ScholarshipApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ScholarshipApplication createManyAndReturn
   */
  export type ScholarshipApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * The data used to create many ScholarshipApplications.
     */
    data: ScholarshipApplicationCreateManyInput | ScholarshipApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ScholarshipApplication update
   */
  export type ScholarshipApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a ScholarshipApplication.
     */
    data: XOR<ScholarshipApplicationUpdateInput, ScholarshipApplicationUncheckedUpdateInput>
    /**
     * Choose, which ScholarshipApplication to update.
     */
    where: ScholarshipApplicationWhereUniqueInput
  }

  /**
   * ScholarshipApplication updateMany
   */
  export type ScholarshipApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ScholarshipApplications.
     */
    data: XOR<ScholarshipApplicationUpdateManyMutationInput, ScholarshipApplicationUncheckedUpdateManyInput>
    /**
     * Filter which ScholarshipApplications to update
     */
    where?: ScholarshipApplicationWhereInput
    /**
     * Limit how many ScholarshipApplications to update.
     */
    limit?: number
  }

  /**
   * ScholarshipApplication updateManyAndReturn
   */
  export type ScholarshipApplicationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * The data used to update ScholarshipApplications.
     */
    data: XOR<ScholarshipApplicationUpdateManyMutationInput, ScholarshipApplicationUncheckedUpdateManyInput>
    /**
     * Filter which ScholarshipApplications to update
     */
    where?: ScholarshipApplicationWhereInput
    /**
     * Limit how many ScholarshipApplications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ScholarshipApplication upsert
   */
  export type ScholarshipApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the ScholarshipApplication to update in case it exists.
     */
    where: ScholarshipApplicationWhereUniqueInput
    /**
     * In case the ScholarshipApplication found by the `where` argument doesn't exist, create a new ScholarshipApplication with this data.
     */
    create: XOR<ScholarshipApplicationCreateInput, ScholarshipApplicationUncheckedCreateInput>
    /**
     * In case the ScholarshipApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ScholarshipApplicationUpdateInput, ScholarshipApplicationUncheckedUpdateInput>
  }

  /**
   * ScholarshipApplication delete
   */
  export type ScholarshipApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
    /**
     * Filter which ScholarshipApplication to delete.
     */
    where: ScholarshipApplicationWhereUniqueInput
  }

  /**
   * ScholarshipApplication deleteMany
   */
  export type ScholarshipApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ScholarshipApplications to delete
     */
    where?: ScholarshipApplicationWhereInput
    /**
     * Limit how many ScholarshipApplications to delete.
     */
    limit?: number
  }

  /**
   * ScholarshipApplication.user
   */
  export type ScholarshipApplication$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ScholarshipApplication.application
   */
  export type ScholarshipApplication$applicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
  }

  /**
   * ScholarshipApplication without action
   */
  export type ScholarshipApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ScholarshipApplication
     */
    select?: ScholarshipApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ScholarshipApplication
     */
    omit?: ScholarshipApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipApplicationInclude<ExtArgs> | null
  }


  /**
   * Model FeeStructure
   */

  export type AggregateFeeStructure = {
    _count: FeeStructureCountAggregateOutputType | null
    _avg: FeeStructureAvgAggregateOutputType | null
    _sum: FeeStructureSumAggregateOutputType | null
    _min: FeeStructureMinAggregateOutputType | null
    _max: FeeStructureMaxAggregateOutputType | null
  }

  export type FeeStructureAvgAggregateOutputType = {
    tuitionFee: number | null
    admissionFee: number | null
    registrationFee: number | null
    examFee: number | null
    libraryFee: number | null
    labFee: number | null
    hostelFee: number | null
    messFee: number | null
    transportFee: number | null
    sportsFee: number | null
    medicalFee: number | null
    healthInsurance: number | null
    accidentInsurance: number | null
    studentActivityFee: number | null
    technologyFee: number | null
    securityDeposit: number | null
    cautionMoney: number | null
    totalMandatoryFees: number | null
    totalOptionalFees: number | null
    grandTotal: number | null
    installmentCount: number | null
  }

  export type FeeStructureSumAggregateOutputType = {
    tuitionFee: number | null
    admissionFee: number | null
    registrationFee: number | null
    examFee: number | null
    libraryFee: number | null
    labFee: number | null
    hostelFee: number | null
    messFee: number | null
    transportFee: number | null
    sportsFee: number | null
    medicalFee: number | null
    healthInsurance: number | null
    accidentInsurance: number | null
    studentActivityFee: number | null
    technologyFee: number | null
    securityDeposit: number | null
    cautionMoney: number | null
    totalMandatoryFees: number | null
    totalOptionalFees: number | null
    grandTotal: number | null
    installmentCount: number | null
  }

  export type FeeStructureMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    structureName: string | null
    structureType: string | null
    academicYear: string | null
    tuitionFee: number | null
    admissionFee: number | null
    registrationFee: number | null
    examFee: number | null
    libraryFee: number | null
    labFee: number | null
    hostelFee: number | null
    messFee: number | null
    transportFee: number | null
    sportsFee: number | null
    medicalFee: number | null
    healthInsurance: number | null
    accidentInsurance: number | null
    studentActivityFee: number | null
    technologyFee: number | null
    securityDeposit: number | null
    cautionMoney: number | null
    isDepositRefundable: boolean | null
    totalMandatoryFees: number | null
    totalOptionalFees: number | null
    grandTotal: number | null
    currency: string | null
    currencySymbol: string | null
    paymentTerms: string | null
    installmentCount: number | null
    isActive: boolean | null
    effectiveDate: Date | null
    expiryDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FeeStructureMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    structureName: string | null
    structureType: string | null
    academicYear: string | null
    tuitionFee: number | null
    admissionFee: number | null
    registrationFee: number | null
    examFee: number | null
    libraryFee: number | null
    labFee: number | null
    hostelFee: number | null
    messFee: number | null
    transportFee: number | null
    sportsFee: number | null
    medicalFee: number | null
    healthInsurance: number | null
    accidentInsurance: number | null
    studentActivityFee: number | null
    technologyFee: number | null
    securityDeposit: number | null
    cautionMoney: number | null
    isDepositRefundable: boolean | null
    totalMandatoryFees: number | null
    totalOptionalFees: number | null
    grandTotal: number | null
    currency: string | null
    currencySymbol: string | null
    paymentTerms: string | null
    installmentCount: number | null
    isActive: boolean | null
    effectiveDate: Date | null
    expiryDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FeeStructureCountAggregateOutputType = {
    id: number
    universityId: number
    programId: number
    structureName: number
    structureType: number
    academicYear: number
    tuitionFee: number
    admissionFee: number
    registrationFee: number
    examFee: number
    libraryFee: number
    labFee: number
    hostelFee: number
    messFee: number
    transportFee: number
    sportsFee: number
    medicalFee: number
    healthInsurance: number
    accidentInsurance: number
    studentActivityFee: number
    technologyFee: number
    securityDeposit: number
    cautionMoney: number
    isDepositRefundable: number
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency: number
    currencySymbol: number
    paymentTerms: number
    installmentCount: number
    isActive: number
    effectiveDate: number
    expiryDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FeeStructureAvgAggregateInputType = {
    tuitionFee?: true
    admissionFee?: true
    registrationFee?: true
    examFee?: true
    libraryFee?: true
    labFee?: true
    hostelFee?: true
    messFee?: true
    transportFee?: true
    sportsFee?: true
    medicalFee?: true
    healthInsurance?: true
    accidentInsurance?: true
    studentActivityFee?: true
    technologyFee?: true
    securityDeposit?: true
    cautionMoney?: true
    totalMandatoryFees?: true
    totalOptionalFees?: true
    grandTotal?: true
    installmentCount?: true
  }

  export type FeeStructureSumAggregateInputType = {
    tuitionFee?: true
    admissionFee?: true
    registrationFee?: true
    examFee?: true
    libraryFee?: true
    labFee?: true
    hostelFee?: true
    messFee?: true
    transportFee?: true
    sportsFee?: true
    medicalFee?: true
    healthInsurance?: true
    accidentInsurance?: true
    studentActivityFee?: true
    technologyFee?: true
    securityDeposit?: true
    cautionMoney?: true
    totalMandatoryFees?: true
    totalOptionalFees?: true
    grandTotal?: true
    installmentCount?: true
  }

  export type FeeStructureMinAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    structureName?: true
    structureType?: true
    academicYear?: true
    tuitionFee?: true
    admissionFee?: true
    registrationFee?: true
    examFee?: true
    libraryFee?: true
    labFee?: true
    hostelFee?: true
    messFee?: true
    transportFee?: true
    sportsFee?: true
    medicalFee?: true
    healthInsurance?: true
    accidentInsurance?: true
    studentActivityFee?: true
    technologyFee?: true
    securityDeposit?: true
    cautionMoney?: true
    isDepositRefundable?: true
    totalMandatoryFees?: true
    totalOptionalFees?: true
    grandTotal?: true
    currency?: true
    currencySymbol?: true
    paymentTerms?: true
    installmentCount?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FeeStructureMaxAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    structureName?: true
    structureType?: true
    academicYear?: true
    tuitionFee?: true
    admissionFee?: true
    registrationFee?: true
    examFee?: true
    libraryFee?: true
    labFee?: true
    hostelFee?: true
    messFee?: true
    transportFee?: true
    sportsFee?: true
    medicalFee?: true
    healthInsurance?: true
    accidentInsurance?: true
    studentActivityFee?: true
    technologyFee?: true
    securityDeposit?: true
    cautionMoney?: true
    isDepositRefundable?: true
    totalMandatoryFees?: true
    totalOptionalFees?: true
    grandTotal?: true
    currency?: true
    currencySymbol?: true
    paymentTerms?: true
    installmentCount?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FeeStructureCountAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    structureName?: true
    structureType?: true
    academicYear?: true
    tuitionFee?: true
    admissionFee?: true
    registrationFee?: true
    examFee?: true
    libraryFee?: true
    labFee?: true
    hostelFee?: true
    messFee?: true
    transportFee?: true
    sportsFee?: true
    medicalFee?: true
    healthInsurance?: true
    accidentInsurance?: true
    studentActivityFee?: true
    technologyFee?: true
    securityDeposit?: true
    cautionMoney?: true
    isDepositRefundable?: true
    totalMandatoryFees?: true
    totalOptionalFees?: true
    grandTotal?: true
    currency?: true
    currencySymbol?: true
    paymentTerms?: true
    installmentCount?: true
    isActive?: true
    effectiveDate?: true
    expiryDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FeeStructureAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FeeStructure to aggregate.
     */
    where?: FeeStructureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeeStructures to fetch.
     */
    orderBy?: FeeStructureOrderByWithRelationInput | FeeStructureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FeeStructureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeeStructures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeeStructures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FeeStructures
    **/
    _count?: true | FeeStructureCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FeeStructureAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FeeStructureSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FeeStructureMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FeeStructureMaxAggregateInputType
  }

  export type GetFeeStructureAggregateType<T extends FeeStructureAggregateArgs> = {
        [P in keyof T & keyof AggregateFeeStructure]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFeeStructure[P]>
      : GetScalarType<T[P], AggregateFeeStructure[P]>
  }




  export type FeeStructureGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FeeStructureWhereInput
    orderBy?: FeeStructureOrderByWithAggregationInput | FeeStructureOrderByWithAggregationInput[]
    by: FeeStructureScalarFieldEnum[] | FeeStructureScalarFieldEnum
    having?: FeeStructureScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FeeStructureCountAggregateInputType | true
    _avg?: FeeStructureAvgAggregateInputType
    _sum?: FeeStructureSumAggregateInputType
    _min?: FeeStructureMinAggregateInputType
    _max?: FeeStructureMaxAggregateInputType
  }

  export type FeeStructureGroupByOutputType = {
    id: string
    universityId: string
    programId: string | null
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee: number | null
    registrationFee: number | null
    examFee: number | null
    libraryFee: number | null
    labFee: number | null
    hostelFee: number | null
    messFee: number | null
    transportFee: number | null
    sportsFee: number | null
    medicalFee: number | null
    healthInsurance: number | null
    accidentInsurance: number | null
    studentActivityFee: number | null
    technologyFee: number | null
    securityDeposit: number | null
    cautionMoney: number | null
    isDepositRefundable: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency: string
    currencySymbol: string
    paymentTerms: string | null
    installmentCount: number | null
    isActive: boolean
    effectiveDate: Date
    expiryDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: FeeStructureCountAggregateOutputType | null
    _avg: FeeStructureAvgAggregateOutputType | null
    _sum: FeeStructureSumAggregateOutputType | null
    _min: FeeStructureMinAggregateOutputType | null
    _max: FeeStructureMaxAggregateOutputType | null
  }

  type GetFeeStructureGroupByPayload<T extends FeeStructureGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FeeStructureGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FeeStructureGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FeeStructureGroupByOutputType[P]>
            : GetScalarType<T[P], FeeStructureGroupByOutputType[P]>
        }
      >
    >


  export type FeeStructureSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    structureName?: boolean
    structureType?: boolean
    academicYear?: boolean
    tuitionFee?: boolean
    admissionFee?: boolean
    registrationFee?: boolean
    examFee?: boolean
    libraryFee?: boolean
    labFee?: boolean
    hostelFee?: boolean
    messFee?: boolean
    transportFee?: boolean
    sportsFee?: boolean
    medicalFee?: boolean
    healthInsurance?: boolean
    accidentInsurance?: boolean
    studentActivityFee?: boolean
    technologyFee?: boolean
    securityDeposit?: boolean
    cautionMoney?: boolean
    isDepositRefundable?: boolean
    totalMandatoryFees?: boolean
    totalOptionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FeeStructure$programArgs<ExtArgs>
  }, ExtArgs["result"]["feeStructure"]>

  export type FeeStructureSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    structureName?: boolean
    structureType?: boolean
    academicYear?: boolean
    tuitionFee?: boolean
    admissionFee?: boolean
    registrationFee?: boolean
    examFee?: boolean
    libraryFee?: boolean
    labFee?: boolean
    hostelFee?: boolean
    messFee?: boolean
    transportFee?: boolean
    sportsFee?: boolean
    medicalFee?: boolean
    healthInsurance?: boolean
    accidentInsurance?: boolean
    studentActivityFee?: boolean
    technologyFee?: boolean
    securityDeposit?: boolean
    cautionMoney?: boolean
    isDepositRefundable?: boolean
    totalMandatoryFees?: boolean
    totalOptionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FeeStructure$programArgs<ExtArgs>
  }, ExtArgs["result"]["feeStructure"]>

  export type FeeStructureSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    structureName?: boolean
    structureType?: boolean
    academicYear?: boolean
    tuitionFee?: boolean
    admissionFee?: boolean
    registrationFee?: boolean
    examFee?: boolean
    libraryFee?: boolean
    labFee?: boolean
    hostelFee?: boolean
    messFee?: boolean
    transportFee?: boolean
    sportsFee?: boolean
    medicalFee?: boolean
    healthInsurance?: boolean
    accidentInsurance?: boolean
    studentActivityFee?: boolean
    technologyFee?: boolean
    securityDeposit?: boolean
    cautionMoney?: boolean
    isDepositRefundable?: boolean
    totalMandatoryFees?: boolean
    totalOptionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FeeStructure$programArgs<ExtArgs>
  }, ExtArgs["result"]["feeStructure"]>

  export type FeeStructureSelectScalar = {
    id?: boolean
    universityId?: boolean
    programId?: boolean
    structureName?: boolean
    structureType?: boolean
    academicYear?: boolean
    tuitionFee?: boolean
    admissionFee?: boolean
    registrationFee?: boolean
    examFee?: boolean
    libraryFee?: boolean
    labFee?: boolean
    hostelFee?: boolean
    messFee?: boolean
    transportFee?: boolean
    sportsFee?: boolean
    medicalFee?: boolean
    healthInsurance?: boolean
    accidentInsurance?: boolean
    studentActivityFee?: boolean
    technologyFee?: boolean
    securityDeposit?: boolean
    cautionMoney?: boolean
    isDepositRefundable?: boolean
    totalMandatoryFees?: boolean
    totalOptionalFees?: boolean
    grandTotal?: boolean
    currency?: boolean
    currencySymbol?: boolean
    paymentTerms?: boolean
    installmentCount?: boolean
    isActive?: boolean
    effectiveDate?: boolean
    expiryDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FeeStructureOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "programId" | "structureName" | "structureType" | "academicYear" | "tuitionFee" | "admissionFee" | "registrationFee" | "examFee" | "libraryFee" | "labFee" | "hostelFee" | "messFee" | "transportFee" | "sportsFee" | "medicalFee" | "healthInsurance" | "accidentInsurance" | "studentActivityFee" | "technologyFee" | "securityDeposit" | "cautionMoney" | "isDepositRefundable" | "totalMandatoryFees" | "totalOptionalFees" | "grandTotal" | "currency" | "currencySymbol" | "paymentTerms" | "installmentCount" | "isActive" | "effectiveDate" | "expiryDate" | "createdAt" | "updatedAt", ExtArgs["result"]["feeStructure"]>
  export type FeeStructureInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FeeStructure$programArgs<ExtArgs>
  }
  export type FeeStructureIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FeeStructure$programArgs<ExtArgs>
  }
  export type FeeStructureIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FeeStructure$programArgs<ExtArgs>
  }

  export type $FeeStructurePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FeeStructure"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
      program: Prisma.$ProgramPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      programId: string | null
      structureName: string
      structureType: string
      academicYear: string
      tuitionFee: number
      admissionFee: number | null
      registrationFee: number | null
      examFee: number | null
      libraryFee: number | null
      labFee: number | null
      hostelFee: number | null
      messFee: number | null
      transportFee: number | null
      sportsFee: number | null
      medicalFee: number | null
      healthInsurance: number | null
      accidentInsurance: number | null
      studentActivityFee: number | null
      technologyFee: number | null
      securityDeposit: number | null
      cautionMoney: number | null
      isDepositRefundable: boolean
      totalMandatoryFees: number
      totalOptionalFees: number
      grandTotal: number
      currency: string
      currencySymbol: string
      paymentTerms: string | null
      installmentCount: number | null
      isActive: boolean
      effectiveDate: Date
      expiryDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["feeStructure"]>
    composites: {}
  }

  type FeeStructureGetPayload<S extends boolean | null | undefined | FeeStructureDefaultArgs> = $Result.GetResult<Prisma.$FeeStructurePayload, S>

  type FeeStructureCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FeeStructureFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FeeStructureCountAggregateInputType | true
    }

  export interface FeeStructureDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FeeStructure'], meta: { name: 'FeeStructure' } }
    /**
     * Find zero or one FeeStructure that matches the filter.
     * @param {FeeStructureFindUniqueArgs} args - Arguments to find a FeeStructure
     * @example
     * // Get one FeeStructure
     * const feeStructure = await prisma.feeStructure.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FeeStructureFindUniqueArgs>(args: SelectSubset<T, FeeStructureFindUniqueArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FeeStructure that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FeeStructureFindUniqueOrThrowArgs} args - Arguments to find a FeeStructure
     * @example
     * // Get one FeeStructure
     * const feeStructure = await prisma.feeStructure.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FeeStructureFindUniqueOrThrowArgs>(args: SelectSubset<T, FeeStructureFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FeeStructure that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeeStructureFindFirstArgs} args - Arguments to find a FeeStructure
     * @example
     * // Get one FeeStructure
     * const feeStructure = await prisma.feeStructure.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FeeStructureFindFirstArgs>(args?: SelectSubset<T, FeeStructureFindFirstArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FeeStructure that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeeStructureFindFirstOrThrowArgs} args - Arguments to find a FeeStructure
     * @example
     * // Get one FeeStructure
     * const feeStructure = await prisma.feeStructure.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FeeStructureFindFirstOrThrowArgs>(args?: SelectSubset<T, FeeStructureFindFirstOrThrowArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FeeStructures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeeStructureFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FeeStructures
     * const feeStructures = await prisma.feeStructure.findMany()
     * 
     * // Get first 10 FeeStructures
     * const feeStructures = await prisma.feeStructure.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const feeStructureWithIdOnly = await prisma.feeStructure.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FeeStructureFindManyArgs>(args?: SelectSubset<T, FeeStructureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FeeStructure.
     * @param {FeeStructureCreateArgs} args - Arguments to create a FeeStructure.
     * @example
     * // Create one FeeStructure
     * const FeeStructure = await prisma.feeStructure.create({
     *   data: {
     *     // ... data to create a FeeStructure
     *   }
     * })
     * 
     */
    create<T extends FeeStructureCreateArgs>(args: SelectSubset<T, FeeStructureCreateArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FeeStructures.
     * @param {FeeStructureCreateManyArgs} args - Arguments to create many FeeStructures.
     * @example
     * // Create many FeeStructures
     * const feeStructure = await prisma.feeStructure.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FeeStructureCreateManyArgs>(args?: SelectSubset<T, FeeStructureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FeeStructures and returns the data saved in the database.
     * @param {FeeStructureCreateManyAndReturnArgs} args - Arguments to create many FeeStructures.
     * @example
     * // Create many FeeStructures
     * const feeStructure = await prisma.feeStructure.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FeeStructures and only return the `id`
     * const feeStructureWithIdOnly = await prisma.feeStructure.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FeeStructureCreateManyAndReturnArgs>(args?: SelectSubset<T, FeeStructureCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FeeStructure.
     * @param {FeeStructureDeleteArgs} args - Arguments to delete one FeeStructure.
     * @example
     * // Delete one FeeStructure
     * const FeeStructure = await prisma.feeStructure.delete({
     *   where: {
     *     // ... filter to delete one FeeStructure
     *   }
     * })
     * 
     */
    delete<T extends FeeStructureDeleteArgs>(args: SelectSubset<T, FeeStructureDeleteArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FeeStructure.
     * @param {FeeStructureUpdateArgs} args - Arguments to update one FeeStructure.
     * @example
     * // Update one FeeStructure
     * const feeStructure = await prisma.feeStructure.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FeeStructureUpdateArgs>(args: SelectSubset<T, FeeStructureUpdateArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FeeStructures.
     * @param {FeeStructureDeleteManyArgs} args - Arguments to filter FeeStructures to delete.
     * @example
     * // Delete a few FeeStructures
     * const { count } = await prisma.feeStructure.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FeeStructureDeleteManyArgs>(args?: SelectSubset<T, FeeStructureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FeeStructures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeeStructureUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FeeStructures
     * const feeStructure = await prisma.feeStructure.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FeeStructureUpdateManyArgs>(args: SelectSubset<T, FeeStructureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FeeStructures and returns the data updated in the database.
     * @param {FeeStructureUpdateManyAndReturnArgs} args - Arguments to update many FeeStructures.
     * @example
     * // Update many FeeStructures
     * const feeStructure = await prisma.feeStructure.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FeeStructures and only return the `id`
     * const feeStructureWithIdOnly = await prisma.feeStructure.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FeeStructureUpdateManyAndReturnArgs>(args: SelectSubset<T, FeeStructureUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FeeStructure.
     * @param {FeeStructureUpsertArgs} args - Arguments to update or create a FeeStructure.
     * @example
     * // Update or create a FeeStructure
     * const feeStructure = await prisma.feeStructure.upsert({
     *   create: {
     *     // ... data to create a FeeStructure
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FeeStructure we want to update
     *   }
     * })
     */
    upsert<T extends FeeStructureUpsertArgs>(args: SelectSubset<T, FeeStructureUpsertArgs<ExtArgs>>): Prisma__FeeStructureClient<$Result.GetResult<Prisma.$FeeStructurePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FeeStructures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeeStructureCountArgs} args - Arguments to filter FeeStructures to count.
     * @example
     * // Count the number of FeeStructures
     * const count = await prisma.feeStructure.count({
     *   where: {
     *     // ... the filter for the FeeStructures we want to count
     *   }
     * })
    **/
    count<T extends FeeStructureCountArgs>(
      args?: Subset<T, FeeStructureCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FeeStructureCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FeeStructure.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeeStructureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FeeStructureAggregateArgs>(args: Subset<T, FeeStructureAggregateArgs>): Prisma.PrismaPromise<GetFeeStructureAggregateType<T>>

    /**
     * Group by FeeStructure.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeeStructureGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FeeStructureGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FeeStructureGroupByArgs['orderBy'] }
        : { orderBy?: FeeStructureGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FeeStructureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFeeStructureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FeeStructure model
   */
  readonly fields: FeeStructureFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FeeStructure.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FeeStructureClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    program<T extends FeeStructure$programArgs<ExtArgs> = {}>(args?: Subset<T, FeeStructure$programArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FeeStructure model
   */
  interface FeeStructureFieldRefs {
    readonly id: FieldRef<"FeeStructure", 'String'>
    readonly universityId: FieldRef<"FeeStructure", 'String'>
    readonly programId: FieldRef<"FeeStructure", 'String'>
    readonly structureName: FieldRef<"FeeStructure", 'String'>
    readonly structureType: FieldRef<"FeeStructure", 'String'>
    readonly academicYear: FieldRef<"FeeStructure", 'String'>
    readonly tuitionFee: FieldRef<"FeeStructure", 'Float'>
    readonly admissionFee: FieldRef<"FeeStructure", 'Float'>
    readonly registrationFee: FieldRef<"FeeStructure", 'Float'>
    readonly examFee: FieldRef<"FeeStructure", 'Float'>
    readonly libraryFee: FieldRef<"FeeStructure", 'Float'>
    readonly labFee: FieldRef<"FeeStructure", 'Float'>
    readonly hostelFee: FieldRef<"FeeStructure", 'Float'>
    readonly messFee: FieldRef<"FeeStructure", 'Float'>
    readonly transportFee: FieldRef<"FeeStructure", 'Float'>
    readonly sportsFee: FieldRef<"FeeStructure", 'Float'>
    readonly medicalFee: FieldRef<"FeeStructure", 'Float'>
    readonly healthInsurance: FieldRef<"FeeStructure", 'Float'>
    readonly accidentInsurance: FieldRef<"FeeStructure", 'Float'>
    readonly studentActivityFee: FieldRef<"FeeStructure", 'Float'>
    readonly technologyFee: FieldRef<"FeeStructure", 'Float'>
    readonly securityDeposit: FieldRef<"FeeStructure", 'Float'>
    readonly cautionMoney: FieldRef<"FeeStructure", 'Float'>
    readonly isDepositRefundable: FieldRef<"FeeStructure", 'Boolean'>
    readonly totalMandatoryFees: FieldRef<"FeeStructure", 'Float'>
    readonly totalOptionalFees: FieldRef<"FeeStructure", 'Float'>
    readonly grandTotal: FieldRef<"FeeStructure", 'Float'>
    readonly currency: FieldRef<"FeeStructure", 'String'>
    readonly currencySymbol: FieldRef<"FeeStructure", 'String'>
    readonly paymentTerms: FieldRef<"FeeStructure", 'String'>
    readonly installmentCount: FieldRef<"FeeStructure", 'Int'>
    readonly isActive: FieldRef<"FeeStructure", 'Boolean'>
    readonly effectiveDate: FieldRef<"FeeStructure", 'DateTime'>
    readonly expiryDate: FieldRef<"FeeStructure", 'DateTime'>
    readonly createdAt: FieldRef<"FeeStructure", 'DateTime'>
    readonly updatedAt: FieldRef<"FeeStructure", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FeeStructure findUnique
   */
  export type FeeStructureFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * Filter, which FeeStructure to fetch.
     */
    where: FeeStructureWhereUniqueInput
  }

  /**
   * FeeStructure findUniqueOrThrow
   */
  export type FeeStructureFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * Filter, which FeeStructure to fetch.
     */
    where: FeeStructureWhereUniqueInput
  }

  /**
   * FeeStructure findFirst
   */
  export type FeeStructureFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * Filter, which FeeStructure to fetch.
     */
    where?: FeeStructureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeeStructures to fetch.
     */
    orderBy?: FeeStructureOrderByWithRelationInput | FeeStructureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FeeStructures.
     */
    cursor?: FeeStructureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeeStructures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeeStructures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FeeStructures.
     */
    distinct?: FeeStructureScalarFieldEnum | FeeStructureScalarFieldEnum[]
  }

  /**
   * FeeStructure findFirstOrThrow
   */
  export type FeeStructureFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * Filter, which FeeStructure to fetch.
     */
    where?: FeeStructureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeeStructures to fetch.
     */
    orderBy?: FeeStructureOrderByWithRelationInput | FeeStructureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FeeStructures.
     */
    cursor?: FeeStructureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeeStructures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeeStructures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FeeStructures.
     */
    distinct?: FeeStructureScalarFieldEnum | FeeStructureScalarFieldEnum[]
  }

  /**
   * FeeStructure findMany
   */
  export type FeeStructureFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * Filter, which FeeStructures to fetch.
     */
    where?: FeeStructureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FeeStructures to fetch.
     */
    orderBy?: FeeStructureOrderByWithRelationInput | FeeStructureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FeeStructures.
     */
    cursor?: FeeStructureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FeeStructures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FeeStructures.
     */
    skip?: number
    distinct?: FeeStructureScalarFieldEnum | FeeStructureScalarFieldEnum[]
  }

  /**
   * FeeStructure create
   */
  export type FeeStructureCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * The data needed to create a FeeStructure.
     */
    data: XOR<FeeStructureCreateInput, FeeStructureUncheckedCreateInput>
  }

  /**
   * FeeStructure createMany
   */
  export type FeeStructureCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FeeStructures.
     */
    data: FeeStructureCreateManyInput | FeeStructureCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FeeStructure createManyAndReturn
   */
  export type FeeStructureCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * The data used to create many FeeStructures.
     */
    data: FeeStructureCreateManyInput | FeeStructureCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FeeStructure update
   */
  export type FeeStructureUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * The data needed to update a FeeStructure.
     */
    data: XOR<FeeStructureUpdateInput, FeeStructureUncheckedUpdateInput>
    /**
     * Choose, which FeeStructure to update.
     */
    where: FeeStructureWhereUniqueInput
  }

  /**
   * FeeStructure updateMany
   */
  export type FeeStructureUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FeeStructures.
     */
    data: XOR<FeeStructureUpdateManyMutationInput, FeeStructureUncheckedUpdateManyInput>
    /**
     * Filter which FeeStructures to update
     */
    where?: FeeStructureWhereInput
    /**
     * Limit how many FeeStructures to update.
     */
    limit?: number
  }

  /**
   * FeeStructure updateManyAndReturn
   */
  export type FeeStructureUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * The data used to update FeeStructures.
     */
    data: XOR<FeeStructureUpdateManyMutationInput, FeeStructureUncheckedUpdateManyInput>
    /**
     * Filter which FeeStructures to update
     */
    where?: FeeStructureWhereInput
    /**
     * Limit how many FeeStructures to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FeeStructure upsert
   */
  export type FeeStructureUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * The filter to search for the FeeStructure to update in case it exists.
     */
    where: FeeStructureWhereUniqueInput
    /**
     * In case the FeeStructure found by the `where` argument doesn't exist, create a new FeeStructure with this data.
     */
    create: XOR<FeeStructureCreateInput, FeeStructureUncheckedCreateInput>
    /**
     * In case the FeeStructure was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FeeStructureUpdateInput, FeeStructureUncheckedUpdateInput>
  }

  /**
   * FeeStructure delete
   */
  export type FeeStructureDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
    /**
     * Filter which FeeStructure to delete.
     */
    where: FeeStructureWhereUniqueInput
  }

  /**
   * FeeStructure deleteMany
   */
  export type FeeStructureDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FeeStructures to delete
     */
    where?: FeeStructureWhereInput
    /**
     * Limit how many FeeStructures to delete.
     */
    limit?: number
  }

  /**
   * FeeStructure.program
   */
  export type FeeStructure$programArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    where?: ProgramWhereInput
  }

  /**
   * FeeStructure without action
   */
  export type FeeStructureDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FeeStructure
     */
    select?: FeeStructureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FeeStructure
     */
    omit?: FeeStructureOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FeeStructureInclude<ExtArgs> | null
  }


  /**
   * Model FinancialAid
   */

  export type AggregateFinancialAid = {
    _count: FinancialAidCountAggregateOutputType | null
    _avg: FinancialAidAvgAggregateOutputType | null
    _sum: FinancialAidSumAggregateOutputType | null
    _min: FinancialAidMinAggregateOutputType | null
    _max: FinancialAidMaxAggregateOutputType | null
  }

  export type FinancialAidAvgAggregateOutputType = {
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    interestRate: number | null
    repaymentPeriod: number | null
    gracePeriod: number | null
    minimumGpa: number | null
    maximumFamilyIncome: number | null
  }

  export type FinancialAidSumAggregateOutputType = {
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    interestRate: number | null
    repaymentPeriod: number | null
    gracePeriod: number | null
    minimumGpa: number | null
    maximumFamilyIncome: number | null
  }

  export type FinancialAidMinAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    aidName: string | null
    aidType: string | null
    description: string | null
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    currency: string | null
    interestRate: number | null
    repaymentPeriod: number | null
    gracePeriod: number | null
    eligibilityCriteria: string | null
    minimumGpa: number | null
    maximumFamilyIncome: number | null
    citizenshipRequired: string | null
    applicationRequired: boolean | null
    applicationDeadline: Date | null
    documentsRequired: string | null
    isActive: boolean | null
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FinancialAidMaxAggregateOutputType = {
    id: string | null
    universityId: string | null
    programId: string | null
    aidName: string | null
    aidType: string | null
    description: string | null
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    currency: string | null
    interestRate: number | null
    repaymentPeriod: number | null
    gracePeriod: number | null
    eligibilityCriteria: string | null
    minimumGpa: number | null
    maximumFamilyIncome: number | null
    citizenshipRequired: string | null
    applicationRequired: boolean | null
    applicationDeadline: Date | null
    documentsRequired: string | null
    isActive: boolean | null
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FinancialAidCountAggregateOutputType = {
    id: number
    universityId: number
    programId: number
    aidName: number
    aidType: number
    description: number
    amount: number
    percentage: number
    maxAmount: number
    currency: number
    interestRate: number
    repaymentPeriod: number
    gracePeriod: number
    eligibilityCriteria: number
    minimumGpa: number
    maximumFamilyIncome: number
    citizenshipRequired: number
    applicationRequired: number
    applicationDeadline: number
    documentsRequired: number
    isActive: number
    applicationOpenDate: number
    applicationCloseDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FinancialAidAvgAggregateInputType = {
    amount?: true
    percentage?: true
    maxAmount?: true
    interestRate?: true
    repaymentPeriod?: true
    gracePeriod?: true
    minimumGpa?: true
    maximumFamilyIncome?: true
  }

  export type FinancialAidSumAggregateInputType = {
    amount?: true
    percentage?: true
    maxAmount?: true
    interestRate?: true
    repaymentPeriod?: true
    gracePeriod?: true
    minimumGpa?: true
    maximumFamilyIncome?: true
  }

  export type FinancialAidMinAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    aidName?: true
    aidType?: true
    description?: true
    amount?: true
    percentage?: true
    maxAmount?: true
    currency?: true
    interestRate?: true
    repaymentPeriod?: true
    gracePeriod?: true
    eligibilityCriteria?: true
    minimumGpa?: true
    maximumFamilyIncome?: true
    citizenshipRequired?: true
    applicationRequired?: true
    applicationDeadline?: true
    documentsRequired?: true
    isActive?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FinancialAidMaxAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    aidName?: true
    aidType?: true
    description?: true
    amount?: true
    percentage?: true
    maxAmount?: true
    currency?: true
    interestRate?: true
    repaymentPeriod?: true
    gracePeriod?: true
    eligibilityCriteria?: true
    minimumGpa?: true
    maximumFamilyIncome?: true
    citizenshipRequired?: true
    applicationRequired?: true
    applicationDeadline?: true
    documentsRequired?: true
    isActive?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FinancialAidCountAggregateInputType = {
    id?: true
    universityId?: true
    programId?: true
    aidName?: true
    aidType?: true
    description?: true
    amount?: true
    percentage?: true
    maxAmount?: true
    currency?: true
    interestRate?: true
    repaymentPeriod?: true
    gracePeriod?: true
    eligibilityCriteria?: true
    minimumGpa?: true
    maximumFamilyIncome?: true
    citizenshipRequired?: true
    applicationRequired?: true
    applicationDeadline?: true
    documentsRequired?: true
    isActive?: true
    applicationOpenDate?: true
    applicationCloseDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FinancialAidAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinancialAid to aggregate.
     */
    where?: FinancialAidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAids to fetch.
     */
    orderBy?: FinancialAidOrderByWithRelationInput | FinancialAidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FinancialAidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FinancialAids
    **/
    _count?: true | FinancialAidCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinancialAidAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinancialAidSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinancialAidMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinancialAidMaxAggregateInputType
  }

  export type GetFinancialAidAggregateType<T extends FinancialAidAggregateArgs> = {
        [P in keyof T & keyof AggregateFinancialAid]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinancialAid[P]>
      : GetScalarType<T[P], AggregateFinancialAid[P]>
  }




  export type FinancialAidGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialAidWhereInput
    orderBy?: FinancialAidOrderByWithAggregationInput | FinancialAidOrderByWithAggregationInput[]
    by: FinancialAidScalarFieldEnum[] | FinancialAidScalarFieldEnum
    having?: FinancialAidScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinancialAidCountAggregateInputType | true
    _avg?: FinancialAidAvgAggregateInputType
    _sum?: FinancialAidSumAggregateInputType
    _min?: FinancialAidMinAggregateInputType
    _max?: FinancialAidMaxAggregateInputType
  }

  export type FinancialAidGroupByOutputType = {
    id: string
    universityId: string
    programId: string | null
    aidName: string
    aidType: string
    description: string | null
    amount: number | null
    percentage: number | null
    maxAmount: number | null
    currency: string
    interestRate: number | null
    repaymentPeriod: number | null
    gracePeriod: number | null
    eligibilityCriteria: string | null
    minimumGpa: number | null
    maximumFamilyIncome: number | null
    citizenshipRequired: string | null
    applicationRequired: boolean
    applicationDeadline: Date | null
    documentsRequired: string | null
    isActive: boolean
    applicationOpenDate: Date | null
    applicationCloseDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: FinancialAidCountAggregateOutputType | null
    _avg: FinancialAidAvgAggregateOutputType | null
    _sum: FinancialAidSumAggregateOutputType | null
    _min: FinancialAidMinAggregateOutputType | null
    _max: FinancialAidMaxAggregateOutputType | null
  }

  type GetFinancialAidGroupByPayload<T extends FinancialAidGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinancialAidGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinancialAidGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinancialAidGroupByOutputType[P]>
            : GetScalarType<T[P], FinancialAidGroupByOutputType[P]>
        }
      >
    >


  export type FinancialAidSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    aidName?: boolean
    aidType?: boolean
    description?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    interestRate?: boolean
    repaymentPeriod?: boolean
    gracePeriod?: boolean
    eligibilityCriteria?: boolean
    minimumGpa?: boolean
    maximumFamilyIncome?: boolean
    citizenshipRequired?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FinancialAid$programArgs<ExtArgs>
    applications?: boolean | FinancialAid$applicationsArgs<ExtArgs>
    _count?: boolean | FinancialAidCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["financialAid"]>

  export type FinancialAidSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    aidName?: boolean
    aidType?: boolean
    description?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    interestRate?: boolean
    repaymentPeriod?: boolean
    gracePeriod?: boolean
    eligibilityCriteria?: boolean
    minimumGpa?: boolean
    maximumFamilyIncome?: boolean
    citizenshipRequired?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FinancialAid$programArgs<ExtArgs>
  }, ExtArgs["result"]["financialAid"]>

  export type FinancialAidSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    universityId?: boolean
    programId?: boolean
    aidName?: boolean
    aidType?: boolean
    description?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    interestRate?: boolean
    repaymentPeriod?: boolean
    gracePeriod?: boolean
    eligibilityCriteria?: boolean
    minimumGpa?: boolean
    maximumFamilyIncome?: boolean
    citizenshipRequired?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FinancialAid$programArgs<ExtArgs>
  }, ExtArgs["result"]["financialAid"]>

  export type FinancialAidSelectScalar = {
    id?: boolean
    universityId?: boolean
    programId?: boolean
    aidName?: boolean
    aidType?: boolean
    description?: boolean
    amount?: boolean
    percentage?: boolean
    maxAmount?: boolean
    currency?: boolean
    interestRate?: boolean
    repaymentPeriod?: boolean
    gracePeriod?: boolean
    eligibilityCriteria?: boolean
    minimumGpa?: boolean
    maximumFamilyIncome?: boolean
    citizenshipRequired?: boolean
    applicationRequired?: boolean
    applicationDeadline?: boolean
    documentsRequired?: boolean
    isActive?: boolean
    applicationOpenDate?: boolean
    applicationCloseDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FinancialAidOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "universityId" | "programId" | "aidName" | "aidType" | "description" | "amount" | "percentage" | "maxAmount" | "currency" | "interestRate" | "repaymentPeriod" | "gracePeriod" | "eligibilityCriteria" | "minimumGpa" | "maximumFamilyIncome" | "citizenshipRequired" | "applicationRequired" | "applicationDeadline" | "documentsRequired" | "isActive" | "applicationOpenDate" | "applicationCloseDate" | "createdAt" | "updatedAt", ExtArgs["result"]["financialAid"]>
  export type FinancialAidInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FinancialAid$programArgs<ExtArgs>
    applications?: boolean | FinancialAid$applicationsArgs<ExtArgs>
    _count?: boolean | FinancialAidCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FinancialAidIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FinancialAid$programArgs<ExtArgs>
  }
  export type FinancialAidIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    university?: boolean | UniversityDefaultArgs<ExtArgs>
    program?: boolean | FinancialAid$programArgs<ExtArgs>
  }

  export type $FinancialAidPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FinancialAid"
    objects: {
      university: Prisma.$UniversityPayload<ExtArgs>
      program: Prisma.$ProgramPayload<ExtArgs> | null
      applications: Prisma.$FinancialAidApplicationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      universityId: string
      programId: string | null
      aidName: string
      aidType: string
      description: string | null
      amount: number | null
      percentage: number | null
      maxAmount: number | null
      currency: string
      interestRate: number | null
      repaymentPeriod: number | null
      gracePeriod: number | null
      eligibilityCriteria: string | null
      minimumGpa: number | null
      maximumFamilyIncome: number | null
      citizenshipRequired: string | null
      applicationRequired: boolean
      applicationDeadline: Date | null
      documentsRequired: string | null
      isActive: boolean
      applicationOpenDate: Date | null
      applicationCloseDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["financialAid"]>
    composites: {}
  }

  type FinancialAidGetPayload<S extends boolean | null | undefined | FinancialAidDefaultArgs> = $Result.GetResult<Prisma.$FinancialAidPayload, S>

  type FinancialAidCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FinancialAidFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FinancialAidCountAggregateInputType | true
    }

  export interface FinancialAidDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FinancialAid'], meta: { name: 'FinancialAid' } }
    /**
     * Find zero or one FinancialAid that matches the filter.
     * @param {FinancialAidFindUniqueArgs} args - Arguments to find a FinancialAid
     * @example
     * // Get one FinancialAid
     * const financialAid = await prisma.financialAid.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FinancialAidFindUniqueArgs>(args: SelectSubset<T, FinancialAidFindUniqueArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FinancialAid that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FinancialAidFindUniqueOrThrowArgs} args - Arguments to find a FinancialAid
     * @example
     * // Get one FinancialAid
     * const financialAid = await prisma.financialAid.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FinancialAidFindUniqueOrThrowArgs>(args: SelectSubset<T, FinancialAidFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FinancialAid that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidFindFirstArgs} args - Arguments to find a FinancialAid
     * @example
     * // Get one FinancialAid
     * const financialAid = await prisma.financialAid.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FinancialAidFindFirstArgs>(args?: SelectSubset<T, FinancialAidFindFirstArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FinancialAid that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidFindFirstOrThrowArgs} args - Arguments to find a FinancialAid
     * @example
     * // Get one FinancialAid
     * const financialAid = await prisma.financialAid.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FinancialAidFindFirstOrThrowArgs>(args?: SelectSubset<T, FinancialAidFindFirstOrThrowArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FinancialAids that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FinancialAids
     * const financialAids = await prisma.financialAid.findMany()
     * 
     * // Get first 10 FinancialAids
     * const financialAids = await prisma.financialAid.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const financialAidWithIdOnly = await prisma.financialAid.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FinancialAidFindManyArgs>(args?: SelectSubset<T, FinancialAidFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FinancialAid.
     * @param {FinancialAidCreateArgs} args - Arguments to create a FinancialAid.
     * @example
     * // Create one FinancialAid
     * const FinancialAid = await prisma.financialAid.create({
     *   data: {
     *     // ... data to create a FinancialAid
     *   }
     * })
     * 
     */
    create<T extends FinancialAidCreateArgs>(args: SelectSubset<T, FinancialAidCreateArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FinancialAids.
     * @param {FinancialAidCreateManyArgs} args - Arguments to create many FinancialAids.
     * @example
     * // Create many FinancialAids
     * const financialAid = await prisma.financialAid.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FinancialAidCreateManyArgs>(args?: SelectSubset<T, FinancialAidCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FinancialAids and returns the data saved in the database.
     * @param {FinancialAidCreateManyAndReturnArgs} args - Arguments to create many FinancialAids.
     * @example
     * // Create many FinancialAids
     * const financialAid = await prisma.financialAid.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FinancialAids and only return the `id`
     * const financialAidWithIdOnly = await prisma.financialAid.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FinancialAidCreateManyAndReturnArgs>(args?: SelectSubset<T, FinancialAidCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FinancialAid.
     * @param {FinancialAidDeleteArgs} args - Arguments to delete one FinancialAid.
     * @example
     * // Delete one FinancialAid
     * const FinancialAid = await prisma.financialAid.delete({
     *   where: {
     *     // ... filter to delete one FinancialAid
     *   }
     * })
     * 
     */
    delete<T extends FinancialAidDeleteArgs>(args: SelectSubset<T, FinancialAidDeleteArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FinancialAid.
     * @param {FinancialAidUpdateArgs} args - Arguments to update one FinancialAid.
     * @example
     * // Update one FinancialAid
     * const financialAid = await prisma.financialAid.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FinancialAidUpdateArgs>(args: SelectSubset<T, FinancialAidUpdateArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FinancialAids.
     * @param {FinancialAidDeleteManyArgs} args - Arguments to filter FinancialAids to delete.
     * @example
     * // Delete a few FinancialAids
     * const { count } = await prisma.financialAid.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FinancialAidDeleteManyArgs>(args?: SelectSubset<T, FinancialAidDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FinancialAids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FinancialAids
     * const financialAid = await prisma.financialAid.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FinancialAidUpdateManyArgs>(args: SelectSubset<T, FinancialAidUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FinancialAids and returns the data updated in the database.
     * @param {FinancialAidUpdateManyAndReturnArgs} args - Arguments to update many FinancialAids.
     * @example
     * // Update many FinancialAids
     * const financialAid = await prisma.financialAid.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FinancialAids and only return the `id`
     * const financialAidWithIdOnly = await prisma.financialAid.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FinancialAidUpdateManyAndReturnArgs>(args: SelectSubset<T, FinancialAidUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FinancialAid.
     * @param {FinancialAidUpsertArgs} args - Arguments to update or create a FinancialAid.
     * @example
     * // Update or create a FinancialAid
     * const financialAid = await prisma.financialAid.upsert({
     *   create: {
     *     // ... data to create a FinancialAid
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FinancialAid we want to update
     *   }
     * })
     */
    upsert<T extends FinancialAidUpsertArgs>(args: SelectSubset<T, FinancialAidUpsertArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FinancialAids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidCountArgs} args - Arguments to filter FinancialAids to count.
     * @example
     * // Count the number of FinancialAids
     * const count = await prisma.financialAid.count({
     *   where: {
     *     // ... the filter for the FinancialAids we want to count
     *   }
     * })
    **/
    count<T extends FinancialAidCountArgs>(
      args?: Subset<T, FinancialAidCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinancialAidCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FinancialAid.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinancialAidAggregateArgs>(args: Subset<T, FinancialAidAggregateArgs>): Prisma.PrismaPromise<GetFinancialAidAggregateType<T>>

    /**
     * Group by FinancialAid.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FinancialAidGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FinancialAidGroupByArgs['orderBy'] }
        : { orderBy?: FinancialAidGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FinancialAidGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinancialAidGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FinancialAid model
   */
  readonly fields: FinancialAidFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FinancialAid.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FinancialAidClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    university<T extends UniversityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UniversityDefaultArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    program<T extends FinancialAid$programArgs<ExtArgs> = {}>(args?: Subset<T, FinancialAid$programArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    applications<T extends FinancialAid$applicationsArgs<ExtArgs> = {}>(args?: Subset<T, FinancialAid$applicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FinancialAid model
   */
  interface FinancialAidFieldRefs {
    readonly id: FieldRef<"FinancialAid", 'String'>
    readonly universityId: FieldRef<"FinancialAid", 'String'>
    readonly programId: FieldRef<"FinancialAid", 'String'>
    readonly aidName: FieldRef<"FinancialAid", 'String'>
    readonly aidType: FieldRef<"FinancialAid", 'String'>
    readonly description: FieldRef<"FinancialAid", 'String'>
    readonly amount: FieldRef<"FinancialAid", 'Float'>
    readonly percentage: FieldRef<"FinancialAid", 'Float'>
    readonly maxAmount: FieldRef<"FinancialAid", 'Float'>
    readonly currency: FieldRef<"FinancialAid", 'String'>
    readonly interestRate: FieldRef<"FinancialAid", 'Float'>
    readonly repaymentPeriod: FieldRef<"FinancialAid", 'Int'>
    readonly gracePeriod: FieldRef<"FinancialAid", 'Int'>
    readonly eligibilityCriteria: FieldRef<"FinancialAid", 'String'>
    readonly minimumGpa: FieldRef<"FinancialAid", 'Float'>
    readonly maximumFamilyIncome: FieldRef<"FinancialAid", 'Float'>
    readonly citizenshipRequired: FieldRef<"FinancialAid", 'String'>
    readonly applicationRequired: FieldRef<"FinancialAid", 'Boolean'>
    readonly applicationDeadline: FieldRef<"FinancialAid", 'DateTime'>
    readonly documentsRequired: FieldRef<"FinancialAid", 'String'>
    readonly isActive: FieldRef<"FinancialAid", 'Boolean'>
    readonly applicationOpenDate: FieldRef<"FinancialAid", 'DateTime'>
    readonly applicationCloseDate: FieldRef<"FinancialAid", 'DateTime'>
    readonly createdAt: FieldRef<"FinancialAid", 'DateTime'>
    readonly updatedAt: FieldRef<"FinancialAid", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FinancialAid findUnique
   */
  export type FinancialAidFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAid to fetch.
     */
    where: FinancialAidWhereUniqueInput
  }

  /**
   * FinancialAid findUniqueOrThrow
   */
  export type FinancialAidFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAid to fetch.
     */
    where: FinancialAidWhereUniqueInput
  }

  /**
   * FinancialAid findFirst
   */
  export type FinancialAidFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAid to fetch.
     */
    where?: FinancialAidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAids to fetch.
     */
    orderBy?: FinancialAidOrderByWithRelationInput | FinancialAidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinancialAids.
     */
    cursor?: FinancialAidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinancialAids.
     */
    distinct?: FinancialAidScalarFieldEnum | FinancialAidScalarFieldEnum[]
  }

  /**
   * FinancialAid findFirstOrThrow
   */
  export type FinancialAidFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAid to fetch.
     */
    where?: FinancialAidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAids to fetch.
     */
    orderBy?: FinancialAidOrderByWithRelationInput | FinancialAidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinancialAids.
     */
    cursor?: FinancialAidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinancialAids.
     */
    distinct?: FinancialAidScalarFieldEnum | FinancialAidScalarFieldEnum[]
  }

  /**
   * FinancialAid findMany
   */
  export type FinancialAidFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAids to fetch.
     */
    where?: FinancialAidWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAids to fetch.
     */
    orderBy?: FinancialAidOrderByWithRelationInput | FinancialAidOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FinancialAids.
     */
    cursor?: FinancialAidWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAids.
     */
    skip?: number
    distinct?: FinancialAidScalarFieldEnum | FinancialAidScalarFieldEnum[]
  }

  /**
   * FinancialAid create
   */
  export type FinancialAidCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * The data needed to create a FinancialAid.
     */
    data: XOR<FinancialAidCreateInput, FinancialAidUncheckedCreateInput>
  }

  /**
   * FinancialAid createMany
   */
  export type FinancialAidCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FinancialAids.
     */
    data: FinancialAidCreateManyInput | FinancialAidCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FinancialAid createManyAndReturn
   */
  export type FinancialAidCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * The data used to create many FinancialAids.
     */
    data: FinancialAidCreateManyInput | FinancialAidCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FinancialAid update
   */
  export type FinancialAidUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * The data needed to update a FinancialAid.
     */
    data: XOR<FinancialAidUpdateInput, FinancialAidUncheckedUpdateInput>
    /**
     * Choose, which FinancialAid to update.
     */
    where: FinancialAidWhereUniqueInput
  }

  /**
   * FinancialAid updateMany
   */
  export type FinancialAidUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FinancialAids.
     */
    data: XOR<FinancialAidUpdateManyMutationInput, FinancialAidUncheckedUpdateManyInput>
    /**
     * Filter which FinancialAids to update
     */
    where?: FinancialAidWhereInput
    /**
     * Limit how many FinancialAids to update.
     */
    limit?: number
  }

  /**
   * FinancialAid updateManyAndReturn
   */
  export type FinancialAidUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * The data used to update FinancialAids.
     */
    data: XOR<FinancialAidUpdateManyMutationInput, FinancialAidUncheckedUpdateManyInput>
    /**
     * Filter which FinancialAids to update
     */
    where?: FinancialAidWhereInput
    /**
     * Limit how many FinancialAids to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FinancialAid upsert
   */
  export type FinancialAidUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * The filter to search for the FinancialAid to update in case it exists.
     */
    where: FinancialAidWhereUniqueInput
    /**
     * In case the FinancialAid found by the `where` argument doesn't exist, create a new FinancialAid with this data.
     */
    create: XOR<FinancialAidCreateInput, FinancialAidUncheckedCreateInput>
    /**
     * In case the FinancialAid was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FinancialAidUpdateInput, FinancialAidUncheckedUpdateInput>
  }

  /**
   * FinancialAid delete
   */
  export type FinancialAidDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
    /**
     * Filter which FinancialAid to delete.
     */
    where: FinancialAidWhereUniqueInput
  }

  /**
   * FinancialAid deleteMany
   */
  export type FinancialAidDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinancialAids to delete
     */
    where?: FinancialAidWhereInput
    /**
     * Limit how many FinancialAids to delete.
     */
    limit?: number
  }

  /**
   * FinancialAid.program
   */
  export type FinancialAid$programArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    where?: ProgramWhereInput
  }

  /**
   * FinancialAid.applications
   */
  export type FinancialAid$applicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    where?: FinancialAidApplicationWhereInput
    orderBy?: FinancialAidApplicationOrderByWithRelationInput | FinancialAidApplicationOrderByWithRelationInput[]
    cursor?: FinancialAidApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancialAidApplicationScalarFieldEnum | FinancialAidApplicationScalarFieldEnum[]
  }

  /**
   * FinancialAid without action
   */
  export type FinancialAidDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAid
     */
    select?: FinancialAidSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAid
     */
    omit?: FinancialAidOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidInclude<ExtArgs> | null
  }


  /**
   * Model FinancialAidApplication
   */

  export type AggregateFinancialAidApplication = {
    _count: FinancialAidApplicationCountAggregateOutputType | null
    _avg: FinancialAidApplicationAvgAggregateOutputType | null
    _sum: FinancialAidApplicationSumAggregateOutputType | null
    _min: FinancialAidApplicationMinAggregateOutputType | null
    _max: FinancialAidApplicationMaxAggregateOutputType | null
  }

  export type FinancialAidApplicationAvgAggregateOutputType = {
    familyIncome: number | null
    assets: number | null
    liabilities: number | null
    dependents: number | null
    approvedAmount: number | null
  }

  export type FinancialAidApplicationSumAggregateOutputType = {
    familyIncome: number | null
    assets: number | null
    liabilities: number | null
    dependents: number | null
    approvedAmount: number | null
  }

  export type FinancialAidApplicationMinAggregateOutputType = {
    id: string | null
    financialAidId: string | null
    userId: string | null
    applicationId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    familyIncome: number | null
    assets: number | null
    liabilities: number | null
    dependents: number | null
    applicationStatus: string | null
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    approvedAmount: number | null
    documentsUploaded: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FinancialAidApplicationMaxAggregateOutputType = {
    id: string | null
    financialAidId: string | null
    userId: string | null
    applicationId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    familyIncome: number | null
    assets: number | null
    liabilities: number | null
    dependents: number | null
    applicationStatus: string | null
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    approvedAmount: number | null
    documentsUploaded: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FinancialAidApplicationCountAggregateOutputType = {
    id: number
    financialAidId: number
    userId: number
    applicationId: number
    firstName: number
    lastName: number
    email: number
    phone: number
    familyIncome: number
    assets: number
    liabilities: number
    dependents: number
    applicationStatus: number
    submissionDate: number
    reviewDate: number
    decisionDate: number
    approvedAmount: number
    documentsUploaded: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FinancialAidApplicationAvgAggregateInputType = {
    familyIncome?: true
    assets?: true
    liabilities?: true
    dependents?: true
    approvedAmount?: true
  }

  export type FinancialAidApplicationSumAggregateInputType = {
    familyIncome?: true
    assets?: true
    liabilities?: true
    dependents?: true
    approvedAmount?: true
  }

  export type FinancialAidApplicationMinAggregateInputType = {
    id?: true
    financialAidId?: true
    userId?: true
    applicationId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    familyIncome?: true
    assets?: true
    liabilities?: true
    dependents?: true
    applicationStatus?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    approvedAmount?: true
    documentsUploaded?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FinancialAidApplicationMaxAggregateInputType = {
    id?: true
    financialAidId?: true
    userId?: true
    applicationId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    familyIncome?: true
    assets?: true
    liabilities?: true
    dependents?: true
    applicationStatus?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    approvedAmount?: true
    documentsUploaded?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FinancialAidApplicationCountAggregateInputType = {
    id?: true
    financialAidId?: true
    userId?: true
    applicationId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    familyIncome?: true
    assets?: true
    liabilities?: true
    dependents?: true
    applicationStatus?: true
    submissionDate?: true
    reviewDate?: true
    decisionDate?: true
    approvedAmount?: true
    documentsUploaded?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FinancialAidApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinancialAidApplication to aggregate.
     */
    where?: FinancialAidApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAidApplications to fetch.
     */
    orderBy?: FinancialAidApplicationOrderByWithRelationInput | FinancialAidApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FinancialAidApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAidApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAidApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FinancialAidApplications
    **/
    _count?: true | FinancialAidApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinancialAidApplicationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinancialAidApplicationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinancialAidApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinancialAidApplicationMaxAggregateInputType
  }

  export type GetFinancialAidApplicationAggregateType<T extends FinancialAidApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateFinancialAidApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinancialAidApplication[P]>
      : GetScalarType<T[P], AggregateFinancialAidApplication[P]>
  }




  export type FinancialAidApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialAidApplicationWhereInput
    orderBy?: FinancialAidApplicationOrderByWithAggregationInput | FinancialAidApplicationOrderByWithAggregationInput[]
    by: FinancialAidApplicationScalarFieldEnum[] | FinancialAidApplicationScalarFieldEnum
    having?: FinancialAidApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinancialAidApplicationCountAggregateInputType | true
    _avg?: FinancialAidApplicationAvgAggregateInputType
    _sum?: FinancialAidApplicationSumAggregateInputType
    _min?: FinancialAidApplicationMinAggregateInputType
    _max?: FinancialAidApplicationMaxAggregateInputType
  }

  export type FinancialAidApplicationGroupByOutputType = {
    id: string
    financialAidId: string
    userId: string | null
    applicationId: string | null
    firstName: string
    lastName: string
    email: string
    phone: string | null
    familyIncome: number | null
    assets: number | null
    liabilities: number | null
    dependents: number | null
    applicationStatus: string
    submissionDate: Date | null
    reviewDate: Date | null
    decisionDate: Date | null
    approvedAmount: number | null
    documentsUploaded: string | null
    createdAt: Date
    updatedAt: Date
    _count: FinancialAidApplicationCountAggregateOutputType | null
    _avg: FinancialAidApplicationAvgAggregateOutputType | null
    _sum: FinancialAidApplicationSumAggregateOutputType | null
    _min: FinancialAidApplicationMinAggregateOutputType | null
    _max: FinancialAidApplicationMaxAggregateOutputType | null
  }

  type GetFinancialAidApplicationGroupByPayload<T extends FinancialAidApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinancialAidApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinancialAidApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinancialAidApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], FinancialAidApplicationGroupByOutputType[P]>
        }
      >
    >


  export type FinancialAidApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    financialAidId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    familyIncome?: boolean
    assets?: boolean
    liabilities?: boolean
    dependents?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    approvedAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    financialAid?: boolean | FinancialAidDefaultArgs<ExtArgs>
    user?: boolean | FinancialAidApplication$userArgs<ExtArgs>
    application?: boolean | FinancialAidApplication$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["financialAidApplication"]>

  export type FinancialAidApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    financialAidId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    familyIncome?: boolean
    assets?: boolean
    liabilities?: boolean
    dependents?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    approvedAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    financialAid?: boolean | FinancialAidDefaultArgs<ExtArgs>
    user?: boolean | FinancialAidApplication$userArgs<ExtArgs>
    application?: boolean | FinancialAidApplication$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["financialAidApplication"]>

  export type FinancialAidApplicationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    financialAidId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    familyIncome?: boolean
    assets?: boolean
    liabilities?: boolean
    dependents?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    approvedAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    financialAid?: boolean | FinancialAidDefaultArgs<ExtArgs>
    user?: boolean | FinancialAidApplication$userArgs<ExtArgs>
    application?: boolean | FinancialAidApplication$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["financialAidApplication"]>

  export type FinancialAidApplicationSelectScalar = {
    id?: boolean
    financialAidId?: boolean
    userId?: boolean
    applicationId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    familyIncome?: boolean
    assets?: boolean
    liabilities?: boolean
    dependents?: boolean
    applicationStatus?: boolean
    submissionDate?: boolean
    reviewDate?: boolean
    decisionDate?: boolean
    approvedAmount?: boolean
    documentsUploaded?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FinancialAidApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "financialAidId" | "userId" | "applicationId" | "firstName" | "lastName" | "email" | "phone" | "familyIncome" | "assets" | "liabilities" | "dependents" | "applicationStatus" | "submissionDate" | "reviewDate" | "decisionDate" | "approvedAmount" | "documentsUploaded" | "createdAt" | "updatedAt", ExtArgs["result"]["financialAidApplication"]>
  export type FinancialAidApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    financialAid?: boolean | FinancialAidDefaultArgs<ExtArgs>
    user?: boolean | FinancialAidApplication$userArgs<ExtArgs>
    application?: boolean | FinancialAidApplication$applicationArgs<ExtArgs>
  }
  export type FinancialAidApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    financialAid?: boolean | FinancialAidDefaultArgs<ExtArgs>
    user?: boolean | FinancialAidApplication$userArgs<ExtArgs>
    application?: boolean | FinancialAidApplication$applicationArgs<ExtArgs>
  }
  export type FinancialAidApplicationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    financialAid?: boolean | FinancialAidDefaultArgs<ExtArgs>
    user?: boolean | FinancialAidApplication$userArgs<ExtArgs>
    application?: boolean | FinancialAidApplication$applicationArgs<ExtArgs>
  }

  export type $FinancialAidApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FinancialAidApplication"
    objects: {
      financialAid: Prisma.$FinancialAidPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
      application: Prisma.$ApplicationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      financialAidId: string
      userId: string | null
      applicationId: string | null
      firstName: string
      lastName: string
      email: string
      phone: string | null
      familyIncome: number | null
      assets: number | null
      liabilities: number | null
      dependents: number | null
      applicationStatus: string
      submissionDate: Date | null
      reviewDate: Date | null
      decisionDate: Date | null
      approvedAmount: number | null
      documentsUploaded: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["financialAidApplication"]>
    composites: {}
  }

  type FinancialAidApplicationGetPayload<S extends boolean | null | undefined | FinancialAidApplicationDefaultArgs> = $Result.GetResult<Prisma.$FinancialAidApplicationPayload, S>

  type FinancialAidApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FinancialAidApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FinancialAidApplicationCountAggregateInputType | true
    }

  export interface FinancialAidApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FinancialAidApplication'], meta: { name: 'FinancialAidApplication' } }
    /**
     * Find zero or one FinancialAidApplication that matches the filter.
     * @param {FinancialAidApplicationFindUniqueArgs} args - Arguments to find a FinancialAidApplication
     * @example
     * // Get one FinancialAidApplication
     * const financialAidApplication = await prisma.financialAidApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FinancialAidApplicationFindUniqueArgs>(args: SelectSubset<T, FinancialAidApplicationFindUniqueArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FinancialAidApplication that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FinancialAidApplicationFindUniqueOrThrowArgs} args - Arguments to find a FinancialAidApplication
     * @example
     * // Get one FinancialAidApplication
     * const financialAidApplication = await prisma.financialAidApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FinancialAidApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, FinancialAidApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FinancialAidApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidApplicationFindFirstArgs} args - Arguments to find a FinancialAidApplication
     * @example
     * // Get one FinancialAidApplication
     * const financialAidApplication = await prisma.financialAidApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FinancialAidApplicationFindFirstArgs>(args?: SelectSubset<T, FinancialAidApplicationFindFirstArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FinancialAidApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidApplicationFindFirstOrThrowArgs} args - Arguments to find a FinancialAidApplication
     * @example
     * // Get one FinancialAidApplication
     * const financialAidApplication = await prisma.financialAidApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FinancialAidApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, FinancialAidApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FinancialAidApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FinancialAidApplications
     * const financialAidApplications = await prisma.financialAidApplication.findMany()
     * 
     * // Get first 10 FinancialAidApplications
     * const financialAidApplications = await prisma.financialAidApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const financialAidApplicationWithIdOnly = await prisma.financialAidApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FinancialAidApplicationFindManyArgs>(args?: SelectSubset<T, FinancialAidApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FinancialAidApplication.
     * @param {FinancialAidApplicationCreateArgs} args - Arguments to create a FinancialAidApplication.
     * @example
     * // Create one FinancialAidApplication
     * const FinancialAidApplication = await prisma.financialAidApplication.create({
     *   data: {
     *     // ... data to create a FinancialAidApplication
     *   }
     * })
     * 
     */
    create<T extends FinancialAidApplicationCreateArgs>(args: SelectSubset<T, FinancialAidApplicationCreateArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FinancialAidApplications.
     * @param {FinancialAidApplicationCreateManyArgs} args - Arguments to create many FinancialAidApplications.
     * @example
     * // Create many FinancialAidApplications
     * const financialAidApplication = await prisma.financialAidApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FinancialAidApplicationCreateManyArgs>(args?: SelectSubset<T, FinancialAidApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FinancialAidApplications and returns the data saved in the database.
     * @param {FinancialAidApplicationCreateManyAndReturnArgs} args - Arguments to create many FinancialAidApplications.
     * @example
     * // Create many FinancialAidApplications
     * const financialAidApplication = await prisma.financialAidApplication.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FinancialAidApplications and only return the `id`
     * const financialAidApplicationWithIdOnly = await prisma.financialAidApplication.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FinancialAidApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, FinancialAidApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FinancialAidApplication.
     * @param {FinancialAidApplicationDeleteArgs} args - Arguments to delete one FinancialAidApplication.
     * @example
     * // Delete one FinancialAidApplication
     * const FinancialAidApplication = await prisma.financialAidApplication.delete({
     *   where: {
     *     // ... filter to delete one FinancialAidApplication
     *   }
     * })
     * 
     */
    delete<T extends FinancialAidApplicationDeleteArgs>(args: SelectSubset<T, FinancialAidApplicationDeleteArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FinancialAidApplication.
     * @param {FinancialAidApplicationUpdateArgs} args - Arguments to update one FinancialAidApplication.
     * @example
     * // Update one FinancialAidApplication
     * const financialAidApplication = await prisma.financialAidApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FinancialAidApplicationUpdateArgs>(args: SelectSubset<T, FinancialAidApplicationUpdateArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FinancialAidApplications.
     * @param {FinancialAidApplicationDeleteManyArgs} args - Arguments to filter FinancialAidApplications to delete.
     * @example
     * // Delete a few FinancialAidApplications
     * const { count } = await prisma.financialAidApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FinancialAidApplicationDeleteManyArgs>(args?: SelectSubset<T, FinancialAidApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FinancialAidApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FinancialAidApplications
     * const financialAidApplication = await prisma.financialAidApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FinancialAidApplicationUpdateManyArgs>(args: SelectSubset<T, FinancialAidApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FinancialAidApplications and returns the data updated in the database.
     * @param {FinancialAidApplicationUpdateManyAndReturnArgs} args - Arguments to update many FinancialAidApplications.
     * @example
     * // Update many FinancialAidApplications
     * const financialAidApplication = await prisma.financialAidApplication.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FinancialAidApplications and only return the `id`
     * const financialAidApplicationWithIdOnly = await prisma.financialAidApplication.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FinancialAidApplicationUpdateManyAndReturnArgs>(args: SelectSubset<T, FinancialAidApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FinancialAidApplication.
     * @param {FinancialAidApplicationUpsertArgs} args - Arguments to update or create a FinancialAidApplication.
     * @example
     * // Update or create a FinancialAidApplication
     * const financialAidApplication = await prisma.financialAidApplication.upsert({
     *   create: {
     *     // ... data to create a FinancialAidApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FinancialAidApplication we want to update
     *   }
     * })
     */
    upsert<T extends FinancialAidApplicationUpsertArgs>(args: SelectSubset<T, FinancialAidApplicationUpsertArgs<ExtArgs>>): Prisma__FinancialAidApplicationClient<$Result.GetResult<Prisma.$FinancialAidApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FinancialAidApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidApplicationCountArgs} args - Arguments to filter FinancialAidApplications to count.
     * @example
     * // Count the number of FinancialAidApplications
     * const count = await prisma.financialAidApplication.count({
     *   where: {
     *     // ... the filter for the FinancialAidApplications we want to count
     *   }
     * })
    **/
    count<T extends FinancialAidApplicationCountArgs>(
      args?: Subset<T, FinancialAidApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinancialAidApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FinancialAidApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinancialAidApplicationAggregateArgs>(args: Subset<T, FinancialAidApplicationAggregateArgs>): Prisma.PrismaPromise<GetFinancialAidApplicationAggregateType<T>>

    /**
     * Group by FinancialAidApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialAidApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FinancialAidApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FinancialAidApplicationGroupByArgs['orderBy'] }
        : { orderBy?: FinancialAidApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FinancialAidApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinancialAidApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FinancialAidApplication model
   */
  readonly fields: FinancialAidApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FinancialAidApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FinancialAidApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    financialAid<T extends FinancialAidDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FinancialAidDefaultArgs<ExtArgs>>): Prisma__FinancialAidClient<$Result.GetResult<Prisma.$FinancialAidPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends FinancialAidApplication$userArgs<ExtArgs> = {}>(args?: Subset<T, FinancialAidApplication$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    application<T extends FinancialAidApplication$applicationArgs<ExtArgs> = {}>(args?: Subset<T, FinancialAidApplication$applicationArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FinancialAidApplication model
   */
  interface FinancialAidApplicationFieldRefs {
    readonly id: FieldRef<"FinancialAidApplication", 'String'>
    readonly financialAidId: FieldRef<"FinancialAidApplication", 'String'>
    readonly userId: FieldRef<"FinancialAidApplication", 'String'>
    readonly applicationId: FieldRef<"FinancialAidApplication", 'String'>
    readonly firstName: FieldRef<"FinancialAidApplication", 'String'>
    readonly lastName: FieldRef<"FinancialAidApplication", 'String'>
    readonly email: FieldRef<"FinancialAidApplication", 'String'>
    readonly phone: FieldRef<"FinancialAidApplication", 'String'>
    readonly familyIncome: FieldRef<"FinancialAidApplication", 'Float'>
    readonly assets: FieldRef<"FinancialAidApplication", 'Float'>
    readonly liabilities: FieldRef<"FinancialAidApplication", 'Float'>
    readonly dependents: FieldRef<"FinancialAidApplication", 'Int'>
    readonly applicationStatus: FieldRef<"FinancialAidApplication", 'String'>
    readonly submissionDate: FieldRef<"FinancialAidApplication", 'DateTime'>
    readonly reviewDate: FieldRef<"FinancialAidApplication", 'DateTime'>
    readonly decisionDate: FieldRef<"FinancialAidApplication", 'DateTime'>
    readonly approvedAmount: FieldRef<"FinancialAidApplication", 'Float'>
    readonly documentsUploaded: FieldRef<"FinancialAidApplication", 'String'>
    readonly createdAt: FieldRef<"FinancialAidApplication", 'DateTime'>
    readonly updatedAt: FieldRef<"FinancialAidApplication", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FinancialAidApplication findUnique
   */
  export type FinancialAidApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAidApplication to fetch.
     */
    where: FinancialAidApplicationWhereUniqueInput
  }

  /**
   * FinancialAidApplication findUniqueOrThrow
   */
  export type FinancialAidApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAidApplication to fetch.
     */
    where: FinancialAidApplicationWhereUniqueInput
  }

  /**
   * FinancialAidApplication findFirst
   */
  export type FinancialAidApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAidApplication to fetch.
     */
    where?: FinancialAidApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAidApplications to fetch.
     */
    orderBy?: FinancialAidApplicationOrderByWithRelationInput | FinancialAidApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinancialAidApplications.
     */
    cursor?: FinancialAidApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAidApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAidApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinancialAidApplications.
     */
    distinct?: FinancialAidApplicationScalarFieldEnum | FinancialAidApplicationScalarFieldEnum[]
  }

  /**
   * FinancialAidApplication findFirstOrThrow
   */
  export type FinancialAidApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAidApplication to fetch.
     */
    where?: FinancialAidApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAidApplications to fetch.
     */
    orderBy?: FinancialAidApplicationOrderByWithRelationInput | FinancialAidApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinancialAidApplications.
     */
    cursor?: FinancialAidApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAidApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAidApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinancialAidApplications.
     */
    distinct?: FinancialAidApplicationScalarFieldEnum | FinancialAidApplicationScalarFieldEnum[]
  }

  /**
   * FinancialAidApplication findMany
   */
  export type FinancialAidApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FinancialAidApplications to fetch.
     */
    where?: FinancialAidApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialAidApplications to fetch.
     */
    orderBy?: FinancialAidApplicationOrderByWithRelationInput | FinancialAidApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FinancialAidApplications.
     */
    cursor?: FinancialAidApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialAidApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialAidApplications.
     */
    skip?: number
    distinct?: FinancialAidApplicationScalarFieldEnum | FinancialAidApplicationScalarFieldEnum[]
  }

  /**
   * FinancialAidApplication create
   */
  export type FinancialAidApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a FinancialAidApplication.
     */
    data: XOR<FinancialAidApplicationCreateInput, FinancialAidApplicationUncheckedCreateInput>
  }

  /**
   * FinancialAidApplication createMany
   */
  export type FinancialAidApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FinancialAidApplications.
     */
    data: FinancialAidApplicationCreateManyInput | FinancialAidApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FinancialAidApplication createManyAndReturn
   */
  export type FinancialAidApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * The data used to create many FinancialAidApplications.
     */
    data: FinancialAidApplicationCreateManyInput | FinancialAidApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FinancialAidApplication update
   */
  export type FinancialAidApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a FinancialAidApplication.
     */
    data: XOR<FinancialAidApplicationUpdateInput, FinancialAidApplicationUncheckedUpdateInput>
    /**
     * Choose, which FinancialAidApplication to update.
     */
    where: FinancialAidApplicationWhereUniqueInput
  }

  /**
   * FinancialAidApplication updateMany
   */
  export type FinancialAidApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FinancialAidApplications.
     */
    data: XOR<FinancialAidApplicationUpdateManyMutationInput, FinancialAidApplicationUncheckedUpdateManyInput>
    /**
     * Filter which FinancialAidApplications to update
     */
    where?: FinancialAidApplicationWhereInput
    /**
     * Limit how many FinancialAidApplications to update.
     */
    limit?: number
  }

  /**
   * FinancialAidApplication updateManyAndReturn
   */
  export type FinancialAidApplicationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * The data used to update FinancialAidApplications.
     */
    data: XOR<FinancialAidApplicationUpdateManyMutationInput, FinancialAidApplicationUncheckedUpdateManyInput>
    /**
     * Filter which FinancialAidApplications to update
     */
    where?: FinancialAidApplicationWhereInput
    /**
     * Limit how many FinancialAidApplications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FinancialAidApplication upsert
   */
  export type FinancialAidApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the FinancialAidApplication to update in case it exists.
     */
    where: FinancialAidApplicationWhereUniqueInput
    /**
     * In case the FinancialAidApplication found by the `where` argument doesn't exist, create a new FinancialAidApplication with this data.
     */
    create: XOR<FinancialAidApplicationCreateInput, FinancialAidApplicationUncheckedCreateInput>
    /**
     * In case the FinancialAidApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FinancialAidApplicationUpdateInput, FinancialAidApplicationUncheckedUpdateInput>
  }

  /**
   * FinancialAidApplication delete
   */
  export type FinancialAidApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
    /**
     * Filter which FinancialAidApplication to delete.
     */
    where: FinancialAidApplicationWhereUniqueInput
  }

  /**
   * FinancialAidApplication deleteMany
   */
  export type FinancialAidApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinancialAidApplications to delete
     */
    where?: FinancialAidApplicationWhereInput
    /**
     * Limit how many FinancialAidApplications to delete.
     */
    limit?: number
  }

  /**
   * FinancialAidApplication.user
   */
  export type FinancialAidApplication$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * FinancialAidApplication.application
   */
  export type FinancialAidApplication$applicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
  }

  /**
   * FinancialAidApplication without action
   */
  export type FinancialAidApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialAidApplication
     */
    select?: FinancialAidApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FinancialAidApplication
     */
    omit?: FinancialAidApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialAidApplicationInclude<ExtArgs> | null
  }


  /**
   * Model Admin_User
   */

  export type AggregateAdmin_User = {
    _count: Admin_UserCountAggregateOutputType | null
    _avg: Admin_UserAvgAggregateOutputType | null
    _sum: Admin_UserSumAggregateOutputType | null
    _min: Admin_UserMinAggregateOutputType | null
    _max: Admin_UserMaxAggregateOutputType | null
  }

  export type Admin_UserAvgAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type Admin_UserSumAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type Admin_UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    passwordHash: string | null
    firstName: string | null
    lastName: string | null
    role: string | null
    status: string | null
    is2FAEnabled: boolean | null
    twoFactorSecret: string | null
    phone: string | null
    profileImageUrl: string | null
    lastLogin: Date | null
    lastLoginIP: string | null
    failedLoginAttempts: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Admin_UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    passwordHash: string | null
    firstName: string | null
    lastName: string | null
    role: string | null
    status: string | null
    is2FAEnabled: boolean | null
    twoFactorSecret: string | null
    phone: string | null
    profileImageUrl: string | null
    lastLogin: Date | null
    lastLoginIP: string | null
    failedLoginAttempts: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Admin_UserCountAggregateOutputType = {
    id: number
    email: number
    passwordHash: number
    firstName: number
    lastName: number
    role: number
    status: number
    is2FAEnabled: number
    twoFactorSecret: number
    phone: number
    profileImageUrl: number
    lastLogin: number
    lastLoginIP: number
    failedLoginAttempts: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Admin_UserAvgAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type Admin_UserSumAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type Admin_UserMinAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    firstName?: true
    lastName?: true
    role?: true
    status?: true
    is2FAEnabled?: true
    twoFactorSecret?: true
    phone?: true
    profileImageUrl?: true
    lastLogin?: true
    lastLoginIP?: true
    failedLoginAttempts?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Admin_UserMaxAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    firstName?: true
    lastName?: true
    role?: true
    status?: true
    is2FAEnabled?: true
    twoFactorSecret?: true
    phone?: true
    profileImageUrl?: true
    lastLogin?: true
    lastLoginIP?: true
    failedLoginAttempts?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Admin_UserCountAggregateInputType = {
    id?: true
    email?: true
    passwordHash?: true
    firstName?: true
    lastName?: true
    role?: true
    status?: true
    is2FAEnabled?: true
    twoFactorSecret?: true
    phone?: true
    profileImageUrl?: true
    lastLogin?: true
    lastLoginIP?: true
    failedLoginAttempts?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Admin_UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin_User to aggregate.
     */
    where?: Admin_UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admin_Users to fetch.
     */
    orderBy?: Admin_UserOrderByWithRelationInput | Admin_UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Admin_UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admin_Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admin_Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admin_Users
    **/
    _count?: true | Admin_UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Admin_UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Admin_UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Admin_UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Admin_UserMaxAggregateInputType
  }

  export type GetAdmin_UserAggregateType<T extends Admin_UserAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin_User]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin_User[P]>
      : GetScalarType<T[P], AggregateAdmin_User[P]>
  }




  export type Admin_UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Admin_UserWhereInput
    orderBy?: Admin_UserOrderByWithAggregationInput | Admin_UserOrderByWithAggregationInput[]
    by: Admin_UserScalarFieldEnum[] | Admin_UserScalarFieldEnum
    having?: Admin_UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Admin_UserCountAggregateInputType | true
    _avg?: Admin_UserAvgAggregateInputType
    _sum?: Admin_UserSumAggregateInputType
    _min?: Admin_UserMinAggregateInputType
    _max?: Admin_UserMaxAggregateInputType
  }

  export type Admin_UserGroupByOutputType = {
    id: string
    email: string
    passwordHash: string
    firstName: string
    lastName: string
    role: string
    status: string
    is2FAEnabled: boolean
    twoFactorSecret: string | null
    phone: string | null
    profileImageUrl: string | null
    lastLogin: Date | null
    lastLoginIP: string | null
    failedLoginAttempts: number
    createdAt: Date
    updatedAt: Date
    _count: Admin_UserCountAggregateOutputType | null
    _avg: Admin_UserAvgAggregateOutputType | null
    _sum: Admin_UserSumAggregateOutputType | null
    _min: Admin_UserMinAggregateOutputType | null
    _max: Admin_UserMaxAggregateOutputType | null
  }

  type GetAdmin_UserGroupByPayload<T extends Admin_UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Admin_UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Admin_UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Admin_UserGroupByOutputType[P]>
            : GetScalarType<T[P], Admin_UserGroupByOutputType[P]>
        }
      >
    >


  export type Admin_UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    status?: boolean
    is2FAEnabled?: boolean
    twoFactorSecret?: boolean
    phone?: boolean
    profileImageUrl?: boolean
    lastLogin?: boolean
    lastLoginIP?: boolean
    failedLoginAttempts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    refreshTokens?: boolean | Admin_User$refreshTokensArgs<ExtArgs>
    _count?: boolean | Admin_UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_User"]>

  export type Admin_UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    status?: boolean
    is2FAEnabled?: boolean
    twoFactorSecret?: boolean
    phone?: boolean
    profileImageUrl?: boolean
    lastLogin?: boolean
    lastLoginIP?: boolean
    failedLoginAttempts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["admin_User"]>

  export type Admin_UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    status?: boolean
    is2FAEnabled?: boolean
    twoFactorSecret?: boolean
    phone?: boolean
    profileImageUrl?: boolean
    lastLogin?: boolean
    lastLoginIP?: boolean
    failedLoginAttempts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["admin_User"]>

  export type Admin_UserSelectScalar = {
    id?: boolean
    email?: boolean
    passwordHash?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    status?: boolean
    is2FAEnabled?: boolean
    twoFactorSecret?: boolean
    phone?: boolean
    profileImageUrl?: boolean
    lastLogin?: boolean
    lastLoginIP?: boolean
    failedLoginAttempts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type Admin_UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "passwordHash" | "firstName" | "lastName" | "role" | "status" | "is2FAEnabled" | "twoFactorSecret" | "phone" | "profileImageUrl" | "lastLogin" | "lastLoginIP" | "failedLoginAttempts" | "createdAt" | "updatedAt", ExtArgs["result"]["admin_User"]>
  export type Admin_UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    refreshTokens?: boolean | Admin_User$refreshTokensArgs<ExtArgs>
    _count?: boolean | Admin_UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type Admin_UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type Admin_UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $Admin_UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admin_User"
    objects: {
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      passwordHash: string
      firstName: string
      lastName: string
      role: string
      status: string
      is2FAEnabled: boolean
      twoFactorSecret: string | null
      phone: string | null
      profileImageUrl: string | null
      lastLogin: Date | null
      lastLoginIP: string | null
      failedLoginAttempts: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["admin_User"]>
    composites: {}
  }

  type Admin_UserGetPayload<S extends boolean | null | undefined | Admin_UserDefaultArgs> = $Result.GetResult<Prisma.$Admin_UserPayload, S>

  type Admin_UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Admin_UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Admin_UserCountAggregateInputType | true
    }

  export interface Admin_UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admin_User'], meta: { name: 'Admin_User' } }
    /**
     * Find zero or one Admin_User that matches the filter.
     * @param {Admin_UserFindUniqueArgs} args - Arguments to find a Admin_User
     * @example
     * // Get one Admin_User
     * const admin_User = await prisma.admin_User.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Admin_UserFindUniqueArgs>(args: SelectSubset<T, Admin_UserFindUniqueArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin_User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Admin_UserFindUniqueOrThrowArgs} args - Arguments to find a Admin_User
     * @example
     * // Get one Admin_User
     * const admin_User = await prisma.admin_User.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Admin_UserFindUniqueOrThrowArgs>(args: SelectSubset<T, Admin_UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_UserFindFirstArgs} args - Arguments to find a Admin_User
     * @example
     * // Get one Admin_User
     * const admin_User = await prisma.admin_User.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Admin_UserFindFirstArgs>(args?: SelectSubset<T, Admin_UserFindFirstArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_UserFindFirstOrThrowArgs} args - Arguments to find a Admin_User
     * @example
     * // Get one Admin_User
     * const admin_User = await prisma.admin_User.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Admin_UserFindFirstOrThrowArgs>(args?: SelectSubset<T, Admin_UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admin_Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admin_Users
     * const admin_Users = await prisma.admin_User.findMany()
     * 
     * // Get first 10 Admin_Users
     * const admin_Users = await prisma.admin_User.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const admin_UserWithIdOnly = await prisma.admin_User.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Admin_UserFindManyArgs>(args?: SelectSubset<T, Admin_UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin_User.
     * @param {Admin_UserCreateArgs} args - Arguments to create a Admin_User.
     * @example
     * // Create one Admin_User
     * const Admin_User = await prisma.admin_User.create({
     *   data: {
     *     // ... data to create a Admin_User
     *   }
     * })
     * 
     */
    create<T extends Admin_UserCreateArgs>(args: SelectSubset<T, Admin_UserCreateArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admin_Users.
     * @param {Admin_UserCreateManyArgs} args - Arguments to create many Admin_Users.
     * @example
     * // Create many Admin_Users
     * const admin_User = await prisma.admin_User.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Admin_UserCreateManyArgs>(args?: SelectSubset<T, Admin_UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admin_Users and returns the data saved in the database.
     * @param {Admin_UserCreateManyAndReturnArgs} args - Arguments to create many Admin_Users.
     * @example
     * // Create many Admin_Users
     * const admin_User = await prisma.admin_User.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admin_Users and only return the `id`
     * const admin_UserWithIdOnly = await prisma.admin_User.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Admin_UserCreateManyAndReturnArgs>(args?: SelectSubset<T, Admin_UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admin_User.
     * @param {Admin_UserDeleteArgs} args - Arguments to delete one Admin_User.
     * @example
     * // Delete one Admin_User
     * const Admin_User = await prisma.admin_User.delete({
     *   where: {
     *     // ... filter to delete one Admin_User
     *   }
     * })
     * 
     */
    delete<T extends Admin_UserDeleteArgs>(args: SelectSubset<T, Admin_UserDeleteArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin_User.
     * @param {Admin_UserUpdateArgs} args - Arguments to update one Admin_User.
     * @example
     * // Update one Admin_User
     * const admin_User = await prisma.admin_User.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Admin_UserUpdateArgs>(args: SelectSubset<T, Admin_UserUpdateArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admin_Users.
     * @param {Admin_UserDeleteManyArgs} args - Arguments to filter Admin_Users to delete.
     * @example
     * // Delete a few Admin_Users
     * const { count } = await prisma.admin_User.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Admin_UserDeleteManyArgs>(args?: SelectSubset<T, Admin_UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admin_Users
     * const admin_User = await prisma.admin_User.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Admin_UserUpdateManyArgs>(args: SelectSubset<T, Admin_UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_Users and returns the data updated in the database.
     * @param {Admin_UserUpdateManyAndReturnArgs} args - Arguments to update many Admin_Users.
     * @example
     * // Update many Admin_Users
     * const admin_User = await prisma.admin_User.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admin_Users and only return the `id`
     * const admin_UserWithIdOnly = await prisma.admin_User.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends Admin_UserUpdateManyAndReturnArgs>(args: SelectSubset<T, Admin_UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admin_User.
     * @param {Admin_UserUpsertArgs} args - Arguments to update or create a Admin_User.
     * @example
     * // Update or create a Admin_User
     * const admin_User = await prisma.admin_User.upsert({
     *   create: {
     *     // ... data to create a Admin_User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin_User we want to update
     *   }
     * })
     */
    upsert<T extends Admin_UserUpsertArgs>(args: SelectSubset<T, Admin_UserUpsertArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admin_Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_UserCountArgs} args - Arguments to filter Admin_Users to count.
     * @example
     * // Count the number of Admin_Users
     * const count = await prisma.admin_User.count({
     *   where: {
     *     // ... the filter for the Admin_Users we want to count
     *   }
     * })
    **/
    count<T extends Admin_UserCountArgs>(
      args?: Subset<T, Admin_UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Admin_UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin_User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Admin_UserAggregateArgs>(args: Subset<T, Admin_UserAggregateArgs>): Prisma.PrismaPromise<GetAdmin_UserAggregateType<T>>

    /**
     * Group by Admin_User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Admin_UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Admin_UserGroupByArgs['orderBy'] }
        : { orderBy?: Admin_UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Admin_UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdmin_UserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admin_User model
   */
  readonly fields: Admin_UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin_User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Admin_UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    refreshTokens<T extends Admin_User$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, Admin_User$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admin_User model
   */
  interface Admin_UserFieldRefs {
    readonly id: FieldRef<"Admin_User", 'String'>
    readonly email: FieldRef<"Admin_User", 'String'>
    readonly passwordHash: FieldRef<"Admin_User", 'String'>
    readonly firstName: FieldRef<"Admin_User", 'String'>
    readonly lastName: FieldRef<"Admin_User", 'String'>
    readonly role: FieldRef<"Admin_User", 'String'>
    readonly status: FieldRef<"Admin_User", 'String'>
    readonly is2FAEnabled: FieldRef<"Admin_User", 'Boolean'>
    readonly twoFactorSecret: FieldRef<"Admin_User", 'String'>
    readonly phone: FieldRef<"Admin_User", 'String'>
    readonly profileImageUrl: FieldRef<"Admin_User", 'String'>
    readonly lastLogin: FieldRef<"Admin_User", 'DateTime'>
    readonly lastLoginIP: FieldRef<"Admin_User", 'String'>
    readonly failedLoginAttempts: FieldRef<"Admin_User", 'Int'>
    readonly createdAt: FieldRef<"Admin_User", 'DateTime'>
    readonly updatedAt: FieldRef<"Admin_User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Admin_User findUnique
   */
  export type Admin_UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * Filter, which Admin_User to fetch.
     */
    where: Admin_UserWhereUniqueInput
  }

  /**
   * Admin_User findUniqueOrThrow
   */
  export type Admin_UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * Filter, which Admin_User to fetch.
     */
    where: Admin_UserWhereUniqueInput
  }

  /**
   * Admin_User findFirst
   */
  export type Admin_UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * Filter, which Admin_User to fetch.
     */
    where?: Admin_UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admin_Users to fetch.
     */
    orderBy?: Admin_UserOrderByWithRelationInput | Admin_UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admin_Users.
     */
    cursor?: Admin_UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admin_Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admin_Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admin_Users.
     */
    distinct?: Admin_UserScalarFieldEnum | Admin_UserScalarFieldEnum[]
  }

  /**
   * Admin_User findFirstOrThrow
   */
  export type Admin_UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * Filter, which Admin_User to fetch.
     */
    where?: Admin_UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admin_Users to fetch.
     */
    orderBy?: Admin_UserOrderByWithRelationInput | Admin_UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admin_Users.
     */
    cursor?: Admin_UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admin_Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admin_Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admin_Users.
     */
    distinct?: Admin_UserScalarFieldEnum | Admin_UserScalarFieldEnum[]
  }

  /**
   * Admin_User findMany
   */
  export type Admin_UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * Filter, which Admin_Users to fetch.
     */
    where?: Admin_UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admin_Users to fetch.
     */
    orderBy?: Admin_UserOrderByWithRelationInput | Admin_UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admin_Users.
     */
    cursor?: Admin_UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admin_Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admin_Users.
     */
    skip?: number
    distinct?: Admin_UserScalarFieldEnum | Admin_UserScalarFieldEnum[]
  }

  /**
   * Admin_User create
   */
  export type Admin_UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * The data needed to create a Admin_User.
     */
    data: XOR<Admin_UserCreateInput, Admin_UserUncheckedCreateInput>
  }

  /**
   * Admin_User createMany
   */
  export type Admin_UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admin_Users.
     */
    data: Admin_UserCreateManyInput | Admin_UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin_User createManyAndReturn
   */
  export type Admin_UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * The data used to create many Admin_Users.
     */
    data: Admin_UserCreateManyInput | Admin_UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin_User update
   */
  export type Admin_UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * The data needed to update a Admin_User.
     */
    data: XOR<Admin_UserUpdateInput, Admin_UserUncheckedUpdateInput>
    /**
     * Choose, which Admin_User to update.
     */
    where: Admin_UserWhereUniqueInput
  }

  /**
   * Admin_User updateMany
   */
  export type Admin_UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admin_Users.
     */
    data: XOR<Admin_UserUpdateManyMutationInput, Admin_UserUncheckedUpdateManyInput>
    /**
     * Filter which Admin_Users to update
     */
    where?: Admin_UserWhereInput
    /**
     * Limit how many Admin_Users to update.
     */
    limit?: number
  }

  /**
   * Admin_User updateManyAndReturn
   */
  export type Admin_UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * The data used to update Admin_Users.
     */
    data: XOR<Admin_UserUpdateManyMutationInput, Admin_UserUncheckedUpdateManyInput>
    /**
     * Filter which Admin_Users to update
     */
    where?: Admin_UserWhereInput
    /**
     * Limit how many Admin_Users to update.
     */
    limit?: number
  }

  /**
   * Admin_User upsert
   */
  export type Admin_UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * The filter to search for the Admin_User to update in case it exists.
     */
    where: Admin_UserWhereUniqueInput
    /**
     * In case the Admin_User found by the `where` argument doesn't exist, create a new Admin_User with this data.
     */
    create: XOR<Admin_UserCreateInput, Admin_UserUncheckedCreateInput>
    /**
     * In case the Admin_User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Admin_UserUpdateInput, Admin_UserUncheckedUpdateInput>
  }

  /**
   * Admin_User delete
   */
  export type Admin_UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
    /**
     * Filter which Admin_User to delete.
     */
    where: Admin_UserWhereUniqueInput
  }

  /**
   * Admin_User deleteMany
   */
  export type Admin_UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin_Users to delete
     */
    where?: Admin_UserWhereInput
    /**
     * Limit how many Admin_Users to delete.
     */
    limit?: number
  }

  /**
   * Admin_User.refreshTokens
   */
  export type Admin_User$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * Admin_User without action
   */
  export type Admin_UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_User
     */
    select?: Admin_UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admin_User
     */
    omit?: Admin_UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Admin_UserInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: string
    token: string
    userId: string
    expiresAt: Date
    createdAt: Date
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    adminUser?: boolean | Admin_UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    adminUser?: boolean | Admin_UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    adminUser?: boolean | Admin_UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type RefreshTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "userId" | "expiresAt" | "createdAt", ExtArgs["result"]["refreshToken"]>
  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adminUser?: boolean | Admin_UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adminUser?: boolean | Admin_UserDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adminUser?: boolean | Admin_UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      adminUser: Prisma.$Admin_UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      userId: string
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens and returns the data updated in the database.
     * @param {RefreshTokenUpdateManyAndReturnArgs} args - Arguments to update many RefreshTokens.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RefreshTokens and only return the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RefreshTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, RefreshTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    adminUser<T extends Admin_UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Admin_UserDefaultArgs<ExtArgs>>): Prisma__Admin_UserClient<$Result.GetResult<Prisma.$Admin_UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'String'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
  }

  /**
   * RefreshToken updateManyAndReturn
   */
  export type RefreshTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to delete.
     */
    limit?: number
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model EssayPrompt
   */

  export type AggregateEssayPrompt = {
    _count: EssayPromptCountAggregateOutputType | null
    _avg: EssayPromptAvgAggregateOutputType | null
    _sum: EssayPromptSumAggregateOutputType | null
    _min: EssayPromptMinAggregateOutputType | null
    _max: EssayPromptMaxAggregateOutputType | null
  }

  export type EssayPromptAvgAggregateOutputType = {
    wordLimit: number | null
    minWordCount: number | null
  }

  export type EssayPromptSumAggregateOutputType = {
    wordLimit: number | null
    minWordCount: number | null
  }

  export type EssayPromptMinAggregateOutputType = {
    id: string | null
    admissionId: string | null
    programId: string | null
    intakeId: string | null
    promptTitle: string | null
    promptText: string | null
    wordLimit: number | null
    minWordCount: number | null
    isMandatory: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EssayPromptMaxAggregateOutputType = {
    id: string | null
    admissionId: string | null
    programId: string | null
    intakeId: string | null
    promptTitle: string | null
    promptText: string | null
    wordLimit: number | null
    minWordCount: number | null
    isMandatory: boolean | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EssayPromptCountAggregateOutputType = {
    id: number
    admissionId: number
    programId: number
    intakeId: number
    promptTitle: number
    promptText: number
    wordLimit: number
    minWordCount: number
    isMandatory: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EssayPromptAvgAggregateInputType = {
    wordLimit?: true
    minWordCount?: true
  }

  export type EssayPromptSumAggregateInputType = {
    wordLimit?: true
    minWordCount?: true
  }

  export type EssayPromptMinAggregateInputType = {
    id?: true
    admissionId?: true
    programId?: true
    intakeId?: true
    promptTitle?: true
    promptText?: true
    wordLimit?: true
    minWordCount?: true
    isMandatory?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EssayPromptMaxAggregateInputType = {
    id?: true
    admissionId?: true
    programId?: true
    intakeId?: true
    promptTitle?: true
    promptText?: true
    wordLimit?: true
    minWordCount?: true
    isMandatory?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EssayPromptCountAggregateInputType = {
    id?: true
    admissionId?: true
    programId?: true
    intakeId?: true
    promptTitle?: true
    promptText?: true
    wordLimit?: true
    minWordCount?: true
    isMandatory?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EssayPromptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssayPrompt to aggregate.
     */
    where?: EssayPromptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayPrompts to fetch.
     */
    orderBy?: EssayPromptOrderByWithRelationInput | EssayPromptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EssayPromptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayPrompts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayPrompts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EssayPrompts
    **/
    _count?: true | EssayPromptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EssayPromptAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EssayPromptSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EssayPromptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EssayPromptMaxAggregateInputType
  }

  export type GetEssayPromptAggregateType<T extends EssayPromptAggregateArgs> = {
        [P in keyof T & keyof AggregateEssayPrompt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEssayPrompt[P]>
      : GetScalarType<T[P], AggregateEssayPrompt[P]>
  }




  export type EssayPromptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayPromptWhereInput
    orderBy?: EssayPromptOrderByWithAggregationInput | EssayPromptOrderByWithAggregationInput[]
    by: EssayPromptScalarFieldEnum[] | EssayPromptScalarFieldEnum
    having?: EssayPromptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EssayPromptCountAggregateInputType | true
    _avg?: EssayPromptAvgAggregateInputType
    _sum?: EssayPromptSumAggregateInputType
    _min?: EssayPromptMinAggregateInputType
    _max?: EssayPromptMaxAggregateInputType
  }

  export type EssayPromptGroupByOutputType = {
    id: string
    admissionId: string | null
    programId: string | null
    intakeId: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount: number
    isMandatory: boolean
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: EssayPromptCountAggregateOutputType | null
    _avg: EssayPromptAvgAggregateOutputType | null
    _sum: EssayPromptSumAggregateOutputType | null
    _min: EssayPromptMinAggregateOutputType | null
    _max: EssayPromptMaxAggregateOutputType | null
  }

  type GetEssayPromptGroupByPayload<T extends EssayPromptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EssayPromptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EssayPromptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EssayPromptGroupByOutputType[P]>
            : GetScalarType<T[P], EssayPromptGroupByOutputType[P]>
        }
      >
    >


  export type EssayPromptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    programId?: boolean
    intakeId?: boolean
    promptTitle?: boolean
    promptText?: boolean
    wordLimit?: boolean
    minWordCount?: boolean
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | EssayPrompt$admissionArgs<ExtArgs>
    program?: boolean | EssayPrompt$programArgs<ExtArgs>
    intake?: boolean | EssayPrompt$intakeArgs<ExtArgs>
    submissions?: boolean | EssayPrompt$submissionsArgs<ExtArgs>
    essays?: boolean | EssayPrompt$essaysArgs<ExtArgs>
    _count?: boolean | EssayPromptCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["essayPrompt"]>

  export type EssayPromptSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    programId?: boolean
    intakeId?: boolean
    promptTitle?: boolean
    promptText?: boolean
    wordLimit?: boolean
    minWordCount?: boolean
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | EssayPrompt$admissionArgs<ExtArgs>
    program?: boolean | EssayPrompt$programArgs<ExtArgs>
    intake?: boolean | EssayPrompt$intakeArgs<ExtArgs>
  }, ExtArgs["result"]["essayPrompt"]>

  export type EssayPromptSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admissionId?: boolean
    programId?: boolean
    intakeId?: boolean
    promptTitle?: boolean
    promptText?: boolean
    wordLimit?: boolean
    minWordCount?: boolean
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    admission?: boolean | EssayPrompt$admissionArgs<ExtArgs>
    program?: boolean | EssayPrompt$programArgs<ExtArgs>
    intake?: boolean | EssayPrompt$intakeArgs<ExtArgs>
  }, ExtArgs["result"]["essayPrompt"]>

  export type EssayPromptSelectScalar = {
    id?: boolean
    admissionId?: boolean
    programId?: boolean
    intakeId?: boolean
    promptTitle?: boolean
    promptText?: boolean
    wordLimit?: boolean
    minWordCount?: boolean
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EssayPromptOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "admissionId" | "programId" | "intakeId" | "promptTitle" | "promptText" | "wordLimit" | "minWordCount" | "isMandatory" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["essayPrompt"]>
  export type EssayPromptInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | EssayPrompt$admissionArgs<ExtArgs>
    program?: boolean | EssayPrompt$programArgs<ExtArgs>
    intake?: boolean | EssayPrompt$intakeArgs<ExtArgs>
    submissions?: boolean | EssayPrompt$submissionsArgs<ExtArgs>
    essays?: boolean | EssayPrompt$essaysArgs<ExtArgs>
    _count?: boolean | EssayPromptCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EssayPromptIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | EssayPrompt$admissionArgs<ExtArgs>
    program?: boolean | EssayPrompt$programArgs<ExtArgs>
    intake?: boolean | EssayPrompt$intakeArgs<ExtArgs>
  }
  export type EssayPromptIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admission?: boolean | EssayPrompt$admissionArgs<ExtArgs>
    program?: boolean | EssayPrompt$programArgs<ExtArgs>
    intake?: boolean | EssayPrompt$intakeArgs<ExtArgs>
  }

  export type $EssayPromptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EssayPrompt"
    objects: {
      admission: Prisma.$AdmissionPayload<ExtArgs> | null
      program: Prisma.$ProgramPayload<ExtArgs> | null
      intake: Prisma.$IntakePayload<ExtArgs> | null
      submissions: Prisma.$EssaySubmissionPayload<ExtArgs>[]
      essays: Prisma.$EssayPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      admissionId: string | null
      programId: string | null
      intakeId: string | null
      promptTitle: string
      promptText: string
      wordLimit: number
      minWordCount: number
      isMandatory: boolean
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["essayPrompt"]>
    composites: {}
  }

  type EssayPromptGetPayload<S extends boolean | null | undefined | EssayPromptDefaultArgs> = $Result.GetResult<Prisma.$EssayPromptPayload, S>

  type EssayPromptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EssayPromptFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EssayPromptCountAggregateInputType | true
    }

  export interface EssayPromptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EssayPrompt'], meta: { name: 'EssayPrompt' } }
    /**
     * Find zero or one EssayPrompt that matches the filter.
     * @param {EssayPromptFindUniqueArgs} args - Arguments to find a EssayPrompt
     * @example
     * // Get one EssayPrompt
     * const essayPrompt = await prisma.essayPrompt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EssayPromptFindUniqueArgs>(args: SelectSubset<T, EssayPromptFindUniqueArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EssayPrompt that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EssayPromptFindUniqueOrThrowArgs} args - Arguments to find a EssayPrompt
     * @example
     * // Get one EssayPrompt
     * const essayPrompt = await prisma.essayPrompt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EssayPromptFindUniqueOrThrowArgs>(args: SelectSubset<T, EssayPromptFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssayPrompt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayPromptFindFirstArgs} args - Arguments to find a EssayPrompt
     * @example
     * // Get one EssayPrompt
     * const essayPrompt = await prisma.essayPrompt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EssayPromptFindFirstArgs>(args?: SelectSubset<T, EssayPromptFindFirstArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssayPrompt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayPromptFindFirstOrThrowArgs} args - Arguments to find a EssayPrompt
     * @example
     * // Get one EssayPrompt
     * const essayPrompt = await prisma.essayPrompt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EssayPromptFindFirstOrThrowArgs>(args?: SelectSubset<T, EssayPromptFindFirstOrThrowArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EssayPrompts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayPromptFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EssayPrompts
     * const essayPrompts = await prisma.essayPrompt.findMany()
     * 
     * // Get first 10 EssayPrompts
     * const essayPrompts = await prisma.essayPrompt.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const essayPromptWithIdOnly = await prisma.essayPrompt.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EssayPromptFindManyArgs>(args?: SelectSubset<T, EssayPromptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EssayPrompt.
     * @param {EssayPromptCreateArgs} args - Arguments to create a EssayPrompt.
     * @example
     * // Create one EssayPrompt
     * const EssayPrompt = await prisma.essayPrompt.create({
     *   data: {
     *     // ... data to create a EssayPrompt
     *   }
     * })
     * 
     */
    create<T extends EssayPromptCreateArgs>(args: SelectSubset<T, EssayPromptCreateArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EssayPrompts.
     * @param {EssayPromptCreateManyArgs} args - Arguments to create many EssayPrompts.
     * @example
     * // Create many EssayPrompts
     * const essayPrompt = await prisma.essayPrompt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EssayPromptCreateManyArgs>(args?: SelectSubset<T, EssayPromptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EssayPrompts and returns the data saved in the database.
     * @param {EssayPromptCreateManyAndReturnArgs} args - Arguments to create many EssayPrompts.
     * @example
     * // Create many EssayPrompts
     * const essayPrompt = await prisma.essayPrompt.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EssayPrompts and only return the `id`
     * const essayPromptWithIdOnly = await prisma.essayPrompt.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EssayPromptCreateManyAndReturnArgs>(args?: SelectSubset<T, EssayPromptCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EssayPrompt.
     * @param {EssayPromptDeleteArgs} args - Arguments to delete one EssayPrompt.
     * @example
     * // Delete one EssayPrompt
     * const EssayPrompt = await prisma.essayPrompt.delete({
     *   where: {
     *     // ... filter to delete one EssayPrompt
     *   }
     * })
     * 
     */
    delete<T extends EssayPromptDeleteArgs>(args: SelectSubset<T, EssayPromptDeleteArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EssayPrompt.
     * @param {EssayPromptUpdateArgs} args - Arguments to update one EssayPrompt.
     * @example
     * // Update one EssayPrompt
     * const essayPrompt = await prisma.essayPrompt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EssayPromptUpdateArgs>(args: SelectSubset<T, EssayPromptUpdateArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EssayPrompts.
     * @param {EssayPromptDeleteManyArgs} args - Arguments to filter EssayPrompts to delete.
     * @example
     * // Delete a few EssayPrompts
     * const { count } = await prisma.essayPrompt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EssayPromptDeleteManyArgs>(args?: SelectSubset<T, EssayPromptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssayPrompts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayPromptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EssayPrompts
     * const essayPrompt = await prisma.essayPrompt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EssayPromptUpdateManyArgs>(args: SelectSubset<T, EssayPromptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssayPrompts and returns the data updated in the database.
     * @param {EssayPromptUpdateManyAndReturnArgs} args - Arguments to update many EssayPrompts.
     * @example
     * // Update many EssayPrompts
     * const essayPrompt = await prisma.essayPrompt.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EssayPrompts and only return the `id`
     * const essayPromptWithIdOnly = await prisma.essayPrompt.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EssayPromptUpdateManyAndReturnArgs>(args: SelectSubset<T, EssayPromptUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EssayPrompt.
     * @param {EssayPromptUpsertArgs} args - Arguments to update or create a EssayPrompt.
     * @example
     * // Update or create a EssayPrompt
     * const essayPrompt = await prisma.essayPrompt.upsert({
     *   create: {
     *     // ... data to create a EssayPrompt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EssayPrompt we want to update
     *   }
     * })
     */
    upsert<T extends EssayPromptUpsertArgs>(args: SelectSubset<T, EssayPromptUpsertArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EssayPrompts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayPromptCountArgs} args - Arguments to filter EssayPrompts to count.
     * @example
     * // Count the number of EssayPrompts
     * const count = await prisma.essayPrompt.count({
     *   where: {
     *     // ... the filter for the EssayPrompts we want to count
     *   }
     * })
    **/
    count<T extends EssayPromptCountArgs>(
      args?: Subset<T, EssayPromptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EssayPromptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EssayPrompt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayPromptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EssayPromptAggregateArgs>(args: Subset<T, EssayPromptAggregateArgs>): Prisma.PrismaPromise<GetEssayPromptAggregateType<T>>

    /**
     * Group by EssayPrompt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayPromptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EssayPromptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EssayPromptGroupByArgs['orderBy'] }
        : { orderBy?: EssayPromptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EssayPromptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEssayPromptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EssayPrompt model
   */
  readonly fields: EssayPromptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EssayPrompt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EssayPromptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admission<T extends EssayPrompt$admissionArgs<ExtArgs> = {}>(args?: Subset<T, EssayPrompt$admissionArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    program<T extends EssayPrompt$programArgs<ExtArgs> = {}>(args?: Subset<T, EssayPrompt$programArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    intake<T extends EssayPrompt$intakeArgs<ExtArgs> = {}>(args?: Subset<T, EssayPrompt$intakeArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    submissions<T extends EssayPrompt$submissionsArgs<ExtArgs> = {}>(args?: Subset<T, EssayPrompt$submissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    essays<T extends EssayPrompt$essaysArgs<ExtArgs> = {}>(args?: Subset<T, EssayPrompt$essaysArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EssayPrompt model
   */
  interface EssayPromptFieldRefs {
    readonly id: FieldRef<"EssayPrompt", 'String'>
    readonly admissionId: FieldRef<"EssayPrompt", 'String'>
    readonly programId: FieldRef<"EssayPrompt", 'String'>
    readonly intakeId: FieldRef<"EssayPrompt", 'String'>
    readonly promptTitle: FieldRef<"EssayPrompt", 'String'>
    readonly promptText: FieldRef<"EssayPrompt", 'String'>
    readonly wordLimit: FieldRef<"EssayPrompt", 'Int'>
    readonly minWordCount: FieldRef<"EssayPrompt", 'Int'>
    readonly isMandatory: FieldRef<"EssayPrompt", 'Boolean'>
    readonly isActive: FieldRef<"EssayPrompt", 'Boolean'>
    readonly createdAt: FieldRef<"EssayPrompt", 'DateTime'>
    readonly updatedAt: FieldRef<"EssayPrompt", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EssayPrompt findUnique
   */
  export type EssayPromptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * Filter, which EssayPrompt to fetch.
     */
    where: EssayPromptWhereUniqueInput
  }

  /**
   * EssayPrompt findUniqueOrThrow
   */
  export type EssayPromptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * Filter, which EssayPrompt to fetch.
     */
    where: EssayPromptWhereUniqueInput
  }

  /**
   * EssayPrompt findFirst
   */
  export type EssayPromptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * Filter, which EssayPrompt to fetch.
     */
    where?: EssayPromptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayPrompts to fetch.
     */
    orderBy?: EssayPromptOrderByWithRelationInput | EssayPromptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssayPrompts.
     */
    cursor?: EssayPromptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayPrompts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayPrompts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssayPrompts.
     */
    distinct?: EssayPromptScalarFieldEnum | EssayPromptScalarFieldEnum[]
  }

  /**
   * EssayPrompt findFirstOrThrow
   */
  export type EssayPromptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * Filter, which EssayPrompt to fetch.
     */
    where?: EssayPromptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayPrompts to fetch.
     */
    orderBy?: EssayPromptOrderByWithRelationInput | EssayPromptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssayPrompts.
     */
    cursor?: EssayPromptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayPrompts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayPrompts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssayPrompts.
     */
    distinct?: EssayPromptScalarFieldEnum | EssayPromptScalarFieldEnum[]
  }

  /**
   * EssayPrompt findMany
   */
  export type EssayPromptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * Filter, which EssayPrompts to fetch.
     */
    where?: EssayPromptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayPrompts to fetch.
     */
    orderBy?: EssayPromptOrderByWithRelationInput | EssayPromptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EssayPrompts.
     */
    cursor?: EssayPromptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayPrompts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayPrompts.
     */
    skip?: number
    distinct?: EssayPromptScalarFieldEnum | EssayPromptScalarFieldEnum[]
  }

  /**
   * EssayPrompt create
   */
  export type EssayPromptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * The data needed to create a EssayPrompt.
     */
    data: XOR<EssayPromptCreateInput, EssayPromptUncheckedCreateInput>
  }

  /**
   * EssayPrompt createMany
   */
  export type EssayPromptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EssayPrompts.
     */
    data: EssayPromptCreateManyInput | EssayPromptCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EssayPrompt createManyAndReturn
   */
  export type EssayPromptCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * The data used to create many EssayPrompts.
     */
    data: EssayPromptCreateManyInput | EssayPromptCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssayPrompt update
   */
  export type EssayPromptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * The data needed to update a EssayPrompt.
     */
    data: XOR<EssayPromptUpdateInput, EssayPromptUncheckedUpdateInput>
    /**
     * Choose, which EssayPrompt to update.
     */
    where: EssayPromptWhereUniqueInput
  }

  /**
   * EssayPrompt updateMany
   */
  export type EssayPromptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EssayPrompts.
     */
    data: XOR<EssayPromptUpdateManyMutationInput, EssayPromptUncheckedUpdateManyInput>
    /**
     * Filter which EssayPrompts to update
     */
    where?: EssayPromptWhereInput
    /**
     * Limit how many EssayPrompts to update.
     */
    limit?: number
  }

  /**
   * EssayPrompt updateManyAndReturn
   */
  export type EssayPromptUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * The data used to update EssayPrompts.
     */
    data: XOR<EssayPromptUpdateManyMutationInput, EssayPromptUncheckedUpdateManyInput>
    /**
     * Filter which EssayPrompts to update
     */
    where?: EssayPromptWhereInput
    /**
     * Limit how many EssayPrompts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssayPrompt upsert
   */
  export type EssayPromptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * The filter to search for the EssayPrompt to update in case it exists.
     */
    where: EssayPromptWhereUniqueInput
    /**
     * In case the EssayPrompt found by the `where` argument doesn't exist, create a new EssayPrompt with this data.
     */
    create: XOR<EssayPromptCreateInput, EssayPromptUncheckedCreateInput>
    /**
     * In case the EssayPrompt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EssayPromptUpdateInput, EssayPromptUncheckedUpdateInput>
  }

  /**
   * EssayPrompt delete
   */
  export type EssayPromptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
    /**
     * Filter which EssayPrompt to delete.
     */
    where: EssayPromptWhereUniqueInput
  }

  /**
   * EssayPrompt deleteMany
   */
  export type EssayPromptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssayPrompts to delete
     */
    where?: EssayPromptWhereInput
    /**
     * Limit how many EssayPrompts to delete.
     */
    limit?: number
  }

  /**
   * EssayPrompt.admission
   */
  export type EssayPrompt$admissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    where?: AdmissionWhereInput
  }

  /**
   * EssayPrompt.program
   */
  export type EssayPrompt$programArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    where?: ProgramWhereInput
  }

  /**
   * EssayPrompt.intake
   */
  export type EssayPrompt$intakeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    where?: IntakeWhereInput
  }

  /**
   * EssayPrompt.submissions
   */
  export type EssayPrompt$submissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    where?: EssaySubmissionWhereInput
    orderBy?: EssaySubmissionOrderByWithRelationInput | EssaySubmissionOrderByWithRelationInput[]
    cursor?: EssaySubmissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssaySubmissionScalarFieldEnum | EssaySubmissionScalarFieldEnum[]
  }

  /**
   * EssayPrompt.essays
   */
  export type EssayPrompt$essaysArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    where?: EssayWhereInput
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    cursor?: EssayWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayScalarFieldEnum | EssayScalarFieldEnum[]
  }

  /**
   * EssayPrompt without action
   */
  export type EssayPromptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayPrompt
     */
    select?: EssayPromptSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayPrompt
     */
    omit?: EssayPromptOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayPromptInclude<ExtArgs> | null
  }


  /**
   * Model EssaySubmission
   */

  export type AggregateEssaySubmission = {
    _count: EssaySubmissionCountAggregateOutputType | null
    _avg: EssaySubmissionAvgAggregateOutputType | null
    _sum: EssaySubmissionSumAggregateOutputType | null
    _min: EssaySubmissionMinAggregateOutputType | null
    _max: EssaySubmissionMaxAggregateOutputType | null
  }

  export type EssaySubmissionAvgAggregateOutputType = {
    wordCount: number | null
    internalRating: number | null
  }

  export type EssaySubmissionSumAggregateOutputType = {
    wordCount: number | null
    internalRating: number | null
  }

  export type EssaySubmissionMinAggregateOutputType = {
    id: string | null
    essayPromptId: string | null
    userId: string | null
    applicationId: string | null
    title: string | null
    content: string | null
    wordCount: number | null
    status: string | null
    submissionDate: Date | null
    lastEditedAt: Date | null
    isUsingTemplate: boolean | null
    templateVersion: string | null
    reviewStatus: string | null
    reviewerId: string | null
    reviewerComment: string | null
    internalRating: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EssaySubmissionMaxAggregateOutputType = {
    id: string | null
    essayPromptId: string | null
    userId: string | null
    applicationId: string | null
    title: string | null
    content: string | null
    wordCount: number | null
    status: string | null
    submissionDate: Date | null
    lastEditedAt: Date | null
    isUsingTemplate: boolean | null
    templateVersion: string | null
    reviewStatus: string | null
    reviewerId: string | null
    reviewerComment: string | null
    internalRating: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EssaySubmissionCountAggregateOutputType = {
    id: number
    essayPromptId: number
    userId: number
    applicationId: number
    title: number
    content: number
    wordCount: number
    status: number
    submissionDate: number
    lastEditedAt: number
    isUsingTemplate: number
    templateVersion: number
    reviewStatus: number
    reviewerId: number
    reviewerComment: number
    internalRating: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EssaySubmissionAvgAggregateInputType = {
    wordCount?: true
    internalRating?: true
  }

  export type EssaySubmissionSumAggregateInputType = {
    wordCount?: true
    internalRating?: true
  }

  export type EssaySubmissionMinAggregateInputType = {
    id?: true
    essayPromptId?: true
    userId?: true
    applicationId?: true
    title?: true
    content?: true
    wordCount?: true
    status?: true
    submissionDate?: true
    lastEditedAt?: true
    isUsingTemplate?: true
    templateVersion?: true
    reviewStatus?: true
    reviewerId?: true
    reviewerComment?: true
    internalRating?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EssaySubmissionMaxAggregateInputType = {
    id?: true
    essayPromptId?: true
    userId?: true
    applicationId?: true
    title?: true
    content?: true
    wordCount?: true
    status?: true
    submissionDate?: true
    lastEditedAt?: true
    isUsingTemplate?: true
    templateVersion?: true
    reviewStatus?: true
    reviewerId?: true
    reviewerComment?: true
    internalRating?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EssaySubmissionCountAggregateInputType = {
    id?: true
    essayPromptId?: true
    userId?: true
    applicationId?: true
    title?: true
    content?: true
    wordCount?: true
    status?: true
    submissionDate?: true
    lastEditedAt?: true
    isUsingTemplate?: true
    templateVersion?: true
    reviewStatus?: true
    reviewerId?: true
    reviewerComment?: true
    internalRating?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EssaySubmissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssaySubmission to aggregate.
     */
    where?: EssaySubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssaySubmissions to fetch.
     */
    orderBy?: EssaySubmissionOrderByWithRelationInput | EssaySubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EssaySubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssaySubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssaySubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EssaySubmissions
    **/
    _count?: true | EssaySubmissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EssaySubmissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EssaySubmissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EssaySubmissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EssaySubmissionMaxAggregateInputType
  }

  export type GetEssaySubmissionAggregateType<T extends EssaySubmissionAggregateArgs> = {
        [P in keyof T & keyof AggregateEssaySubmission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEssaySubmission[P]>
      : GetScalarType<T[P], AggregateEssaySubmission[P]>
  }




  export type EssaySubmissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssaySubmissionWhereInput
    orderBy?: EssaySubmissionOrderByWithAggregationInput | EssaySubmissionOrderByWithAggregationInput[]
    by: EssaySubmissionScalarFieldEnum[] | EssaySubmissionScalarFieldEnum
    having?: EssaySubmissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EssaySubmissionCountAggregateInputType | true
    _avg?: EssaySubmissionAvgAggregateInputType
    _sum?: EssaySubmissionSumAggregateInputType
    _min?: EssaySubmissionMinAggregateInputType
    _max?: EssaySubmissionMaxAggregateInputType
  }

  export type EssaySubmissionGroupByOutputType = {
    id: string
    essayPromptId: string
    userId: string | null
    applicationId: string | null
    title: string | null
    content: string
    wordCount: number
    status: string
    submissionDate: Date | null
    lastEditedAt: Date
    isUsingTemplate: boolean
    templateVersion: string | null
    reviewStatus: string | null
    reviewerId: string | null
    reviewerComment: string | null
    internalRating: number | null
    createdAt: Date
    updatedAt: Date
    _count: EssaySubmissionCountAggregateOutputType | null
    _avg: EssaySubmissionAvgAggregateOutputType | null
    _sum: EssaySubmissionSumAggregateOutputType | null
    _min: EssaySubmissionMinAggregateOutputType | null
    _max: EssaySubmissionMaxAggregateOutputType | null
  }

  type GetEssaySubmissionGroupByPayload<T extends EssaySubmissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EssaySubmissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EssaySubmissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EssaySubmissionGroupByOutputType[P]>
            : GetScalarType<T[P], EssaySubmissionGroupByOutputType[P]>
        }
      >
    >


  export type EssaySubmissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayPromptId?: boolean
    userId?: boolean
    applicationId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    status?: boolean
    submissionDate?: boolean
    lastEditedAt?: boolean
    isUsingTemplate?: boolean
    templateVersion?: boolean
    reviewStatus?: boolean
    reviewerId?: boolean
    reviewerComment?: boolean
    internalRating?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    user?: boolean | EssaySubmission$userArgs<ExtArgs>
    application?: boolean | EssaySubmission$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["essaySubmission"]>

  export type EssaySubmissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayPromptId?: boolean
    userId?: boolean
    applicationId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    status?: boolean
    submissionDate?: boolean
    lastEditedAt?: boolean
    isUsingTemplate?: boolean
    templateVersion?: boolean
    reviewStatus?: boolean
    reviewerId?: boolean
    reviewerComment?: boolean
    internalRating?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    user?: boolean | EssaySubmission$userArgs<ExtArgs>
    application?: boolean | EssaySubmission$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["essaySubmission"]>

  export type EssaySubmissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayPromptId?: boolean
    userId?: boolean
    applicationId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    status?: boolean
    submissionDate?: boolean
    lastEditedAt?: boolean
    isUsingTemplate?: boolean
    templateVersion?: boolean
    reviewStatus?: boolean
    reviewerId?: boolean
    reviewerComment?: boolean
    internalRating?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    user?: boolean | EssaySubmission$userArgs<ExtArgs>
    application?: boolean | EssaySubmission$applicationArgs<ExtArgs>
  }, ExtArgs["result"]["essaySubmission"]>

  export type EssaySubmissionSelectScalar = {
    id?: boolean
    essayPromptId?: boolean
    userId?: boolean
    applicationId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    status?: boolean
    submissionDate?: boolean
    lastEditedAt?: boolean
    isUsingTemplate?: boolean
    templateVersion?: boolean
    reviewStatus?: boolean
    reviewerId?: boolean
    reviewerComment?: boolean
    internalRating?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EssaySubmissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "essayPromptId" | "userId" | "applicationId" | "title" | "content" | "wordCount" | "status" | "submissionDate" | "lastEditedAt" | "isUsingTemplate" | "templateVersion" | "reviewStatus" | "reviewerId" | "reviewerComment" | "internalRating" | "createdAt" | "updatedAt", ExtArgs["result"]["essaySubmission"]>
  export type EssaySubmissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    user?: boolean | EssaySubmission$userArgs<ExtArgs>
    application?: boolean | EssaySubmission$applicationArgs<ExtArgs>
  }
  export type EssaySubmissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    user?: boolean | EssaySubmission$userArgs<ExtArgs>
    application?: boolean | EssaySubmission$applicationArgs<ExtArgs>
  }
  export type EssaySubmissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    user?: boolean | EssaySubmission$userArgs<ExtArgs>
    application?: boolean | EssaySubmission$applicationArgs<ExtArgs>
  }

  export type $EssaySubmissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EssaySubmission"
    objects: {
      essayPrompt: Prisma.$EssayPromptPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
      application: Prisma.$ApplicationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      essayPromptId: string
      userId: string | null
      applicationId: string | null
      title: string | null
      content: string
      wordCount: number
      status: string
      submissionDate: Date | null
      lastEditedAt: Date
      isUsingTemplate: boolean
      templateVersion: string | null
      reviewStatus: string | null
      reviewerId: string | null
      reviewerComment: string | null
      internalRating: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["essaySubmission"]>
    composites: {}
  }

  type EssaySubmissionGetPayload<S extends boolean | null | undefined | EssaySubmissionDefaultArgs> = $Result.GetResult<Prisma.$EssaySubmissionPayload, S>

  type EssaySubmissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EssaySubmissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EssaySubmissionCountAggregateInputType | true
    }

  export interface EssaySubmissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EssaySubmission'], meta: { name: 'EssaySubmission' } }
    /**
     * Find zero or one EssaySubmission that matches the filter.
     * @param {EssaySubmissionFindUniqueArgs} args - Arguments to find a EssaySubmission
     * @example
     * // Get one EssaySubmission
     * const essaySubmission = await prisma.essaySubmission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EssaySubmissionFindUniqueArgs>(args: SelectSubset<T, EssaySubmissionFindUniqueArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EssaySubmission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EssaySubmissionFindUniqueOrThrowArgs} args - Arguments to find a EssaySubmission
     * @example
     * // Get one EssaySubmission
     * const essaySubmission = await prisma.essaySubmission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EssaySubmissionFindUniqueOrThrowArgs>(args: SelectSubset<T, EssaySubmissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssaySubmission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssaySubmissionFindFirstArgs} args - Arguments to find a EssaySubmission
     * @example
     * // Get one EssaySubmission
     * const essaySubmission = await prisma.essaySubmission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EssaySubmissionFindFirstArgs>(args?: SelectSubset<T, EssaySubmissionFindFirstArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssaySubmission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssaySubmissionFindFirstOrThrowArgs} args - Arguments to find a EssaySubmission
     * @example
     * // Get one EssaySubmission
     * const essaySubmission = await prisma.essaySubmission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EssaySubmissionFindFirstOrThrowArgs>(args?: SelectSubset<T, EssaySubmissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EssaySubmissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssaySubmissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EssaySubmissions
     * const essaySubmissions = await prisma.essaySubmission.findMany()
     * 
     * // Get first 10 EssaySubmissions
     * const essaySubmissions = await prisma.essaySubmission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const essaySubmissionWithIdOnly = await prisma.essaySubmission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EssaySubmissionFindManyArgs>(args?: SelectSubset<T, EssaySubmissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EssaySubmission.
     * @param {EssaySubmissionCreateArgs} args - Arguments to create a EssaySubmission.
     * @example
     * // Create one EssaySubmission
     * const EssaySubmission = await prisma.essaySubmission.create({
     *   data: {
     *     // ... data to create a EssaySubmission
     *   }
     * })
     * 
     */
    create<T extends EssaySubmissionCreateArgs>(args: SelectSubset<T, EssaySubmissionCreateArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EssaySubmissions.
     * @param {EssaySubmissionCreateManyArgs} args - Arguments to create many EssaySubmissions.
     * @example
     * // Create many EssaySubmissions
     * const essaySubmission = await prisma.essaySubmission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EssaySubmissionCreateManyArgs>(args?: SelectSubset<T, EssaySubmissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EssaySubmissions and returns the data saved in the database.
     * @param {EssaySubmissionCreateManyAndReturnArgs} args - Arguments to create many EssaySubmissions.
     * @example
     * // Create many EssaySubmissions
     * const essaySubmission = await prisma.essaySubmission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EssaySubmissions and only return the `id`
     * const essaySubmissionWithIdOnly = await prisma.essaySubmission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EssaySubmissionCreateManyAndReturnArgs>(args?: SelectSubset<T, EssaySubmissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EssaySubmission.
     * @param {EssaySubmissionDeleteArgs} args - Arguments to delete one EssaySubmission.
     * @example
     * // Delete one EssaySubmission
     * const EssaySubmission = await prisma.essaySubmission.delete({
     *   where: {
     *     // ... filter to delete one EssaySubmission
     *   }
     * })
     * 
     */
    delete<T extends EssaySubmissionDeleteArgs>(args: SelectSubset<T, EssaySubmissionDeleteArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EssaySubmission.
     * @param {EssaySubmissionUpdateArgs} args - Arguments to update one EssaySubmission.
     * @example
     * // Update one EssaySubmission
     * const essaySubmission = await prisma.essaySubmission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EssaySubmissionUpdateArgs>(args: SelectSubset<T, EssaySubmissionUpdateArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EssaySubmissions.
     * @param {EssaySubmissionDeleteManyArgs} args - Arguments to filter EssaySubmissions to delete.
     * @example
     * // Delete a few EssaySubmissions
     * const { count } = await prisma.essaySubmission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EssaySubmissionDeleteManyArgs>(args?: SelectSubset<T, EssaySubmissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssaySubmissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssaySubmissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EssaySubmissions
     * const essaySubmission = await prisma.essaySubmission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EssaySubmissionUpdateManyArgs>(args: SelectSubset<T, EssaySubmissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssaySubmissions and returns the data updated in the database.
     * @param {EssaySubmissionUpdateManyAndReturnArgs} args - Arguments to update many EssaySubmissions.
     * @example
     * // Update many EssaySubmissions
     * const essaySubmission = await prisma.essaySubmission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EssaySubmissions and only return the `id`
     * const essaySubmissionWithIdOnly = await prisma.essaySubmission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EssaySubmissionUpdateManyAndReturnArgs>(args: SelectSubset<T, EssaySubmissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EssaySubmission.
     * @param {EssaySubmissionUpsertArgs} args - Arguments to update or create a EssaySubmission.
     * @example
     * // Update or create a EssaySubmission
     * const essaySubmission = await prisma.essaySubmission.upsert({
     *   create: {
     *     // ... data to create a EssaySubmission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EssaySubmission we want to update
     *   }
     * })
     */
    upsert<T extends EssaySubmissionUpsertArgs>(args: SelectSubset<T, EssaySubmissionUpsertArgs<ExtArgs>>): Prisma__EssaySubmissionClient<$Result.GetResult<Prisma.$EssaySubmissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EssaySubmissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssaySubmissionCountArgs} args - Arguments to filter EssaySubmissions to count.
     * @example
     * // Count the number of EssaySubmissions
     * const count = await prisma.essaySubmission.count({
     *   where: {
     *     // ... the filter for the EssaySubmissions we want to count
     *   }
     * })
    **/
    count<T extends EssaySubmissionCountArgs>(
      args?: Subset<T, EssaySubmissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EssaySubmissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EssaySubmission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssaySubmissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EssaySubmissionAggregateArgs>(args: Subset<T, EssaySubmissionAggregateArgs>): Prisma.PrismaPromise<GetEssaySubmissionAggregateType<T>>

    /**
     * Group by EssaySubmission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssaySubmissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EssaySubmissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EssaySubmissionGroupByArgs['orderBy'] }
        : { orderBy?: EssaySubmissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EssaySubmissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEssaySubmissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EssaySubmission model
   */
  readonly fields: EssaySubmissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EssaySubmission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EssaySubmissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    essayPrompt<T extends EssayPromptDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EssayPromptDefaultArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends EssaySubmission$userArgs<ExtArgs> = {}>(args?: Subset<T, EssaySubmission$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    application<T extends EssaySubmission$applicationArgs<ExtArgs> = {}>(args?: Subset<T, EssaySubmission$applicationArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EssaySubmission model
   */
  interface EssaySubmissionFieldRefs {
    readonly id: FieldRef<"EssaySubmission", 'String'>
    readonly essayPromptId: FieldRef<"EssaySubmission", 'String'>
    readonly userId: FieldRef<"EssaySubmission", 'String'>
    readonly applicationId: FieldRef<"EssaySubmission", 'String'>
    readonly title: FieldRef<"EssaySubmission", 'String'>
    readonly content: FieldRef<"EssaySubmission", 'String'>
    readonly wordCount: FieldRef<"EssaySubmission", 'Int'>
    readonly status: FieldRef<"EssaySubmission", 'String'>
    readonly submissionDate: FieldRef<"EssaySubmission", 'DateTime'>
    readonly lastEditedAt: FieldRef<"EssaySubmission", 'DateTime'>
    readonly isUsingTemplate: FieldRef<"EssaySubmission", 'Boolean'>
    readonly templateVersion: FieldRef<"EssaySubmission", 'String'>
    readonly reviewStatus: FieldRef<"EssaySubmission", 'String'>
    readonly reviewerId: FieldRef<"EssaySubmission", 'String'>
    readonly reviewerComment: FieldRef<"EssaySubmission", 'String'>
    readonly internalRating: FieldRef<"EssaySubmission", 'Float'>
    readonly createdAt: FieldRef<"EssaySubmission", 'DateTime'>
    readonly updatedAt: FieldRef<"EssaySubmission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EssaySubmission findUnique
   */
  export type EssaySubmissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * Filter, which EssaySubmission to fetch.
     */
    where: EssaySubmissionWhereUniqueInput
  }

  /**
   * EssaySubmission findUniqueOrThrow
   */
  export type EssaySubmissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * Filter, which EssaySubmission to fetch.
     */
    where: EssaySubmissionWhereUniqueInput
  }

  /**
   * EssaySubmission findFirst
   */
  export type EssaySubmissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * Filter, which EssaySubmission to fetch.
     */
    where?: EssaySubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssaySubmissions to fetch.
     */
    orderBy?: EssaySubmissionOrderByWithRelationInput | EssaySubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssaySubmissions.
     */
    cursor?: EssaySubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssaySubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssaySubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssaySubmissions.
     */
    distinct?: EssaySubmissionScalarFieldEnum | EssaySubmissionScalarFieldEnum[]
  }

  /**
   * EssaySubmission findFirstOrThrow
   */
  export type EssaySubmissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * Filter, which EssaySubmission to fetch.
     */
    where?: EssaySubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssaySubmissions to fetch.
     */
    orderBy?: EssaySubmissionOrderByWithRelationInput | EssaySubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssaySubmissions.
     */
    cursor?: EssaySubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssaySubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssaySubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssaySubmissions.
     */
    distinct?: EssaySubmissionScalarFieldEnum | EssaySubmissionScalarFieldEnum[]
  }

  /**
   * EssaySubmission findMany
   */
  export type EssaySubmissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * Filter, which EssaySubmissions to fetch.
     */
    where?: EssaySubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssaySubmissions to fetch.
     */
    orderBy?: EssaySubmissionOrderByWithRelationInput | EssaySubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EssaySubmissions.
     */
    cursor?: EssaySubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssaySubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssaySubmissions.
     */
    skip?: number
    distinct?: EssaySubmissionScalarFieldEnum | EssaySubmissionScalarFieldEnum[]
  }

  /**
   * EssaySubmission create
   */
  export type EssaySubmissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * The data needed to create a EssaySubmission.
     */
    data: XOR<EssaySubmissionCreateInput, EssaySubmissionUncheckedCreateInput>
  }

  /**
   * EssaySubmission createMany
   */
  export type EssaySubmissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EssaySubmissions.
     */
    data: EssaySubmissionCreateManyInput | EssaySubmissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EssaySubmission createManyAndReturn
   */
  export type EssaySubmissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * The data used to create many EssaySubmissions.
     */
    data: EssaySubmissionCreateManyInput | EssaySubmissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssaySubmission update
   */
  export type EssaySubmissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * The data needed to update a EssaySubmission.
     */
    data: XOR<EssaySubmissionUpdateInput, EssaySubmissionUncheckedUpdateInput>
    /**
     * Choose, which EssaySubmission to update.
     */
    where: EssaySubmissionWhereUniqueInput
  }

  /**
   * EssaySubmission updateMany
   */
  export type EssaySubmissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EssaySubmissions.
     */
    data: XOR<EssaySubmissionUpdateManyMutationInput, EssaySubmissionUncheckedUpdateManyInput>
    /**
     * Filter which EssaySubmissions to update
     */
    where?: EssaySubmissionWhereInput
    /**
     * Limit how many EssaySubmissions to update.
     */
    limit?: number
  }

  /**
   * EssaySubmission updateManyAndReturn
   */
  export type EssaySubmissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * The data used to update EssaySubmissions.
     */
    data: XOR<EssaySubmissionUpdateManyMutationInput, EssaySubmissionUncheckedUpdateManyInput>
    /**
     * Filter which EssaySubmissions to update
     */
    where?: EssaySubmissionWhereInput
    /**
     * Limit how many EssaySubmissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssaySubmission upsert
   */
  export type EssaySubmissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * The filter to search for the EssaySubmission to update in case it exists.
     */
    where: EssaySubmissionWhereUniqueInput
    /**
     * In case the EssaySubmission found by the `where` argument doesn't exist, create a new EssaySubmission with this data.
     */
    create: XOR<EssaySubmissionCreateInput, EssaySubmissionUncheckedCreateInput>
    /**
     * In case the EssaySubmission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EssaySubmissionUpdateInput, EssaySubmissionUncheckedUpdateInput>
  }

  /**
   * EssaySubmission delete
   */
  export type EssaySubmissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
    /**
     * Filter which EssaySubmission to delete.
     */
    where: EssaySubmissionWhereUniqueInput
  }

  /**
   * EssaySubmission deleteMany
   */
  export type EssaySubmissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssaySubmissions to delete
     */
    where?: EssaySubmissionWhereInput
    /**
     * Limit how many EssaySubmissions to delete.
     */
    limit?: number
  }

  /**
   * EssaySubmission.user
   */
  export type EssaySubmission$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * EssaySubmission.application
   */
  export type EssaySubmission$applicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
  }

  /**
   * EssaySubmission without action
   */
  export type EssaySubmissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssaySubmission
     */
    select?: EssaySubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssaySubmission
     */
    omit?: EssaySubmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssaySubmissionInclude<ExtArgs> | null
  }


  /**
   * Model Essay
   */

  export type AggregateEssay = {
    _count: EssayCountAggregateOutputType | null
    _avg: EssayAvgAggregateOutputType | null
    _sum: EssaySumAggregateOutputType | null
    _min: EssayMinAggregateOutputType | null
    _max: EssayMaxAggregateOutputType | null
  }

  export type EssayAvgAggregateOutputType = {
    wordCount: number | null
    wordLimit: number | null
    completionPercentage: number | null
  }

  export type EssaySumAggregateOutputType = {
    wordCount: number | null
    wordLimit: number | null
    completionPercentage: number | null
  }

  export type EssayMinAggregateOutputType = {
    id: string | null
    userId: string | null
    applicationId: string | null
    programId: string | null
    essayPromptId: string | null
    title: string | null
    content: string | null
    wordCount: number | null
    wordLimit: number | null
    status: string | null
    priority: string | null
    isCompleted: boolean | null
    completedAt: Date | null
    completionPercentage: number | null
    lastModified: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    lastAutoSaved: Date | null
    autoSaveEnabled: boolean | null
  }

  export type EssayMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    applicationId: string | null
    programId: string | null
    essayPromptId: string | null
    title: string | null
    content: string | null
    wordCount: number | null
    wordLimit: number | null
    status: string | null
    priority: string | null
    isCompleted: boolean | null
    completedAt: Date | null
    completionPercentage: number | null
    lastModified: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    lastAutoSaved: Date | null
    autoSaveEnabled: boolean | null
  }

  export type EssayCountAggregateOutputType = {
    id: number
    userId: number
    applicationId: number
    programId: number
    essayPromptId: number
    title: number
    content: number
    wordCount: number
    wordLimit: number
    status: number
    priority: number
    isCompleted: number
    completedAt: number
    completionPercentage: number
    lastModified: number
    createdAt: number
    updatedAt: number
    lastAutoSaved: number
    autoSaveEnabled: number
    _all: number
  }


  export type EssayAvgAggregateInputType = {
    wordCount?: true
    wordLimit?: true
    completionPercentage?: true
  }

  export type EssaySumAggregateInputType = {
    wordCount?: true
    wordLimit?: true
    completionPercentage?: true
  }

  export type EssayMinAggregateInputType = {
    id?: true
    userId?: true
    applicationId?: true
    programId?: true
    essayPromptId?: true
    title?: true
    content?: true
    wordCount?: true
    wordLimit?: true
    status?: true
    priority?: true
    isCompleted?: true
    completedAt?: true
    completionPercentage?: true
    lastModified?: true
    createdAt?: true
    updatedAt?: true
    lastAutoSaved?: true
    autoSaveEnabled?: true
  }

  export type EssayMaxAggregateInputType = {
    id?: true
    userId?: true
    applicationId?: true
    programId?: true
    essayPromptId?: true
    title?: true
    content?: true
    wordCount?: true
    wordLimit?: true
    status?: true
    priority?: true
    isCompleted?: true
    completedAt?: true
    completionPercentage?: true
    lastModified?: true
    createdAt?: true
    updatedAt?: true
    lastAutoSaved?: true
    autoSaveEnabled?: true
  }

  export type EssayCountAggregateInputType = {
    id?: true
    userId?: true
    applicationId?: true
    programId?: true
    essayPromptId?: true
    title?: true
    content?: true
    wordCount?: true
    wordLimit?: true
    status?: true
    priority?: true
    isCompleted?: true
    completedAt?: true
    completionPercentage?: true
    lastModified?: true
    createdAt?: true
    updatedAt?: true
    lastAutoSaved?: true
    autoSaveEnabled?: true
    _all?: true
  }

  export type EssayAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Essay to aggregate.
     */
    where?: EssayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Essays to fetch.
     */
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EssayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Essays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Essays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Essays
    **/
    _count?: true | EssayCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EssayAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EssaySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EssayMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EssayMaxAggregateInputType
  }

  export type GetEssayAggregateType<T extends EssayAggregateArgs> = {
        [P in keyof T & keyof AggregateEssay]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEssay[P]>
      : GetScalarType<T[P], AggregateEssay[P]>
  }




  export type EssayGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayWhereInput
    orderBy?: EssayOrderByWithAggregationInput | EssayOrderByWithAggregationInput[]
    by: EssayScalarFieldEnum[] | EssayScalarFieldEnum
    having?: EssayScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EssayCountAggregateInputType | true
    _avg?: EssayAvgAggregateInputType
    _sum?: EssaySumAggregateInputType
    _min?: EssayMinAggregateInputType
    _max?: EssayMaxAggregateInputType
  }

  export type EssayGroupByOutputType = {
    id: string
    userId: string | null
    applicationId: string | null
    programId: string
    essayPromptId: string
    title: string
    content: string
    wordCount: number
    wordLimit: number
    status: string
    priority: string
    isCompleted: boolean
    completedAt: Date | null
    completionPercentage: number
    lastModified: Date
    createdAt: Date
    updatedAt: Date
    lastAutoSaved: Date
    autoSaveEnabled: boolean
    _count: EssayCountAggregateOutputType | null
    _avg: EssayAvgAggregateOutputType | null
    _sum: EssaySumAggregateOutputType | null
    _min: EssayMinAggregateOutputType | null
    _max: EssayMaxAggregateOutputType | null
  }

  type GetEssayGroupByPayload<T extends EssayGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EssayGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EssayGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EssayGroupByOutputType[P]>
            : GetScalarType<T[P], EssayGroupByOutputType[P]>
        }
      >
    >


  export type EssaySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    applicationId?: boolean
    programId?: boolean
    essayPromptId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    wordLimit?: boolean
    status?: boolean
    priority?: boolean
    isCompleted?: boolean
    completedAt?: boolean
    completionPercentage?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastAutoSaved?: boolean
    autoSaveEnabled?: boolean
    user?: boolean | Essay$userArgs<ExtArgs>
    application?: boolean | Essay$applicationArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    versions?: boolean | Essay$versionsArgs<ExtArgs>
    aiResults?: boolean | Essay$aiResultsArgs<ExtArgs>
    EssayCompletionLog?: boolean | Essay$EssayCompletionLogArgs<ExtArgs>
    _count?: boolean | EssayCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["essay"]>

  export type EssaySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    applicationId?: boolean
    programId?: boolean
    essayPromptId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    wordLimit?: boolean
    status?: boolean
    priority?: boolean
    isCompleted?: boolean
    completedAt?: boolean
    completionPercentage?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastAutoSaved?: boolean
    autoSaveEnabled?: boolean
    user?: boolean | Essay$userArgs<ExtArgs>
    application?: boolean | Essay$applicationArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["essay"]>

  export type EssaySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    applicationId?: boolean
    programId?: boolean
    essayPromptId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    wordLimit?: boolean
    status?: boolean
    priority?: boolean
    isCompleted?: boolean
    completedAt?: boolean
    completionPercentage?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastAutoSaved?: boolean
    autoSaveEnabled?: boolean
    user?: boolean | Essay$userArgs<ExtArgs>
    application?: boolean | Essay$applicationArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["essay"]>

  export type EssaySelectScalar = {
    id?: boolean
    userId?: boolean
    applicationId?: boolean
    programId?: boolean
    essayPromptId?: boolean
    title?: boolean
    content?: boolean
    wordCount?: boolean
    wordLimit?: boolean
    status?: boolean
    priority?: boolean
    isCompleted?: boolean
    completedAt?: boolean
    completionPercentage?: boolean
    lastModified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastAutoSaved?: boolean
    autoSaveEnabled?: boolean
  }

  export type EssayOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "applicationId" | "programId" | "essayPromptId" | "title" | "content" | "wordCount" | "wordLimit" | "status" | "priority" | "isCompleted" | "completedAt" | "completionPercentage" | "lastModified" | "createdAt" | "updatedAt" | "lastAutoSaved" | "autoSaveEnabled", ExtArgs["result"]["essay"]>
  export type EssayInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Essay$userArgs<ExtArgs>
    application?: boolean | Essay$applicationArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
    versions?: boolean | Essay$versionsArgs<ExtArgs>
    aiResults?: boolean | Essay$aiResultsArgs<ExtArgs>
    EssayCompletionLog?: boolean | Essay$EssayCompletionLogArgs<ExtArgs>
    _count?: boolean | EssayCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EssayIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Essay$userArgs<ExtArgs>
    application?: boolean | Essay$applicationArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
  }
  export type EssayIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Essay$userArgs<ExtArgs>
    application?: boolean | Essay$applicationArgs<ExtArgs>
    program?: boolean | ProgramDefaultArgs<ExtArgs>
    essayPrompt?: boolean | EssayPromptDefaultArgs<ExtArgs>
  }

  export type $EssayPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Essay"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      application: Prisma.$ApplicationPayload<ExtArgs> | null
      program: Prisma.$ProgramPayload<ExtArgs>
      essayPrompt: Prisma.$EssayPromptPayload<ExtArgs>
      versions: Prisma.$EssayVersionPayload<ExtArgs>[]
      aiResults: Prisma.$AIResultPayload<ExtArgs>[]
      EssayCompletionLog: Prisma.$EssayCompletionLogPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      applicationId: string | null
      programId: string
      essayPromptId: string
      title: string
      content: string
      wordCount: number
      wordLimit: number
      status: string
      priority: string
      isCompleted: boolean
      completedAt: Date | null
      completionPercentage: number
      lastModified: Date
      createdAt: Date
      updatedAt: Date
      lastAutoSaved: Date
      autoSaveEnabled: boolean
    }, ExtArgs["result"]["essay"]>
    composites: {}
  }

  type EssayGetPayload<S extends boolean | null | undefined | EssayDefaultArgs> = $Result.GetResult<Prisma.$EssayPayload, S>

  type EssayCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EssayFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EssayCountAggregateInputType | true
    }

  export interface EssayDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Essay'], meta: { name: 'Essay' } }
    /**
     * Find zero or one Essay that matches the filter.
     * @param {EssayFindUniqueArgs} args - Arguments to find a Essay
     * @example
     * // Get one Essay
     * const essay = await prisma.essay.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EssayFindUniqueArgs>(args: SelectSubset<T, EssayFindUniqueArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Essay that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EssayFindUniqueOrThrowArgs} args - Arguments to find a Essay
     * @example
     * // Get one Essay
     * const essay = await prisma.essay.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EssayFindUniqueOrThrowArgs>(args: SelectSubset<T, EssayFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Essay that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayFindFirstArgs} args - Arguments to find a Essay
     * @example
     * // Get one Essay
     * const essay = await prisma.essay.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EssayFindFirstArgs>(args?: SelectSubset<T, EssayFindFirstArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Essay that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayFindFirstOrThrowArgs} args - Arguments to find a Essay
     * @example
     * // Get one Essay
     * const essay = await prisma.essay.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EssayFindFirstOrThrowArgs>(args?: SelectSubset<T, EssayFindFirstOrThrowArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Essays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Essays
     * const essays = await prisma.essay.findMany()
     * 
     * // Get first 10 Essays
     * const essays = await prisma.essay.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const essayWithIdOnly = await prisma.essay.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EssayFindManyArgs>(args?: SelectSubset<T, EssayFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Essay.
     * @param {EssayCreateArgs} args - Arguments to create a Essay.
     * @example
     * // Create one Essay
     * const Essay = await prisma.essay.create({
     *   data: {
     *     // ... data to create a Essay
     *   }
     * })
     * 
     */
    create<T extends EssayCreateArgs>(args: SelectSubset<T, EssayCreateArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Essays.
     * @param {EssayCreateManyArgs} args - Arguments to create many Essays.
     * @example
     * // Create many Essays
     * const essay = await prisma.essay.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EssayCreateManyArgs>(args?: SelectSubset<T, EssayCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Essays and returns the data saved in the database.
     * @param {EssayCreateManyAndReturnArgs} args - Arguments to create many Essays.
     * @example
     * // Create many Essays
     * const essay = await prisma.essay.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Essays and only return the `id`
     * const essayWithIdOnly = await prisma.essay.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EssayCreateManyAndReturnArgs>(args?: SelectSubset<T, EssayCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Essay.
     * @param {EssayDeleteArgs} args - Arguments to delete one Essay.
     * @example
     * // Delete one Essay
     * const Essay = await prisma.essay.delete({
     *   where: {
     *     // ... filter to delete one Essay
     *   }
     * })
     * 
     */
    delete<T extends EssayDeleteArgs>(args: SelectSubset<T, EssayDeleteArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Essay.
     * @param {EssayUpdateArgs} args - Arguments to update one Essay.
     * @example
     * // Update one Essay
     * const essay = await prisma.essay.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EssayUpdateArgs>(args: SelectSubset<T, EssayUpdateArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Essays.
     * @param {EssayDeleteManyArgs} args - Arguments to filter Essays to delete.
     * @example
     * // Delete a few Essays
     * const { count } = await prisma.essay.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EssayDeleteManyArgs>(args?: SelectSubset<T, EssayDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Essays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Essays
     * const essay = await prisma.essay.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EssayUpdateManyArgs>(args: SelectSubset<T, EssayUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Essays and returns the data updated in the database.
     * @param {EssayUpdateManyAndReturnArgs} args - Arguments to update many Essays.
     * @example
     * // Update many Essays
     * const essay = await prisma.essay.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Essays and only return the `id`
     * const essayWithIdOnly = await prisma.essay.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EssayUpdateManyAndReturnArgs>(args: SelectSubset<T, EssayUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Essay.
     * @param {EssayUpsertArgs} args - Arguments to update or create a Essay.
     * @example
     * // Update or create a Essay
     * const essay = await prisma.essay.upsert({
     *   create: {
     *     // ... data to create a Essay
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Essay we want to update
     *   }
     * })
     */
    upsert<T extends EssayUpsertArgs>(args: SelectSubset<T, EssayUpsertArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Essays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCountArgs} args - Arguments to filter Essays to count.
     * @example
     * // Count the number of Essays
     * const count = await prisma.essay.count({
     *   where: {
     *     // ... the filter for the Essays we want to count
     *   }
     * })
    **/
    count<T extends EssayCountArgs>(
      args?: Subset<T, EssayCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EssayCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Essay.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EssayAggregateArgs>(args: Subset<T, EssayAggregateArgs>): Prisma.PrismaPromise<GetEssayAggregateType<T>>

    /**
     * Group by Essay.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EssayGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EssayGroupByArgs['orderBy'] }
        : { orderBy?: EssayGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EssayGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEssayGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Essay model
   */
  readonly fields: EssayFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Essay.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EssayClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Essay$userArgs<ExtArgs> = {}>(args?: Subset<T, Essay$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    application<T extends Essay$applicationArgs<ExtArgs> = {}>(args?: Subset<T, Essay$applicationArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    program<T extends ProgramDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProgramDefaultArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    essayPrompt<T extends EssayPromptDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EssayPromptDefaultArgs<ExtArgs>>): Prisma__EssayPromptClient<$Result.GetResult<Prisma.$EssayPromptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    versions<T extends Essay$versionsArgs<ExtArgs> = {}>(args?: Subset<T, Essay$versionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    aiResults<T extends Essay$aiResultsArgs<ExtArgs> = {}>(args?: Subset<T, Essay$aiResultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EssayCompletionLog<T extends Essay$EssayCompletionLogArgs<ExtArgs> = {}>(args?: Subset<T, Essay$EssayCompletionLogArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Essay model
   */
  interface EssayFieldRefs {
    readonly id: FieldRef<"Essay", 'String'>
    readonly userId: FieldRef<"Essay", 'String'>
    readonly applicationId: FieldRef<"Essay", 'String'>
    readonly programId: FieldRef<"Essay", 'String'>
    readonly essayPromptId: FieldRef<"Essay", 'String'>
    readonly title: FieldRef<"Essay", 'String'>
    readonly content: FieldRef<"Essay", 'String'>
    readonly wordCount: FieldRef<"Essay", 'Int'>
    readonly wordLimit: FieldRef<"Essay", 'Int'>
    readonly status: FieldRef<"Essay", 'String'>
    readonly priority: FieldRef<"Essay", 'String'>
    readonly isCompleted: FieldRef<"Essay", 'Boolean'>
    readonly completedAt: FieldRef<"Essay", 'DateTime'>
    readonly completionPercentage: FieldRef<"Essay", 'Float'>
    readonly lastModified: FieldRef<"Essay", 'DateTime'>
    readonly createdAt: FieldRef<"Essay", 'DateTime'>
    readonly updatedAt: FieldRef<"Essay", 'DateTime'>
    readonly lastAutoSaved: FieldRef<"Essay", 'DateTime'>
    readonly autoSaveEnabled: FieldRef<"Essay", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Essay findUnique
   */
  export type EssayFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * Filter, which Essay to fetch.
     */
    where: EssayWhereUniqueInput
  }

  /**
   * Essay findUniqueOrThrow
   */
  export type EssayFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * Filter, which Essay to fetch.
     */
    where: EssayWhereUniqueInput
  }

  /**
   * Essay findFirst
   */
  export type EssayFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * Filter, which Essay to fetch.
     */
    where?: EssayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Essays to fetch.
     */
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Essays.
     */
    cursor?: EssayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Essays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Essays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Essays.
     */
    distinct?: EssayScalarFieldEnum | EssayScalarFieldEnum[]
  }

  /**
   * Essay findFirstOrThrow
   */
  export type EssayFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * Filter, which Essay to fetch.
     */
    where?: EssayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Essays to fetch.
     */
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Essays.
     */
    cursor?: EssayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Essays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Essays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Essays.
     */
    distinct?: EssayScalarFieldEnum | EssayScalarFieldEnum[]
  }

  /**
   * Essay findMany
   */
  export type EssayFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * Filter, which Essays to fetch.
     */
    where?: EssayWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Essays to fetch.
     */
    orderBy?: EssayOrderByWithRelationInput | EssayOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Essays.
     */
    cursor?: EssayWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Essays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Essays.
     */
    skip?: number
    distinct?: EssayScalarFieldEnum | EssayScalarFieldEnum[]
  }

  /**
   * Essay create
   */
  export type EssayCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * The data needed to create a Essay.
     */
    data: XOR<EssayCreateInput, EssayUncheckedCreateInput>
  }

  /**
   * Essay createMany
   */
  export type EssayCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Essays.
     */
    data: EssayCreateManyInput | EssayCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Essay createManyAndReturn
   */
  export type EssayCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * The data used to create many Essays.
     */
    data: EssayCreateManyInput | EssayCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Essay update
   */
  export type EssayUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * The data needed to update a Essay.
     */
    data: XOR<EssayUpdateInput, EssayUncheckedUpdateInput>
    /**
     * Choose, which Essay to update.
     */
    where: EssayWhereUniqueInput
  }

  /**
   * Essay updateMany
   */
  export type EssayUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Essays.
     */
    data: XOR<EssayUpdateManyMutationInput, EssayUncheckedUpdateManyInput>
    /**
     * Filter which Essays to update
     */
    where?: EssayWhereInput
    /**
     * Limit how many Essays to update.
     */
    limit?: number
  }

  /**
   * Essay updateManyAndReturn
   */
  export type EssayUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * The data used to update Essays.
     */
    data: XOR<EssayUpdateManyMutationInput, EssayUncheckedUpdateManyInput>
    /**
     * Filter which Essays to update
     */
    where?: EssayWhereInput
    /**
     * Limit how many Essays to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Essay upsert
   */
  export type EssayUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * The filter to search for the Essay to update in case it exists.
     */
    where: EssayWhereUniqueInput
    /**
     * In case the Essay found by the `where` argument doesn't exist, create a new Essay with this data.
     */
    create: XOR<EssayCreateInput, EssayUncheckedCreateInput>
    /**
     * In case the Essay was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EssayUpdateInput, EssayUncheckedUpdateInput>
  }

  /**
   * Essay delete
   */
  export type EssayDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
    /**
     * Filter which Essay to delete.
     */
    where: EssayWhereUniqueInput
  }

  /**
   * Essay deleteMany
   */
  export type EssayDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Essays to delete
     */
    where?: EssayWhereInput
    /**
     * Limit how many Essays to delete.
     */
    limit?: number
  }

  /**
   * Essay.user
   */
  export type Essay$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Essay.application
   */
  export type Essay$applicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
  }

  /**
   * Essay.versions
   */
  export type Essay$versionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    where?: EssayVersionWhereInput
    orderBy?: EssayVersionOrderByWithRelationInput | EssayVersionOrderByWithRelationInput[]
    cursor?: EssayVersionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayVersionScalarFieldEnum | EssayVersionScalarFieldEnum[]
  }

  /**
   * Essay.aiResults
   */
  export type Essay$aiResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    where?: AIResultWhereInput
    orderBy?: AIResultOrderByWithRelationInput | AIResultOrderByWithRelationInput[]
    cursor?: AIResultWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AIResultScalarFieldEnum | AIResultScalarFieldEnum[]
  }

  /**
   * Essay.EssayCompletionLog
   */
  export type Essay$EssayCompletionLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    where?: EssayCompletionLogWhereInput
    orderBy?: EssayCompletionLogOrderByWithRelationInput | EssayCompletionLogOrderByWithRelationInput[]
    cursor?: EssayCompletionLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EssayCompletionLogScalarFieldEnum | EssayCompletionLogScalarFieldEnum[]
  }

  /**
   * Essay without action
   */
  export type EssayDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Essay
     */
    select?: EssaySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Essay
     */
    omit?: EssayOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayInclude<ExtArgs> | null
  }


  /**
   * Model EssayVersion
   */

  export type AggregateEssayVersion = {
    _count: EssayVersionCountAggregateOutputType | null
    _avg: EssayVersionAvgAggregateOutputType | null
    _sum: EssayVersionSumAggregateOutputType | null
    _min: EssayVersionMinAggregateOutputType | null
    _max: EssayVersionMaxAggregateOutputType | null
  }

  export type EssayVersionAvgAggregateOutputType = {
    wordCount: number | null
  }

  export type EssayVersionSumAggregateOutputType = {
    wordCount: number | null
  }

  export type EssayVersionMinAggregateOutputType = {
    id: string | null
    essayId: string | null
    content: string | null
    wordCount: number | null
    label: string | null
    timestamp: Date | null
    isAutoSave: boolean | null
    changesSinceLastVersion: string | null
  }

  export type EssayVersionMaxAggregateOutputType = {
    id: string | null
    essayId: string | null
    content: string | null
    wordCount: number | null
    label: string | null
    timestamp: Date | null
    isAutoSave: boolean | null
    changesSinceLastVersion: string | null
  }

  export type EssayVersionCountAggregateOutputType = {
    id: number
    essayId: number
    content: number
    wordCount: number
    label: number
    timestamp: number
    isAutoSave: number
    changesSinceLastVersion: number
    _all: number
  }


  export type EssayVersionAvgAggregateInputType = {
    wordCount?: true
  }

  export type EssayVersionSumAggregateInputType = {
    wordCount?: true
  }

  export type EssayVersionMinAggregateInputType = {
    id?: true
    essayId?: true
    content?: true
    wordCount?: true
    label?: true
    timestamp?: true
    isAutoSave?: true
    changesSinceLastVersion?: true
  }

  export type EssayVersionMaxAggregateInputType = {
    id?: true
    essayId?: true
    content?: true
    wordCount?: true
    label?: true
    timestamp?: true
    isAutoSave?: true
    changesSinceLastVersion?: true
  }

  export type EssayVersionCountAggregateInputType = {
    id?: true
    essayId?: true
    content?: true
    wordCount?: true
    label?: true
    timestamp?: true
    isAutoSave?: true
    changesSinceLastVersion?: true
    _all?: true
  }

  export type EssayVersionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssayVersion to aggregate.
     */
    where?: EssayVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayVersions to fetch.
     */
    orderBy?: EssayVersionOrderByWithRelationInput | EssayVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EssayVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EssayVersions
    **/
    _count?: true | EssayVersionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EssayVersionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EssayVersionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EssayVersionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EssayVersionMaxAggregateInputType
  }

  export type GetEssayVersionAggregateType<T extends EssayVersionAggregateArgs> = {
        [P in keyof T & keyof AggregateEssayVersion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEssayVersion[P]>
      : GetScalarType<T[P], AggregateEssayVersion[P]>
  }




  export type EssayVersionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayVersionWhereInput
    orderBy?: EssayVersionOrderByWithAggregationInput | EssayVersionOrderByWithAggregationInput[]
    by: EssayVersionScalarFieldEnum[] | EssayVersionScalarFieldEnum
    having?: EssayVersionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EssayVersionCountAggregateInputType | true
    _avg?: EssayVersionAvgAggregateInputType
    _sum?: EssayVersionSumAggregateInputType
    _min?: EssayVersionMinAggregateInputType
    _max?: EssayVersionMaxAggregateInputType
  }

  export type EssayVersionGroupByOutputType = {
    id: string
    essayId: string
    content: string
    wordCount: number
    label: string
    timestamp: Date
    isAutoSave: boolean
    changesSinceLastVersion: string | null
    _count: EssayVersionCountAggregateOutputType | null
    _avg: EssayVersionAvgAggregateOutputType | null
    _sum: EssayVersionSumAggregateOutputType | null
    _min: EssayVersionMinAggregateOutputType | null
    _max: EssayVersionMaxAggregateOutputType | null
  }

  type GetEssayVersionGroupByPayload<T extends EssayVersionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EssayVersionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EssayVersionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EssayVersionGroupByOutputType[P]>
            : GetScalarType<T[P], EssayVersionGroupByOutputType[P]>
        }
      >
    >


  export type EssayVersionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    content?: boolean
    wordCount?: boolean
    label?: boolean
    timestamp?: boolean
    isAutoSave?: boolean
    changesSinceLastVersion?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    aiResults?: boolean | EssayVersion$aiResultsArgs<ExtArgs>
    _count?: boolean | EssayVersionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["essayVersion"]>

  export type EssayVersionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    content?: boolean
    wordCount?: boolean
    label?: boolean
    timestamp?: boolean
    isAutoSave?: boolean
    changesSinceLastVersion?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["essayVersion"]>

  export type EssayVersionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    content?: boolean
    wordCount?: boolean
    label?: boolean
    timestamp?: boolean
    isAutoSave?: boolean
    changesSinceLastVersion?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["essayVersion"]>

  export type EssayVersionSelectScalar = {
    id?: boolean
    essayId?: boolean
    content?: boolean
    wordCount?: boolean
    label?: boolean
    timestamp?: boolean
    isAutoSave?: boolean
    changesSinceLastVersion?: boolean
  }

  export type EssayVersionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "essayId" | "content" | "wordCount" | "label" | "timestamp" | "isAutoSave" | "changesSinceLastVersion", ExtArgs["result"]["essayVersion"]>
  export type EssayVersionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    aiResults?: boolean | EssayVersion$aiResultsArgs<ExtArgs>
    _count?: boolean | EssayVersionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EssayVersionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
  }
  export type EssayVersionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
  }

  export type $EssayVersionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EssayVersion"
    objects: {
      essay: Prisma.$EssayPayload<ExtArgs>
      aiResults: Prisma.$AIResultPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      essayId: string
      content: string
      wordCount: number
      label: string
      timestamp: Date
      isAutoSave: boolean
      changesSinceLastVersion: string | null
    }, ExtArgs["result"]["essayVersion"]>
    composites: {}
  }

  type EssayVersionGetPayload<S extends boolean | null | undefined | EssayVersionDefaultArgs> = $Result.GetResult<Prisma.$EssayVersionPayload, S>

  type EssayVersionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EssayVersionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EssayVersionCountAggregateInputType | true
    }

  export interface EssayVersionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EssayVersion'], meta: { name: 'EssayVersion' } }
    /**
     * Find zero or one EssayVersion that matches the filter.
     * @param {EssayVersionFindUniqueArgs} args - Arguments to find a EssayVersion
     * @example
     * // Get one EssayVersion
     * const essayVersion = await prisma.essayVersion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EssayVersionFindUniqueArgs>(args: SelectSubset<T, EssayVersionFindUniqueArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EssayVersion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EssayVersionFindUniqueOrThrowArgs} args - Arguments to find a EssayVersion
     * @example
     * // Get one EssayVersion
     * const essayVersion = await prisma.essayVersion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EssayVersionFindUniqueOrThrowArgs>(args: SelectSubset<T, EssayVersionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssayVersion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayVersionFindFirstArgs} args - Arguments to find a EssayVersion
     * @example
     * // Get one EssayVersion
     * const essayVersion = await prisma.essayVersion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EssayVersionFindFirstArgs>(args?: SelectSubset<T, EssayVersionFindFirstArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssayVersion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayVersionFindFirstOrThrowArgs} args - Arguments to find a EssayVersion
     * @example
     * // Get one EssayVersion
     * const essayVersion = await prisma.essayVersion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EssayVersionFindFirstOrThrowArgs>(args?: SelectSubset<T, EssayVersionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EssayVersions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayVersionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EssayVersions
     * const essayVersions = await prisma.essayVersion.findMany()
     * 
     * // Get first 10 EssayVersions
     * const essayVersions = await prisma.essayVersion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const essayVersionWithIdOnly = await prisma.essayVersion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EssayVersionFindManyArgs>(args?: SelectSubset<T, EssayVersionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EssayVersion.
     * @param {EssayVersionCreateArgs} args - Arguments to create a EssayVersion.
     * @example
     * // Create one EssayVersion
     * const EssayVersion = await prisma.essayVersion.create({
     *   data: {
     *     // ... data to create a EssayVersion
     *   }
     * })
     * 
     */
    create<T extends EssayVersionCreateArgs>(args: SelectSubset<T, EssayVersionCreateArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EssayVersions.
     * @param {EssayVersionCreateManyArgs} args - Arguments to create many EssayVersions.
     * @example
     * // Create many EssayVersions
     * const essayVersion = await prisma.essayVersion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EssayVersionCreateManyArgs>(args?: SelectSubset<T, EssayVersionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EssayVersions and returns the data saved in the database.
     * @param {EssayVersionCreateManyAndReturnArgs} args - Arguments to create many EssayVersions.
     * @example
     * // Create many EssayVersions
     * const essayVersion = await prisma.essayVersion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EssayVersions and only return the `id`
     * const essayVersionWithIdOnly = await prisma.essayVersion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EssayVersionCreateManyAndReturnArgs>(args?: SelectSubset<T, EssayVersionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EssayVersion.
     * @param {EssayVersionDeleteArgs} args - Arguments to delete one EssayVersion.
     * @example
     * // Delete one EssayVersion
     * const EssayVersion = await prisma.essayVersion.delete({
     *   where: {
     *     // ... filter to delete one EssayVersion
     *   }
     * })
     * 
     */
    delete<T extends EssayVersionDeleteArgs>(args: SelectSubset<T, EssayVersionDeleteArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EssayVersion.
     * @param {EssayVersionUpdateArgs} args - Arguments to update one EssayVersion.
     * @example
     * // Update one EssayVersion
     * const essayVersion = await prisma.essayVersion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EssayVersionUpdateArgs>(args: SelectSubset<T, EssayVersionUpdateArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EssayVersions.
     * @param {EssayVersionDeleteManyArgs} args - Arguments to filter EssayVersions to delete.
     * @example
     * // Delete a few EssayVersions
     * const { count } = await prisma.essayVersion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EssayVersionDeleteManyArgs>(args?: SelectSubset<T, EssayVersionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssayVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayVersionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EssayVersions
     * const essayVersion = await prisma.essayVersion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EssayVersionUpdateManyArgs>(args: SelectSubset<T, EssayVersionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssayVersions and returns the data updated in the database.
     * @param {EssayVersionUpdateManyAndReturnArgs} args - Arguments to update many EssayVersions.
     * @example
     * // Update many EssayVersions
     * const essayVersion = await prisma.essayVersion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EssayVersions and only return the `id`
     * const essayVersionWithIdOnly = await prisma.essayVersion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EssayVersionUpdateManyAndReturnArgs>(args: SelectSubset<T, EssayVersionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EssayVersion.
     * @param {EssayVersionUpsertArgs} args - Arguments to update or create a EssayVersion.
     * @example
     * // Update or create a EssayVersion
     * const essayVersion = await prisma.essayVersion.upsert({
     *   create: {
     *     // ... data to create a EssayVersion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EssayVersion we want to update
     *   }
     * })
     */
    upsert<T extends EssayVersionUpsertArgs>(args: SelectSubset<T, EssayVersionUpsertArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EssayVersions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayVersionCountArgs} args - Arguments to filter EssayVersions to count.
     * @example
     * // Count the number of EssayVersions
     * const count = await prisma.essayVersion.count({
     *   where: {
     *     // ... the filter for the EssayVersions we want to count
     *   }
     * })
    **/
    count<T extends EssayVersionCountArgs>(
      args?: Subset<T, EssayVersionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EssayVersionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EssayVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayVersionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EssayVersionAggregateArgs>(args: Subset<T, EssayVersionAggregateArgs>): Prisma.PrismaPromise<GetEssayVersionAggregateType<T>>

    /**
     * Group by EssayVersion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayVersionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EssayVersionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EssayVersionGroupByArgs['orderBy'] }
        : { orderBy?: EssayVersionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EssayVersionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEssayVersionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EssayVersion model
   */
  readonly fields: EssayVersionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EssayVersion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EssayVersionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    essay<T extends EssayDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EssayDefaultArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    aiResults<T extends EssayVersion$aiResultsArgs<ExtArgs> = {}>(args?: Subset<T, EssayVersion$aiResultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EssayVersion model
   */
  interface EssayVersionFieldRefs {
    readonly id: FieldRef<"EssayVersion", 'String'>
    readonly essayId: FieldRef<"EssayVersion", 'String'>
    readonly content: FieldRef<"EssayVersion", 'String'>
    readonly wordCount: FieldRef<"EssayVersion", 'Int'>
    readonly label: FieldRef<"EssayVersion", 'String'>
    readonly timestamp: FieldRef<"EssayVersion", 'DateTime'>
    readonly isAutoSave: FieldRef<"EssayVersion", 'Boolean'>
    readonly changesSinceLastVersion: FieldRef<"EssayVersion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EssayVersion findUnique
   */
  export type EssayVersionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * Filter, which EssayVersion to fetch.
     */
    where: EssayVersionWhereUniqueInput
  }

  /**
   * EssayVersion findUniqueOrThrow
   */
  export type EssayVersionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * Filter, which EssayVersion to fetch.
     */
    where: EssayVersionWhereUniqueInput
  }

  /**
   * EssayVersion findFirst
   */
  export type EssayVersionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * Filter, which EssayVersion to fetch.
     */
    where?: EssayVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayVersions to fetch.
     */
    orderBy?: EssayVersionOrderByWithRelationInput | EssayVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssayVersions.
     */
    cursor?: EssayVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssayVersions.
     */
    distinct?: EssayVersionScalarFieldEnum | EssayVersionScalarFieldEnum[]
  }

  /**
   * EssayVersion findFirstOrThrow
   */
  export type EssayVersionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * Filter, which EssayVersion to fetch.
     */
    where?: EssayVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayVersions to fetch.
     */
    orderBy?: EssayVersionOrderByWithRelationInput | EssayVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssayVersions.
     */
    cursor?: EssayVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayVersions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssayVersions.
     */
    distinct?: EssayVersionScalarFieldEnum | EssayVersionScalarFieldEnum[]
  }

  /**
   * EssayVersion findMany
   */
  export type EssayVersionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * Filter, which EssayVersions to fetch.
     */
    where?: EssayVersionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayVersions to fetch.
     */
    orderBy?: EssayVersionOrderByWithRelationInput | EssayVersionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EssayVersions.
     */
    cursor?: EssayVersionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayVersions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayVersions.
     */
    skip?: number
    distinct?: EssayVersionScalarFieldEnum | EssayVersionScalarFieldEnum[]
  }

  /**
   * EssayVersion create
   */
  export type EssayVersionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * The data needed to create a EssayVersion.
     */
    data: XOR<EssayVersionCreateInput, EssayVersionUncheckedCreateInput>
  }

  /**
   * EssayVersion createMany
   */
  export type EssayVersionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EssayVersions.
     */
    data: EssayVersionCreateManyInput | EssayVersionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EssayVersion createManyAndReturn
   */
  export type EssayVersionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * The data used to create many EssayVersions.
     */
    data: EssayVersionCreateManyInput | EssayVersionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssayVersion update
   */
  export type EssayVersionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * The data needed to update a EssayVersion.
     */
    data: XOR<EssayVersionUpdateInput, EssayVersionUncheckedUpdateInput>
    /**
     * Choose, which EssayVersion to update.
     */
    where: EssayVersionWhereUniqueInput
  }

  /**
   * EssayVersion updateMany
   */
  export type EssayVersionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EssayVersions.
     */
    data: XOR<EssayVersionUpdateManyMutationInput, EssayVersionUncheckedUpdateManyInput>
    /**
     * Filter which EssayVersions to update
     */
    where?: EssayVersionWhereInput
    /**
     * Limit how many EssayVersions to update.
     */
    limit?: number
  }

  /**
   * EssayVersion updateManyAndReturn
   */
  export type EssayVersionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * The data used to update EssayVersions.
     */
    data: XOR<EssayVersionUpdateManyMutationInput, EssayVersionUncheckedUpdateManyInput>
    /**
     * Filter which EssayVersions to update
     */
    where?: EssayVersionWhereInput
    /**
     * Limit how many EssayVersions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssayVersion upsert
   */
  export type EssayVersionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * The filter to search for the EssayVersion to update in case it exists.
     */
    where: EssayVersionWhereUniqueInput
    /**
     * In case the EssayVersion found by the `where` argument doesn't exist, create a new EssayVersion with this data.
     */
    create: XOR<EssayVersionCreateInput, EssayVersionUncheckedCreateInput>
    /**
     * In case the EssayVersion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EssayVersionUpdateInput, EssayVersionUncheckedUpdateInput>
  }

  /**
   * EssayVersion delete
   */
  export type EssayVersionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    /**
     * Filter which EssayVersion to delete.
     */
    where: EssayVersionWhereUniqueInput
  }

  /**
   * EssayVersion deleteMany
   */
  export type EssayVersionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssayVersions to delete
     */
    where?: EssayVersionWhereInput
    /**
     * Limit how many EssayVersions to delete.
     */
    limit?: number
  }

  /**
   * EssayVersion.aiResults
   */
  export type EssayVersion$aiResultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    where?: AIResultWhereInput
    orderBy?: AIResultOrderByWithRelationInput | AIResultOrderByWithRelationInput[]
    cursor?: AIResultWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AIResultScalarFieldEnum | AIResultScalarFieldEnum[]
  }

  /**
   * EssayVersion without action
   */
  export type EssayVersionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
  }


  /**
   * Model AIResult
   */

  export type AggregateAIResult = {
    _count: AIResultCountAggregateOutputType | null
    _avg: AIResultAvgAggregateOutputType | null
    _sum: AIResultSumAggregateOutputType | null
    _min: AIResultMinAggregateOutputType | null
    _max: AIResultMaxAggregateOutputType | null
  }

  export type AIResultAvgAggregateOutputType = {
    overallScore: number | null
    processingTime: number | null
    readabilityScore: number | null
    sentenceCount: number | null
    paragraphCount: number | null
    avgSentenceLength: number | null
    complexWordCount: number | null
    passiveVoiceCount: number | null
    structureScore: number | null
    contentRelevance: number | null
    narrativeFlow: number | null
    leadershipEmphasis: number | null
    specificityScore: number | null
    grammarIssues: number | null
  }

  export type AIResultSumAggregateOutputType = {
    overallScore: number | null
    processingTime: number | null
    readabilityScore: number | null
    sentenceCount: number | null
    paragraphCount: number | null
    avgSentenceLength: number | null
    complexWordCount: number | null
    passiveVoiceCount: number | null
    structureScore: number | null
    contentRelevance: number | null
    narrativeFlow: number | null
    leadershipEmphasis: number | null
    specificityScore: number | null
    grammarIssues: number | null
  }

  export type AIResultMinAggregateOutputType = {
    id: string | null
    essayId: string | null
    essayVersionId: string | null
    analysisType: string | null
    overallScore: number | null
    suggestions: string | null
    strengths: string | null
    improvements: string | null
    warnings: string | null
    aiProvider: string | null
    modelUsed: string | null
    promptVersion: string | null
    status: string | null
    processingTime: number | null
    errorMessage: string | null
    readabilityScore: number | null
    sentenceCount: number | null
    paragraphCount: number | null
    avgSentenceLength: number | null
    complexWordCount: number | null
    passiveVoiceCount: number | null
    structureScore: number | null
    contentRelevance: number | null
    narrativeFlow: number | null
    leadershipEmphasis: number | null
    specificityScore: number | null
    grammarIssues: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AIResultMaxAggregateOutputType = {
    id: string | null
    essayId: string | null
    essayVersionId: string | null
    analysisType: string | null
    overallScore: number | null
    suggestions: string | null
    strengths: string | null
    improvements: string | null
    warnings: string | null
    aiProvider: string | null
    modelUsed: string | null
    promptVersion: string | null
    status: string | null
    processingTime: number | null
    errorMessage: string | null
    readabilityScore: number | null
    sentenceCount: number | null
    paragraphCount: number | null
    avgSentenceLength: number | null
    complexWordCount: number | null
    passiveVoiceCount: number | null
    structureScore: number | null
    contentRelevance: number | null
    narrativeFlow: number | null
    leadershipEmphasis: number | null
    specificityScore: number | null
    grammarIssues: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AIResultCountAggregateOutputType = {
    id: number
    essayId: number
    essayVersionId: number
    analysisType: number
    overallScore: number
    suggestions: number
    strengths: number
    improvements: number
    warnings: number
    aiProvider: number
    modelUsed: number
    promptVersion: number
    status: number
    processingTime: number
    errorMessage: number
    readabilityScore: number
    sentenceCount: number
    paragraphCount: number
    avgSentenceLength: number
    complexWordCount: number
    passiveVoiceCount: number
    structureScore: number
    contentRelevance: number
    narrativeFlow: number
    leadershipEmphasis: number
    specificityScore: number
    grammarIssues: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AIResultAvgAggregateInputType = {
    overallScore?: true
    processingTime?: true
    readabilityScore?: true
    sentenceCount?: true
    paragraphCount?: true
    avgSentenceLength?: true
    complexWordCount?: true
    passiveVoiceCount?: true
    structureScore?: true
    contentRelevance?: true
    narrativeFlow?: true
    leadershipEmphasis?: true
    specificityScore?: true
    grammarIssues?: true
  }

  export type AIResultSumAggregateInputType = {
    overallScore?: true
    processingTime?: true
    readabilityScore?: true
    sentenceCount?: true
    paragraphCount?: true
    avgSentenceLength?: true
    complexWordCount?: true
    passiveVoiceCount?: true
    structureScore?: true
    contentRelevance?: true
    narrativeFlow?: true
    leadershipEmphasis?: true
    specificityScore?: true
    grammarIssues?: true
  }

  export type AIResultMinAggregateInputType = {
    id?: true
    essayId?: true
    essayVersionId?: true
    analysisType?: true
    overallScore?: true
    suggestions?: true
    strengths?: true
    improvements?: true
    warnings?: true
    aiProvider?: true
    modelUsed?: true
    promptVersion?: true
    status?: true
    processingTime?: true
    errorMessage?: true
    readabilityScore?: true
    sentenceCount?: true
    paragraphCount?: true
    avgSentenceLength?: true
    complexWordCount?: true
    passiveVoiceCount?: true
    structureScore?: true
    contentRelevance?: true
    narrativeFlow?: true
    leadershipEmphasis?: true
    specificityScore?: true
    grammarIssues?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AIResultMaxAggregateInputType = {
    id?: true
    essayId?: true
    essayVersionId?: true
    analysisType?: true
    overallScore?: true
    suggestions?: true
    strengths?: true
    improvements?: true
    warnings?: true
    aiProvider?: true
    modelUsed?: true
    promptVersion?: true
    status?: true
    processingTime?: true
    errorMessage?: true
    readabilityScore?: true
    sentenceCount?: true
    paragraphCount?: true
    avgSentenceLength?: true
    complexWordCount?: true
    passiveVoiceCount?: true
    structureScore?: true
    contentRelevance?: true
    narrativeFlow?: true
    leadershipEmphasis?: true
    specificityScore?: true
    grammarIssues?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AIResultCountAggregateInputType = {
    id?: true
    essayId?: true
    essayVersionId?: true
    analysisType?: true
    overallScore?: true
    suggestions?: true
    strengths?: true
    improvements?: true
    warnings?: true
    aiProvider?: true
    modelUsed?: true
    promptVersion?: true
    status?: true
    processingTime?: true
    errorMessage?: true
    readabilityScore?: true
    sentenceCount?: true
    paragraphCount?: true
    avgSentenceLength?: true
    complexWordCount?: true
    passiveVoiceCount?: true
    structureScore?: true
    contentRelevance?: true
    narrativeFlow?: true
    leadershipEmphasis?: true
    specificityScore?: true
    grammarIssues?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AIResultAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIResult to aggregate.
     */
    where?: AIResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIResults to fetch.
     */
    orderBy?: AIResultOrderByWithRelationInput | AIResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AIResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIResults.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AIResults
    **/
    _count?: true | AIResultCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AIResultAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AIResultSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AIResultMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AIResultMaxAggregateInputType
  }

  export type GetAIResultAggregateType<T extends AIResultAggregateArgs> = {
        [P in keyof T & keyof AggregateAIResult]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAIResult[P]>
      : GetScalarType<T[P], AggregateAIResult[P]>
  }




  export type AIResultGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIResultWhereInput
    orderBy?: AIResultOrderByWithAggregationInput | AIResultOrderByWithAggregationInput[]
    by: AIResultScalarFieldEnum[] | AIResultScalarFieldEnum
    having?: AIResultScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AIResultCountAggregateInputType | true
    _avg?: AIResultAvgAggregateInputType
    _sum?: AIResultSumAggregateInputType
    _min?: AIResultMinAggregateInputType
    _max?: AIResultMaxAggregateInputType
  }

  export type AIResultGroupByOutputType = {
    id: string
    essayId: string
    essayVersionId: string | null
    analysisType: string
    overallScore: number | null
    suggestions: string
    strengths: string | null
    improvements: string | null
    warnings: string | null
    aiProvider: string
    modelUsed: string | null
    promptVersion: string | null
    status: string
    processingTime: number | null
    errorMessage: string | null
    readabilityScore: number | null
    sentenceCount: number | null
    paragraphCount: number | null
    avgSentenceLength: number | null
    complexWordCount: number | null
    passiveVoiceCount: number | null
    structureScore: number | null
    contentRelevance: number | null
    narrativeFlow: number | null
    leadershipEmphasis: number | null
    specificityScore: number | null
    grammarIssues: number | null
    createdAt: Date
    updatedAt: Date
    _count: AIResultCountAggregateOutputType | null
    _avg: AIResultAvgAggregateOutputType | null
    _sum: AIResultSumAggregateOutputType | null
    _min: AIResultMinAggregateOutputType | null
    _max: AIResultMaxAggregateOutputType | null
  }

  type GetAIResultGroupByPayload<T extends AIResultGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AIResultGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AIResultGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AIResultGroupByOutputType[P]>
            : GetScalarType<T[P], AIResultGroupByOutputType[P]>
        }
      >
    >


  export type AIResultSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    essayVersionId?: boolean
    analysisType?: boolean
    overallScore?: boolean
    suggestions?: boolean
    strengths?: boolean
    improvements?: boolean
    warnings?: boolean
    aiProvider?: boolean
    modelUsed?: boolean
    promptVersion?: boolean
    status?: boolean
    processingTime?: boolean
    errorMessage?: boolean
    readabilityScore?: boolean
    sentenceCount?: boolean
    paragraphCount?: boolean
    avgSentenceLength?: boolean
    complexWordCount?: boolean
    passiveVoiceCount?: boolean
    structureScore?: boolean
    contentRelevance?: boolean
    narrativeFlow?: boolean
    leadershipEmphasis?: boolean
    specificityScore?: boolean
    grammarIssues?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    essayVersion?: boolean | AIResult$essayVersionArgs<ExtArgs>
  }, ExtArgs["result"]["aIResult"]>

  export type AIResultSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    essayVersionId?: boolean
    analysisType?: boolean
    overallScore?: boolean
    suggestions?: boolean
    strengths?: boolean
    improvements?: boolean
    warnings?: boolean
    aiProvider?: boolean
    modelUsed?: boolean
    promptVersion?: boolean
    status?: boolean
    processingTime?: boolean
    errorMessage?: boolean
    readabilityScore?: boolean
    sentenceCount?: boolean
    paragraphCount?: boolean
    avgSentenceLength?: boolean
    complexWordCount?: boolean
    passiveVoiceCount?: boolean
    structureScore?: boolean
    contentRelevance?: boolean
    narrativeFlow?: boolean
    leadershipEmphasis?: boolean
    specificityScore?: boolean
    grammarIssues?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    essayVersion?: boolean | AIResult$essayVersionArgs<ExtArgs>
  }, ExtArgs["result"]["aIResult"]>

  export type AIResultSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    essayVersionId?: boolean
    analysisType?: boolean
    overallScore?: boolean
    suggestions?: boolean
    strengths?: boolean
    improvements?: boolean
    warnings?: boolean
    aiProvider?: boolean
    modelUsed?: boolean
    promptVersion?: boolean
    status?: boolean
    processingTime?: boolean
    errorMessage?: boolean
    readabilityScore?: boolean
    sentenceCount?: boolean
    paragraphCount?: boolean
    avgSentenceLength?: boolean
    complexWordCount?: boolean
    passiveVoiceCount?: boolean
    structureScore?: boolean
    contentRelevance?: boolean
    narrativeFlow?: boolean
    leadershipEmphasis?: boolean
    specificityScore?: boolean
    grammarIssues?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    essayVersion?: boolean | AIResult$essayVersionArgs<ExtArgs>
  }, ExtArgs["result"]["aIResult"]>

  export type AIResultSelectScalar = {
    id?: boolean
    essayId?: boolean
    essayVersionId?: boolean
    analysisType?: boolean
    overallScore?: boolean
    suggestions?: boolean
    strengths?: boolean
    improvements?: boolean
    warnings?: boolean
    aiProvider?: boolean
    modelUsed?: boolean
    promptVersion?: boolean
    status?: boolean
    processingTime?: boolean
    errorMessage?: boolean
    readabilityScore?: boolean
    sentenceCount?: boolean
    paragraphCount?: boolean
    avgSentenceLength?: boolean
    complexWordCount?: boolean
    passiveVoiceCount?: boolean
    structureScore?: boolean
    contentRelevance?: boolean
    narrativeFlow?: boolean
    leadershipEmphasis?: boolean
    specificityScore?: boolean
    grammarIssues?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AIResultOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "essayId" | "essayVersionId" | "analysisType" | "overallScore" | "suggestions" | "strengths" | "improvements" | "warnings" | "aiProvider" | "modelUsed" | "promptVersion" | "status" | "processingTime" | "errorMessage" | "readabilityScore" | "sentenceCount" | "paragraphCount" | "avgSentenceLength" | "complexWordCount" | "passiveVoiceCount" | "structureScore" | "contentRelevance" | "narrativeFlow" | "leadershipEmphasis" | "specificityScore" | "grammarIssues" | "createdAt" | "updatedAt", ExtArgs["result"]["aIResult"]>
  export type AIResultInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    essayVersion?: boolean | AIResult$essayVersionArgs<ExtArgs>
  }
  export type AIResultIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    essayVersion?: boolean | AIResult$essayVersionArgs<ExtArgs>
  }
  export type AIResultIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    essayVersion?: boolean | AIResult$essayVersionArgs<ExtArgs>
  }

  export type $AIResultPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AIResult"
    objects: {
      essay: Prisma.$EssayPayload<ExtArgs>
      essayVersion: Prisma.$EssayVersionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      essayId: string
      essayVersionId: string | null
      analysisType: string
      overallScore: number | null
      suggestions: string
      strengths: string | null
      improvements: string | null
      warnings: string | null
      aiProvider: string
      modelUsed: string | null
      promptVersion: string | null
      status: string
      processingTime: number | null
      errorMessage: string | null
      readabilityScore: number | null
      sentenceCount: number | null
      paragraphCount: number | null
      avgSentenceLength: number | null
      complexWordCount: number | null
      passiveVoiceCount: number | null
      structureScore: number | null
      contentRelevance: number | null
      narrativeFlow: number | null
      leadershipEmphasis: number | null
      specificityScore: number | null
      grammarIssues: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["aIResult"]>
    composites: {}
  }

  type AIResultGetPayload<S extends boolean | null | undefined | AIResultDefaultArgs> = $Result.GetResult<Prisma.$AIResultPayload, S>

  type AIResultCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AIResultFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AIResultCountAggregateInputType | true
    }

  export interface AIResultDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AIResult'], meta: { name: 'AIResult' } }
    /**
     * Find zero or one AIResult that matches the filter.
     * @param {AIResultFindUniqueArgs} args - Arguments to find a AIResult
     * @example
     * // Get one AIResult
     * const aIResult = await prisma.aIResult.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AIResultFindUniqueArgs>(args: SelectSubset<T, AIResultFindUniqueArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AIResult that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AIResultFindUniqueOrThrowArgs} args - Arguments to find a AIResult
     * @example
     * // Get one AIResult
     * const aIResult = await prisma.aIResult.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AIResultFindUniqueOrThrowArgs>(args: SelectSubset<T, AIResultFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AIResult that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIResultFindFirstArgs} args - Arguments to find a AIResult
     * @example
     * // Get one AIResult
     * const aIResult = await prisma.aIResult.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AIResultFindFirstArgs>(args?: SelectSubset<T, AIResultFindFirstArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AIResult that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIResultFindFirstOrThrowArgs} args - Arguments to find a AIResult
     * @example
     * // Get one AIResult
     * const aIResult = await prisma.aIResult.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AIResultFindFirstOrThrowArgs>(args?: SelectSubset<T, AIResultFindFirstOrThrowArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AIResults that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIResultFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AIResults
     * const aIResults = await prisma.aIResult.findMany()
     * 
     * // Get first 10 AIResults
     * const aIResults = await prisma.aIResult.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aIResultWithIdOnly = await prisma.aIResult.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AIResultFindManyArgs>(args?: SelectSubset<T, AIResultFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AIResult.
     * @param {AIResultCreateArgs} args - Arguments to create a AIResult.
     * @example
     * // Create one AIResult
     * const AIResult = await prisma.aIResult.create({
     *   data: {
     *     // ... data to create a AIResult
     *   }
     * })
     * 
     */
    create<T extends AIResultCreateArgs>(args: SelectSubset<T, AIResultCreateArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AIResults.
     * @param {AIResultCreateManyArgs} args - Arguments to create many AIResults.
     * @example
     * // Create many AIResults
     * const aIResult = await prisma.aIResult.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AIResultCreateManyArgs>(args?: SelectSubset<T, AIResultCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AIResults and returns the data saved in the database.
     * @param {AIResultCreateManyAndReturnArgs} args - Arguments to create many AIResults.
     * @example
     * // Create many AIResults
     * const aIResult = await prisma.aIResult.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AIResults and only return the `id`
     * const aIResultWithIdOnly = await prisma.aIResult.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AIResultCreateManyAndReturnArgs>(args?: SelectSubset<T, AIResultCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AIResult.
     * @param {AIResultDeleteArgs} args - Arguments to delete one AIResult.
     * @example
     * // Delete one AIResult
     * const AIResult = await prisma.aIResult.delete({
     *   where: {
     *     // ... filter to delete one AIResult
     *   }
     * })
     * 
     */
    delete<T extends AIResultDeleteArgs>(args: SelectSubset<T, AIResultDeleteArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AIResult.
     * @param {AIResultUpdateArgs} args - Arguments to update one AIResult.
     * @example
     * // Update one AIResult
     * const aIResult = await prisma.aIResult.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AIResultUpdateArgs>(args: SelectSubset<T, AIResultUpdateArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AIResults.
     * @param {AIResultDeleteManyArgs} args - Arguments to filter AIResults to delete.
     * @example
     * // Delete a few AIResults
     * const { count } = await prisma.aIResult.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AIResultDeleteManyArgs>(args?: SelectSubset<T, AIResultDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AIResults.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIResultUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AIResults
     * const aIResult = await prisma.aIResult.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AIResultUpdateManyArgs>(args: SelectSubset<T, AIResultUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AIResults and returns the data updated in the database.
     * @param {AIResultUpdateManyAndReturnArgs} args - Arguments to update many AIResults.
     * @example
     * // Update many AIResults
     * const aIResult = await prisma.aIResult.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AIResults and only return the `id`
     * const aIResultWithIdOnly = await prisma.aIResult.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AIResultUpdateManyAndReturnArgs>(args: SelectSubset<T, AIResultUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AIResult.
     * @param {AIResultUpsertArgs} args - Arguments to update or create a AIResult.
     * @example
     * // Update or create a AIResult
     * const aIResult = await prisma.aIResult.upsert({
     *   create: {
     *     // ... data to create a AIResult
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AIResult we want to update
     *   }
     * })
     */
    upsert<T extends AIResultUpsertArgs>(args: SelectSubset<T, AIResultUpsertArgs<ExtArgs>>): Prisma__AIResultClient<$Result.GetResult<Prisma.$AIResultPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AIResults.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIResultCountArgs} args - Arguments to filter AIResults to count.
     * @example
     * // Count the number of AIResults
     * const count = await prisma.aIResult.count({
     *   where: {
     *     // ... the filter for the AIResults we want to count
     *   }
     * })
    **/
    count<T extends AIResultCountArgs>(
      args?: Subset<T, AIResultCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AIResultCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AIResult.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIResultAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AIResultAggregateArgs>(args: Subset<T, AIResultAggregateArgs>): Prisma.PrismaPromise<GetAIResultAggregateType<T>>

    /**
     * Group by AIResult.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIResultGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AIResultGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AIResultGroupByArgs['orderBy'] }
        : { orderBy?: AIResultGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AIResultGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAIResultGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AIResult model
   */
  readonly fields: AIResultFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AIResult.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AIResultClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    essay<T extends EssayDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EssayDefaultArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    essayVersion<T extends AIResult$essayVersionArgs<ExtArgs> = {}>(args?: Subset<T, AIResult$essayVersionArgs<ExtArgs>>): Prisma__EssayVersionClient<$Result.GetResult<Prisma.$EssayVersionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AIResult model
   */
  interface AIResultFieldRefs {
    readonly id: FieldRef<"AIResult", 'String'>
    readonly essayId: FieldRef<"AIResult", 'String'>
    readonly essayVersionId: FieldRef<"AIResult", 'String'>
    readonly analysisType: FieldRef<"AIResult", 'String'>
    readonly overallScore: FieldRef<"AIResult", 'Float'>
    readonly suggestions: FieldRef<"AIResult", 'String'>
    readonly strengths: FieldRef<"AIResult", 'String'>
    readonly improvements: FieldRef<"AIResult", 'String'>
    readonly warnings: FieldRef<"AIResult", 'String'>
    readonly aiProvider: FieldRef<"AIResult", 'String'>
    readonly modelUsed: FieldRef<"AIResult", 'String'>
    readonly promptVersion: FieldRef<"AIResult", 'String'>
    readonly status: FieldRef<"AIResult", 'String'>
    readonly processingTime: FieldRef<"AIResult", 'Int'>
    readonly errorMessage: FieldRef<"AIResult", 'String'>
    readonly readabilityScore: FieldRef<"AIResult", 'Float'>
    readonly sentenceCount: FieldRef<"AIResult", 'Int'>
    readonly paragraphCount: FieldRef<"AIResult", 'Int'>
    readonly avgSentenceLength: FieldRef<"AIResult", 'Float'>
    readonly complexWordCount: FieldRef<"AIResult", 'Int'>
    readonly passiveVoiceCount: FieldRef<"AIResult", 'Int'>
    readonly structureScore: FieldRef<"AIResult", 'Float'>
    readonly contentRelevance: FieldRef<"AIResult", 'Float'>
    readonly narrativeFlow: FieldRef<"AIResult", 'Float'>
    readonly leadershipEmphasis: FieldRef<"AIResult", 'Float'>
    readonly specificityScore: FieldRef<"AIResult", 'Float'>
    readonly grammarIssues: FieldRef<"AIResult", 'Int'>
    readonly createdAt: FieldRef<"AIResult", 'DateTime'>
    readonly updatedAt: FieldRef<"AIResult", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AIResult findUnique
   */
  export type AIResultFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * Filter, which AIResult to fetch.
     */
    where: AIResultWhereUniqueInput
  }

  /**
   * AIResult findUniqueOrThrow
   */
  export type AIResultFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * Filter, which AIResult to fetch.
     */
    where: AIResultWhereUniqueInput
  }

  /**
   * AIResult findFirst
   */
  export type AIResultFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * Filter, which AIResult to fetch.
     */
    where?: AIResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIResults to fetch.
     */
    orderBy?: AIResultOrderByWithRelationInput | AIResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIResults.
     */
    cursor?: AIResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIResults.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIResults.
     */
    distinct?: AIResultScalarFieldEnum | AIResultScalarFieldEnum[]
  }

  /**
   * AIResult findFirstOrThrow
   */
  export type AIResultFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * Filter, which AIResult to fetch.
     */
    where?: AIResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIResults to fetch.
     */
    orderBy?: AIResultOrderByWithRelationInput | AIResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIResults.
     */
    cursor?: AIResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIResults.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIResults.
     */
    distinct?: AIResultScalarFieldEnum | AIResultScalarFieldEnum[]
  }

  /**
   * AIResult findMany
   */
  export type AIResultFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * Filter, which AIResults to fetch.
     */
    where?: AIResultWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIResults to fetch.
     */
    orderBy?: AIResultOrderByWithRelationInput | AIResultOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AIResults.
     */
    cursor?: AIResultWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIResults from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIResults.
     */
    skip?: number
    distinct?: AIResultScalarFieldEnum | AIResultScalarFieldEnum[]
  }

  /**
   * AIResult create
   */
  export type AIResultCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * The data needed to create a AIResult.
     */
    data: XOR<AIResultCreateInput, AIResultUncheckedCreateInput>
  }

  /**
   * AIResult createMany
   */
  export type AIResultCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AIResults.
     */
    data: AIResultCreateManyInput | AIResultCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AIResult createManyAndReturn
   */
  export type AIResultCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * The data used to create many AIResults.
     */
    data: AIResultCreateManyInput | AIResultCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AIResult update
   */
  export type AIResultUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * The data needed to update a AIResult.
     */
    data: XOR<AIResultUpdateInput, AIResultUncheckedUpdateInput>
    /**
     * Choose, which AIResult to update.
     */
    where: AIResultWhereUniqueInput
  }

  /**
   * AIResult updateMany
   */
  export type AIResultUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AIResults.
     */
    data: XOR<AIResultUpdateManyMutationInput, AIResultUncheckedUpdateManyInput>
    /**
     * Filter which AIResults to update
     */
    where?: AIResultWhereInput
    /**
     * Limit how many AIResults to update.
     */
    limit?: number
  }

  /**
   * AIResult updateManyAndReturn
   */
  export type AIResultUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * The data used to update AIResults.
     */
    data: XOR<AIResultUpdateManyMutationInput, AIResultUncheckedUpdateManyInput>
    /**
     * Filter which AIResults to update
     */
    where?: AIResultWhereInput
    /**
     * Limit how many AIResults to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AIResult upsert
   */
  export type AIResultUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * The filter to search for the AIResult to update in case it exists.
     */
    where: AIResultWhereUniqueInput
    /**
     * In case the AIResult found by the `where` argument doesn't exist, create a new AIResult with this data.
     */
    create: XOR<AIResultCreateInput, AIResultUncheckedCreateInput>
    /**
     * In case the AIResult was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AIResultUpdateInput, AIResultUncheckedUpdateInput>
  }

  /**
   * AIResult delete
   */
  export type AIResultDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
    /**
     * Filter which AIResult to delete.
     */
    where: AIResultWhereUniqueInput
  }

  /**
   * AIResult deleteMany
   */
  export type AIResultDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIResults to delete
     */
    where?: AIResultWhereInput
    /**
     * Limit how many AIResults to delete.
     */
    limit?: number
  }

  /**
   * AIResult.essayVersion
   */
  export type AIResult$essayVersionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayVersion
     */
    select?: EssayVersionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayVersion
     */
    omit?: EssayVersionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayVersionInclude<ExtArgs> | null
    where?: EssayVersionWhereInput
  }

  /**
   * AIResult without action
   */
  export type AIResultDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIResult
     */
    select?: AIResultSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AIResult
     */
    omit?: AIResultOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIResultInclude<ExtArgs> | null
  }


  /**
   * Model EssayCompletionLog
   */

  export type AggregateEssayCompletionLog = {
    _count: EssayCompletionLogCountAggregateOutputType | null
    _avg: EssayCompletionLogAvgAggregateOutputType | null
    _sum: EssayCompletionLogSumAggregateOutputType | null
    _min: EssayCompletionLogMinAggregateOutputType | null
    _max: EssayCompletionLogMaxAggregateOutputType | null
  }

  export type EssayCompletionLogAvgAggregateOutputType = {
    wordCountAtCompletion: number | null
    wordLimit: number | null
  }

  export type EssayCompletionLogSumAggregateOutputType = {
    wordCountAtCompletion: number | null
    wordLimit: number | null
  }

  export type EssayCompletionLogMinAggregateOutputType = {
    id: string | null
    essayId: string | null
    userId: string | null
    completedAt: Date | null
    wordCountAtCompletion: number | null
    wordLimit: number | null
    completionMethod: string | null
    previousStatus: string | null
    programId: string | null
    universityId: string | null
    essayPromptTitle: string | null
    createdAt: Date | null
  }

  export type EssayCompletionLogMaxAggregateOutputType = {
    id: string | null
    essayId: string | null
    userId: string | null
    completedAt: Date | null
    wordCountAtCompletion: number | null
    wordLimit: number | null
    completionMethod: string | null
    previousStatus: string | null
    programId: string | null
    universityId: string | null
    essayPromptTitle: string | null
    createdAt: Date | null
  }

  export type EssayCompletionLogCountAggregateOutputType = {
    id: number
    essayId: number
    userId: number
    completedAt: number
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: number
    previousStatus: number
    programId: number
    universityId: number
    essayPromptTitle: number
    createdAt: number
    _all: number
  }


  export type EssayCompletionLogAvgAggregateInputType = {
    wordCountAtCompletion?: true
    wordLimit?: true
  }

  export type EssayCompletionLogSumAggregateInputType = {
    wordCountAtCompletion?: true
    wordLimit?: true
  }

  export type EssayCompletionLogMinAggregateInputType = {
    id?: true
    essayId?: true
    userId?: true
    completedAt?: true
    wordCountAtCompletion?: true
    wordLimit?: true
    completionMethod?: true
    previousStatus?: true
    programId?: true
    universityId?: true
    essayPromptTitle?: true
    createdAt?: true
  }

  export type EssayCompletionLogMaxAggregateInputType = {
    id?: true
    essayId?: true
    userId?: true
    completedAt?: true
    wordCountAtCompletion?: true
    wordLimit?: true
    completionMethod?: true
    previousStatus?: true
    programId?: true
    universityId?: true
    essayPromptTitle?: true
    createdAt?: true
  }

  export type EssayCompletionLogCountAggregateInputType = {
    id?: true
    essayId?: true
    userId?: true
    completedAt?: true
    wordCountAtCompletion?: true
    wordLimit?: true
    completionMethod?: true
    previousStatus?: true
    programId?: true
    universityId?: true
    essayPromptTitle?: true
    createdAt?: true
    _all?: true
  }

  export type EssayCompletionLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssayCompletionLog to aggregate.
     */
    where?: EssayCompletionLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayCompletionLogs to fetch.
     */
    orderBy?: EssayCompletionLogOrderByWithRelationInput | EssayCompletionLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EssayCompletionLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayCompletionLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayCompletionLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EssayCompletionLogs
    **/
    _count?: true | EssayCompletionLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EssayCompletionLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EssayCompletionLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EssayCompletionLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EssayCompletionLogMaxAggregateInputType
  }

  export type GetEssayCompletionLogAggregateType<T extends EssayCompletionLogAggregateArgs> = {
        [P in keyof T & keyof AggregateEssayCompletionLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEssayCompletionLog[P]>
      : GetScalarType<T[P], AggregateEssayCompletionLog[P]>
  }




  export type EssayCompletionLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EssayCompletionLogWhereInput
    orderBy?: EssayCompletionLogOrderByWithAggregationInput | EssayCompletionLogOrderByWithAggregationInput[]
    by: EssayCompletionLogScalarFieldEnum[] | EssayCompletionLogScalarFieldEnum
    having?: EssayCompletionLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EssayCompletionLogCountAggregateInputType | true
    _avg?: EssayCompletionLogAvgAggregateInputType
    _sum?: EssayCompletionLogSumAggregateInputType
    _min?: EssayCompletionLogMinAggregateInputType
    _max?: EssayCompletionLogMaxAggregateInputType
  }

  export type EssayCompletionLogGroupByOutputType = {
    id: string
    essayId: string
    userId: string | null
    completedAt: Date
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus: string | null
    programId: string | null
    universityId: string | null
    essayPromptTitle: string | null
    createdAt: Date
    _count: EssayCompletionLogCountAggregateOutputType | null
    _avg: EssayCompletionLogAvgAggregateOutputType | null
    _sum: EssayCompletionLogSumAggregateOutputType | null
    _min: EssayCompletionLogMinAggregateOutputType | null
    _max: EssayCompletionLogMaxAggregateOutputType | null
  }

  type GetEssayCompletionLogGroupByPayload<T extends EssayCompletionLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EssayCompletionLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EssayCompletionLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EssayCompletionLogGroupByOutputType[P]>
            : GetScalarType<T[P], EssayCompletionLogGroupByOutputType[P]>
        }
      >
    >


  export type EssayCompletionLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    userId?: boolean
    completedAt?: boolean
    wordCountAtCompletion?: boolean
    wordLimit?: boolean
    completionMethod?: boolean
    previousStatus?: boolean
    programId?: boolean
    universityId?: boolean
    essayPromptTitle?: boolean
    createdAt?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    user?: boolean | EssayCompletionLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["essayCompletionLog"]>

  export type EssayCompletionLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    userId?: boolean
    completedAt?: boolean
    wordCountAtCompletion?: boolean
    wordLimit?: boolean
    completionMethod?: boolean
    previousStatus?: boolean
    programId?: boolean
    universityId?: boolean
    essayPromptTitle?: boolean
    createdAt?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    user?: boolean | EssayCompletionLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["essayCompletionLog"]>

  export type EssayCompletionLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    essayId?: boolean
    userId?: boolean
    completedAt?: boolean
    wordCountAtCompletion?: boolean
    wordLimit?: boolean
    completionMethod?: boolean
    previousStatus?: boolean
    programId?: boolean
    universityId?: boolean
    essayPromptTitle?: boolean
    createdAt?: boolean
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    user?: boolean | EssayCompletionLog$userArgs<ExtArgs>
  }, ExtArgs["result"]["essayCompletionLog"]>

  export type EssayCompletionLogSelectScalar = {
    id?: boolean
    essayId?: boolean
    userId?: boolean
    completedAt?: boolean
    wordCountAtCompletion?: boolean
    wordLimit?: boolean
    completionMethod?: boolean
    previousStatus?: boolean
    programId?: boolean
    universityId?: boolean
    essayPromptTitle?: boolean
    createdAt?: boolean
  }

  export type EssayCompletionLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "essayId" | "userId" | "completedAt" | "wordCountAtCompletion" | "wordLimit" | "completionMethod" | "previousStatus" | "programId" | "universityId" | "essayPromptTitle" | "createdAt", ExtArgs["result"]["essayCompletionLog"]>
  export type EssayCompletionLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    user?: boolean | EssayCompletionLog$userArgs<ExtArgs>
  }
  export type EssayCompletionLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    user?: boolean | EssayCompletionLog$userArgs<ExtArgs>
  }
  export type EssayCompletionLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    essay?: boolean | EssayDefaultArgs<ExtArgs>
    user?: boolean | EssayCompletionLog$userArgs<ExtArgs>
  }

  export type $EssayCompletionLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EssayCompletionLog"
    objects: {
      essay: Prisma.$EssayPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      essayId: string
      userId: string | null
      completedAt: Date
      wordCountAtCompletion: number
      wordLimit: number
      completionMethod: string
      previousStatus: string | null
      programId: string | null
      universityId: string | null
      essayPromptTitle: string | null
      createdAt: Date
    }, ExtArgs["result"]["essayCompletionLog"]>
    composites: {}
  }

  type EssayCompletionLogGetPayload<S extends boolean | null | undefined | EssayCompletionLogDefaultArgs> = $Result.GetResult<Prisma.$EssayCompletionLogPayload, S>

  type EssayCompletionLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EssayCompletionLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EssayCompletionLogCountAggregateInputType | true
    }

  export interface EssayCompletionLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EssayCompletionLog'], meta: { name: 'EssayCompletionLog' } }
    /**
     * Find zero or one EssayCompletionLog that matches the filter.
     * @param {EssayCompletionLogFindUniqueArgs} args - Arguments to find a EssayCompletionLog
     * @example
     * // Get one EssayCompletionLog
     * const essayCompletionLog = await prisma.essayCompletionLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EssayCompletionLogFindUniqueArgs>(args: SelectSubset<T, EssayCompletionLogFindUniqueArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EssayCompletionLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EssayCompletionLogFindUniqueOrThrowArgs} args - Arguments to find a EssayCompletionLog
     * @example
     * // Get one EssayCompletionLog
     * const essayCompletionLog = await prisma.essayCompletionLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EssayCompletionLogFindUniqueOrThrowArgs>(args: SelectSubset<T, EssayCompletionLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssayCompletionLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCompletionLogFindFirstArgs} args - Arguments to find a EssayCompletionLog
     * @example
     * // Get one EssayCompletionLog
     * const essayCompletionLog = await prisma.essayCompletionLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EssayCompletionLogFindFirstArgs>(args?: SelectSubset<T, EssayCompletionLogFindFirstArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EssayCompletionLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCompletionLogFindFirstOrThrowArgs} args - Arguments to find a EssayCompletionLog
     * @example
     * // Get one EssayCompletionLog
     * const essayCompletionLog = await prisma.essayCompletionLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EssayCompletionLogFindFirstOrThrowArgs>(args?: SelectSubset<T, EssayCompletionLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EssayCompletionLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCompletionLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EssayCompletionLogs
     * const essayCompletionLogs = await prisma.essayCompletionLog.findMany()
     * 
     * // Get first 10 EssayCompletionLogs
     * const essayCompletionLogs = await prisma.essayCompletionLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const essayCompletionLogWithIdOnly = await prisma.essayCompletionLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EssayCompletionLogFindManyArgs>(args?: SelectSubset<T, EssayCompletionLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EssayCompletionLog.
     * @param {EssayCompletionLogCreateArgs} args - Arguments to create a EssayCompletionLog.
     * @example
     * // Create one EssayCompletionLog
     * const EssayCompletionLog = await prisma.essayCompletionLog.create({
     *   data: {
     *     // ... data to create a EssayCompletionLog
     *   }
     * })
     * 
     */
    create<T extends EssayCompletionLogCreateArgs>(args: SelectSubset<T, EssayCompletionLogCreateArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EssayCompletionLogs.
     * @param {EssayCompletionLogCreateManyArgs} args - Arguments to create many EssayCompletionLogs.
     * @example
     * // Create many EssayCompletionLogs
     * const essayCompletionLog = await prisma.essayCompletionLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EssayCompletionLogCreateManyArgs>(args?: SelectSubset<T, EssayCompletionLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EssayCompletionLogs and returns the data saved in the database.
     * @param {EssayCompletionLogCreateManyAndReturnArgs} args - Arguments to create many EssayCompletionLogs.
     * @example
     * // Create many EssayCompletionLogs
     * const essayCompletionLog = await prisma.essayCompletionLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EssayCompletionLogs and only return the `id`
     * const essayCompletionLogWithIdOnly = await prisma.essayCompletionLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EssayCompletionLogCreateManyAndReturnArgs>(args?: SelectSubset<T, EssayCompletionLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EssayCompletionLog.
     * @param {EssayCompletionLogDeleteArgs} args - Arguments to delete one EssayCompletionLog.
     * @example
     * // Delete one EssayCompletionLog
     * const EssayCompletionLog = await prisma.essayCompletionLog.delete({
     *   where: {
     *     // ... filter to delete one EssayCompletionLog
     *   }
     * })
     * 
     */
    delete<T extends EssayCompletionLogDeleteArgs>(args: SelectSubset<T, EssayCompletionLogDeleteArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EssayCompletionLog.
     * @param {EssayCompletionLogUpdateArgs} args - Arguments to update one EssayCompletionLog.
     * @example
     * // Update one EssayCompletionLog
     * const essayCompletionLog = await prisma.essayCompletionLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EssayCompletionLogUpdateArgs>(args: SelectSubset<T, EssayCompletionLogUpdateArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EssayCompletionLogs.
     * @param {EssayCompletionLogDeleteManyArgs} args - Arguments to filter EssayCompletionLogs to delete.
     * @example
     * // Delete a few EssayCompletionLogs
     * const { count } = await prisma.essayCompletionLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EssayCompletionLogDeleteManyArgs>(args?: SelectSubset<T, EssayCompletionLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssayCompletionLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCompletionLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EssayCompletionLogs
     * const essayCompletionLog = await prisma.essayCompletionLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EssayCompletionLogUpdateManyArgs>(args: SelectSubset<T, EssayCompletionLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EssayCompletionLogs and returns the data updated in the database.
     * @param {EssayCompletionLogUpdateManyAndReturnArgs} args - Arguments to update many EssayCompletionLogs.
     * @example
     * // Update many EssayCompletionLogs
     * const essayCompletionLog = await prisma.essayCompletionLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EssayCompletionLogs and only return the `id`
     * const essayCompletionLogWithIdOnly = await prisma.essayCompletionLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EssayCompletionLogUpdateManyAndReturnArgs>(args: SelectSubset<T, EssayCompletionLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EssayCompletionLog.
     * @param {EssayCompletionLogUpsertArgs} args - Arguments to update or create a EssayCompletionLog.
     * @example
     * // Update or create a EssayCompletionLog
     * const essayCompletionLog = await prisma.essayCompletionLog.upsert({
     *   create: {
     *     // ... data to create a EssayCompletionLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EssayCompletionLog we want to update
     *   }
     * })
     */
    upsert<T extends EssayCompletionLogUpsertArgs>(args: SelectSubset<T, EssayCompletionLogUpsertArgs<ExtArgs>>): Prisma__EssayCompletionLogClient<$Result.GetResult<Prisma.$EssayCompletionLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EssayCompletionLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCompletionLogCountArgs} args - Arguments to filter EssayCompletionLogs to count.
     * @example
     * // Count the number of EssayCompletionLogs
     * const count = await prisma.essayCompletionLog.count({
     *   where: {
     *     // ... the filter for the EssayCompletionLogs we want to count
     *   }
     * })
    **/
    count<T extends EssayCompletionLogCountArgs>(
      args?: Subset<T, EssayCompletionLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EssayCompletionLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EssayCompletionLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCompletionLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EssayCompletionLogAggregateArgs>(args: Subset<T, EssayCompletionLogAggregateArgs>): Prisma.PrismaPromise<GetEssayCompletionLogAggregateType<T>>

    /**
     * Group by EssayCompletionLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EssayCompletionLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EssayCompletionLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EssayCompletionLogGroupByArgs['orderBy'] }
        : { orderBy?: EssayCompletionLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EssayCompletionLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEssayCompletionLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EssayCompletionLog model
   */
  readonly fields: EssayCompletionLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EssayCompletionLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EssayCompletionLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    essay<T extends EssayDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EssayDefaultArgs<ExtArgs>>): Prisma__EssayClient<$Result.GetResult<Prisma.$EssayPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends EssayCompletionLog$userArgs<ExtArgs> = {}>(args?: Subset<T, EssayCompletionLog$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EssayCompletionLog model
   */
  interface EssayCompletionLogFieldRefs {
    readonly id: FieldRef<"EssayCompletionLog", 'String'>
    readonly essayId: FieldRef<"EssayCompletionLog", 'String'>
    readonly userId: FieldRef<"EssayCompletionLog", 'String'>
    readonly completedAt: FieldRef<"EssayCompletionLog", 'DateTime'>
    readonly wordCountAtCompletion: FieldRef<"EssayCompletionLog", 'Int'>
    readonly wordLimit: FieldRef<"EssayCompletionLog", 'Int'>
    readonly completionMethod: FieldRef<"EssayCompletionLog", 'String'>
    readonly previousStatus: FieldRef<"EssayCompletionLog", 'String'>
    readonly programId: FieldRef<"EssayCompletionLog", 'String'>
    readonly universityId: FieldRef<"EssayCompletionLog", 'String'>
    readonly essayPromptTitle: FieldRef<"EssayCompletionLog", 'String'>
    readonly createdAt: FieldRef<"EssayCompletionLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EssayCompletionLog findUnique
   */
  export type EssayCompletionLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * Filter, which EssayCompletionLog to fetch.
     */
    where: EssayCompletionLogWhereUniqueInput
  }

  /**
   * EssayCompletionLog findUniqueOrThrow
   */
  export type EssayCompletionLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * Filter, which EssayCompletionLog to fetch.
     */
    where: EssayCompletionLogWhereUniqueInput
  }

  /**
   * EssayCompletionLog findFirst
   */
  export type EssayCompletionLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * Filter, which EssayCompletionLog to fetch.
     */
    where?: EssayCompletionLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayCompletionLogs to fetch.
     */
    orderBy?: EssayCompletionLogOrderByWithRelationInput | EssayCompletionLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssayCompletionLogs.
     */
    cursor?: EssayCompletionLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayCompletionLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayCompletionLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssayCompletionLogs.
     */
    distinct?: EssayCompletionLogScalarFieldEnum | EssayCompletionLogScalarFieldEnum[]
  }

  /**
   * EssayCompletionLog findFirstOrThrow
   */
  export type EssayCompletionLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * Filter, which EssayCompletionLog to fetch.
     */
    where?: EssayCompletionLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayCompletionLogs to fetch.
     */
    orderBy?: EssayCompletionLogOrderByWithRelationInput | EssayCompletionLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EssayCompletionLogs.
     */
    cursor?: EssayCompletionLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayCompletionLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayCompletionLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EssayCompletionLogs.
     */
    distinct?: EssayCompletionLogScalarFieldEnum | EssayCompletionLogScalarFieldEnum[]
  }

  /**
   * EssayCompletionLog findMany
   */
  export type EssayCompletionLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * Filter, which EssayCompletionLogs to fetch.
     */
    where?: EssayCompletionLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EssayCompletionLogs to fetch.
     */
    orderBy?: EssayCompletionLogOrderByWithRelationInput | EssayCompletionLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EssayCompletionLogs.
     */
    cursor?: EssayCompletionLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EssayCompletionLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EssayCompletionLogs.
     */
    skip?: number
    distinct?: EssayCompletionLogScalarFieldEnum | EssayCompletionLogScalarFieldEnum[]
  }

  /**
   * EssayCompletionLog create
   */
  export type EssayCompletionLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * The data needed to create a EssayCompletionLog.
     */
    data: XOR<EssayCompletionLogCreateInput, EssayCompletionLogUncheckedCreateInput>
  }

  /**
   * EssayCompletionLog createMany
   */
  export type EssayCompletionLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EssayCompletionLogs.
     */
    data: EssayCompletionLogCreateManyInput | EssayCompletionLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EssayCompletionLog createManyAndReturn
   */
  export type EssayCompletionLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * The data used to create many EssayCompletionLogs.
     */
    data: EssayCompletionLogCreateManyInput | EssayCompletionLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssayCompletionLog update
   */
  export type EssayCompletionLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * The data needed to update a EssayCompletionLog.
     */
    data: XOR<EssayCompletionLogUpdateInput, EssayCompletionLogUncheckedUpdateInput>
    /**
     * Choose, which EssayCompletionLog to update.
     */
    where: EssayCompletionLogWhereUniqueInput
  }

  /**
   * EssayCompletionLog updateMany
   */
  export type EssayCompletionLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EssayCompletionLogs.
     */
    data: XOR<EssayCompletionLogUpdateManyMutationInput, EssayCompletionLogUncheckedUpdateManyInput>
    /**
     * Filter which EssayCompletionLogs to update
     */
    where?: EssayCompletionLogWhereInput
    /**
     * Limit how many EssayCompletionLogs to update.
     */
    limit?: number
  }

  /**
   * EssayCompletionLog updateManyAndReturn
   */
  export type EssayCompletionLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * The data used to update EssayCompletionLogs.
     */
    data: XOR<EssayCompletionLogUpdateManyMutationInput, EssayCompletionLogUncheckedUpdateManyInput>
    /**
     * Filter which EssayCompletionLogs to update
     */
    where?: EssayCompletionLogWhereInput
    /**
     * Limit how many EssayCompletionLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EssayCompletionLog upsert
   */
  export type EssayCompletionLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * The filter to search for the EssayCompletionLog to update in case it exists.
     */
    where: EssayCompletionLogWhereUniqueInput
    /**
     * In case the EssayCompletionLog found by the `where` argument doesn't exist, create a new EssayCompletionLog with this data.
     */
    create: XOR<EssayCompletionLogCreateInput, EssayCompletionLogUncheckedCreateInput>
    /**
     * In case the EssayCompletionLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EssayCompletionLogUpdateInput, EssayCompletionLogUncheckedUpdateInput>
  }

  /**
   * EssayCompletionLog delete
   */
  export type EssayCompletionLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
    /**
     * Filter which EssayCompletionLog to delete.
     */
    where: EssayCompletionLogWhereUniqueInput
  }

  /**
   * EssayCompletionLog deleteMany
   */
  export type EssayCompletionLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EssayCompletionLogs to delete
     */
    where?: EssayCompletionLogWhereInput
    /**
     * Limit how many EssayCompletionLogs to delete.
     */
    limit?: number
  }

  /**
   * EssayCompletionLog.user
   */
  export type EssayCompletionLog$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * EssayCompletionLog without action
   */
  export type EssayCompletionLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EssayCompletionLog
     */
    select?: EssayCompletionLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EssayCompletionLog
     */
    omit?: EssayCompletionLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EssayCompletionLogInclude<ExtArgs> | null
  }


  /**
   * Model CalendarEvent
   */

  export type AggregateCalendarEvent = {
    _count: CalendarEventCountAggregateOutputType | null
    _min: CalendarEventMinAggregateOutputType | null
    _max: CalendarEventMaxAggregateOutputType | null
  }

  export type CalendarEventMinAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    description: string | null
    location: string | null
    startDate: Date | null
    endDate: Date | null
    timezone: string | null
    isAllDay: boolean | null
    eventType: string | null
    eventStatus: string | null
    priority: string | null
    universityId: string | null
    programId: string | null
    applicationId: string | null
    admissionId: string | null
    intakeId: string | null
    admissionDeadlineId: string | null
    interviewId: string | null
    scholarshipId: string | null
    isRecurring: boolean | null
    recurringPattern: string | null
    parentEventId: string | null
    hasReminders: boolean | null
    isSystemGenerated: boolean | null
    color: string | null
    isVisible: boolean | null
    completionStatus: string | null
    completedAt: Date | null
    completionNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    lastModifiedBy: string | null
  }

  export type CalendarEventMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    title: string | null
    description: string | null
    location: string | null
    startDate: Date | null
    endDate: Date | null
    timezone: string | null
    isAllDay: boolean | null
    eventType: string | null
    eventStatus: string | null
    priority: string | null
    universityId: string | null
    programId: string | null
    applicationId: string | null
    admissionId: string | null
    intakeId: string | null
    admissionDeadlineId: string | null
    interviewId: string | null
    scholarshipId: string | null
    isRecurring: boolean | null
    recurringPattern: string | null
    parentEventId: string | null
    hasReminders: boolean | null
    isSystemGenerated: boolean | null
    color: string | null
    isVisible: boolean | null
    completionStatus: string | null
    completedAt: Date | null
    completionNotes: string | null
    createdAt: Date | null
    updatedAt: Date | null
    lastModifiedBy: string | null
  }

  export type CalendarEventCountAggregateOutputType = {
    id: number
    userId: number
    title: number
    description: number
    location: number
    startDate: number
    endDate: number
    timezone: number
    isAllDay: number
    eventType: number
    eventStatus: number
    priority: number
    universityId: number
    programId: number
    applicationId: number
    admissionId: number
    intakeId: number
    admissionDeadlineId: number
    interviewId: number
    scholarshipId: number
    isRecurring: number
    recurringPattern: number
    parentEventId: number
    hasReminders: number
    isSystemGenerated: number
    color: number
    isVisible: number
    completionStatus: number
    completedAt: number
    completionNotes: number
    createdAt: number
    updatedAt: number
    lastModifiedBy: number
    _all: number
  }


  export type CalendarEventMinAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    location?: true
    startDate?: true
    endDate?: true
    timezone?: true
    isAllDay?: true
    eventType?: true
    eventStatus?: true
    priority?: true
    universityId?: true
    programId?: true
    applicationId?: true
    admissionId?: true
    intakeId?: true
    admissionDeadlineId?: true
    interviewId?: true
    scholarshipId?: true
    isRecurring?: true
    recurringPattern?: true
    parentEventId?: true
    hasReminders?: true
    isSystemGenerated?: true
    color?: true
    isVisible?: true
    completionStatus?: true
    completedAt?: true
    completionNotes?: true
    createdAt?: true
    updatedAt?: true
    lastModifiedBy?: true
  }

  export type CalendarEventMaxAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    location?: true
    startDate?: true
    endDate?: true
    timezone?: true
    isAllDay?: true
    eventType?: true
    eventStatus?: true
    priority?: true
    universityId?: true
    programId?: true
    applicationId?: true
    admissionId?: true
    intakeId?: true
    admissionDeadlineId?: true
    interviewId?: true
    scholarshipId?: true
    isRecurring?: true
    recurringPattern?: true
    parentEventId?: true
    hasReminders?: true
    isSystemGenerated?: true
    color?: true
    isVisible?: true
    completionStatus?: true
    completedAt?: true
    completionNotes?: true
    createdAt?: true
    updatedAt?: true
    lastModifiedBy?: true
  }

  export type CalendarEventCountAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    location?: true
    startDate?: true
    endDate?: true
    timezone?: true
    isAllDay?: true
    eventType?: true
    eventStatus?: true
    priority?: true
    universityId?: true
    programId?: true
    applicationId?: true
    admissionId?: true
    intakeId?: true
    admissionDeadlineId?: true
    interviewId?: true
    scholarshipId?: true
    isRecurring?: true
    recurringPattern?: true
    parentEventId?: true
    hasReminders?: true
    isSystemGenerated?: true
    color?: true
    isVisible?: true
    completionStatus?: true
    completedAt?: true
    completionNotes?: true
    createdAt?: true
    updatedAt?: true
    lastModifiedBy?: true
    _all?: true
  }

  export type CalendarEventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalendarEvent to aggregate.
     */
    where?: CalendarEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalendarEvents to fetch.
     */
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CalendarEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalendarEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalendarEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CalendarEvents
    **/
    _count?: true | CalendarEventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalendarEventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalendarEventMaxAggregateInputType
  }

  export type GetCalendarEventAggregateType<T extends CalendarEventAggregateArgs> = {
        [P in keyof T & keyof AggregateCalendarEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalendarEvent[P]>
      : GetScalarType<T[P], AggregateCalendarEvent[P]>
  }




  export type CalendarEventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalendarEventWhereInput
    orderBy?: CalendarEventOrderByWithAggregationInput | CalendarEventOrderByWithAggregationInput[]
    by: CalendarEventScalarFieldEnum[] | CalendarEventScalarFieldEnum
    having?: CalendarEventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalendarEventCountAggregateInputType | true
    _min?: CalendarEventMinAggregateInputType
    _max?: CalendarEventMaxAggregateInputType
  }

  export type CalendarEventGroupByOutputType = {
    id: string
    userId: string | null
    title: string
    description: string | null
    location: string | null
    startDate: Date
    endDate: Date
    timezone: string
    isAllDay: boolean
    eventType: string
    eventStatus: string
    priority: string
    universityId: string | null
    programId: string | null
    applicationId: string | null
    admissionId: string | null
    intakeId: string | null
    admissionDeadlineId: string | null
    interviewId: string | null
    scholarshipId: string | null
    isRecurring: boolean
    recurringPattern: string | null
    parentEventId: string | null
    hasReminders: boolean
    isSystemGenerated: boolean
    color: string | null
    isVisible: boolean
    completionStatus: string
    completedAt: Date | null
    completionNotes: string | null
    createdAt: Date
    updatedAt: Date
    lastModifiedBy: string | null
    _count: CalendarEventCountAggregateOutputType | null
    _min: CalendarEventMinAggregateOutputType | null
    _max: CalendarEventMaxAggregateOutputType | null
  }

  type GetCalendarEventGroupByPayload<T extends CalendarEventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalendarEventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalendarEventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalendarEventGroupByOutputType[P]>
            : GetScalarType<T[P], CalendarEventGroupByOutputType[P]>
        }
      >
    >


  export type CalendarEventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    timezone?: boolean
    isAllDay?: boolean
    eventType?: boolean
    eventStatus?: boolean
    priority?: boolean
    universityId?: boolean
    programId?: boolean
    applicationId?: boolean
    admissionId?: boolean
    intakeId?: boolean
    admissionDeadlineId?: boolean
    interviewId?: boolean
    scholarshipId?: boolean
    isRecurring?: boolean
    recurringPattern?: boolean
    parentEventId?: boolean
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: boolean
    isVisible?: boolean
    completionStatus?: boolean
    completedAt?: boolean
    completionNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastModifiedBy?: boolean
    user?: boolean | CalendarEvent$userArgs<ExtArgs>
    university?: boolean | CalendarEvent$universityArgs<ExtArgs>
    program?: boolean | CalendarEvent$programArgs<ExtArgs>
    application?: boolean | CalendarEvent$applicationArgs<ExtArgs>
    admission?: boolean | CalendarEvent$admissionArgs<ExtArgs>
    intake?: boolean | CalendarEvent$intakeArgs<ExtArgs>
    admissionDeadline?: boolean | CalendarEvent$admissionDeadlineArgs<ExtArgs>
    interview?: boolean | CalendarEvent$interviewArgs<ExtArgs>
    scholarship?: boolean | CalendarEvent$scholarshipArgs<ExtArgs>
    reminders?: boolean | CalendarEvent$remindersArgs<ExtArgs>
    _count?: boolean | CalendarEventCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calendarEvent"]>

  export type CalendarEventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    timezone?: boolean
    isAllDay?: boolean
    eventType?: boolean
    eventStatus?: boolean
    priority?: boolean
    universityId?: boolean
    programId?: boolean
    applicationId?: boolean
    admissionId?: boolean
    intakeId?: boolean
    admissionDeadlineId?: boolean
    interviewId?: boolean
    scholarshipId?: boolean
    isRecurring?: boolean
    recurringPattern?: boolean
    parentEventId?: boolean
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: boolean
    isVisible?: boolean
    completionStatus?: boolean
    completedAt?: boolean
    completionNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastModifiedBy?: boolean
    user?: boolean | CalendarEvent$userArgs<ExtArgs>
    university?: boolean | CalendarEvent$universityArgs<ExtArgs>
    program?: boolean | CalendarEvent$programArgs<ExtArgs>
    application?: boolean | CalendarEvent$applicationArgs<ExtArgs>
    admission?: boolean | CalendarEvent$admissionArgs<ExtArgs>
    intake?: boolean | CalendarEvent$intakeArgs<ExtArgs>
    admissionDeadline?: boolean | CalendarEvent$admissionDeadlineArgs<ExtArgs>
    interview?: boolean | CalendarEvent$interviewArgs<ExtArgs>
    scholarship?: boolean | CalendarEvent$scholarshipArgs<ExtArgs>
  }, ExtArgs["result"]["calendarEvent"]>

  export type CalendarEventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    timezone?: boolean
    isAllDay?: boolean
    eventType?: boolean
    eventStatus?: boolean
    priority?: boolean
    universityId?: boolean
    programId?: boolean
    applicationId?: boolean
    admissionId?: boolean
    intakeId?: boolean
    admissionDeadlineId?: boolean
    interviewId?: boolean
    scholarshipId?: boolean
    isRecurring?: boolean
    recurringPattern?: boolean
    parentEventId?: boolean
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: boolean
    isVisible?: boolean
    completionStatus?: boolean
    completedAt?: boolean
    completionNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastModifiedBy?: boolean
    user?: boolean | CalendarEvent$userArgs<ExtArgs>
    university?: boolean | CalendarEvent$universityArgs<ExtArgs>
    program?: boolean | CalendarEvent$programArgs<ExtArgs>
    application?: boolean | CalendarEvent$applicationArgs<ExtArgs>
    admission?: boolean | CalendarEvent$admissionArgs<ExtArgs>
    intake?: boolean | CalendarEvent$intakeArgs<ExtArgs>
    admissionDeadline?: boolean | CalendarEvent$admissionDeadlineArgs<ExtArgs>
    interview?: boolean | CalendarEvent$interviewArgs<ExtArgs>
    scholarship?: boolean | CalendarEvent$scholarshipArgs<ExtArgs>
  }, ExtArgs["result"]["calendarEvent"]>

  export type CalendarEventSelectScalar = {
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    timezone?: boolean
    isAllDay?: boolean
    eventType?: boolean
    eventStatus?: boolean
    priority?: boolean
    universityId?: boolean
    programId?: boolean
    applicationId?: boolean
    admissionId?: boolean
    intakeId?: boolean
    admissionDeadlineId?: boolean
    interviewId?: boolean
    scholarshipId?: boolean
    isRecurring?: boolean
    recurringPattern?: boolean
    parentEventId?: boolean
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: boolean
    isVisible?: boolean
    completionStatus?: boolean
    completedAt?: boolean
    completionNotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastModifiedBy?: boolean
  }

  export type CalendarEventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "title" | "description" | "location" | "startDate" | "endDate" | "timezone" | "isAllDay" | "eventType" | "eventStatus" | "priority" | "universityId" | "programId" | "applicationId" | "admissionId" | "intakeId" | "admissionDeadlineId" | "interviewId" | "scholarshipId" | "isRecurring" | "recurringPattern" | "parentEventId" | "hasReminders" | "isSystemGenerated" | "color" | "isVisible" | "completionStatus" | "completedAt" | "completionNotes" | "createdAt" | "updatedAt" | "lastModifiedBy", ExtArgs["result"]["calendarEvent"]>
  export type CalendarEventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | CalendarEvent$userArgs<ExtArgs>
    university?: boolean | CalendarEvent$universityArgs<ExtArgs>
    program?: boolean | CalendarEvent$programArgs<ExtArgs>
    application?: boolean | CalendarEvent$applicationArgs<ExtArgs>
    admission?: boolean | CalendarEvent$admissionArgs<ExtArgs>
    intake?: boolean | CalendarEvent$intakeArgs<ExtArgs>
    admissionDeadline?: boolean | CalendarEvent$admissionDeadlineArgs<ExtArgs>
    interview?: boolean | CalendarEvent$interviewArgs<ExtArgs>
    scholarship?: boolean | CalendarEvent$scholarshipArgs<ExtArgs>
    reminders?: boolean | CalendarEvent$remindersArgs<ExtArgs>
    _count?: boolean | CalendarEventCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CalendarEventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | CalendarEvent$userArgs<ExtArgs>
    university?: boolean | CalendarEvent$universityArgs<ExtArgs>
    program?: boolean | CalendarEvent$programArgs<ExtArgs>
    application?: boolean | CalendarEvent$applicationArgs<ExtArgs>
    admission?: boolean | CalendarEvent$admissionArgs<ExtArgs>
    intake?: boolean | CalendarEvent$intakeArgs<ExtArgs>
    admissionDeadline?: boolean | CalendarEvent$admissionDeadlineArgs<ExtArgs>
    interview?: boolean | CalendarEvent$interviewArgs<ExtArgs>
    scholarship?: boolean | CalendarEvent$scholarshipArgs<ExtArgs>
  }
  export type CalendarEventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | CalendarEvent$userArgs<ExtArgs>
    university?: boolean | CalendarEvent$universityArgs<ExtArgs>
    program?: boolean | CalendarEvent$programArgs<ExtArgs>
    application?: boolean | CalendarEvent$applicationArgs<ExtArgs>
    admission?: boolean | CalendarEvent$admissionArgs<ExtArgs>
    intake?: boolean | CalendarEvent$intakeArgs<ExtArgs>
    admissionDeadline?: boolean | CalendarEvent$admissionDeadlineArgs<ExtArgs>
    interview?: boolean | CalendarEvent$interviewArgs<ExtArgs>
    scholarship?: boolean | CalendarEvent$scholarshipArgs<ExtArgs>
  }

  export type $CalendarEventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CalendarEvent"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      university: Prisma.$UniversityPayload<ExtArgs> | null
      program: Prisma.$ProgramPayload<ExtArgs> | null
      application: Prisma.$ApplicationPayload<ExtArgs> | null
      admission: Prisma.$AdmissionPayload<ExtArgs> | null
      intake: Prisma.$IntakePayload<ExtArgs> | null
      admissionDeadline: Prisma.$AdmissionDeadlinePayload<ExtArgs> | null
      interview: Prisma.$InterviewPayload<ExtArgs> | null
      scholarship: Prisma.$ScholarshipPayload<ExtArgs> | null
      reminders: Prisma.$EventReminderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      title: string
      description: string | null
      location: string | null
      startDate: Date
      endDate: Date
      timezone: string
      isAllDay: boolean
      eventType: string
      eventStatus: string
      priority: string
      universityId: string | null
      programId: string | null
      applicationId: string | null
      admissionId: string | null
      intakeId: string | null
      admissionDeadlineId: string | null
      interviewId: string | null
      scholarshipId: string | null
      isRecurring: boolean
      recurringPattern: string | null
      parentEventId: string | null
      hasReminders: boolean
      isSystemGenerated: boolean
      color: string | null
      isVisible: boolean
      completionStatus: string
      completedAt: Date | null
      completionNotes: string | null
      createdAt: Date
      updatedAt: Date
      lastModifiedBy: string | null
    }, ExtArgs["result"]["calendarEvent"]>
    composites: {}
  }

  type CalendarEventGetPayload<S extends boolean | null | undefined | CalendarEventDefaultArgs> = $Result.GetResult<Prisma.$CalendarEventPayload, S>

  type CalendarEventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CalendarEventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalendarEventCountAggregateInputType | true
    }

  export interface CalendarEventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CalendarEvent'], meta: { name: 'CalendarEvent' } }
    /**
     * Find zero or one CalendarEvent that matches the filter.
     * @param {CalendarEventFindUniqueArgs} args - Arguments to find a CalendarEvent
     * @example
     * // Get one CalendarEvent
     * const calendarEvent = await prisma.calendarEvent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CalendarEventFindUniqueArgs>(args: SelectSubset<T, CalendarEventFindUniqueArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CalendarEvent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CalendarEventFindUniqueOrThrowArgs} args - Arguments to find a CalendarEvent
     * @example
     * // Get one CalendarEvent
     * const calendarEvent = await prisma.calendarEvent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CalendarEventFindUniqueOrThrowArgs>(args: SelectSubset<T, CalendarEventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalendarEvent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarEventFindFirstArgs} args - Arguments to find a CalendarEvent
     * @example
     * // Get one CalendarEvent
     * const calendarEvent = await prisma.calendarEvent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CalendarEventFindFirstArgs>(args?: SelectSubset<T, CalendarEventFindFirstArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalendarEvent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarEventFindFirstOrThrowArgs} args - Arguments to find a CalendarEvent
     * @example
     * // Get one CalendarEvent
     * const calendarEvent = await prisma.calendarEvent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CalendarEventFindFirstOrThrowArgs>(args?: SelectSubset<T, CalendarEventFindFirstOrThrowArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CalendarEvents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarEventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CalendarEvents
     * const calendarEvents = await prisma.calendarEvent.findMany()
     * 
     * // Get first 10 CalendarEvents
     * const calendarEvents = await prisma.calendarEvent.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const calendarEventWithIdOnly = await prisma.calendarEvent.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CalendarEventFindManyArgs>(args?: SelectSubset<T, CalendarEventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CalendarEvent.
     * @param {CalendarEventCreateArgs} args - Arguments to create a CalendarEvent.
     * @example
     * // Create one CalendarEvent
     * const CalendarEvent = await prisma.calendarEvent.create({
     *   data: {
     *     // ... data to create a CalendarEvent
     *   }
     * })
     * 
     */
    create<T extends CalendarEventCreateArgs>(args: SelectSubset<T, CalendarEventCreateArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CalendarEvents.
     * @param {CalendarEventCreateManyArgs} args - Arguments to create many CalendarEvents.
     * @example
     * // Create many CalendarEvents
     * const calendarEvent = await prisma.calendarEvent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CalendarEventCreateManyArgs>(args?: SelectSubset<T, CalendarEventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CalendarEvents and returns the data saved in the database.
     * @param {CalendarEventCreateManyAndReturnArgs} args - Arguments to create many CalendarEvents.
     * @example
     * // Create many CalendarEvents
     * const calendarEvent = await prisma.calendarEvent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CalendarEvents and only return the `id`
     * const calendarEventWithIdOnly = await prisma.calendarEvent.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CalendarEventCreateManyAndReturnArgs>(args?: SelectSubset<T, CalendarEventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CalendarEvent.
     * @param {CalendarEventDeleteArgs} args - Arguments to delete one CalendarEvent.
     * @example
     * // Delete one CalendarEvent
     * const CalendarEvent = await prisma.calendarEvent.delete({
     *   where: {
     *     // ... filter to delete one CalendarEvent
     *   }
     * })
     * 
     */
    delete<T extends CalendarEventDeleteArgs>(args: SelectSubset<T, CalendarEventDeleteArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CalendarEvent.
     * @param {CalendarEventUpdateArgs} args - Arguments to update one CalendarEvent.
     * @example
     * // Update one CalendarEvent
     * const calendarEvent = await prisma.calendarEvent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CalendarEventUpdateArgs>(args: SelectSubset<T, CalendarEventUpdateArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CalendarEvents.
     * @param {CalendarEventDeleteManyArgs} args - Arguments to filter CalendarEvents to delete.
     * @example
     * // Delete a few CalendarEvents
     * const { count } = await prisma.calendarEvent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CalendarEventDeleteManyArgs>(args?: SelectSubset<T, CalendarEventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalendarEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarEventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CalendarEvents
     * const calendarEvent = await prisma.calendarEvent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CalendarEventUpdateManyArgs>(args: SelectSubset<T, CalendarEventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalendarEvents and returns the data updated in the database.
     * @param {CalendarEventUpdateManyAndReturnArgs} args - Arguments to update many CalendarEvents.
     * @example
     * // Update many CalendarEvents
     * const calendarEvent = await prisma.calendarEvent.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CalendarEvents and only return the `id`
     * const calendarEventWithIdOnly = await prisma.calendarEvent.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CalendarEventUpdateManyAndReturnArgs>(args: SelectSubset<T, CalendarEventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CalendarEvent.
     * @param {CalendarEventUpsertArgs} args - Arguments to update or create a CalendarEvent.
     * @example
     * // Update or create a CalendarEvent
     * const calendarEvent = await prisma.calendarEvent.upsert({
     *   create: {
     *     // ... data to create a CalendarEvent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CalendarEvent we want to update
     *   }
     * })
     */
    upsert<T extends CalendarEventUpsertArgs>(args: SelectSubset<T, CalendarEventUpsertArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CalendarEvents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarEventCountArgs} args - Arguments to filter CalendarEvents to count.
     * @example
     * // Count the number of CalendarEvents
     * const count = await prisma.calendarEvent.count({
     *   where: {
     *     // ... the filter for the CalendarEvents we want to count
     *   }
     * })
    **/
    count<T extends CalendarEventCountArgs>(
      args?: Subset<T, CalendarEventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalendarEventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CalendarEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarEventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalendarEventAggregateArgs>(args: Subset<T, CalendarEventAggregateArgs>): Prisma.PrismaPromise<GetCalendarEventAggregateType<T>>

    /**
     * Group by CalendarEvent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalendarEventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CalendarEventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CalendarEventGroupByArgs['orderBy'] }
        : { orderBy?: CalendarEventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CalendarEventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalendarEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CalendarEvent model
   */
  readonly fields: CalendarEventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CalendarEvent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CalendarEventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends CalendarEvent$userArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    university<T extends CalendarEvent$universityArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$universityArgs<ExtArgs>>): Prisma__UniversityClient<$Result.GetResult<Prisma.$UniversityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    program<T extends CalendarEvent$programArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$programArgs<ExtArgs>>): Prisma__ProgramClient<$Result.GetResult<Prisma.$ProgramPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    application<T extends CalendarEvent$applicationArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$applicationArgs<ExtArgs>>): Prisma__ApplicationClient<$Result.GetResult<Prisma.$ApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    admission<T extends CalendarEvent$admissionArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$admissionArgs<ExtArgs>>): Prisma__AdmissionClient<$Result.GetResult<Prisma.$AdmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    intake<T extends CalendarEvent$intakeArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$intakeArgs<ExtArgs>>): Prisma__IntakeClient<$Result.GetResult<Prisma.$IntakePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    admissionDeadline<T extends CalendarEvent$admissionDeadlineArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$admissionDeadlineArgs<ExtArgs>>): Prisma__AdmissionDeadlineClient<$Result.GetResult<Prisma.$AdmissionDeadlinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    interview<T extends CalendarEvent$interviewArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$interviewArgs<ExtArgs>>): Prisma__InterviewClient<$Result.GetResult<Prisma.$InterviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    scholarship<T extends CalendarEvent$scholarshipArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$scholarshipArgs<ExtArgs>>): Prisma__ScholarshipClient<$Result.GetResult<Prisma.$ScholarshipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    reminders<T extends CalendarEvent$remindersArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEvent$remindersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CalendarEvent model
   */
  interface CalendarEventFieldRefs {
    readonly id: FieldRef<"CalendarEvent", 'String'>
    readonly userId: FieldRef<"CalendarEvent", 'String'>
    readonly title: FieldRef<"CalendarEvent", 'String'>
    readonly description: FieldRef<"CalendarEvent", 'String'>
    readonly location: FieldRef<"CalendarEvent", 'String'>
    readonly startDate: FieldRef<"CalendarEvent", 'DateTime'>
    readonly endDate: FieldRef<"CalendarEvent", 'DateTime'>
    readonly timezone: FieldRef<"CalendarEvent", 'String'>
    readonly isAllDay: FieldRef<"CalendarEvent", 'Boolean'>
    readonly eventType: FieldRef<"CalendarEvent", 'String'>
    readonly eventStatus: FieldRef<"CalendarEvent", 'String'>
    readonly priority: FieldRef<"CalendarEvent", 'String'>
    readonly universityId: FieldRef<"CalendarEvent", 'String'>
    readonly programId: FieldRef<"CalendarEvent", 'String'>
    readonly applicationId: FieldRef<"CalendarEvent", 'String'>
    readonly admissionId: FieldRef<"CalendarEvent", 'String'>
    readonly intakeId: FieldRef<"CalendarEvent", 'String'>
    readonly admissionDeadlineId: FieldRef<"CalendarEvent", 'String'>
    readonly interviewId: FieldRef<"CalendarEvent", 'String'>
    readonly scholarshipId: FieldRef<"CalendarEvent", 'String'>
    readonly isRecurring: FieldRef<"CalendarEvent", 'Boolean'>
    readonly recurringPattern: FieldRef<"CalendarEvent", 'String'>
    readonly parentEventId: FieldRef<"CalendarEvent", 'String'>
    readonly hasReminders: FieldRef<"CalendarEvent", 'Boolean'>
    readonly isSystemGenerated: FieldRef<"CalendarEvent", 'Boolean'>
    readonly color: FieldRef<"CalendarEvent", 'String'>
    readonly isVisible: FieldRef<"CalendarEvent", 'Boolean'>
    readonly completionStatus: FieldRef<"CalendarEvent", 'String'>
    readonly completedAt: FieldRef<"CalendarEvent", 'DateTime'>
    readonly completionNotes: FieldRef<"CalendarEvent", 'String'>
    readonly createdAt: FieldRef<"CalendarEvent", 'DateTime'>
    readonly updatedAt: FieldRef<"CalendarEvent", 'DateTime'>
    readonly lastModifiedBy: FieldRef<"CalendarEvent", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CalendarEvent findUnique
   */
  export type CalendarEventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * Filter, which CalendarEvent to fetch.
     */
    where: CalendarEventWhereUniqueInput
  }

  /**
   * CalendarEvent findUniqueOrThrow
   */
  export type CalendarEventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * Filter, which CalendarEvent to fetch.
     */
    where: CalendarEventWhereUniqueInput
  }

  /**
   * CalendarEvent findFirst
   */
  export type CalendarEventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * Filter, which CalendarEvent to fetch.
     */
    where?: CalendarEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalendarEvents to fetch.
     */
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalendarEvents.
     */
    cursor?: CalendarEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalendarEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalendarEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalendarEvents.
     */
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * CalendarEvent findFirstOrThrow
   */
  export type CalendarEventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * Filter, which CalendarEvent to fetch.
     */
    where?: CalendarEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalendarEvents to fetch.
     */
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalendarEvents.
     */
    cursor?: CalendarEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalendarEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalendarEvents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalendarEvents.
     */
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * CalendarEvent findMany
   */
  export type CalendarEventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * Filter, which CalendarEvents to fetch.
     */
    where?: CalendarEventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalendarEvents to fetch.
     */
    orderBy?: CalendarEventOrderByWithRelationInput | CalendarEventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CalendarEvents.
     */
    cursor?: CalendarEventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalendarEvents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalendarEvents.
     */
    skip?: number
    distinct?: CalendarEventScalarFieldEnum | CalendarEventScalarFieldEnum[]
  }

  /**
   * CalendarEvent create
   */
  export type CalendarEventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * The data needed to create a CalendarEvent.
     */
    data: XOR<CalendarEventCreateInput, CalendarEventUncheckedCreateInput>
  }

  /**
   * CalendarEvent createMany
   */
  export type CalendarEventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CalendarEvents.
     */
    data: CalendarEventCreateManyInput | CalendarEventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CalendarEvent createManyAndReturn
   */
  export type CalendarEventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * The data used to create many CalendarEvents.
     */
    data: CalendarEventCreateManyInput | CalendarEventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalendarEvent update
   */
  export type CalendarEventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * The data needed to update a CalendarEvent.
     */
    data: XOR<CalendarEventUpdateInput, CalendarEventUncheckedUpdateInput>
    /**
     * Choose, which CalendarEvent to update.
     */
    where: CalendarEventWhereUniqueInput
  }

  /**
   * CalendarEvent updateMany
   */
  export type CalendarEventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CalendarEvents.
     */
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyInput>
    /**
     * Filter which CalendarEvents to update
     */
    where?: CalendarEventWhereInput
    /**
     * Limit how many CalendarEvents to update.
     */
    limit?: number
  }

  /**
   * CalendarEvent updateManyAndReturn
   */
  export type CalendarEventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * The data used to update CalendarEvents.
     */
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyInput>
    /**
     * Filter which CalendarEvents to update
     */
    where?: CalendarEventWhereInput
    /**
     * Limit how many CalendarEvents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalendarEvent upsert
   */
  export type CalendarEventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * The filter to search for the CalendarEvent to update in case it exists.
     */
    where: CalendarEventWhereUniqueInput
    /**
     * In case the CalendarEvent found by the `where` argument doesn't exist, create a new CalendarEvent with this data.
     */
    create: XOR<CalendarEventCreateInput, CalendarEventUncheckedCreateInput>
    /**
     * In case the CalendarEvent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CalendarEventUpdateInput, CalendarEventUncheckedUpdateInput>
  }

  /**
   * CalendarEvent delete
   */
  export type CalendarEventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
    /**
     * Filter which CalendarEvent to delete.
     */
    where: CalendarEventWhereUniqueInput
  }

  /**
   * CalendarEvent deleteMany
   */
  export type CalendarEventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalendarEvents to delete
     */
    where?: CalendarEventWhereInput
    /**
     * Limit how many CalendarEvents to delete.
     */
    limit?: number
  }

  /**
   * CalendarEvent.user
   */
  export type CalendarEvent$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CalendarEvent.university
   */
  export type CalendarEvent$universityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the University
     */
    select?: UniversitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the University
     */
    omit?: UniversityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UniversityInclude<ExtArgs> | null
    where?: UniversityWhereInput
  }

  /**
   * CalendarEvent.program
   */
  export type CalendarEvent$programArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Program
     */
    select?: ProgramSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Program
     */
    omit?: ProgramOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProgramInclude<ExtArgs> | null
    where?: ProgramWhereInput
  }

  /**
   * CalendarEvent.application
   */
  export type CalendarEvent$applicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Application
     */
    select?: ApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Application
     */
    omit?: ApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApplicationInclude<ExtArgs> | null
    where?: ApplicationWhereInput
  }

  /**
   * CalendarEvent.admission
   */
  export type CalendarEvent$admissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admission
     */
    select?: AdmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Admission
     */
    omit?: AdmissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionInclude<ExtArgs> | null
    where?: AdmissionWhereInput
  }

  /**
   * CalendarEvent.intake
   */
  export type CalendarEvent$intakeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Intake
     */
    select?: IntakeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Intake
     */
    omit?: IntakeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IntakeInclude<ExtArgs> | null
    where?: IntakeWhereInput
  }

  /**
   * CalendarEvent.admissionDeadline
   */
  export type CalendarEvent$admissionDeadlineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdmissionDeadline
     */
    select?: AdmissionDeadlineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AdmissionDeadline
     */
    omit?: AdmissionDeadlineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdmissionDeadlineInclude<ExtArgs> | null
    where?: AdmissionDeadlineWhereInput
  }

  /**
   * CalendarEvent.interview
   */
  export type CalendarEvent$interviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Interview
     */
    select?: InterviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Interview
     */
    omit?: InterviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InterviewInclude<ExtArgs> | null
    where?: InterviewWhereInput
  }

  /**
   * CalendarEvent.scholarship
   */
  export type CalendarEvent$scholarshipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Scholarship
     */
    select?: ScholarshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Scholarship
     */
    omit?: ScholarshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ScholarshipInclude<ExtArgs> | null
    where?: ScholarshipWhereInput
  }

  /**
   * CalendarEvent.reminders
   */
  export type CalendarEvent$remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    where?: EventReminderWhereInput
    orderBy?: EventReminderOrderByWithRelationInput | EventReminderOrderByWithRelationInput[]
    cursor?: EventReminderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventReminderScalarFieldEnum | EventReminderScalarFieldEnum[]
  }

  /**
   * CalendarEvent without action
   */
  export type CalendarEventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalendarEvent
     */
    select?: CalendarEventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalendarEvent
     */
    omit?: CalendarEventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalendarEventInclude<ExtArgs> | null
  }


  /**
   * Model EventReminder
   */

  export type AggregateEventReminder = {
    _count: EventReminderCountAggregateOutputType | null
    _avg: EventReminderAvgAggregateOutputType | null
    _sum: EventReminderSumAggregateOutputType | null
    _min: EventReminderMinAggregateOutputType | null
    _max: EventReminderMaxAggregateOutputType | null
  }

  export type EventReminderAvgAggregateOutputType = {
    reminderTime: number | null
    retryCount: number | null
  }

  export type EventReminderSumAggregateOutputType = {
    reminderTime: number | null
    retryCount: number | null
  }

  export type EventReminderMinAggregateOutputType = {
    id: string | null
    eventId: string | null
    userId: string | null
    reminderType: string | null
    reminderTime: number | null
    reminderMessage: string | null
    scheduledFor: Date | null
    isActive: boolean | null
    isSent: boolean | null
    sentAt: Date | null
    failureReason: string | null
    retryCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EventReminderMaxAggregateOutputType = {
    id: string | null
    eventId: string | null
    userId: string | null
    reminderType: string | null
    reminderTime: number | null
    reminderMessage: string | null
    scheduledFor: Date | null
    isActive: boolean | null
    isSent: boolean | null
    sentAt: Date | null
    failureReason: string | null
    retryCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EventReminderCountAggregateOutputType = {
    id: number
    eventId: number
    userId: number
    reminderType: number
    reminderTime: number
    reminderMessage: number
    scheduledFor: number
    isActive: number
    isSent: number
    sentAt: number
    failureReason: number
    retryCount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EventReminderAvgAggregateInputType = {
    reminderTime?: true
    retryCount?: true
  }

  export type EventReminderSumAggregateInputType = {
    reminderTime?: true
    retryCount?: true
  }

  export type EventReminderMinAggregateInputType = {
    id?: true
    eventId?: true
    userId?: true
    reminderType?: true
    reminderTime?: true
    reminderMessage?: true
    scheduledFor?: true
    isActive?: true
    isSent?: true
    sentAt?: true
    failureReason?: true
    retryCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EventReminderMaxAggregateInputType = {
    id?: true
    eventId?: true
    userId?: true
    reminderType?: true
    reminderTime?: true
    reminderMessage?: true
    scheduledFor?: true
    isActive?: true
    isSent?: true
    sentAt?: true
    failureReason?: true
    retryCount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EventReminderCountAggregateInputType = {
    id?: true
    eventId?: true
    userId?: true
    reminderType?: true
    reminderTime?: true
    reminderMessage?: true
    scheduledFor?: true
    isActive?: true
    isSent?: true
    sentAt?: true
    failureReason?: true
    retryCount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EventReminderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventReminder to aggregate.
     */
    where?: EventReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventReminders to fetch.
     */
    orderBy?: EventReminderOrderByWithRelationInput | EventReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventReminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventReminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventReminders
    **/
    _count?: true | EventReminderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventReminderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventReminderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventReminderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventReminderMaxAggregateInputType
  }

  export type GetEventReminderAggregateType<T extends EventReminderAggregateArgs> = {
        [P in keyof T & keyof AggregateEventReminder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventReminder[P]>
      : GetScalarType<T[P], AggregateEventReminder[P]>
  }




  export type EventReminderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventReminderWhereInput
    orderBy?: EventReminderOrderByWithAggregationInput | EventReminderOrderByWithAggregationInput[]
    by: EventReminderScalarFieldEnum[] | EventReminderScalarFieldEnum
    having?: EventReminderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventReminderCountAggregateInputType | true
    _avg?: EventReminderAvgAggregateInputType
    _sum?: EventReminderSumAggregateInputType
    _min?: EventReminderMinAggregateInputType
    _max?: EventReminderMaxAggregateInputType
  }

  export type EventReminderGroupByOutputType = {
    id: string
    eventId: string
    userId: string
    reminderType: string
    reminderTime: number
    reminderMessage: string | null
    scheduledFor: Date
    isActive: boolean
    isSent: boolean
    sentAt: Date | null
    failureReason: string | null
    retryCount: number
    createdAt: Date
    updatedAt: Date
    _count: EventReminderCountAggregateOutputType | null
    _avg: EventReminderAvgAggregateOutputType | null
    _sum: EventReminderSumAggregateOutputType | null
    _min: EventReminderMinAggregateOutputType | null
    _max: EventReminderMaxAggregateOutputType | null
  }

  type GetEventReminderGroupByPayload<T extends EventReminderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventReminderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventReminderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventReminderGroupByOutputType[P]>
            : GetScalarType<T[P], EventReminderGroupByOutputType[P]>
        }
      >
    >


  export type EventReminderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    userId?: boolean
    reminderType?: boolean
    reminderTime?: boolean
    reminderMessage?: boolean
    scheduledFor?: boolean
    isActive?: boolean
    isSent?: boolean
    sentAt?: boolean
    failureReason?: boolean
    retryCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    event?: boolean | CalendarEventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventReminder"]>

  export type EventReminderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    userId?: boolean
    reminderType?: boolean
    reminderTime?: boolean
    reminderMessage?: boolean
    scheduledFor?: boolean
    isActive?: boolean
    isSent?: boolean
    sentAt?: boolean
    failureReason?: boolean
    retryCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    event?: boolean | CalendarEventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventReminder"]>

  export type EventReminderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    userId?: boolean
    reminderType?: boolean
    reminderTime?: boolean
    reminderMessage?: boolean
    scheduledFor?: boolean
    isActive?: boolean
    isSent?: boolean
    sentAt?: boolean
    failureReason?: boolean
    retryCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    event?: boolean | CalendarEventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventReminder"]>

  export type EventReminderSelectScalar = {
    id?: boolean
    eventId?: boolean
    userId?: boolean
    reminderType?: boolean
    reminderTime?: boolean
    reminderMessage?: boolean
    scheduledFor?: boolean
    isActive?: boolean
    isSent?: boolean
    sentAt?: boolean
    failureReason?: boolean
    retryCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EventReminderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "eventId" | "userId" | "reminderType" | "reminderTime" | "reminderMessage" | "scheduledFor" | "isActive" | "isSent" | "sentAt" | "failureReason" | "retryCount" | "createdAt" | "updatedAt", ExtArgs["result"]["eventReminder"]>
  export type EventReminderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | CalendarEventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type EventReminderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | CalendarEventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type EventReminderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    event?: boolean | CalendarEventDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $EventReminderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventReminder"
    objects: {
      event: Prisma.$CalendarEventPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      eventId: string
      userId: string
      reminderType: string
      reminderTime: number
      reminderMessage: string | null
      scheduledFor: Date
      isActive: boolean
      isSent: boolean
      sentAt: Date | null
      failureReason: string | null
      retryCount: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["eventReminder"]>
    composites: {}
  }

  type EventReminderGetPayload<S extends boolean | null | undefined | EventReminderDefaultArgs> = $Result.GetResult<Prisma.$EventReminderPayload, S>

  type EventReminderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventReminderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventReminderCountAggregateInputType | true
    }

  export interface EventReminderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventReminder'], meta: { name: 'EventReminder' } }
    /**
     * Find zero or one EventReminder that matches the filter.
     * @param {EventReminderFindUniqueArgs} args - Arguments to find a EventReminder
     * @example
     * // Get one EventReminder
     * const eventReminder = await prisma.eventReminder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventReminderFindUniqueArgs>(args: SelectSubset<T, EventReminderFindUniqueArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EventReminder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventReminderFindUniqueOrThrowArgs} args - Arguments to find a EventReminder
     * @example
     * // Get one EventReminder
     * const eventReminder = await prisma.eventReminder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventReminderFindUniqueOrThrowArgs>(args: SelectSubset<T, EventReminderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventReminder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventReminderFindFirstArgs} args - Arguments to find a EventReminder
     * @example
     * // Get one EventReminder
     * const eventReminder = await prisma.eventReminder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventReminderFindFirstArgs>(args?: SelectSubset<T, EventReminderFindFirstArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventReminder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventReminderFindFirstOrThrowArgs} args - Arguments to find a EventReminder
     * @example
     * // Get one EventReminder
     * const eventReminder = await prisma.eventReminder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventReminderFindFirstOrThrowArgs>(args?: SelectSubset<T, EventReminderFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EventReminders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventReminderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventReminders
     * const eventReminders = await prisma.eventReminder.findMany()
     * 
     * // Get first 10 EventReminders
     * const eventReminders = await prisma.eventReminder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventReminderWithIdOnly = await prisma.eventReminder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventReminderFindManyArgs>(args?: SelectSubset<T, EventReminderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EventReminder.
     * @param {EventReminderCreateArgs} args - Arguments to create a EventReminder.
     * @example
     * // Create one EventReminder
     * const EventReminder = await prisma.eventReminder.create({
     *   data: {
     *     // ... data to create a EventReminder
     *   }
     * })
     * 
     */
    create<T extends EventReminderCreateArgs>(args: SelectSubset<T, EventReminderCreateArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EventReminders.
     * @param {EventReminderCreateManyArgs} args - Arguments to create many EventReminders.
     * @example
     * // Create many EventReminders
     * const eventReminder = await prisma.eventReminder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventReminderCreateManyArgs>(args?: SelectSubset<T, EventReminderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EventReminders and returns the data saved in the database.
     * @param {EventReminderCreateManyAndReturnArgs} args - Arguments to create many EventReminders.
     * @example
     * // Create many EventReminders
     * const eventReminder = await prisma.eventReminder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EventReminders and only return the `id`
     * const eventReminderWithIdOnly = await prisma.eventReminder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EventReminderCreateManyAndReturnArgs>(args?: SelectSubset<T, EventReminderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EventReminder.
     * @param {EventReminderDeleteArgs} args - Arguments to delete one EventReminder.
     * @example
     * // Delete one EventReminder
     * const EventReminder = await prisma.eventReminder.delete({
     *   where: {
     *     // ... filter to delete one EventReminder
     *   }
     * })
     * 
     */
    delete<T extends EventReminderDeleteArgs>(args: SelectSubset<T, EventReminderDeleteArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EventReminder.
     * @param {EventReminderUpdateArgs} args - Arguments to update one EventReminder.
     * @example
     * // Update one EventReminder
     * const eventReminder = await prisma.eventReminder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventReminderUpdateArgs>(args: SelectSubset<T, EventReminderUpdateArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EventReminders.
     * @param {EventReminderDeleteManyArgs} args - Arguments to filter EventReminders to delete.
     * @example
     * // Delete a few EventReminders
     * const { count } = await prisma.eventReminder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventReminderDeleteManyArgs>(args?: SelectSubset<T, EventReminderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventReminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventReminderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventReminders
     * const eventReminder = await prisma.eventReminder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventReminderUpdateManyArgs>(args: SelectSubset<T, EventReminderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventReminders and returns the data updated in the database.
     * @param {EventReminderUpdateManyAndReturnArgs} args - Arguments to update many EventReminders.
     * @example
     * // Update many EventReminders
     * const eventReminder = await prisma.eventReminder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EventReminders and only return the `id`
     * const eventReminderWithIdOnly = await prisma.eventReminder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EventReminderUpdateManyAndReturnArgs>(args: SelectSubset<T, EventReminderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EventReminder.
     * @param {EventReminderUpsertArgs} args - Arguments to update or create a EventReminder.
     * @example
     * // Update or create a EventReminder
     * const eventReminder = await prisma.eventReminder.upsert({
     *   create: {
     *     // ... data to create a EventReminder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventReminder we want to update
     *   }
     * })
     */
    upsert<T extends EventReminderUpsertArgs>(args: SelectSubset<T, EventReminderUpsertArgs<ExtArgs>>): Prisma__EventReminderClient<$Result.GetResult<Prisma.$EventReminderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EventReminders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventReminderCountArgs} args - Arguments to filter EventReminders to count.
     * @example
     * // Count the number of EventReminders
     * const count = await prisma.eventReminder.count({
     *   where: {
     *     // ... the filter for the EventReminders we want to count
     *   }
     * })
    **/
    count<T extends EventReminderCountArgs>(
      args?: Subset<T, EventReminderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventReminderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventReminder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventReminderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventReminderAggregateArgs>(args: Subset<T, EventReminderAggregateArgs>): Prisma.PrismaPromise<GetEventReminderAggregateType<T>>

    /**
     * Group by EventReminder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventReminderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventReminderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventReminderGroupByArgs['orderBy'] }
        : { orderBy?: EventReminderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventReminderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventReminderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventReminder model
   */
  readonly fields: EventReminderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventReminder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventReminderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    event<T extends CalendarEventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CalendarEventDefaultArgs<ExtArgs>>): Prisma__CalendarEventClient<$Result.GetResult<Prisma.$CalendarEventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventReminder model
   */
  interface EventReminderFieldRefs {
    readonly id: FieldRef<"EventReminder", 'String'>
    readonly eventId: FieldRef<"EventReminder", 'String'>
    readonly userId: FieldRef<"EventReminder", 'String'>
    readonly reminderType: FieldRef<"EventReminder", 'String'>
    readonly reminderTime: FieldRef<"EventReminder", 'Int'>
    readonly reminderMessage: FieldRef<"EventReminder", 'String'>
    readonly scheduledFor: FieldRef<"EventReminder", 'DateTime'>
    readonly isActive: FieldRef<"EventReminder", 'Boolean'>
    readonly isSent: FieldRef<"EventReminder", 'Boolean'>
    readonly sentAt: FieldRef<"EventReminder", 'DateTime'>
    readonly failureReason: FieldRef<"EventReminder", 'String'>
    readonly retryCount: FieldRef<"EventReminder", 'Int'>
    readonly createdAt: FieldRef<"EventReminder", 'DateTime'>
    readonly updatedAt: FieldRef<"EventReminder", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EventReminder findUnique
   */
  export type EventReminderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * Filter, which EventReminder to fetch.
     */
    where: EventReminderWhereUniqueInput
  }

  /**
   * EventReminder findUniqueOrThrow
   */
  export type EventReminderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * Filter, which EventReminder to fetch.
     */
    where: EventReminderWhereUniqueInput
  }

  /**
   * EventReminder findFirst
   */
  export type EventReminderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * Filter, which EventReminder to fetch.
     */
    where?: EventReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventReminders to fetch.
     */
    orderBy?: EventReminderOrderByWithRelationInput | EventReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventReminders.
     */
    cursor?: EventReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventReminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventReminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventReminders.
     */
    distinct?: EventReminderScalarFieldEnum | EventReminderScalarFieldEnum[]
  }

  /**
   * EventReminder findFirstOrThrow
   */
  export type EventReminderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * Filter, which EventReminder to fetch.
     */
    where?: EventReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventReminders to fetch.
     */
    orderBy?: EventReminderOrderByWithRelationInput | EventReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventReminders.
     */
    cursor?: EventReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventReminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventReminders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventReminders.
     */
    distinct?: EventReminderScalarFieldEnum | EventReminderScalarFieldEnum[]
  }

  /**
   * EventReminder findMany
   */
  export type EventReminderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * Filter, which EventReminders to fetch.
     */
    where?: EventReminderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventReminders to fetch.
     */
    orderBy?: EventReminderOrderByWithRelationInput | EventReminderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventReminders.
     */
    cursor?: EventReminderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventReminders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventReminders.
     */
    skip?: number
    distinct?: EventReminderScalarFieldEnum | EventReminderScalarFieldEnum[]
  }

  /**
   * EventReminder create
   */
  export type EventReminderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * The data needed to create a EventReminder.
     */
    data: XOR<EventReminderCreateInput, EventReminderUncheckedCreateInput>
  }

  /**
   * EventReminder createMany
   */
  export type EventReminderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventReminders.
     */
    data: EventReminderCreateManyInput | EventReminderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventReminder createManyAndReturn
   */
  export type EventReminderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * The data used to create many EventReminders.
     */
    data: EventReminderCreateManyInput | EventReminderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventReminder update
   */
  export type EventReminderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * The data needed to update a EventReminder.
     */
    data: XOR<EventReminderUpdateInput, EventReminderUncheckedUpdateInput>
    /**
     * Choose, which EventReminder to update.
     */
    where: EventReminderWhereUniqueInput
  }

  /**
   * EventReminder updateMany
   */
  export type EventReminderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventReminders.
     */
    data: XOR<EventReminderUpdateManyMutationInput, EventReminderUncheckedUpdateManyInput>
    /**
     * Filter which EventReminders to update
     */
    where?: EventReminderWhereInput
    /**
     * Limit how many EventReminders to update.
     */
    limit?: number
  }

  /**
   * EventReminder updateManyAndReturn
   */
  export type EventReminderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * The data used to update EventReminders.
     */
    data: XOR<EventReminderUpdateManyMutationInput, EventReminderUncheckedUpdateManyInput>
    /**
     * Filter which EventReminders to update
     */
    where?: EventReminderWhereInput
    /**
     * Limit how many EventReminders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventReminder upsert
   */
  export type EventReminderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * The filter to search for the EventReminder to update in case it exists.
     */
    where: EventReminderWhereUniqueInput
    /**
     * In case the EventReminder found by the `where` argument doesn't exist, create a new EventReminder with this data.
     */
    create: XOR<EventReminderCreateInput, EventReminderUncheckedCreateInput>
    /**
     * In case the EventReminder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventReminderUpdateInput, EventReminderUncheckedUpdateInput>
  }

  /**
   * EventReminder delete
   */
  export type EventReminderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
    /**
     * Filter which EventReminder to delete.
     */
    where: EventReminderWhereUniqueInput
  }

  /**
   * EventReminder deleteMany
   */
  export type EventReminderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventReminders to delete
     */
    where?: EventReminderWhereInput
    /**
     * Limit how many EventReminders to delete.
     */
    limit?: number
  }

  /**
   * EventReminder without action
   */
  export type EventReminderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventReminder
     */
    select?: EventReminderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventReminder
     */
    omit?: EventReminderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventReminderInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    image: 'image',
    password: 'password',
    provider: 'provider',
    emailVerified: 'emailVerified',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserProfileScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    countries: 'countries',
    courses: 'courses',
    studyLevel: 'studyLevel',
    gpa: 'gpa',
    testScores: 'testScores',
    workExperience: 'workExperience',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserProfileScalarFieldEnum = (typeof UserProfileScalarFieldEnum)[keyof typeof UserProfileScalarFieldEnum]


  export const SubscriptionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    plan: 'plan',
    status: 'status',
    billingCycle: 'billingCycle',
    trialStartDate: 'trialStartDate',
    trialEndDate: 'trialEndDate',
    currentPeriodStart: 'currentPeriodStart',
    currentPeriodEnd: 'currentPeriodEnd',
    stripeCustomerId: 'stripeCustomerId',
    stripeSubscriptionId: 'stripeSubscriptionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscriptionScalarFieldEnum = (typeof SubscriptionScalarFieldEnum)[keyof typeof SubscriptionScalarFieldEnum]


  export const PaymentEventScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    eventType: 'eventType',
    plan: 'plan',
    amount: 'amount',
    currency: 'currency',
    stripeEventId: 'stripeEventId',
    createdAt: 'createdAt'
  };

  export type PaymentEventScalarFieldEnum = (typeof PaymentEventScalarFieldEnum)[keyof typeof PaymentEventScalarFieldEnum]


  export const UniversityScalarFieldEnum: {
    id: 'id',
    universityName: 'universityName',
    slug: 'slug',
    city: 'city',
    state: 'state',
    country: 'country',
    fullAddress: 'fullAddress',
    shortDescription: 'shortDescription',
    overview: 'overview',
    history: 'history',
    missionStatement: 'missionStatement',
    visionStatement: 'visionStatement',
    accreditationDetails: 'accreditationDetails',
    whyChooseHighlights: 'whyChooseHighlights',
    careerOutcomes: 'careerOutcomes',
    ftGlobalRanking: 'ftGlobalRanking',
    ftRegionalRanking: 'ftRegionalRanking',
    ftRankingYear: 'ftRankingYear',
    usNewsRanking: 'usNewsRanking',
    qsRanking: 'qsRanking',
    timesRanking: 'timesRanking',
    acceptanceRate: 'acceptanceRate',
    gmatAverageScore: 'gmatAverageScore',
    gmatScoreMin: 'gmatScoreMin',
    gmatScoreMax: 'gmatScoreMax',
    minimumGpa: 'minimumGpa',
    languageTestRequirements: 'languageTestRequirements',
    tuitionFees: 'tuitionFees',
    additionalFees: 'additionalFees',
    totalCost: 'totalCost',
    currency: 'currency',
    scholarshipInfo: 'scholarshipInfo',
    financialAidDetails: 'financialAidDetails',
    admissionsOfficeContact: 'admissionsOfficeContact',
    internationalOfficeContact: 'internationalOfficeContact',
    generalInquiriesContact: 'generalInquiriesContact',
    websiteUrl: 'websiteUrl',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    metaKeywords: 'metaKeywords',
    canonicalUrl: 'canonicalUrl',
    isActive: 'isActive',
    isFeatured: 'isFeatured',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    averageDeadlines: 'averageDeadlines',
    studentsPerYear: 'studentsPerYear',
    brochureUrl: 'brochureUrl',
    additionalDocumentUrls: 'additionalDocumentUrls',
    averageProgramLengthMonths: 'averageProgramLengthMonths',
    intakes: 'intakes'
  };

  export type UniversityScalarFieldEnum = (typeof UniversityScalarFieldEnum)[keyof typeof UniversityScalarFieldEnum]


  export const UniversityImageScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    imageUrl: 'imageUrl',
    imageType: 'imageType',
    imageTitle: 'imageTitle',
    imageAltText: 'imageAltText',
    imageCaption: 'imageCaption',
    fileSize: 'fileSize',
    width: 'width',
    height: 'height',
    isPrimary: 'isPrimary',
    displayOrder: 'displayOrder',
    createdAt: 'createdAt'
  };

  export type UniversityImageScalarFieldEnum = (typeof UniversityImageScalarFieldEnum)[keyof typeof UniversityImageScalarFieldEnum]


  export const ProgramDepartmentScalarFieldEnum: {
    id: 'id',
    programId: 'programId',
    departmentId: 'departmentId',
    createdAt: 'createdAt'
  };

  export type ProgramDepartmentScalarFieldEnum = (typeof ProgramDepartmentScalarFieldEnum)[keyof typeof ProgramDepartmentScalarFieldEnum]


  export const DepartmentScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    name: 'name',
    slug: 'slug',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DepartmentScalarFieldEnum = (typeof DepartmentScalarFieldEnum)[keyof typeof DepartmentScalarFieldEnum]


  export const ProgramScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    programName: 'programName',
    programSlug: 'programSlug',
    degreeType: 'degreeType',
    programLength: 'programLength',
    specializations: 'specializations',
    programDescription: 'programDescription',
    curriculumOverview: 'curriculumOverview',
    admissionRequirements: 'admissionRequirements',
    averageEntranceScore: 'averageEntranceScore',
    programTuitionFees: 'programTuitionFees',
    programAdditionalFees: 'programAdditionalFees',
    programMetaTitle: 'programMetaTitle',
    programMetaDescription: 'programMetaDescription',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProgramScalarFieldEnum = (typeof ProgramScalarFieldEnum)[keyof typeof ProgramScalarFieldEnum]


  export const SyllabusScalarFieldEnum: {
    id: 'id',
    programId: 'programId',
    fileUrl: 'fileUrl',
    uploadedAt: 'uploadedAt'
  };

  export type SyllabusScalarFieldEnum = (typeof SyllabusScalarFieldEnum)[keyof typeof SyllabusScalarFieldEnum]


  export const ProgramRankingScalarFieldEnum: {
    id: 'id',
    programId: 'programId',
    year: 'year',
    rank: 'rank',
    source: 'source',
    createdAt: 'createdAt'
  };

  export type ProgramRankingScalarFieldEnum = (typeof ProgramRankingScalarFieldEnum)[keyof typeof ProgramRankingScalarFieldEnum]


  export const ExternalLinkScalarFieldEnum: {
    id: 'id',
    programId: 'programId',
    title: 'title',
    url: 'url',
    createdAt: 'createdAt'
  };

  export type ExternalLinkScalarFieldEnum = (typeof ExternalLinkScalarFieldEnum)[keyof typeof ExternalLinkScalarFieldEnum]


  export const AdmissionScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    programId: 'programId',
    minimumGpa: 'minimumGpa',
    maximumGpa: 'maximumGpa',
    gmatMinScore: 'gmatMinScore',
    gmatMaxScore: 'gmatMaxScore',
    gmatAverageScore: 'gmatAverageScore',
    greMinScore: 'greMinScore',
    greMaxScore: 'greMaxScore',
    greAverageScore: 'greAverageScore',
    ieltsMinScore: 'ieltsMinScore',
    toeflMinScore: 'toeflMinScore',
    pteMinScore: 'pteMinScore',
    duolingoMinScore: 'duolingoMinScore',
    languageExemptions: 'languageExemptions',
    workExperienceRequired: 'workExperienceRequired',
    minWorkExperience: 'minWorkExperience',
    maxWorkExperience: 'maxWorkExperience',
    preferredIndustries: 'preferredIndustries',
    applicationFee: 'applicationFee',
    currency: 'currency',
    documentsRequired: 'documentsRequired',
    additionalRequirements: 'additionalRequirements',
    acceptanceRate: 'acceptanceRate',
    totalApplications: 'totalApplications',
    totalAccepted: 'totalAccepted',
    statisticsYear: 'statisticsYear',
    isActive: 'isActive',
    admissionStatus: 'admissionStatus',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AdmissionScalarFieldEnum = (typeof AdmissionScalarFieldEnum)[keyof typeof AdmissionScalarFieldEnum]


  export const IntakeScalarFieldEnum: {
    id: 'id',
    admissionId: 'admissionId',
    intakeName: 'intakeName',
    intakeType: 'intakeType',
    intakeYear: 'intakeYear',
    intakeMonth: 'intakeMonth',
    totalSeats: 'totalSeats',
    availableSeats: 'availableSeats',
    internationalSeats: 'internationalSeats',
    domesticSeats: 'domesticSeats',
    startDate: 'startDate',
    endDate: 'endDate',
    applicationOpenDate: 'applicationOpenDate',
    applicationCloseDate: 'applicationCloseDate',
    isActive: 'isActive',
    intakeStatus: 'intakeStatus',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type IntakeScalarFieldEnum = (typeof IntakeScalarFieldEnum)[keyof typeof IntakeScalarFieldEnum]


  export const AdmissionDeadlineScalarFieldEnum: {
    id: 'id',
    admissionId: 'admissionId',
    intakeId: 'intakeId',
    deadlineType: 'deadlineType',
    deadlineDate: 'deadlineDate',
    deadlineTime: 'deadlineTime',
    timezone: 'timezone',
    title: 'title',
    description: 'description',
    isExtended: 'isExtended',
    originalDeadline: 'originalDeadline',
    priority: 'priority',
    isActive: 'isActive',
    reminderSent: 'reminderSent',
    reminderDate: 'reminderDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AdmissionDeadlineScalarFieldEnum = (typeof AdmissionDeadlineScalarFieldEnum)[keyof typeof AdmissionDeadlineScalarFieldEnum]


  export const ApplicationScalarFieldEnum: {
    id: 'id',
    admissionId: 'admissionId',
    universityId: 'universityId',
    programId: 'programId',
    intakeId: 'intakeId',
    userId: 'userId',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phone: 'phone',
    dateOfBirth: 'dateOfBirth',
    nationality: 'nationality',
    currentGpa: 'currentGpa',
    gmatScore: 'gmatScore',
    greScore: 'greScore',
    ieltsScore: 'ieltsScore',
    toeflScore: 'toeflScore',
    pteScore: 'pteScore',
    duolingoScore: 'duolingoScore',
    workExperienceMonths: 'workExperienceMonths',
    workExperienceDetails: 'workExperienceDetails',
    applicationStatus: 'applicationStatus',
    currentStage: 'currentStage',
    stageUpdatedAt: 'stageUpdatedAt',
    completionPercentage: 'completionPercentage',
    nextDeadlineId: 'nextDeadlineId',
    completedDeadlines: 'completedDeadlines',
    missedDeadlines: 'missedDeadlines',
    submissionDate: 'submissionDate',
    reviewDate: 'reviewDate',
    decisionDate: 'decisionDate',
    lastActivityAt: 'lastActivityAt',
    applicationFeesPaid: 'applicationFeesPaid',
    applicationFeesAmount: 'applicationFeesAmount',
    documentsUploaded: 'documentsUploaded',
    documentsVerified: 'documentsVerified',
    lastContactDate: 'lastContactDate',
    contactNotes: 'contactNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ApplicationScalarFieldEnum = (typeof ApplicationScalarFieldEnum)[keyof typeof ApplicationScalarFieldEnum]


  export const ApplicationProgressScalarFieldEnum: {
    id: 'id',
    applicationId: 'applicationId',
    stageName: 'stageName',
    stageStatus: 'stageStatus',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    notes: 'notes',
    completedBy: 'completedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ApplicationProgressScalarFieldEnum = (typeof ApplicationProgressScalarFieldEnum)[keyof typeof ApplicationProgressScalarFieldEnum]


  export const ApplicationDocumentScalarFieldEnum: {
    id: 'id',
    applicationId: 'applicationId',
    documentType: 'documentType',
    documentCategory: 'documentCategory',
    documentTitle: 'documentTitle',
    fileName: 'fileName',
    fileUrl: 'fileUrl',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    isRequired: 'isRequired',
    submissionDeadline: 'submissionDeadline',
    reminderSent: 'reminderSent',
    isVerified: 'isVerified',
    verifiedBy: 'verifiedBy',
    verifiedAt: 'verifiedAt',
    verificationNotes: 'verificationNotes',
    documentStatus: 'documentStatus',
    uploadedAt: 'uploadedAt',
    updatedAt: 'updatedAt'
  };

  export type ApplicationDocumentScalarFieldEnum = (typeof ApplicationDocumentScalarFieldEnum)[keyof typeof ApplicationDocumentScalarFieldEnum]


  export const InterviewScalarFieldEnum: {
    id: 'id',
    applicationId: 'applicationId',
    interviewType: 'interviewType',
    scheduledDate: 'scheduledDate',
    scheduledTime: 'scheduledTime',
    timezone: 'timezone',
    duration: 'duration',
    interviewerName: 'interviewerName',
    interviewerEmail: 'interviewerEmail',
    meetingLink: 'meetingLink',
    meetingPassword: 'meetingPassword',
    location: 'location',
    interviewStatus: 'interviewStatus',
    interviewScore: 'interviewScore',
    interviewFeedback: 'interviewFeedback',
    reminderSent: 'reminderSent',
    confirmationReceived: 'confirmationReceived',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InterviewScalarFieldEnum = (typeof InterviewScalarFieldEnum)[keyof typeof InterviewScalarFieldEnum]


  export const TuitionBreakdownScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    programId: 'programId',
    academicYear: 'academicYear',
    yearNumber: 'yearNumber',
    baseTuition: 'baseTuition',
    labFees: 'labFees',
    libraryFees: 'libraryFees',
    technologyFees: 'technologyFees',
    activityFees: 'activityFees',
    healthInsurance: 'healthInsurance',
    dormitoryFees: 'dormitoryFees',
    mealPlanFees: 'mealPlanFees',
    applicationFee: 'applicationFee',
    registrationFee: 'registrationFee',
    examFees: 'examFees',
    graduationFee: 'graduationFee',
    totalTuition: 'totalTuition',
    totalAdditionalFees: 'totalAdditionalFees',
    grandTotal: 'grandTotal',
    currency: 'currency',
    currencySymbol: 'currencySymbol',
    paymentTerms: 'paymentTerms',
    installmentCount: 'installmentCount',
    isActive: 'isActive',
    effectiveDate: 'effectiveDate',
    expiryDate: 'expiryDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TuitionBreakdownScalarFieldEnum = (typeof TuitionBreakdownScalarFieldEnum)[keyof typeof TuitionBreakdownScalarFieldEnum]


  export const PaymentScheduleScalarFieldEnum: {
    id: 'id',
    tuitionBreakdownId: 'tuitionBreakdownId',
    installmentNumber: 'installmentNumber',
    dueDate: 'dueDate',
    amount: 'amount',
    description: 'description',
    lateFee: 'lateFee',
    gracePeroidDays: 'gracePeroidDays',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentScheduleScalarFieldEnum = (typeof PaymentScheduleScalarFieldEnum)[keyof typeof PaymentScheduleScalarFieldEnum]


  export const ScholarshipScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    programId: 'programId',
    scholarshipName: 'scholarshipName',
    scholarshipSlug: 'scholarshipSlug',
    scholarshipType: 'scholarshipType',
    description: 'description',
    eligibilityCriteria: 'eligibilityCriteria',
    amount: 'amount',
    percentage: 'percentage',
    maxAmount: 'maxAmount',
    currency: 'currency',
    coverageTuition: 'coverageTuition',
    coverageFees: 'coverageFees',
    coverageLiving: 'coverageLiving',
    coverageBooks: 'coverageBooks',
    applicationRequired: 'applicationRequired',
    applicationDeadline: 'applicationDeadline',
    documentsRequired: 'documentsRequired',
    totalAvailable: 'totalAvailable',
    currentlyAwarded: 'currentlyAwarded',
    minimumGpa: 'minimumGpa',
    minimumTestScore: 'minimumTestScore',
    testType: 'testType',
    citizenshipRequired: 'citizenshipRequired',
    isActive: 'isActive',
    applicationOpenDate: 'applicationOpenDate',
    applicationCloseDate: 'applicationCloseDate',
    awardDate: 'awardDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ScholarshipScalarFieldEnum = (typeof ScholarshipScalarFieldEnum)[keyof typeof ScholarshipScalarFieldEnum]


  export const ScholarshipDocumentScalarFieldEnum: {
    id: 'id',
    scholarshipId: 'scholarshipId',
    documentType: 'documentType',
    documentTitle: 'documentTitle',
    fileName: 'fileName',
    fileUrl: 'fileUrl',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    isRequired: 'isRequired',
    displayOrder: 'displayOrder',
    isPublic: 'isPublic',
    downloadCount: 'downloadCount',
    uploadedAt: 'uploadedAt',
    updatedAt: 'updatedAt'
  };

  export type ScholarshipDocumentScalarFieldEnum = (typeof ScholarshipDocumentScalarFieldEnum)[keyof typeof ScholarshipDocumentScalarFieldEnum]


  export const ScholarshipApplicationScalarFieldEnum: {
    id: 'id',
    scholarshipId: 'scholarshipId',
    userId: 'userId',
    applicationId: 'applicationId',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phone: 'phone',
    currentGpa: 'currentGpa',
    testScore: 'testScore',
    testType: 'testType',
    familyIncome: 'familyIncome',
    financialNeed: 'financialNeed',
    applicationStatus: 'applicationStatus',
    submissionDate: 'submissionDate',
    reviewDate: 'reviewDate',
    decisionDate: 'decisionDate',
    awardAmount: 'awardAmount',
    documentsUploaded: 'documentsUploaded',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ScholarshipApplicationScalarFieldEnum = (typeof ScholarshipApplicationScalarFieldEnum)[keyof typeof ScholarshipApplicationScalarFieldEnum]


  export const FeeStructureScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    programId: 'programId',
    structureName: 'structureName',
    structureType: 'structureType',
    academicYear: 'academicYear',
    tuitionFee: 'tuitionFee',
    admissionFee: 'admissionFee',
    registrationFee: 'registrationFee',
    examFee: 'examFee',
    libraryFee: 'libraryFee',
    labFee: 'labFee',
    hostelFee: 'hostelFee',
    messFee: 'messFee',
    transportFee: 'transportFee',
    sportsFee: 'sportsFee',
    medicalFee: 'medicalFee',
    healthInsurance: 'healthInsurance',
    accidentInsurance: 'accidentInsurance',
    studentActivityFee: 'studentActivityFee',
    technologyFee: 'technologyFee',
    securityDeposit: 'securityDeposit',
    cautionMoney: 'cautionMoney',
    isDepositRefundable: 'isDepositRefundable',
    totalMandatoryFees: 'totalMandatoryFees',
    totalOptionalFees: 'totalOptionalFees',
    grandTotal: 'grandTotal',
    currency: 'currency',
    currencySymbol: 'currencySymbol',
    paymentTerms: 'paymentTerms',
    installmentCount: 'installmentCount',
    isActive: 'isActive',
    effectiveDate: 'effectiveDate',
    expiryDate: 'expiryDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FeeStructureScalarFieldEnum = (typeof FeeStructureScalarFieldEnum)[keyof typeof FeeStructureScalarFieldEnum]


  export const FinancialAidScalarFieldEnum: {
    id: 'id',
    universityId: 'universityId',
    programId: 'programId',
    aidName: 'aidName',
    aidType: 'aidType',
    description: 'description',
    amount: 'amount',
    percentage: 'percentage',
    maxAmount: 'maxAmount',
    currency: 'currency',
    interestRate: 'interestRate',
    repaymentPeriod: 'repaymentPeriod',
    gracePeriod: 'gracePeriod',
    eligibilityCriteria: 'eligibilityCriteria',
    minimumGpa: 'minimumGpa',
    maximumFamilyIncome: 'maximumFamilyIncome',
    citizenshipRequired: 'citizenshipRequired',
    applicationRequired: 'applicationRequired',
    applicationDeadline: 'applicationDeadline',
    documentsRequired: 'documentsRequired',
    isActive: 'isActive',
    applicationOpenDate: 'applicationOpenDate',
    applicationCloseDate: 'applicationCloseDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FinancialAidScalarFieldEnum = (typeof FinancialAidScalarFieldEnum)[keyof typeof FinancialAidScalarFieldEnum]


  export const FinancialAidApplicationScalarFieldEnum: {
    id: 'id',
    financialAidId: 'financialAidId',
    userId: 'userId',
    applicationId: 'applicationId',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phone: 'phone',
    familyIncome: 'familyIncome',
    assets: 'assets',
    liabilities: 'liabilities',
    dependents: 'dependents',
    applicationStatus: 'applicationStatus',
    submissionDate: 'submissionDate',
    reviewDate: 'reviewDate',
    decisionDate: 'decisionDate',
    approvedAmount: 'approvedAmount',
    documentsUploaded: 'documentsUploaded',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FinancialAidApplicationScalarFieldEnum = (typeof FinancialAidApplicationScalarFieldEnum)[keyof typeof FinancialAidApplicationScalarFieldEnum]


  export const Admin_UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    passwordHash: 'passwordHash',
    firstName: 'firstName',
    lastName: 'lastName',
    role: 'role',
    status: 'status',
    is2FAEnabled: 'is2FAEnabled',
    twoFactorSecret: 'twoFactorSecret',
    phone: 'phone',
    profileImageUrl: 'profileImageUrl',
    lastLogin: 'lastLogin',
    lastLoginIP: 'lastLoginIP',
    failedLoginAttempts: 'failedLoginAttempts',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Admin_UserScalarFieldEnum = (typeof Admin_UserScalarFieldEnum)[keyof typeof Admin_UserScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const EssayPromptScalarFieldEnum: {
    id: 'id',
    admissionId: 'admissionId',
    programId: 'programId',
    intakeId: 'intakeId',
    promptTitle: 'promptTitle',
    promptText: 'promptText',
    wordLimit: 'wordLimit',
    minWordCount: 'minWordCount',
    isMandatory: 'isMandatory',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EssayPromptScalarFieldEnum = (typeof EssayPromptScalarFieldEnum)[keyof typeof EssayPromptScalarFieldEnum]


  export const EssaySubmissionScalarFieldEnum: {
    id: 'id',
    essayPromptId: 'essayPromptId',
    userId: 'userId',
    applicationId: 'applicationId',
    title: 'title',
    content: 'content',
    wordCount: 'wordCount',
    status: 'status',
    submissionDate: 'submissionDate',
    lastEditedAt: 'lastEditedAt',
    isUsingTemplate: 'isUsingTemplate',
    templateVersion: 'templateVersion',
    reviewStatus: 'reviewStatus',
    reviewerId: 'reviewerId',
    reviewerComment: 'reviewerComment',
    internalRating: 'internalRating',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EssaySubmissionScalarFieldEnum = (typeof EssaySubmissionScalarFieldEnum)[keyof typeof EssaySubmissionScalarFieldEnum]


  export const EssayScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    applicationId: 'applicationId',
    programId: 'programId',
    essayPromptId: 'essayPromptId',
    title: 'title',
    content: 'content',
    wordCount: 'wordCount',
    wordLimit: 'wordLimit',
    status: 'status',
    priority: 'priority',
    isCompleted: 'isCompleted',
    completedAt: 'completedAt',
    completionPercentage: 'completionPercentage',
    lastModified: 'lastModified',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lastAutoSaved: 'lastAutoSaved',
    autoSaveEnabled: 'autoSaveEnabled'
  };

  export type EssayScalarFieldEnum = (typeof EssayScalarFieldEnum)[keyof typeof EssayScalarFieldEnum]


  export const EssayVersionScalarFieldEnum: {
    id: 'id',
    essayId: 'essayId',
    content: 'content',
    wordCount: 'wordCount',
    label: 'label',
    timestamp: 'timestamp',
    isAutoSave: 'isAutoSave',
    changesSinceLastVersion: 'changesSinceLastVersion'
  };

  export type EssayVersionScalarFieldEnum = (typeof EssayVersionScalarFieldEnum)[keyof typeof EssayVersionScalarFieldEnum]


  export const AIResultScalarFieldEnum: {
    id: 'id',
    essayId: 'essayId',
    essayVersionId: 'essayVersionId',
    analysisType: 'analysisType',
    overallScore: 'overallScore',
    suggestions: 'suggestions',
    strengths: 'strengths',
    improvements: 'improvements',
    warnings: 'warnings',
    aiProvider: 'aiProvider',
    modelUsed: 'modelUsed',
    promptVersion: 'promptVersion',
    status: 'status',
    processingTime: 'processingTime',
    errorMessage: 'errorMessage',
    readabilityScore: 'readabilityScore',
    sentenceCount: 'sentenceCount',
    paragraphCount: 'paragraphCount',
    avgSentenceLength: 'avgSentenceLength',
    complexWordCount: 'complexWordCount',
    passiveVoiceCount: 'passiveVoiceCount',
    structureScore: 'structureScore',
    contentRelevance: 'contentRelevance',
    narrativeFlow: 'narrativeFlow',
    leadershipEmphasis: 'leadershipEmphasis',
    specificityScore: 'specificityScore',
    grammarIssues: 'grammarIssues',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AIResultScalarFieldEnum = (typeof AIResultScalarFieldEnum)[keyof typeof AIResultScalarFieldEnum]


  export const EssayCompletionLogScalarFieldEnum: {
    id: 'id',
    essayId: 'essayId',
    userId: 'userId',
    completedAt: 'completedAt',
    wordCountAtCompletion: 'wordCountAtCompletion',
    wordLimit: 'wordLimit',
    completionMethod: 'completionMethod',
    previousStatus: 'previousStatus',
    programId: 'programId',
    universityId: 'universityId',
    essayPromptTitle: 'essayPromptTitle',
    createdAt: 'createdAt'
  };

  export type EssayCompletionLogScalarFieldEnum = (typeof EssayCompletionLogScalarFieldEnum)[keyof typeof EssayCompletionLogScalarFieldEnum]


  export const CalendarEventScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    title: 'title',
    description: 'description',
    location: 'location',
    startDate: 'startDate',
    endDate: 'endDate',
    timezone: 'timezone',
    isAllDay: 'isAllDay',
    eventType: 'eventType',
    eventStatus: 'eventStatus',
    priority: 'priority',
    universityId: 'universityId',
    programId: 'programId',
    applicationId: 'applicationId',
    admissionId: 'admissionId',
    intakeId: 'intakeId',
    admissionDeadlineId: 'admissionDeadlineId',
    interviewId: 'interviewId',
    scholarshipId: 'scholarshipId',
    isRecurring: 'isRecurring',
    recurringPattern: 'recurringPattern',
    parentEventId: 'parentEventId',
    hasReminders: 'hasReminders',
    isSystemGenerated: 'isSystemGenerated',
    color: 'color',
    isVisible: 'isVisible',
    completionStatus: 'completionStatus',
    completedAt: 'completedAt',
    completionNotes: 'completionNotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lastModifiedBy: 'lastModifiedBy'
  };

  export type CalendarEventScalarFieldEnum = (typeof CalendarEventScalarFieldEnum)[keyof typeof CalendarEventScalarFieldEnum]


  export const EventReminderScalarFieldEnum: {
    id: 'id',
    eventId: 'eventId',
    userId: 'userId',
    reminderType: 'reminderType',
    reminderTime: 'reminderTime',
    reminderMessage: 'reminderMessage',
    scheduledFor: 'scheduledFor',
    isActive: 'isActive',
    isSent: 'isSent',
    sentAt: 'sentAt',
    failureReason: 'failureReason',
    retryCount: 'retryCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EventReminderScalarFieldEnum = (typeof EventReminderScalarFieldEnum)[keyof typeof EventReminderScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    provider?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    profile?: XOR<UserProfileNullableScalarRelationFilter, UserProfileWhereInput> | null
    subscription?: XOR<SubscriptionNullableScalarRelationFilter, SubscriptionWhereInput> | null
    applications?: ApplicationListRelationFilter
    scholarshipApplications?: ScholarshipApplicationListRelationFilter
    financialAidApplications?: FinancialAidApplicationListRelationFilter
    essaySubmissions?: EssaySubmissionListRelationFilter
    savedUniversities?: UniversityListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
    eventReminders?: EventReminderListRelationFilter
    essays?: EssayListRelationFilter
    EssayCompletionLog?: EssayCompletionLogListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    provider?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    profile?: UserProfileOrderByWithRelationInput
    subscription?: SubscriptionOrderByWithRelationInput
    applications?: ApplicationOrderByRelationAggregateInput
    scholarshipApplications?: ScholarshipApplicationOrderByRelationAggregateInput
    financialAidApplications?: FinancialAidApplicationOrderByRelationAggregateInput
    essaySubmissions?: EssaySubmissionOrderByRelationAggregateInput
    savedUniversities?: UniversityOrderByRelationAggregateInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
    eventReminders?: EventReminderOrderByRelationAggregateInput
    essays?: EssayOrderByRelationAggregateInput
    EssayCompletionLog?: EssayCompletionLogOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    provider?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    profile?: XOR<UserProfileNullableScalarRelationFilter, UserProfileWhereInput> | null
    subscription?: XOR<SubscriptionNullableScalarRelationFilter, SubscriptionWhereInput> | null
    applications?: ApplicationListRelationFilter
    scholarshipApplications?: ScholarshipApplicationListRelationFilter
    financialAidApplications?: FinancialAidApplicationListRelationFilter
    essaySubmissions?: EssaySubmissionListRelationFilter
    savedUniversities?: UniversityListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
    eventReminders?: EventReminderListRelationFilter
    essays?: EssayListRelationFilter
    EssayCompletionLog?: EssayCompletionLogListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    provider?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    password?: StringNullableWithAggregatesFilter<"User"> | string | null
    provider?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type UserProfileWhereInput = {
    AND?: UserProfileWhereInput | UserProfileWhereInput[]
    OR?: UserProfileWhereInput[]
    NOT?: UserProfileWhereInput | UserProfileWhereInput[]
    id?: StringFilter<"UserProfile"> | string
    userId?: StringFilter<"UserProfile"> | string
    countries?: StringNullableListFilter<"UserProfile">
    courses?: StringNullableListFilter<"UserProfile">
    studyLevel?: StringNullableFilter<"UserProfile"> | string | null
    gpa?: StringNullableFilter<"UserProfile"> | string | null
    testScores?: StringNullableFilter<"UserProfile"> | string | null
    workExperience?: StringNullableFilter<"UserProfile"> | string | null
    createdAt?: DateTimeFilter<"UserProfile"> | Date | string
    updatedAt?: DateTimeFilter<"UserProfile"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserProfileOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    countries?: SortOrder
    courses?: SortOrder
    studyLevel?: SortOrderInput | SortOrder
    gpa?: SortOrderInput | SortOrder
    testScores?: SortOrderInput | SortOrder
    workExperience?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: UserProfileWhereInput | UserProfileWhereInput[]
    OR?: UserProfileWhereInput[]
    NOT?: UserProfileWhereInput | UserProfileWhereInput[]
    countries?: StringNullableListFilter<"UserProfile">
    courses?: StringNullableListFilter<"UserProfile">
    studyLevel?: StringNullableFilter<"UserProfile"> | string | null
    gpa?: StringNullableFilter<"UserProfile"> | string | null
    testScores?: StringNullableFilter<"UserProfile"> | string | null
    workExperience?: StringNullableFilter<"UserProfile"> | string | null
    createdAt?: DateTimeFilter<"UserProfile"> | Date | string
    updatedAt?: DateTimeFilter<"UserProfile"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type UserProfileOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    countries?: SortOrder
    courses?: SortOrder
    studyLevel?: SortOrderInput | SortOrder
    gpa?: SortOrderInput | SortOrder
    testScores?: SortOrderInput | SortOrder
    workExperience?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserProfileCountOrderByAggregateInput
    _max?: UserProfileMaxOrderByAggregateInput
    _min?: UserProfileMinOrderByAggregateInput
  }

  export type UserProfileScalarWhereWithAggregatesInput = {
    AND?: UserProfileScalarWhereWithAggregatesInput | UserProfileScalarWhereWithAggregatesInput[]
    OR?: UserProfileScalarWhereWithAggregatesInput[]
    NOT?: UserProfileScalarWhereWithAggregatesInput | UserProfileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserProfile"> | string
    userId?: StringWithAggregatesFilter<"UserProfile"> | string
    countries?: StringNullableListFilter<"UserProfile">
    courses?: StringNullableListFilter<"UserProfile">
    studyLevel?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    gpa?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    testScores?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    workExperience?: StringNullableWithAggregatesFilter<"UserProfile"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UserProfile"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserProfile"> | Date | string
  }

  export type SubscriptionWhereInput = {
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    id?: StringFilter<"Subscription"> | string
    userId?: StringFilter<"Subscription"> | string
    plan?: StringFilter<"Subscription"> | string
    status?: StringFilter<"Subscription"> | string
    billingCycle?: StringNullableFilter<"Subscription"> | string | null
    trialStartDate?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialEndDate?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    currentPeriodStart?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    currentPeriodEnd?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    stripeCustomerId?: StringNullableFilter<"Subscription"> | string | null
    stripeSubscriptionId?: StringNullableFilter<"Subscription"> | string | null
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SubscriptionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    billingCycle?: SortOrderInput | SortOrder
    trialStartDate?: SortOrderInput | SortOrder
    trialEndDate?: SortOrderInput | SortOrder
    currentPeriodStart?: SortOrderInput | SortOrder
    currentPeriodEnd?: SortOrderInput | SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    stripeSubscriptionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SubscriptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    plan?: StringFilter<"Subscription"> | string
    status?: StringFilter<"Subscription"> | string
    billingCycle?: StringNullableFilter<"Subscription"> | string | null
    trialStartDate?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    trialEndDate?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    currentPeriodStart?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    currentPeriodEnd?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    stripeCustomerId?: StringNullableFilter<"Subscription"> | string | null
    stripeSubscriptionId?: StringNullableFilter<"Subscription"> | string | null
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type SubscriptionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    billingCycle?: SortOrderInput | SortOrder
    trialStartDate?: SortOrderInput | SortOrder
    trialEndDate?: SortOrderInput | SortOrder
    currentPeriodStart?: SortOrderInput | SortOrder
    currentPeriodEnd?: SortOrderInput | SortOrder
    stripeCustomerId?: SortOrderInput | SortOrder
    stripeSubscriptionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubscriptionCountOrderByAggregateInput
    _max?: SubscriptionMaxOrderByAggregateInput
    _min?: SubscriptionMinOrderByAggregateInput
  }

  export type SubscriptionScalarWhereWithAggregatesInput = {
    AND?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    OR?: SubscriptionScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Subscription"> | string
    userId?: StringWithAggregatesFilter<"Subscription"> | string
    plan?: StringWithAggregatesFilter<"Subscription"> | string
    status?: StringWithAggregatesFilter<"Subscription"> | string
    billingCycle?: StringNullableWithAggregatesFilter<"Subscription"> | string | null
    trialStartDate?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    trialEndDate?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    currentPeriodStart?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    currentPeriodEnd?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    stripeCustomerId?: StringNullableWithAggregatesFilter<"Subscription"> | string | null
    stripeSubscriptionId?: StringNullableWithAggregatesFilter<"Subscription"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
  }

  export type PaymentEventWhereInput = {
    AND?: PaymentEventWhereInput | PaymentEventWhereInput[]
    OR?: PaymentEventWhereInput[]
    NOT?: PaymentEventWhereInput | PaymentEventWhereInput[]
    id?: StringFilter<"PaymentEvent"> | string
    userId?: StringNullableFilter<"PaymentEvent"> | string | null
    eventType?: StringNullableFilter<"PaymentEvent"> | string | null
    plan?: StringNullableFilter<"PaymentEvent"> | string | null
    amount?: FloatNullableFilter<"PaymentEvent"> | number | null
    currency?: StringFilter<"PaymentEvent"> | string
    stripeEventId?: StringNullableFilter<"PaymentEvent"> | string | null
    createdAt?: DateTimeFilter<"PaymentEvent"> | Date | string
  }

  export type PaymentEventOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    eventType?: SortOrderInput | SortOrder
    plan?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    currency?: SortOrder
    stripeEventId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
  }

  export type PaymentEventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentEventWhereInput | PaymentEventWhereInput[]
    OR?: PaymentEventWhereInput[]
    NOT?: PaymentEventWhereInput | PaymentEventWhereInput[]
    userId?: StringNullableFilter<"PaymentEvent"> | string | null
    eventType?: StringNullableFilter<"PaymentEvent"> | string | null
    plan?: StringNullableFilter<"PaymentEvent"> | string | null
    amount?: FloatNullableFilter<"PaymentEvent"> | number | null
    currency?: StringFilter<"PaymentEvent"> | string
    stripeEventId?: StringNullableFilter<"PaymentEvent"> | string | null
    createdAt?: DateTimeFilter<"PaymentEvent"> | Date | string
  }, "id">

  export type PaymentEventOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    eventType?: SortOrderInput | SortOrder
    plan?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    currency?: SortOrder
    stripeEventId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PaymentEventCountOrderByAggregateInput
    _avg?: PaymentEventAvgOrderByAggregateInput
    _max?: PaymentEventMaxOrderByAggregateInput
    _min?: PaymentEventMinOrderByAggregateInput
    _sum?: PaymentEventSumOrderByAggregateInput
  }

  export type PaymentEventScalarWhereWithAggregatesInput = {
    AND?: PaymentEventScalarWhereWithAggregatesInput | PaymentEventScalarWhereWithAggregatesInput[]
    OR?: PaymentEventScalarWhereWithAggregatesInput[]
    NOT?: PaymentEventScalarWhereWithAggregatesInput | PaymentEventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentEvent"> | string
    userId?: StringNullableWithAggregatesFilter<"PaymentEvent"> | string | null
    eventType?: StringNullableWithAggregatesFilter<"PaymentEvent"> | string | null
    plan?: StringNullableWithAggregatesFilter<"PaymentEvent"> | string | null
    amount?: FloatNullableWithAggregatesFilter<"PaymentEvent"> | number | null
    currency?: StringWithAggregatesFilter<"PaymentEvent"> | string
    stripeEventId?: StringNullableWithAggregatesFilter<"PaymentEvent"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PaymentEvent"> | Date | string
  }

  export type UniversityWhereInput = {
    AND?: UniversityWhereInput | UniversityWhereInput[]
    OR?: UniversityWhereInput[]
    NOT?: UniversityWhereInput | UniversityWhereInput[]
    id?: StringFilter<"University"> | string
    universityName?: StringFilter<"University"> | string
    slug?: StringFilter<"University"> | string
    city?: StringFilter<"University"> | string
    state?: StringNullableFilter<"University"> | string | null
    country?: StringFilter<"University"> | string
    fullAddress?: StringNullableFilter<"University"> | string | null
    shortDescription?: StringNullableFilter<"University"> | string | null
    overview?: StringNullableFilter<"University"> | string | null
    history?: StringNullableFilter<"University"> | string | null
    missionStatement?: StringNullableFilter<"University"> | string | null
    visionStatement?: StringNullableFilter<"University"> | string | null
    accreditationDetails?: StringNullableFilter<"University"> | string | null
    whyChooseHighlights?: StringNullableListFilter<"University">
    careerOutcomes?: StringNullableFilter<"University"> | string | null
    ftGlobalRanking?: IntNullableFilter<"University"> | number | null
    ftRegionalRanking?: IntNullableFilter<"University"> | number | null
    ftRankingYear?: IntNullableFilter<"University"> | number | null
    usNewsRanking?: IntNullableFilter<"University"> | number | null
    qsRanking?: IntNullableFilter<"University"> | number | null
    timesRanking?: IntNullableFilter<"University"> | number | null
    acceptanceRate?: FloatNullableFilter<"University"> | number | null
    gmatAverageScore?: IntNullableFilter<"University"> | number | null
    gmatScoreMin?: IntNullableFilter<"University"> | number | null
    gmatScoreMax?: IntNullableFilter<"University"> | number | null
    minimumGpa?: FloatNullableFilter<"University"> | number | null
    languageTestRequirements?: StringNullableFilter<"University"> | string | null
    tuitionFees?: FloatNullableFilter<"University"> | number | null
    additionalFees?: FloatNullableFilter<"University"> | number | null
    totalCost?: FloatNullableFilter<"University"> | number | null
    currency?: StringFilter<"University"> | string
    scholarshipInfo?: StringNullableFilter<"University"> | string | null
    financialAidDetails?: StringNullableFilter<"University"> | string | null
    admissionsOfficeContact?: StringNullableFilter<"University"> | string | null
    internationalOfficeContact?: StringNullableFilter<"University"> | string | null
    generalInquiriesContact?: StringNullableFilter<"University"> | string | null
    websiteUrl?: StringNullableFilter<"University"> | string | null
    metaTitle?: StringNullableFilter<"University"> | string | null
    metaDescription?: StringNullableFilter<"University"> | string | null
    metaKeywords?: StringNullableFilter<"University"> | string | null
    canonicalUrl?: StringNullableFilter<"University"> | string | null
    isActive?: BoolFilter<"University"> | boolean
    isFeatured?: BoolFilter<"University"> | boolean
    createdAt?: DateTimeFilter<"University"> | Date | string
    updatedAt?: DateTimeFilter<"University"> | Date | string
    averageDeadlines?: StringNullableFilter<"University"> | string | null
    studentsPerYear?: IntNullableFilter<"University"> | number | null
    brochureUrl?: StringNullableFilter<"University"> | string | null
    additionalDocumentUrls?: StringNullableListFilter<"University">
    averageProgramLengthMonths?: IntNullableFilter<"University"> | number | null
    intakes?: StringNullableFilter<"University"> | string | null
    images?: UniversityImageListRelationFilter
    programs?: ProgramListRelationFilter
    departments?: DepartmentListRelationFilter
    admissions?: AdmissionListRelationFilter
    applications?: ApplicationListRelationFilter
    tuitionBreakdowns?: TuitionBreakdownListRelationFilter
    scholarships?: ScholarshipListRelationFilter
    feeStructures?: FeeStructureListRelationFilter
    financialAids?: FinancialAidListRelationFilter
    savedByUsers?: UserListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }

  export type UniversityOrderByWithRelationInput = {
    id?: SortOrder
    universityName?: SortOrder
    slug?: SortOrder
    city?: SortOrder
    state?: SortOrderInput | SortOrder
    country?: SortOrder
    fullAddress?: SortOrderInput | SortOrder
    shortDescription?: SortOrderInput | SortOrder
    overview?: SortOrderInput | SortOrder
    history?: SortOrderInput | SortOrder
    missionStatement?: SortOrderInput | SortOrder
    visionStatement?: SortOrderInput | SortOrder
    accreditationDetails?: SortOrderInput | SortOrder
    whyChooseHighlights?: SortOrder
    careerOutcomes?: SortOrderInput | SortOrder
    ftGlobalRanking?: SortOrderInput | SortOrder
    ftRegionalRanking?: SortOrderInput | SortOrder
    ftRankingYear?: SortOrderInput | SortOrder
    usNewsRanking?: SortOrderInput | SortOrder
    qsRanking?: SortOrderInput | SortOrder
    timesRanking?: SortOrderInput | SortOrder
    acceptanceRate?: SortOrderInput | SortOrder
    gmatAverageScore?: SortOrderInput | SortOrder
    gmatScoreMin?: SortOrderInput | SortOrder
    gmatScoreMax?: SortOrderInput | SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    languageTestRequirements?: SortOrderInput | SortOrder
    tuitionFees?: SortOrderInput | SortOrder
    additionalFees?: SortOrderInput | SortOrder
    totalCost?: SortOrderInput | SortOrder
    currency?: SortOrder
    scholarshipInfo?: SortOrderInput | SortOrder
    financialAidDetails?: SortOrderInput | SortOrder
    admissionsOfficeContact?: SortOrderInput | SortOrder
    internationalOfficeContact?: SortOrderInput | SortOrder
    generalInquiriesContact?: SortOrderInput | SortOrder
    websiteUrl?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    metaKeywords?: SortOrderInput | SortOrder
    canonicalUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    averageDeadlines?: SortOrderInput | SortOrder
    studentsPerYear?: SortOrderInput | SortOrder
    brochureUrl?: SortOrderInput | SortOrder
    additionalDocumentUrls?: SortOrder
    averageProgramLengthMonths?: SortOrderInput | SortOrder
    intakes?: SortOrderInput | SortOrder
    images?: UniversityImageOrderByRelationAggregateInput
    programs?: ProgramOrderByRelationAggregateInput
    departments?: DepartmentOrderByRelationAggregateInput
    admissions?: AdmissionOrderByRelationAggregateInput
    applications?: ApplicationOrderByRelationAggregateInput
    tuitionBreakdowns?: TuitionBreakdownOrderByRelationAggregateInput
    scholarships?: ScholarshipOrderByRelationAggregateInput
    feeStructures?: FeeStructureOrderByRelationAggregateInput
    financialAids?: FinancialAidOrderByRelationAggregateInput
    savedByUsers?: UserOrderByRelationAggregateInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
  }

  export type UniversityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: UniversityWhereInput | UniversityWhereInput[]
    OR?: UniversityWhereInput[]
    NOT?: UniversityWhereInput | UniversityWhereInput[]
    universityName?: StringFilter<"University"> | string
    city?: StringFilter<"University"> | string
    state?: StringNullableFilter<"University"> | string | null
    country?: StringFilter<"University"> | string
    fullAddress?: StringNullableFilter<"University"> | string | null
    shortDescription?: StringNullableFilter<"University"> | string | null
    overview?: StringNullableFilter<"University"> | string | null
    history?: StringNullableFilter<"University"> | string | null
    missionStatement?: StringNullableFilter<"University"> | string | null
    visionStatement?: StringNullableFilter<"University"> | string | null
    accreditationDetails?: StringNullableFilter<"University"> | string | null
    whyChooseHighlights?: StringNullableListFilter<"University">
    careerOutcomes?: StringNullableFilter<"University"> | string | null
    ftGlobalRanking?: IntNullableFilter<"University"> | number | null
    ftRegionalRanking?: IntNullableFilter<"University"> | number | null
    ftRankingYear?: IntNullableFilter<"University"> | number | null
    usNewsRanking?: IntNullableFilter<"University"> | number | null
    qsRanking?: IntNullableFilter<"University"> | number | null
    timesRanking?: IntNullableFilter<"University"> | number | null
    acceptanceRate?: FloatNullableFilter<"University"> | number | null
    gmatAverageScore?: IntNullableFilter<"University"> | number | null
    gmatScoreMin?: IntNullableFilter<"University"> | number | null
    gmatScoreMax?: IntNullableFilter<"University"> | number | null
    minimumGpa?: FloatNullableFilter<"University"> | number | null
    languageTestRequirements?: StringNullableFilter<"University"> | string | null
    tuitionFees?: FloatNullableFilter<"University"> | number | null
    additionalFees?: FloatNullableFilter<"University"> | number | null
    totalCost?: FloatNullableFilter<"University"> | number | null
    currency?: StringFilter<"University"> | string
    scholarshipInfo?: StringNullableFilter<"University"> | string | null
    financialAidDetails?: StringNullableFilter<"University"> | string | null
    admissionsOfficeContact?: StringNullableFilter<"University"> | string | null
    internationalOfficeContact?: StringNullableFilter<"University"> | string | null
    generalInquiriesContact?: StringNullableFilter<"University"> | string | null
    websiteUrl?: StringNullableFilter<"University"> | string | null
    metaTitle?: StringNullableFilter<"University"> | string | null
    metaDescription?: StringNullableFilter<"University"> | string | null
    metaKeywords?: StringNullableFilter<"University"> | string | null
    canonicalUrl?: StringNullableFilter<"University"> | string | null
    isActive?: BoolFilter<"University"> | boolean
    isFeatured?: BoolFilter<"University"> | boolean
    createdAt?: DateTimeFilter<"University"> | Date | string
    updatedAt?: DateTimeFilter<"University"> | Date | string
    averageDeadlines?: StringNullableFilter<"University"> | string | null
    studentsPerYear?: IntNullableFilter<"University"> | number | null
    brochureUrl?: StringNullableFilter<"University"> | string | null
    additionalDocumentUrls?: StringNullableListFilter<"University">
    averageProgramLengthMonths?: IntNullableFilter<"University"> | number | null
    intakes?: StringNullableFilter<"University"> | string | null
    images?: UniversityImageListRelationFilter
    programs?: ProgramListRelationFilter
    departments?: DepartmentListRelationFilter
    admissions?: AdmissionListRelationFilter
    applications?: ApplicationListRelationFilter
    tuitionBreakdowns?: TuitionBreakdownListRelationFilter
    scholarships?: ScholarshipListRelationFilter
    feeStructures?: FeeStructureListRelationFilter
    financialAids?: FinancialAidListRelationFilter
    savedByUsers?: UserListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }, "id" | "slug">

  export type UniversityOrderByWithAggregationInput = {
    id?: SortOrder
    universityName?: SortOrder
    slug?: SortOrder
    city?: SortOrder
    state?: SortOrderInput | SortOrder
    country?: SortOrder
    fullAddress?: SortOrderInput | SortOrder
    shortDescription?: SortOrderInput | SortOrder
    overview?: SortOrderInput | SortOrder
    history?: SortOrderInput | SortOrder
    missionStatement?: SortOrderInput | SortOrder
    visionStatement?: SortOrderInput | SortOrder
    accreditationDetails?: SortOrderInput | SortOrder
    whyChooseHighlights?: SortOrder
    careerOutcomes?: SortOrderInput | SortOrder
    ftGlobalRanking?: SortOrderInput | SortOrder
    ftRegionalRanking?: SortOrderInput | SortOrder
    ftRankingYear?: SortOrderInput | SortOrder
    usNewsRanking?: SortOrderInput | SortOrder
    qsRanking?: SortOrderInput | SortOrder
    timesRanking?: SortOrderInput | SortOrder
    acceptanceRate?: SortOrderInput | SortOrder
    gmatAverageScore?: SortOrderInput | SortOrder
    gmatScoreMin?: SortOrderInput | SortOrder
    gmatScoreMax?: SortOrderInput | SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    languageTestRequirements?: SortOrderInput | SortOrder
    tuitionFees?: SortOrderInput | SortOrder
    additionalFees?: SortOrderInput | SortOrder
    totalCost?: SortOrderInput | SortOrder
    currency?: SortOrder
    scholarshipInfo?: SortOrderInput | SortOrder
    financialAidDetails?: SortOrderInput | SortOrder
    admissionsOfficeContact?: SortOrderInput | SortOrder
    internationalOfficeContact?: SortOrderInput | SortOrder
    generalInquiriesContact?: SortOrderInput | SortOrder
    websiteUrl?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    metaKeywords?: SortOrderInput | SortOrder
    canonicalUrl?: SortOrderInput | SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    averageDeadlines?: SortOrderInput | SortOrder
    studentsPerYear?: SortOrderInput | SortOrder
    brochureUrl?: SortOrderInput | SortOrder
    additionalDocumentUrls?: SortOrder
    averageProgramLengthMonths?: SortOrderInput | SortOrder
    intakes?: SortOrderInput | SortOrder
    _count?: UniversityCountOrderByAggregateInput
    _avg?: UniversityAvgOrderByAggregateInput
    _max?: UniversityMaxOrderByAggregateInput
    _min?: UniversityMinOrderByAggregateInput
    _sum?: UniversitySumOrderByAggregateInput
  }

  export type UniversityScalarWhereWithAggregatesInput = {
    AND?: UniversityScalarWhereWithAggregatesInput | UniversityScalarWhereWithAggregatesInput[]
    OR?: UniversityScalarWhereWithAggregatesInput[]
    NOT?: UniversityScalarWhereWithAggregatesInput | UniversityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"University"> | string
    universityName?: StringWithAggregatesFilter<"University"> | string
    slug?: StringWithAggregatesFilter<"University"> | string
    city?: StringWithAggregatesFilter<"University"> | string
    state?: StringNullableWithAggregatesFilter<"University"> | string | null
    country?: StringWithAggregatesFilter<"University"> | string
    fullAddress?: StringNullableWithAggregatesFilter<"University"> | string | null
    shortDescription?: StringNullableWithAggregatesFilter<"University"> | string | null
    overview?: StringNullableWithAggregatesFilter<"University"> | string | null
    history?: StringNullableWithAggregatesFilter<"University"> | string | null
    missionStatement?: StringNullableWithAggregatesFilter<"University"> | string | null
    visionStatement?: StringNullableWithAggregatesFilter<"University"> | string | null
    accreditationDetails?: StringNullableWithAggregatesFilter<"University"> | string | null
    whyChooseHighlights?: StringNullableListFilter<"University">
    careerOutcomes?: StringNullableWithAggregatesFilter<"University"> | string | null
    ftGlobalRanking?: IntNullableWithAggregatesFilter<"University"> | number | null
    ftRegionalRanking?: IntNullableWithAggregatesFilter<"University"> | number | null
    ftRankingYear?: IntNullableWithAggregatesFilter<"University"> | number | null
    usNewsRanking?: IntNullableWithAggregatesFilter<"University"> | number | null
    qsRanking?: IntNullableWithAggregatesFilter<"University"> | number | null
    timesRanking?: IntNullableWithAggregatesFilter<"University"> | number | null
    acceptanceRate?: FloatNullableWithAggregatesFilter<"University"> | number | null
    gmatAverageScore?: IntNullableWithAggregatesFilter<"University"> | number | null
    gmatScoreMin?: IntNullableWithAggregatesFilter<"University"> | number | null
    gmatScoreMax?: IntNullableWithAggregatesFilter<"University"> | number | null
    minimumGpa?: FloatNullableWithAggregatesFilter<"University"> | number | null
    languageTestRequirements?: StringNullableWithAggregatesFilter<"University"> | string | null
    tuitionFees?: FloatNullableWithAggregatesFilter<"University"> | number | null
    additionalFees?: FloatNullableWithAggregatesFilter<"University"> | number | null
    totalCost?: FloatNullableWithAggregatesFilter<"University"> | number | null
    currency?: StringWithAggregatesFilter<"University"> | string
    scholarshipInfo?: StringNullableWithAggregatesFilter<"University"> | string | null
    financialAidDetails?: StringNullableWithAggregatesFilter<"University"> | string | null
    admissionsOfficeContact?: StringNullableWithAggregatesFilter<"University"> | string | null
    internationalOfficeContact?: StringNullableWithAggregatesFilter<"University"> | string | null
    generalInquiriesContact?: StringNullableWithAggregatesFilter<"University"> | string | null
    websiteUrl?: StringNullableWithAggregatesFilter<"University"> | string | null
    metaTitle?: StringNullableWithAggregatesFilter<"University"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"University"> | string | null
    metaKeywords?: StringNullableWithAggregatesFilter<"University"> | string | null
    canonicalUrl?: StringNullableWithAggregatesFilter<"University"> | string | null
    isActive?: BoolWithAggregatesFilter<"University"> | boolean
    isFeatured?: BoolWithAggregatesFilter<"University"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"University"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"University"> | Date | string
    averageDeadlines?: StringNullableWithAggregatesFilter<"University"> | string | null
    studentsPerYear?: IntNullableWithAggregatesFilter<"University"> | number | null
    brochureUrl?: StringNullableWithAggregatesFilter<"University"> | string | null
    additionalDocumentUrls?: StringNullableListFilter<"University">
    averageProgramLengthMonths?: IntNullableWithAggregatesFilter<"University"> | number | null
    intakes?: StringNullableWithAggregatesFilter<"University"> | string | null
  }

  export type UniversityImageWhereInput = {
    AND?: UniversityImageWhereInput | UniversityImageWhereInput[]
    OR?: UniversityImageWhereInput[]
    NOT?: UniversityImageWhereInput | UniversityImageWhereInput[]
    id?: StringFilter<"UniversityImage"> | string
    universityId?: StringFilter<"UniversityImage"> | string
    imageUrl?: StringFilter<"UniversityImage"> | string
    imageType?: StringNullableFilter<"UniversityImage"> | string | null
    imageTitle?: StringNullableFilter<"UniversityImage"> | string | null
    imageAltText?: StringFilter<"UniversityImage"> | string
    imageCaption?: StringNullableFilter<"UniversityImage"> | string | null
    fileSize?: IntNullableFilter<"UniversityImage"> | number | null
    width?: IntNullableFilter<"UniversityImage"> | number | null
    height?: IntNullableFilter<"UniversityImage"> | number | null
    isPrimary?: BoolFilter<"UniversityImage"> | boolean
    displayOrder?: IntFilter<"UniversityImage"> | number
    createdAt?: DateTimeFilter<"UniversityImage"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
  }

  export type UniversityImageOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    imageUrl?: SortOrder
    imageType?: SortOrderInput | SortOrder
    imageTitle?: SortOrderInput | SortOrder
    imageAltText?: SortOrder
    imageCaption?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
  }

  export type UniversityImageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UniversityImageWhereInput | UniversityImageWhereInput[]
    OR?: UniversityImageWhereInput[]
    NOT?: UniversityImageWhereInput | UniversityImageWhereInput[]
    universityId?: StringFilter<"UniversityImage"> | string
    imageUrl?: StringFilter<"UniversityImage"> | string
    imageType?: StringNullableFilter<"UniversityImage"> | string | null
    imageTitle?: StringNullableFilter<"UniversityImage"> | string | null
    imageAltText?: StringFilter<"UniversityImage"> | string
    imageCaption?: StringNullableFilter<"UniversityImage"> | string | null
    fileSize?: IntNullableFilter<"UniversityImage"> | number | null
    width?: IntNullableFilter<"UniversityImage"> | number | null
    height?: IntNullableFilter<"UniversityImage"> | number | null
    isPrimary?: BoolFilter<"UniversityImage"> | boolean
    displayOrder?: IntFilter<"UniversityImage"> | number
    createdAt?: DateTimeFilter<"UniversityImage"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
  }, "id">

  export type UniversityImageOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    imageUrl?: SortOrder
    imageType?: SortOrderInput | SortOrder
    imageTitle?: SortOrderInput | SortOrder
    imageAltText?: SortOrder
    imageCaption?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    _count?: UniversityImageCountOrderByAggregateInput
    _avg?: UniversityImageAvgOrderByAggregateInput
    _max?: UniversityImageMaxOrderByAggregateInput
    _min?: UniversityImageMinOrderByAggregateInput
    _sum?: UniversityImageSumOrderByAggregateInput
  }

  export type UniversityImageScalarWhereWithAggregatesInput = {
    AND?: UniversityImageScalarWhereWithAggregatesInput | UniversityImageScalarWhereWithAggregatesInput[]
    OR?: UniversityImageScalarWhereWithAggregatesInput[]
    NOT?: UniversityImageScalarWhereWithAggregatesInput | UniversityImageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UniversityImage"> | string
    universityId?: StringWithAggregatesFilter<"UniversityImage"> | string
    imageUrl?: StringWithAggregatesFilter<"UniversityImage"> | string
    imageType?: StringNullableWithAggregatesFilter<"UniversityImage"> | string | null
    imageTitle?: StringNullableWithAggregatesFilter<"UniversityImage"> | string | null
    imageAltText?: StringWithAggregatesFilter<"UniversityImage"> | string
    imageCaption?: StringNullableWithAggregatesFilter<"UniversityImage"> | string | null
    fileSize?: IntNullableWithAggregatesFilter<"UniversityImage"> | number | null
    width?: IntNullableWithAggregatesFilter<"UniversityImage"> | number | null
    height?: IntNullableWithAggregatesFilter<"UniversityImage"> | number | null
    isPrimary?: BoolWithAggregatesFilter<"UniversityImage"> | boolean
    displayOrder?: IntWithAggregatesFilter<"UniversityImage"> | number
    createdAt?: DateTimeWithAggregatesFilter<"UniversityImage"> | Date | string
  }

  export type ProgramDepartmentWhereInput = {
    AND?: ProgramDepartmentWhereInput | ProgramDepartmentWhereInput[]
    OR?: ProgramDepartmentWhereInput[]
    NOT?: ProgramDepartmentWhereInput | ProgramDepartmentWhereInput[]
    id?: StringFilter<"ProgramDepartment"> | string
    programId?: StringFilter<"ProgramDepartment"> | string
    departmentId?: StringFilter<"ProgramDepartment"> | string
    createdAt?: DateTimeFilter<"ProgramDepartment"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    department?: XOR<DepartmentScalarRelationFilter, DepartmentWhereInput>
  }

  export type ProgramDepartmentOrderByWithRelationInput = {
    id?: SortOrder
    programId?: SortOrder
    departmentId?: SortOrder
    createdAt?: SortOrder
    program?: ProgramOrderByWithRelationInput
    department?: DepartmentOrderByWithRelationInput
  }

  export type ProgramDepartmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    programId_departmentId?: ProgramDepartmentProgramIdDepartmentIdCompoundUniqueInput
    AND?: ProgramDepartmentWhereInput | ProgramDepartmentWhereInput[]
    OR?: ProgramDepartmentWhereInput[]
    NOT?: ProgramDepartmentWhereInput | ProgramDepartmentWhereInput[]
    programId?: StringFilter<"ProgramDepartment"> | string
    departmentId?: StringFilter<"ProgramDepartment"> | string
    createdAt?: DateTimeFilter<"ProgramDepartment"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    department?: XOR<DepartmentScalarRelationFilter, DepartmentWhereInput>
  }, "id" | "programId_departmentId">

  export type ProgramDepartmentOrderByWithAggregationInput = {
    id?: SortOrder
    programId?: SortOrder
    departmentId?: SortOrder
    createdAt?: SortOrder
    _count?: ProgramDepartmentCountOrderByAggregateInput
    _max?: ProgramDepartmentMaxOrderByAggregateInput
    _min?: ProgramDepartmentMinOrderByAggregateInput
  }

  export type ProgramDepartmentScalarWhereWithAggregatesInput = {
    AND?: ProgramDepartmentScalarWhereWithAggregatesInput | ProgramDepartmentScalarWhereWithAggregatesInput[]
    OR?: ProgramDepartmentScalarWhereWithAggregatesInput[]
    NOT?: ProgramDepartmentScalarWhereWithAggregatesInput | ProgramDepartmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProgramDepartment"> | string
    programId?: StringWithAggregatesFilter<"ProgramDepartment"> | string
    departmentId?: StringWithAggregatesFilter<"ProgramDepartment"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProgramDepartment"> | Date | string
  }

  export type DepartmentWhereInput = {
    AND?: DepartmentWhereInput | DepartmentWhereInput[]
    OR?: DepartmentWhereInput[]
    NOT?: DepartmentWhereInput | DepartmentWhereInput[]
    id?: StringFilter<"Department"> | string
    universityId?: StringFilter<"Department"> | string
    name?: StringFilter<"Department"> | string
    slug?: StringFilter<"Department"> | string
    createdAt?: DateTimeFilter<"Department"> | Date | string
    updatedAt?: DateTimeFilter<"Department"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    programs?: ProgramDepartmentListRelationFilter
  }

  export type DepartmentOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
    programs?: ProgramDepartmentOrderByRelationAggregateInput
  }

  export type DepartmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universityId_slug?: DepartmentUniversityIdSlugCompoundUniqueInput
    AND?: DepartmentWhereInput | DepartmentWhereInput[]
    OR?: DepartmentWhereInput[]
    NOT?: DepartmentWhereInput | DepartmentWhereInput[]
    universityId?: StringFilter<"Department"> | string
    name?: StringFilter<"Department"> | string
    slug?: StringFilter<"Department"> | string
    createdAt?: DateTimeFilter<"Department"> | Date | string
    updatedAt?: DateTimeFilter<"Department"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    programs?: ProgramDepartmentListRelationFilter
  }, "id" | "universityId_slug">

  export type DepartmentOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: DepartmentCountOrderByAggregateInput
    _max?: DepartmentMaxOrderByAggregateInput
    _min?: DepartmentMinOrderByAggregateInput
  }

  export type DepartmentScalarWhereWithAggregatesInput = {
    AND?: DepartmentScalarWhereWithAggregatesInput | DepartmentScalarWhereWithAggregatesInput[]
    OR?: DepartmentScalarWhereWithAggregatesInput[]
    NOT?: DepartmentScalarWhereWithAggregatesInput | DepartmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Department"> | string
    universityId?: StringWithAggregatesFilter<"Department"> | string
    name?: StringWithAggregatesFilter<"Department"> | string
    slug?: StringWithAggregatesFilter<"Department"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Department"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Department"> | Date | string
  }

  export type ProgramWhereInput = {
    AND?: ProgramWhereInput | ProgramWhereInput[]
    OR?: ProgramWhereInput[]
    NOT?: ProgramWhereInput | ProgramWhereInput[]
    id?: StringFilter<"Program"> | string
    universityId?: StringFilter<"Program"> | string
    programName?: StringFilter<"Program"> | string
    programSlug?: StringFilter<"Program"> | string
    degreeType?: StringNullableFilter<"Program"> | string | null
    programLength?: IntNullableFilter<"Program"> | number | null
    specializations?: StringNullableFilter<"Program"> | string | null
    programDescription?: StringNullableFilter<"Program"> | string | null
    curriculumOverview?: StringNullableFilter<"Program"> | string | null
    admissionRequirements?: StringNullableFilter<"Program"> | string | null
    averageEntranceScore?: FloatNullableFilter<"Program"> | number | null
    programTuitionFees?: FloatNullableFilter<"Program"> | number | null
    programAdditionalFees?: FloatNullableFilter<"Program"> | number | null
    programMetaTitle?: StringNullableFilter<"Program"> | string | null
    programMetaDescription?: StringNullableFilter<"Program"> | string | null
    isActive?: BoolFilter<"Program"> | boolean
    createdAt?: DateTimeFilter<"Program"> | Date | string
    updatedAt?: DateTimeFilter<"Program"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    departments?: ProgramDepartmentListRelationFilter
    syllabus?: XOR<SyllabusNullableScalarRelationFilter, SyllabusWhereInput> | null
    rankings?: ProgramRankingListRelationFilter
    externalLinks?: ExternalLinkListRelationFilter
    admissions?: AdmissionListRelationFilter
    applications?: ApplicationListRelationFilter
    tuitionBreakdowns?: TuitionBreakdownListRelationFilter
    scholarships?: ScholarshipListRelationFilter
    feeStructures?: FeeStructureListRelationFilter
    financialAids?: FinancialAidListRelationFilter
    essayPrompts?: EssayPromptListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
    essays?: EssayListRelationFilter
  }

  export type ProgramOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programName?: SortOrder
    programSlug?: SortOrder
    degreeType?: SortOrderInput | SortOrder
    programLength?: SortOrderInput | SortOrder
    specializations?: SortOrderInput | SortOrder
    programDescription?: SortOrderInput | SortOrder
    curriculumOverview?: SortOrderInput | SortOrder
    admissionRequirements?: SortOrderInput | SortOrder
    averageEntranceScore?: SortOrderInput | SortOrder
    programTuitionFees?: SortOrderInput | SortOrder
    programAdditionalFees?: SortOrderInput | SortOrder
    programMetaTitle?: SortOrderInput | SortOrder
    programMetaDescription?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
    departments?: ProgramDepartmentOrderByRelationAggregateInput
    syllabus?: SyllabusOrderByWithRelationInput
    rankings?: ProgramRankingOrderByRelationAggregateInput
    externalLinks?: ExternalLinkOrderByRelationAggregateInput
    admissions?: AdmissionOrderByRelationAggregateInput
    applications?: ApplicationOrderByRelationAggregateInput
    tuitionBreakdowns?: TuitionBreakdownOrderByRelationAggregateInput
    scholarships?: ScholarshipOrderByRelationAggregateInput
    feeStructures?: FeeStructureOrderByRelationAggregateInput
    financialAids?: FinancialAidOrderByRelationAggregateInput
    essayPrompts?: EssayPromptOrderByRelationAggregateInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
    essays?: EssayOrderByRelationAggregateInput
  }

  export type ProgramWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    programSlug?: string
    AND?: ProgramWhereInput | ProgramWhereInput[]
    OR?: ProgramWhereInput[]
    NOT?: ProgramWhereInput | ProgramWhereInput[]
    universityId?: StringFilter<"Program"> | string
    programName?: StringFilter<"Program"> | string
    degreeType?: StringNullableFilter<"Program"> | string | null
    programLength?: IntNullableFilter<"Program"> | number | null
    specializations?: StringNullableFilter<"Program"> | string | null
    programDescription?: StringNullableFilter<"Program"> | string | null
    curriculumOverview?: StringNullableFilter<"Program"> | string | null
    admissionRequirements?: StringNullableFilter<"Program"> | string | null
    averageEntranceScore?: FloatNullableFilter<"Program"> | number | null
    programTuitionFees?: FloatNullableFilter<"Program"> | number | null
    programAdditionalFees?: FloatNullableFilter<"Program"> | number | null
    programMetaTitle?: StringNullableFilter<"Program"> | string | null
    programMetaDescription?: StringNullableFilter<"Program"> | string | null
    isActive?: BoolFilter<"Program"> | boolean
    createdAt?: DateTimeFilter<"Program"> | Date | string
    updatedAt?: DateTimeFilter<"Program"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    departments?: ProgramDepartmentListRelationFilter
    syllabus?: XOR<SyllabusNullableScalarRelationFilter, SyllabusWhereInput> | null
    rankings?: ProgramRankingListRelationFilter
    externalLinks?: ExternalLinkListRelationFilter
    admissions?: AdmissionListRelationFilter
    applications?: ApplicationListRelationFilter
    tuitionBreakdowns?: TuitionBreakdownListRelationFilter
    scholarships?: ScholarshipListRelationFilter
    feeStructures?: FeeStructureListRelationFilter
    financialAids?: FinancialAidListRelationFilter
    essayPrompts?: EssayPromptListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
    essays?: EssayListRelationFilter
  }, "id" | "programSlug">

  export type ProgramOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programName?: SortOrder
    programSlug?: SortOrder
    degreeType?: SortOrderInput | SortOrder
    programLength?: SortOrderInput | SortOrder
    specializations?: SortOrderInput | SortOrder
    programDescription?: SortOrderInput | SortOrder
    curriculumOverview?: SortOrderInput | SortOrder
    admissionRequirements?: SortOrderInput | SortOrder
    averageEntranceScore?: SortOrderInput | SortOrder
    programTuitionFees?: SortOrderInput | SortOrder
    programAdditionalFees?: SortOrderInput | SortOrder
    programMetaTitle?: SortOrderInput | SortOrder
    programMetaDescription?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProgramCountOrderByAggregateInput
    _avg?: ProgramAvgOrderByAggregateInput
    _max?: ProgramMaxOrderByAggregateInput
    _min?: ProgramMinOrderByAggregateInput
    _sum?: ProgramSumOrderByAggregateInput
  }

  export type ProgramScalarWhereWithAggregatesInput = {
    AND?: ProgramScalarWhereWithAggregatesInput | ProgramScalarWhereWithAggregatesInput[]
    OR?: ProgramScalarWhereWithAggregatesInput[]
    NOT?: ProgramScalarWhereWithAggregatesInput | ProgramScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Program"> | string
    universityId?: StringWithAggregatesFilter<"Program"> | string
    programName?: StringWithAggregatesFilter<"Program"> | string
    programSlug?: StringWithAggregatesFilter<"Program"> | string
    degreeType?: StringNullableWithAggregatesFilter<"Program"> | string | null
    programLength?: IntNullableWithAggregatesFilter<"Program"> | number | null
    specializations?: StringNullableWithAggregatesFilter<"Program"> | string | null
    programDescription?: StringNullableWithAggregatesFilter<"Program"> | string | null
    curriculumOverview?: StringNullableWithAggregatesFilter<"Program"> | string | null
    admissionRequirements?: StringNullableWithAggregatesFilter<"Program"> | string | null
    averageEntranceScore?: FloatNullableWithAggregatesFilter<"Program"> | number | null
    programTuitionFees?: FloatNullableWithAggregatesFilter<"Program"> | number | null
    programAdditionalFees?: FloatNullableWithAggregatesFilter<"Program"> | number | null
    programMetaTitle?: StringNullableWithAggregatesFilter<"Program"> | string | null
    programMetaDescription?: StringNullableWithAggregatesFilter<"Program"> | string | null
    isActive?: BoolWithAggregatesFilter<"Program"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Program"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Program"> | Date | string
  }

  export type SyllabusWhereInput = {
    AND?: SyllabusWhereInput | SyllabusWhereInput[]
    OR?: SyllabusWhereInput[]
    NOT?: SyllabusWhereInput | SyllabusWhereInput[]
    id?: StringFilter<"Syllabus"> | string
    programId?: StringFilter<"Syllabus"> | string
    fileUrl?: StringFilter<"Syllabus"> | string
    uploadedAt?: DateTimeFilter<"Syllabus"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
  }

  export type SyllabusOrderByWithRelationInput = {
    id?: SortOrder
    programId?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    program?: ProgramOrderByWithRelationInput
  }

  export type SyllabusWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    programId?: string
    AND?: SyllabusWhereInput | SyllabusWhereInput[]
    OR?: SyllabusWhereInput[]
    NOT?: SyllabusWhereInput | SyllabusWhereInput[]
    fileUrl?: StringFilter<"Syllabus"> | string
    uploadedAt?: DateTimeFilter<"Syllabus"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
  }, "id" | "programId">

  export type SyllabusOrderByWithAggregationInput = {
    id?: SortOrder
    programId?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    _count?: SyllabusCountOrderByAggregateInput
    _max?: SyllabusMaxOrderByAggregateInput
    _min?: SyllabusMinOrderByAggregateInput
  }

  export type SyllabusScalarWhereWithAggregatesInput = {
    AND?: SyllabusScalarWhereWithAggregatesInput | SyllabusScalarWhereWithAggregatesInput[]
    OR?: SyllabusScalarWhereWithAggregatesInput[]
    NOT?: SyllabusScalarWhereWithAggregatesInput | SyllabusScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Syllabus"> | string
    programId?: StringWithAggregatesFilter<"Syllabus"> | string
    fileUrl?: StringWithAggregatesFilter<"Syllabus"> | string
    uploadedAt?: DateTimeWithAggregatesFilter<"Syllabus"> | Date | string
  }

  export type ProgramRankingWhereInput = {
    AND?: ProgramRankingWhereInput | ProgramRankingWhereInput[]
    OR?: ProgramRankingWhereInput[]
    NOT?: ProgramRankingWhereInput | ProgramRankingWhereInput[]
    id?: StringFilter<"ProgramRanking"> | string
    programId?: StringFilter<"ProgramRanking"> | string
    year?: IntFilter<"ProgramRanking"> | number
    rank?: IntFilter<"ProgramRanking"> | number
    source?: StringNullableFilter<"ProgramRanking"> | string | null
    createdAt?: DateTimeFilter<"ProgramRanking"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
  }

  export type ProgramRankingOrderByWithRelationInput = {
    id?: SortOrder
    programId?: SortOrder
    year?: SortOrder
    rank?: SortOrder
    source?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    program?: ProgramOrderByWithRelationInput
  }

  export type ProgramRankingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    programId_year?: ProgramRankingProgramIdYearCompoundUniqueInput
    AND?: ProgramRankingWhereInput | ProgramRankingWhereInput[]
    OR?: ProgramRankingWhereInput[]
    NOT?: ProgramRankingWhereInput | ProgramRankingWhereInput[]
    programId?: StringFilter<"ProgramRanking"> | string
    year?: IntFilter<"ProgramRanking"> | number
    rank?: IntFilter<"ProgramRanking"> | number
    source?: StringNullableFilter<"ProgramRanking"> | string | null
    createdAt?: DateTimeFilter<"ProgramRanking"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
  }, "id" | "programId_year">

  export type ProgramRankingOrderByWithAggregationInput = {
    id?: SortOrder
    programId?: SortOrder
    year?: SortOrder
    rank?: SortOrder
    source?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ProgramRankingCountOrderByAggregateInput
    _avg?: ProgramRankingAvgOrderByAggregateInput
    _max?: ProgramRankingMaxOrderByAggregateInput
    _min?: ProgramRankingMinOrderByAggregateInput
    _sum?: ProgramRankingSumOrderByAggregateInput
  }

  export type ProgramRankingScalarWhereWithAggregatesInput = {
    AND?: ProgramRankingScalarWhereWithAggregatesInput | ProgramRankingScalarWhereWithAggregatesInput[]
    OR?: ProgramRankingScalarWhereWithAggregatesInput[]
    NOT?: ProgramRankingScalarWhereWithAggregatesInput | ProgramRankingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProgramRanking"> | string
    programId?: StringWithAggregatesFilter<"ProgramRanking"> | string
    year?: IntWithAggregatesFilter<"ProgramRanking"> | number
    rank?: IntWithAggregatesFilter<"ProgramRanking"> | number
    source?: StringNullableWithAggregatesFilter<"ProgramRanking"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ProgramRanking"> | Date | string
  }

  export type ExternalLinkWhereInput = {
    AND?: ExternalLinkWhereInput | ExternalLinkWhereInput[]
    OR?: ExternalLinkWhereInput[]
    NOT?: ExternalLinkWhereInput | ExternalLinkWhereInput[]
    id?: StringFilter<"ExternalLink"> | string
    programId?: StringFilter<"ExternalLink"> | string
    title?: StringFilter<"ExternalLink"> | string
    url?: StringFilter<"ExternalLink"> | string
    createdAt?: DateTimeFilter<"ExternalLink"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
  }

  export type ExternalLinkOrderByWithRelationInput = {
    id?: SortOrder
    programId?: SortOrder
    title?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    program?: ProgramOrderByWithRelationInput
  }

  export type ExternalLinkWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ExternalLinkWhereInput | ExternalLinkWhereInput[]
    OR?: ExternalLinkWhereInput[]
    NOT?: ExternalLinkWhereInput | ExternalLinkWhereInput[]
    programId?: StringFilter<"ExternalLink"> | string
    title?: StringFilter<"ExternalLink"> | string
    url?: StringFilter<"ExternalLink"> | string
    createdAt?: DateTimeFilter<"ExternalLink"> | Date | string
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
  }, "id">

  export type ExternalLinkOrderByWithAggregationInput = {
    id?: SortOrder
    programId?: SortOrder
    title?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
    _count?: ExternalLinkCountOrderByAggregateInput
    _max?: ExternalLinkMaxOrderByAggregateInput
    _min?: ExternalLinkMinOrderByAggregateInput
  }

  export type ExternalLinkScalarWhereWithAggregatesInput = {
    AND?: ExternalLinkScalarWhereWithAggregatesInput | ExternalLinkScalarWhereWithAggregatesInput[]
    OR?: ExternalLinkScalarWhereWithAggregatesInput[]
    NOT?: ExternalLinkScalarWhereWithAggregatesInput | ExternalLinkScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ExternalLink"> | string
    programId?: StringWithAggregatesFilter<"ExternalLink"> | string
    title?: StringWithAggregatesFilter<"ExternalLink"> | string
    url?: StringWithAggregatesFilter<"ExternalLink"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ExternalLink"> | Date | string
  }

  export type AdmissionWhereInput = {
    AND?: AdmissionWhereInput | AdmissionWhereInput[]
    OR?: AdmissionWhereInput[]
    NOT?: AdmissionWhereInput | AdmissionWhereInput[]
    id?: StringFilter<"Admission"> | string
    universityId?: StringFilter<"Admission"> | string
    programId?: StringFilter<"Admission"> | string
    minimumGpa?: FloatNullableFilter<"Admission"> | number | null
    maximumGpa?: FloatNullableFilter<"Admission"> | number | null
    gmatMinScore?: IntNullableFilter<"Admission"> | number | null
    gmatMaxScore?: IntNullableFilter<"Admission"> | number | null
    gmatAverageScore?: IntNullableFilter<"Admission"> | number | null
    greMinScore?: IntNullableFilter<"Admission"> | number | null
    greMaxScore?: IntNullableFilter<"Admission"> | number | null
    greAverageScore?: IntNullableFilter<"Admission"> | number | null
    ieltsMinScore?: FloatNullableFilter<"Admission"> | number | null
    toeflMinScore?: IntNullableFilter<"Admission"> | number | null
    pteMinScore?: IntNullableFilter<"Admission"> | number | null
    duolingoMinScore?: IntNullableFilter<"Admission"> | number | null
    languageExemptions?: StringNullableFilter<"Admission"> | string | null
    workExperienceRequired?: BoolFilter<"Admission"> | boolean
    minWorkExperience?: IntNullableFilter<"Admission"> | number | null
    maxWorkExperience?: IntNullableFilter<"Admission"> | number | null
    preferredIndustries?: StringNullableFilter<"Admission"> | string | null
    applicationFee?: FloatNullableFilter<"Admission"> | number | null
    currency?: StringFilter<"Admission"> | string
    documentsRequired?: StringNullableFilter<"Admission"> | string | null
    additionalRequirements?: StringNullableFilter<"Admission"> | string | null
    acceptanceRate?: FloatNullableFilter<"Admission"> | number | null
    totalApplications?: IntNullableFilter<"Admission"> | number | null
    totalAccepted?: IntNullableFilter<"Admission"> | number | null
    statisticsYear?: IntNullableFilter<"Admission"> | number | null
    isActive?: BoolFilter<"Admission"> | boolean
    admissionStatus?: StringFilter<"Admission"> | string
    createdAt?: DateTimeFilter<"Admission"> | Date | string
    updatedAt?: DateTimeFilter<"Admission"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    intakes?: IntakeListRelationFilter
    deadlines?: AdmissionDeadlineListRelationFilter
    applications?: ApplicationListRelationFilter
    essayPrompts?: EssayPromptListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }

  export type AdmissionOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    maximumGpa?: SortOrderInput | SortOrder
    gmatMinScore?: SortOrderInput | SortOrder
    gmatMaxScore?: SortOrderInput | SortOrder
    gmatAverageScore?: SortOrderInput | SortOrder
    greMinScore?: SortOrderInput | SortOrder
    greMaxScore?: SortOrderInput | SortOrder
    greAverageScore?: SortOrderInput | SortOrder
    ieltsMinScore?: SortOrderInput | SortOrder
    toeflMinScore?: SortOrderInput | SortOrder
    pteMinScore?: SortOrderInput | SortOrder
    duolingoMinScore?: SortOrderInput | SortOrder
    languageExemptions?: SortOrderInput | SortOrder
    workExperienceRequired?: SortOrder
    minWorkExperience?: SortOrderInput | SortOrder
    maxWorkExperience?: SortOrderInput | SortOrder
    preferredIndustries?: SortOrderInput | SortOrder
    applicationFee?: SortOrderInput | SortOrder
    currency?: SortOrder
    documentsRequired?: SortOrderInput | SortOrder
    additionalRequirements?: SortOrderInput | SortOrder
    acceptanceRate?: SortOrderInput | SortOrder
    totalApplications?: SortOrderInput | SortOrder
    totalAccepted?: SortOrderInput | SortOrder
    statisticsYear?: SortOrderInput | SortOrder
    isActive?: SortOrder
    admissionStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    intakes?: IntakeOrderByRelationAggregateInput
    deadlines?: AdmissionDeadlineOrderByRelationAggregateInput
    applications?: ApplicationOrderByRelationAggregateInput
    essayPrompts?: EssayPromptOrderByRelationAggregateInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
  }

  export type AdmissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universityId_programId?: AdmissionUniversityIdProgramIdCompoundUniqueInput
    AND?: AdmissionWhereInput | AdmissionWhereInput[]
    OR?: AdmissionWhereInput[]
    NOT?: AdmissionWhereInput | AdmissionWhereInput[]
    universityId?: StringFilter<"Admission"> | string
    programId?: StringFilter<"Admission"> | string
    minimumGpa?: FloatNullableFilter<"Admission"> | number | null
    maximumGpa?: FloatNullableFilter<"Admission"> | number | null
    gmatMinScore?: IntNullableFilter<"Admission"> | number | null
    gmatMaxScore?: IntNullableFilter<"Admission"> | number | null
    gmatAverageScore?: IntNullableFilter<"Admission"> | number | null
    greMinScore?: IntNullableFilter<"Admission"> | number | null
    greMaxScore?: IntNullableFilter<"Admission"> | number | null
    greAverageScore?: IntNullableFilter<"Admission"> | number | null
    ieltsMinScore?: FloatNullableFilter<"Admission"> | number | null
    toeflMinScore?: IntNullableFilter<"Admission"> | number | null
    pteMinScore?: IntNullableFilter<"Admission"> | number | null
    duolingoMinScore?: IntNullableFilter<"Admission"> | number | null
    languageExemptions?: StringNullableFilter<"Admission"> | string | null
    workExperienceRequired?: BoolFilter<"Admission"> | boolean
    minWorkExperience?: IntNullableFilter<"Admission"> | number | null
    maxWorkExperience?: IntNullableFilter<"Admission"> | number | null
    preferredIndustries?: StringNullableFilter<"Admission"> | string | null
    applicationFee?: FloatNullableFilter<"Admission"> | number | null
    currency?: StringFilter<"Admission"> | string
    documentsRequired?: StringNullableFilter<"Admission"> | string | null
    additionalRequirements?: StringNullableFilter<"Admission"> | string | null
    acceptanceRate?: FloatNullableFilter<"Admission"> | number | null
    totalApplications?: IntNullableFilter<"Admission"> | number | null
    totalAccepted?: IntNullableFilter<"Admission"> | number | null
    statisticsYear?: IntNullableFilter<"Admission"> | number | null
    isActive?: BoolFilter<"Admission"> | boolean
    admissionStatus?: StringFilter<"Admission"> | string
    createdAt?: DateTimeFilter<"Admission"> | Date | string
    updatedAt?: DateTimeFilter<"Admission"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    intakes?: IntakeListRelationFilter
    deadlines?: AdmissionDeadlineListRelationFilter
    applications?: ApplicationListRelationFilter
    essayPrompts?: EssayPromptListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }, "id" | "universityId_programId">

  export type AdmissionOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    maximumGpa?: SortOrderInput | SortOrder
    gmatMinScore?: SortOrderInput | SortOrder
    gmatMaxScore?: SortOrderInput | SortOrder
    gmatAverageScore?: SortOrderInput | SortOrder
    greMinScore?: SortOrderInput | SortOrder
    greMaxScore?: SortOrderInput | SortOrder
    greAverageScore?: SortOrderInput | SortOrder
    ieltsMinScore?: SortOrderInput | SortOrder
    toeflMinScore?: SortOrderInput | SortOrder
    pteMinScore?: SortOrderInput | SortOrder
    duolingoMinScore?: SortOrderInput | SortOrder
    languageExemptions?: SortOrderInput | SortOrder
    workExperienceRequired?: SortOrder
    minWorkExperience?: SortOrderInput | SortOrder
    maxWorkExperience?: SortOrderInput | SortOrder
    preferredIndustries?: SortOrderInput | SortOrder
    applicationFee?: SortOrderInput | SortOrder
    currency?: SortOrder
    documentsRequired?: SortOrderInput | SortOrder
    additionalRequirements?: SortOrderInput | SortOrder
    acceptanceRate?: SortOrderInput | SortOrder
    totalApplications?: SortOrderInput | SortOrder
    totalAccepted?: SortOrderInput | SortOrder
    statisticsYear?: SortOrderInput | SortOrder
    isActive?: SortOrder
    admissionStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AdmissionCountOrderByAggregateInput
    _avg?: AdmissionAvgOrderByAggregateInput
    _max?: AdmissionMaxOrderByAggregateInput
    _min?: AdmissionMinOrderByAggregateInput
    _sum?: AdmissionSumOrderByAggregateInput
  }

  export type AdmissionScalarWhereWithAggregatesInput = {
    AND?: AdmissionScalarWhereWithAggregatesInput | AdmissionScalarWhereWithAggregatesInput[]
    OR?: AdmissionScalarWhereWithAggregatesInput[]
    NOT?: AdmissionScalarWhereWithAggregatesInput | AdmissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Admission"> | string
    universityId?: StringWithAggregatesFilter<"Admission"> | string
    programId?: StringWithAggregatesFilter<"Admission"> | string
    minimumGpa?: FloatNullableWithAggregatesFilter<"Admission"> | number | null
    maximumGpa?: FloatNullableWithAggregatesFilter<"Admission"> | number | null
    gmatMinScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    gmatMaxScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    gmatAverageScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    greMinScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    greMaxScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    greAverageScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    ieltsMinScore?: FloatNullableWithAggregatesFilter<"Admission"> | number | null
    toeflMinScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    pteMinScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    duolingoMinScore?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    languageExemptions?: StringNullableWithAggregatesFilter<"Admission"> | string | null
    workExperienceRequired?: BoolWithAggregatesFilter<"Admission"> | boolean
    minWorkExperience?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    maxWorkExperience?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    preferredIndustries?: StringNullableWithAggregatesFilter<"Admission"> | string | null
    applicationFee?: FloatNullableWithAggregatesFilter<"Admission"> | number | null
    currency?: StringWithAggregatesFilter<"Admission"> | string
    documentsRequired?: StringNullableWithAggregatesFilter<"Admission"> | string | null
    additionalRequirements?: StringNullableWithAggregatesFilter<"Admission"> | string | null
    acceptanceRate?: FloatNullableWithAggregatesFilter<"Admission"> | number | null
    totalApplications?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    totalAccepted?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    statisticsYear?: IntNullableWithAggregatesFilter<"Admission"> | number | null
    isActive?: BoolWithAggregatesFilter<"Admission"> | boolean
    admissionStatus?: StringWithAggregatesFilter<"Admission"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Admission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Admission"> | Date | string
  }

  export type IntakeWhereInput = {
    AND?: IntakeWhereInput | IntakeWhereInput[]
    OR?: IntakeWhereInput[]
    NOT?: IntakeWhereInput | IntakeWhereInput[]
    id?: StringFilter<"Intake"> | string
    admissionId?: StringFilter<"Intake"> | string
    intakeName?: StringFilter<"Intake"> | string
    intakeType?: StringFilter<"Intake"> | string
    intakeYear?: IntFilter<"Intake"> | number
    intakeMonth?: IntFilter<"Intake"> | number
    totalSeats?: IntNullableFilter<"Intake"> | number | null
    availableSeats?: IntNullableFilter<"Intake"> | number | null
    internationalSeats?: IntNullableFilter<"Intake"> | number | null
    domesticSeats?: IntNullableFilter<"Intake"> | number | null
    startDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    applicationOpenDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    isActive?: BoolFilter<"Intake"> | boolean
    intakeStatus?: StringFilter<"Intake"> | string
    createdAt?: DateTimeFilter<"Intake"> | Date | string
    updatedAt?: DateTimeFilter<"Intake"> | Date | string
    admission?: XOR<AdmissionScalarRelationFilter, AdmissionWhereInput>
    deadlines?: AdmissionDeadlineListRelationFilter
    applications?: ApplicationListRelationFilter
    essayPrompts?: EssayPromptListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }

  export type IntakeOrderByWithRelationInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeName?: SortOrder
    intakeType?: SortOrder
    intakeYear?: SortOrder
    intakeMonth?: SortOrder
    totalSeats?: SortOrderInput | SortOrder
    availableSeats?: SortOrderInput | SortOrder
    internationalSeats?: SortOrderInput | SortOrder
    domesticSeats?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    applicationOpenDate?: SortOrderInput | SortOrder
    applicationCloseDate?: SortOrderInput | SortOrder
    isActive?: SortOrder
    intakeStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    admission?: AdmissionOrderByWithRelationInput
    deadlines?: AdmissionDeadlineOrderByRelationAggregateInput
    applications?: ApplicationOrderByRelationAggregateInput
    essayPrompts?: EssayPromptOrderByRelationAggregateInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
  }

  export type IntakeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    admissionId_intakeType_intakeYear?: IntakeAdmissionIdIntakeTypeIntakeYearCompoundUniqueInput
    AND?: IntakeWhereInput | IntakeWhereInput[]
    OR?: IntakeWhereInput[]
    NOT?: IntakeWhereInput | IntakeWhereInput[]
    admissionId?: StringFilter<"Intake"> | string
    intakeName?: StringFilter<"Intake"> | string
    intakeType?: StringFilter<"Intake"> | string
    intakeYear?: IntFilter<"Intake"> | number
    intakeMonth?: IntFilter<"Intake"> | number
    totalSeats?: IntNullableFilter<"Intake"> | number | null
    availableSeats?: IntNullableFilter<"Intake"> | number | null
    internationalSeats?: IntNullableFilter<"Intake"> | number | null
    domesticSeats?: IntNullableFilter<"Intake"> | number | null
    startDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    applicationOpenDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    isActive?: BoolFilter<"Intake"> | boolean
    intakeStatus?: StringFilter<"Intake"> | string
    createdAt?: DateTimeFilter<"Intake"> | Date | string
    updatedAt?: DateTimeFilter<"Intake"> | Date | string
    admission?: XOR<AdmissionScalarRelationFilter, AdmissionWhereInput>
    deadlines?: AdmissionDeadlineListRelationFilter
    applications?: ApplicationListRelationFilter
    essayPrompts?: EssayPromptListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }, "id" | "admissionId_intakeType_intakeYear">

  export type IntakeOrderByWithAggregationInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeName?: SortOrder
    intakeType?: SortOrder
    intakeYear?: SortOrder
    intakeMonth?: SortOrder
    totalSeats?: SortOrderInput | SortOrder
    availableSeats?: SortOrderInput | SortOrder
    internationalSeats?: SortOrderInput | SortOrder
    domesticSeats?: SortOrderInput | SortOrder
    startDate?: SortOrderInput | SortOrder
    endDate?: SortOrderInput | SortOrder
    applicationOpenDate?: SortOrderInput | SortOrder
    applicationCloseDate?: SortOrderInput | SortOrder
    isActive?: SortOrder
    intakeStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: IntakeCountOrderByAggregateInput
    _avg?: IntakeAvgOrderByAggregateInput
    _max?: IntakeMaxOrderByAggregateInput
    _min?: IntakeMinOrderByAggregateInput
    _sum?: IntakeSumOrderByAggregateInput
  }

  export type IntakeScalarWhereWithAggregatesInput = {
    AND?: IntakeScalarWhereWithAggregatesInput | IntakeScalarWhereWithAggregatesInput[]
    OR?: IntakeScalarWhereWithAggregatesInput[]
    NOT?: IntakeScalarWhereWithAggregatesInput | IntakeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Intake"> | string
    admissionId?: StringWithAggregatesFilter<"Intake"> | string
    intakeName?: StringWithAggregatesFilter<"Intake"> | string
    intakeType?: StringWithAggregatesFilter<"Intake"> | string
    intakeYear?: IntWithAggregatesFilter<"Intake"> | number
    intakeMonth?: IntWithAggregatesFilter<"Intake"> | number
    totalSeats?: IntNullableWithAggregatesFilter<"Intake"> | number | null
    availableSeats?: IntNullableWithAggregatesFilter<"Intake"> | number | null
    internationalSeats?: IntNullableWithAggregatesFilter<"Intake"> | number | null
    domesticSeats?: IntNullableWithAggregatesFilter<"Intake"> | number | null
    startDate?: DateTimeNullableWithAggregatesFilter<"Intake"> | Date | string | null
    endDate?: DateTimeNullableWithAggregatesFilter<"Intake"> | Date | string | null
    applicationOpenDate?: DateTimeNullableWithAggregatesFilter<"Intake"> | Date | string | null
    applicationCloseDate?: DateTimeNullableWithAggregatesFilter<"Intake"> | Date | string | null
    isActive?: BoolWithAggregatesFilter<"Intake"> | boolean
    intakeStatus?: StringWithAggregatesFilter<"Intake"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Intake"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Intake"> | Date | string
  }

  export type AdmissionDeadlineWhereInput = {
    AND?: AdmissionDeadlineWhereInput | AdmissionDeadlineWhereInput[]
    OR?: AdmissionDeadlineWhereInput[]
    NOT?: AdmissionDeadlineWhereInput | AdmissionDeadlineWhereInput[]
    id?: StringFilter<"AdmissionDeadline"> | string
    admissionId?: StringFilter<"AdmissionDeadline"> | string
    intakeId?: StringNullableFilter<"AdmissionDeadline"> | string | null
    deadlineType?: StringFilter<"AdmissionDeadline"> | string
    deadlineDate?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    deadlineTime?: StringNullableFilter<"AdmissionDeadline"> | string | null
    timezone?: StringFilter<"AdmissionDeadline"> | string
    title?: StringFilter<"AdmissionDeadline"> | string
    description?: StringNullableFilter<"AdmissionDeadline"> | string | null
    isExtended?: BoolFilter<"AdmissionDeadline"> | boolean
    originalDeadline?: DateTimeNullableFilter<"AdmissionDeadline"> | Date | string | null
    priority?: StringFilter<"AdmissionDeadline"> | string
    isActive?: BoolFilter<"AdmissionDeadline"> | boolean
    reminderSent?: BoolFilter<"AdmissionDeadline"> | boolean
    reminderDate?: DateTimeNullableFilter<"AdmissionDeadline"> | Date | string | null
    createdAt?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    updatedAt?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    admission?: XOR<AdmissionScalarRelationFilter, AdmissionWhereInput>
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    calendarEvents?: CalendarEventListRelationFilter
  }

  export type AdmissionDeadlineOrderByWithRelationInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrderInput | SortOrder
    deadlineType?: SortOrder
    deadlineDate?: SortOrder
    deadlineTime?: SortOrderInput | SortOrder
    timezone?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    isExtended?: SortOrder
    originalDeadline?: SortOrderInput | SortOrder
    priority?: SortOrder
    isActive?: SortOrder
    reminderSent?: SortOrder
    reminderDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    admission?: AdmissionOrderByWithRelationInput
    intake?: IntakeOrderByWithRelationInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
  }

  export type AdmissionDeadlineWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AdmissionDeadlineWhereInput | AdmissionDeadlineWhereInput[]
    OR?: AdmissionDeadlineWhereInput[]
    NOT?: AdmissionDeadlineWhereInput | AdmissionDeadlineWhereInput[]
    admissionId?: StringFilter<"AdmissionDeadline"> | string
    intakeId?: StringNullableFilter<"AdmissionDeadline"> | string | null
    deadlineType?: StringFilter<"AdmissionDeadline"> | string
    deadlineDate?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    deadlineTime?: StringNullableFilter<"AdmissionDeadline"> | string | null
    timezone?: StringFilter<"AdmissionDeadline"> | string
    title?: StringFilter<"AdmissionDeadline"> | string
    description?: StringNullableFilter<"AdmissionDeadline"> | string | null
    isExtended?: BoolFilter<"AdmissionDeadline"> | boolean
    originalDeadline?: DateTimeNullableFilter<"AdmissionDeadline"> | Date | string | null
    priority?: StringFilter<"AdmissionDeadline"> | string
    isActive?: BoolFilter<"AdmissionDeadline"> | boolean
    reminderSent?: BoolFilter<"AdmissionDeadline"> | boolean
    reminderDate?: DateTimeNullableFilter<"AdmissionDeadline"> | Date | string | null
    createdAt?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    updatedAt?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    admission?: XOR<AdmissionScalarRelationFilter, AdmissionWhereInput>
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    calendarEvents?: CalendarEventListRelationFilter
  }, "id">

  export type AdmissionDeadlineOrderByWithAggregationInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrderInput | SortOrder
    deadlineType?: SortOrder
    deadlineDate?: SortOrder
    deadlineTime?: SortOrderInput | SortOrder
    timezone?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    isExtended?: SortOrder
    originalDeadline?: SortOrderInput | SortOrder
    priority?: SortOrder
    isActive?: SortOrder
    reminderSent?: SortOrder
    reminderDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AdmissionDeadlineCountOrderByAggregateInput
    _max?: AdmissionDeadlineMaxOrderByAggregateInput
    _min?: AdmissionDeadlineMinOrderByAggregateInput
  }

  export type AdmissionDeadlineScalarWhereWithAggregatesInput = {
    AND?: AdmissionDeadlineScalarWhereWithAggregatesInput | AdmissionDeadlineScalarWhereWithAggregatesInput[]
    OR?: AdmissionDeadlineScalarWhereWithAggregatesInput[]
    NOT?: AdmissionDeadlineScalarWhereWithAggregatesInput | AdmissionDeadlineScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AdmissionDeadline"> | string
    admissionId?: StringWithAggregatesFilter<"AdmissionDeadline"> | string
    intakeId?: StringNullableWithAggregatesFilter<"AdmissionDeadline"> | string | null
    deadlineType?: StringWithAggregatesFilter<"AdmissionDeadline"> | string
    deadlineDate?: DateTimeWithAggregatesFilter<"AdmissionDeadline"> | Date | string
    deadlineTime?: StringNullableWithAggregatesFilter<"AdmissionDeadline"> | string | null
    timezone?: StringWithAggregatesFilter<"AdmissionDeadline"> | string
    title?: StringWithAggregatesFilter<"AdmissionDeadline"> | string
    description?: StringNullableWithAggregatesFilter<"AdmissionDeadline"> | string | null
    isExtended?: BoolWithAggregatesFilter<"AdmissionDeadline"> | boolean
    originalDeadline?: DateTimeNullableWithAggregatesFilter<"AdmissionDeadline"> | Date | string | null
    priority?: StringWithAggregatesFilter<"AdmissionDeadline"> | string
    isActive?: BoolWithAggregatesFilter<"AdmissionDeadline"> | boolean
    reminderSent?: BoolWithAggregatesFilter<"AdmissionDeadline"> | boolean
    reminderDate?: DateTimeNullableWithAggregatesFilter<"AdmissionDeadline"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AdmissionDeadline"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AdmissionDeadline"> | Date | string
  }

  export type ApplicationWhereInput = {
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    id?: StringFilter<"Application"> | string
    admissionId?: StringFilter<"Application"> | string
    universityId?: StringFilter<"Application"> | string
    programId?: StringFilter<"Application"> | string
    intakeId?: StringNullableFilter<"Application"> | string | null
    userId?: StringNullableFilter<"Application"> | string | null
    firstName?: StringFilter<"Application"> | string
    lastName?: StringFilter<"Application"> | string
    email?: StringFilter<"Application"> | string
    phone?: StringNullableFilter<"Application"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Application"> | Date | string | null
    nationality?: StringNullableFilter<"Application"> | string | null
    currentGpa?: FloatNullableFilter<"Application"> | number | null
    gmatScore?: IntNullableFilter<"Application"> | number | null
    greScore?: IntNullableFilter<"Application"> | number | null
    ieltsScore?: FloatNullableFilter<"Application"> | number | null
    toeflScore?: IntNullableFilter<"Application"> | number | null
    pteScore?: IntNullableFilter<"Application"> | number | null
    duolingoScore?: IntNullableFilter<"Application"> | number | null
    workExperienceMonths?: IntNullableFilter<"Application"> | number | null
    workExperienceDetails?: StringNullableFilter<"Application"> | string | null
    applicationStatus?: StringFilter<"Application"> | string
    currentStage?: StringFilter<"Application"> | string
    stageUpdatedAt?: DateTimeFilter<"Application"> | Date | string
    completionPercentage?: FloatFilter<"Application"> | number
    nextDeadlineId?: StringNullableFilter<"Application"> | string | null
    completedDeadlines?: StringNullableFilter<"Application"> | string | null
    missedDeadlines?: StringNullableFilter<"Application"> | string | null
    submissionDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    lastActivityAt?: DateTimeFilter<"Application"> | Date | string
    applicationFeesPaid?: BoolFilter<"Application"> | boolean
    applicationFeesAmount?: FloatNullableFilter<"Application"> | number | null
    documentsUploaded?: StringNullableFilter<"Application"> | string | null
    documentsVerified?: BoolFilter<"Application"> | boolean
    lastContactDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    contactNotes?: StringNullableFilter<"Application"> | string | null
    createdAt?: DateTimeFilter<"Application"> | Date | string
    updatedAt?: DateTimeFilter<"Application"> | Date | string
    admission?: XOR<AdmissionScalarRelationFilter, AdmissionWhereInput>
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    documents?: ApplicationDocumentListRelationFilter
    applicationProgress?: ApplicationProgressListRelationFilter
    interviews?: InterviewListRelationFilter
    scholarshipApplications?: ScholarshipApplicationListRelationFilter
    financialAidApplications?: FinancialAidApplicationListRelationFilter
    essaySubmissions?: EssaySubmissionListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
    essays?: EssayListRelationFilter
  }

  export type ApplicationOrderByWithRelationInput = {
    id?: SortOrder
    admissionId?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    currentGpa?: SortOrderInput | SortOrder
    gmatScore?: SortOrderInput | SortOrder
    greScore?: SortOrderInput | SortOrder
    ieltsScore?: SortOrderInput | SortOrder
    toeflScore?: SortOrderInput | SortOrder
    pteScore?: SortOrderInput | SortOrder
    duolingoScore?: SortOrderInput | SortOrder
    workExperienceMonths?: SortOrderInput | SortOrder
    workExperienceDetails?: SortOrderInput | SortOrder
    applicationStatus?: SortOrder
    currentStage?: SortOrder
    stageUpdatedAt?: SortOrder
    completionPercentage?: SortOrder
    nextDeadlineId?: SortOrderInput | SortOrder
    completedDeadlines?: SortOrderInput | SortOrder
    missedDeadlines?: SortOrderInput | SortOrder
    submissionDate?: SortOrderInput | SortOrder
    reviewDate?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    lastActivityAt?: SortOrder
    applicationFeesPaid?: SortOrder
    applicationFeesAmount?: SortOrderInput | SortOrder
    documentsUploaded?: SortOrderInput | SortOrder
    documentsVerified?: SortOrder
    lastContactDate?: SortOrderInput | SortOrder
    contactNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    admission?: AdmissionOrderByWithRelationInput
    university?: UniversityOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    intake?: IntakeOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    documents?: ApplicationDocumentOrderByRelationAggregateInput
    applicationProgress?: ApplicationProgressOrderByRelationAggregateInput
    interviews?: InterviewOrderByRelationAggregateInput
    scholarshipApplications?: ScholarshipApplicationOrderByRelationAggregateInput
    financialAidApplications?: FinancialAidApplicationOrderByRelationAggregateInput
    essaySubmissions?: EssaySubmissionOrderByRelationAggregateInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
    essays?: EssayOrderByRelationAggregateInput
  }

  export type ApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ApplicationWhereInput | ApplicationWhereInput[]
    OR?: ApplicationWhereInput[]
    NOT?: ApplicationWhereInput | ApplicationWhereInput[]
    admissionId?: StringFilter<"Application"> | string
    universityId?: StringFilter<"Application"> | string
    programId?: StringFilter<"Application"> | string
    intakeId?: StringNullableFilter<"Application"> | string | null
    userId?: StringNullableFilter<"Application"> | string | null
    firstName?: StringFilter<"Application"> | string
    lastName?: StringFilter<"Application"> | string
    email?: StringFilter<"Application"> | string
    phone?: StringNullableFilter<"Application"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Application"> | Date | string | null
    nationality?: StringNullableFilter<"Application"> | string | null
    currentGpa?: FloatNullableFilter<"Application"> | number | null
    gmatScore?: IntNullableFilter<"Application"> | number | null
    greScore?: IntNullableFilter<"Application"> | number | null
    ieltsScore?: FloatNullableFilter<"Application"> | number | null
    toeflScore?: IntNullableFilter<"Application"> | number | null
    pteScore?: IntNullableFilter<"Application"> | number | null
    duolingoScore?: IntNullableFilter<"Application"> | number | null
    workExperienceMonths?: IntNullableFilter<"Application"> | number | null
    workExperienceDetails?: StringNullableFilter<"Application"> | string | null
    applicationStatus?: StringFilter<"Application"> | string
    currentStage?: StringFilter<"Application"> | string
    stageUpdatedAt?: DateTimeFilter<"Application"> | Date | string
    completionPercentage?: FloatFilter<"Application"> | number
    nextDeadlineId?: StringNullableFilter<"Application"> | string | null
    completedDeadlines?: StringNullableFilter<"Application"> | string | null
    missedDeadlines?: StringNullableFilter<"Application"> | string | null
    submissionDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    lastActivityAt?: DateTimeFilter<"Application"> | Date | string
    applicationFeesPaid?: BoolFilter<"Application"> | boolean
    applicationFeesAmount?: FloatNullableFilter<"Application"> | number | null
    documentsUploaded?: StringNullableFilter<"Application"> | string | null
    documentsVerified?: BoolFilter<"Application"> | boolean
    lastContactDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    contactNotes?: StringNullableFilter<"Application"> | string | null
    createdAt?: DateTimeFilter<"Application"> | Date | string
    updatedAt?: DateTimeFilter<"Application"> | Date | string
    admission?: XOR<AdmissionScalarRelationFilter, AdmissionWhereInput>
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    documents?: ApplicationDocumentListRelationFilter
    applicationProgress?: ApplicationProgressListRelationFilter
    interviews?: InterviewListRelationFilter
    scholarshipApplications?: ScholarshipApplicationListRelationFilter
    financialAidApplications?: FinancialAidApplicationListRelationFilter
    essaySubmissions?: EssaySubmissionListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
    essays?: EssayListRelationFilter
  }, "id">

  export type ApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    admissionId?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    nationality?: SortOrderInput | SortOrder
    currentGpa?: SortOrderInput | SortOrder
    gmatScore?: SortOrderInput | SortOrder
    greScore?: SortOrderInput | SortOrder
    ieltsScore?: SortOrderInput | SortOrder
    toeflScore?: SortOrderInput | SortOrder
    pteScore?: SortOrderInput | SortOrder
    duolingoScore?: SortOrderInput | SortOrder
    workExperienceMonths?: SortOrderInput | SortOrder
    workExperienceDetails?: SortOrderInput | SortOrder
    applicationStatus?: SortOrder
    currentStage?: SortOrder
    stageUpdatedAt?: SortOrder
    completionPercentage?: SortOrder
    nextDeadlineId?: SortOrderInput | SortOrder
    completedDeadlines?: SortOrderInput | SortOrder
    missedDeadlines?: SortOrderInput | SortOrder
    submissionDate?: SortOrderInput | SortOrder
    reviewDate?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    lastActivityAt?: SortOrder
    applicationFeesPaid?: SortOrder
    applicationFeesAmount?: SortOrderInput | SortOrder
    documentsUploaded?: SortOrderInput | SortOrder
    documentsVerified?: SortOrder
    lastContactDate?: SortOrderInput | SortOrder
    contactNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ApplicationCountOrderByAggregateInput
    _avg?: ApplicationAvgOrderByAggregateInput
    _max?: ApplicationMaxOrderByAggregateInput
    _min?: ApplicationMinOrderByAggregateInput
    _sum?: ApplicationSumOrderByAggregateInput
  }

  export type ApplicationScalarWhereWithAggregatesInput = {
    AND?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    OR?: ApplicationScalarWhereWithAggregatesInput[]
    NOT?: ApplicationScalarWhereWithAggregatesInput | ApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Application"> | string
    admissionId?: StringWithAggregatesFilter<"Application"> | string
    universityId?: StringWithAggregatesFilter<"Application"> | string
    programId?: StringWithAggregatesFilter<"Application"> | string
    intakeId?: StringNullableWithAggregatesFilter<"Application"> | string | null
    userId?: StringNullableWithAggregatesFilter<"Application"> | string | null
    firstName?: StringWithAggregatesFilter<"Application"> | string
    lastName?: StringWithAggregatesFilter<"Application"> | string
    email?: StringWithAggregatesFilter<"Application"> | string
    phone?: StringNullableWithAggregatesFilter<"Application"> | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"Application"> | Date | string | null
    nationality?: StringNullableWithAggregatesFilter<"Application"> | string | null
    currentGpa?: FloatNullableWithAggregatesFilter<"Application"> | number | null
    gmatScore?: IntNullableWithAggregatesFilter<"Application"> | number | null
    greScore?: IntNullableWithAggregatesFilter<"Application"> | number | null
    ieltsScore?: FloatNullableWithAggregatesFilter<"Application"> | number | null
    toeflScore?: IntNullableWithAggregatesFilter<"Application"> | number | null
    pteScore?: IntNullableWithAggregatesFilter<"Application"> | number | null
    duolingoScore?: IntNullableWithAggregatesFilter<"Application"> | number | null
    workExperienceMonths?: IntNullableWithAggregatesFilter<"Application"> | number | null
    workExperienceDetails?: StringNullableWithAggregatesFilter<"Application"> | string | null
    applicationStatus?: StringWithAggregatesFilter<"Application"> | string
    currentStage?: StringWithAggregatesFilter<"Application"> | string
    stageUpdatedAt?: DateTimeWithAggregatesFilter<"Application"> | Date | string
    completionPercentage?: FloatWithAggregatesFilter<"Application"> | number
    nextDeadlineId?: StringNullableWithAggregatesFilter<"Application"> | string | null
    completedDeadlines?: StringNullableWithAggregatesFilter<"Application"> | string | null
    missedDeadlines?: StringNullableWithAggregatesFilter<"Application"> | string | null
    submissionDate?: DateTimeNullableWithAggregatesFilter<"Application"> | Date | string | null
    reviewDate?: DateTimeNullableWithAggregatesFilter<"Application"> | Date | string | null
    decisionDate?: DateTimeNullableWithAggregatesFilter<"Application"> | Date | string | null
    lastActivityAt?: DateTimeWithAggregatesFilter<"Application"> | Date | string
    applicationFeesPaid?: BoolWithAggregatesFilter<"Application"> | boolean
    applicationFeesAmount?: FloatNullableWithAggregatesFilter<"Application"> | number | null
    documentsUploaded?: StringNullableWithAggregatesFilter<"Application"> | string | null
    documentsVerified?: BoolWithAggregatesFilter<"Application"> | boolean
    lastContactDate?: DateTimeNullableWithAggregatesFilter<"Application"> | Date | string | null
    contactNotes?: StringNullableWithAggregatesFilter<"Application"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Application"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Application"> | Date | string
  }

  export type ApplicationProgressWhereInput = {
    AND?: ApplicationProgressWhereInput | ApplicationProgressWhereInput[]
    OR?: ApplicationProgressWhereInput[]
    NOT?: ApplicationProgressWhereInput | ApplicationProgressWhereInput[]
    id?: StringFilter<"ApplicationProgress"> | string
    applicationId?: StringFilter<"ApplicationProgress"> | string
    stageName?: StringFilter<"ApplicationProgress"> | string
    stageStatus?: StringFilter<"ApplicationProgress"> | string
    startedAt?: DateTimeNullableFilter<"ApplicationProgress"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"ApplicationProgress"> | Date | string | null
    notes?: StringNullableFilter<"ApplicationProgress"> | string | null
    completedBy?: StringNullableFilter<"ApplicationProgress"> | string | null
    createdAt?: DateTimeFilter<"ApplicationProgress"> | Date | string
    updatedAt?: DateTimeFilter<"ApplicationProgress"> | Date | string
    application?: XOR<ApplicationScalarRelationFilter, ApplicationWhereInput>
  }

  export type ApplicationProgressOrderByWithRelationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    stageName?: SortOrder
    stageStatus?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    completedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    application?: ApplicationOrderByWithRelationInput
  }

  export type ApplicationProgressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    applicationId_stageName?: ApplicationProgressApplicationIdStageNameCompoundUniqueInput
    AND?: ApplicationProgressWhereInput | ApplicationProgressWhereInput[]
    OR?: ApplicationProgressWhereInput[]
    NOT?: ApplicationProgressWhereInput | ApplicationProgressWhereInput[]
    applicationId?: StringFilter<"ApplicationProgress"> | string
    stageName?: StringFilter<"ApplicationProgress"> | string
    stageStatus?: StringFilter<"ApplicationProgress"> | string
    startedAt?: DateTimeNullableFilter<"ApplicationProgress"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"ApplicationProgress"> | Date | string | null
    notes?: StringNullableFilter<"ApplicationProgress"> | string | null
    completedBy?: StringNullableFilter<"ApplicationProgress"> | string | null
    createdAt?: DateTimeFilter<"ApplicationProgress"> | Date | string
    updatedAt?: DateTimeFilter<"ApplicationProgress"> | Date | string
    application?: XOR<ApplicationScalarRelationFilter, ApplicationWhereInput>
  }, "id" | "applicationId_stageName">

  export type ApplicationProgressOrderByWithAggregationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    stageName?: SortOrder
    stageStatus?: SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    completedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ApplicationProgressCountOrderByAggregateInput
    _max?: ApplicationProgressMaxOrderByAggregateInput
    _min?: ApplicationProgressMinOrderByAggregateInput
  }

  export type ApplicationProgressScalarWhereWithAggregatesInput = {
    AND?: ApplicationProgressScalarWhereWithAggregatesInput | ApplicationProgressScalarWhereWithAggregatesInput[]
    OR?: ApplicationProgressScalarWhereWithAggregatesInput[]
    NOT?: ApplicationProgressScalarWhereWithAggregatesInput | ApplicationProgressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ApplicationProgress"> | string
    applicationId?: StringWithAggregatesFilter<"ApplicationProgress"> | string
    stageName?: StringWithAggregatesFilter<"ApplicationProgress"> | string
    stageStatus?: StringWithAggregatesFilter<"ApplicationProgress"> | string
    startedAt?: DateTimeNullableWithAggregatesFilter<"ApplicationProgress"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"ApplicationProgress"> | Date | string | null
    notes?: StringNullableWithAggregatesFilter<"ApplicationProgress"> | string | null
    completedBy?: StringNullableWithAggregatesFilter<"ApplicationProgress"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ApplicationProgress"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ApplicationProgress"> | Date | string
  }

  export type ApplicationDocumentWhereInput = {
    AND?: ApplicationDocumentWhereInput | ApplicationDocumentWhereInput[]
    OR?: ApplicationDocumentWhereInput[]
    NOT?: ApplicationDocumentWhereInput | ApplicationDocumentWhereInput[]
    id?: StringFilter<"ApplicationDocument"> | string
    applicationId?: StringFilter<"ApplicationDocument"> | string
    documentType?: StringFilter<"ApplicationDocument"> | string
    documentCategory?: StringFilter<"ApplicationDocument"> | string
    documentTitle?: StringFilter<"ApplicationDocument"> | string
    fileName?: StringFilter<"ApplicationDocument"> | string
    fileUrl?: StringFilter<"ApplicationDocument"> | string
    fileSize?: IntNullableFilter<"ApplicationDocument"> | number | null
    mimeType?: StringNullableFilter<"ApplicationDocument"> | string | null
    isRequired?: BoolFilter<"ApplicationDocument"> | boolean
    submissionDeadline?: DateTimeNullableFilter<"ApplicationDocument"> | Date | string | null
    reminderSent?: BoolFilter<"ApplicationDocument"> | boolean
    isVerified?: BoolFilter<"ApplicationDocument"> | boolean
    verifiedBy?: StringNullableFilter<"ApplicationDocument"> | string | null
    verifiedAt?: DateTimeNullableFilter<"ApplicationDocument"> | Date | string | null
    verificationNotes?: StringNullableFilter<"ApplicationDocument"> | string | null
    documentStatus?: StringFilter<"ApplicationDocument"> | string
    uploadedAt?: DateTimeFilter<"ApplicationDocument"> | Date | string
    updatedAt?: DateTimeFilter<"ApplicationDocument"> | Date | string
    application?: XOR<ApplicationScalarRelationFilter, ApplicationWhereInput>
  }

  export type ApplicationDocumentOrderByWithRelationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    documentType?: SortOrder
    documentCategory?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    submissionDeadline?: SortOrderInput | SortOrder
    reminderSent?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    documentStatus?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    application?: ApplicationOrderByWithRelationInput
  }

  export type ApplicationDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ApplicationDocumentWhereInput | ApplicationDocumentWhereInput[]
    OR?: ApplicationDocumentWhereInput[]
    NOT?: ApplicationDocumentWhereInput | ApplicationDocumentWhereInput[]
    applicationId?: StringFilter<"ApplicationDocument"> | string
    documentType?: StringFilter<"ApplicationDocument"> | string
    documentCategory?: StringFilter<"ApplicationDocument"> | string
    documentTitle?: StringFilter<"ApplicationDocument"> | string
    fileName?: StringFilter<"ApplicationDocument"> | string
    fileUrl?: StringFilter<"ApplicationDocument"> | string
    fileSize?: IntNullableFilter<"ApplicationDocument"> | number | null
    mimeType?: StringNullableFilter<"ApplicationDocument"> | string | null
    isRequired?: BoolFilter<"ApplicationDocument"> | boolean
    submissionDeadline?: DateTimeNullableFilter<"ApplicationDocument"> | Date | string | null
    reminderSent?: BoolFilter<"ApplicationDocument"> | boolean
    isVerified?: BoolFilter<"ApplicationDocument"> | boolean
    verifiedBy?: StringNullableFilter<"ApplicationDocument"> | string | null
    verifiedAt?: DateTimeNullableFilter<"ApplicationDocument"> | Date | string | null
    verificationNotes?: StringNullableFilter<"ApplicationDocument"> | string | null
    documentStatus?: StringFilter<"ApplicationDocument"> | string
    uploadedAt?: DateTimeFilter<"ApplicationDocument"> | Date | string
    updatedAt?: DateTimeFilter<"ApplicationDocument"> | Date | string
    application?: XOR<ApplicationScalarRelationFilter, ApplicationWhereInput>
  }, "id">

  export type ApplicationDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    documentType?: SortOrder
    documentCategory?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    submissionDeadline?: SortOrderInput | SortOrder
    reminderSent?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    documentStatus?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ApplicationDocumentCountOrderByAggregateInput
    _avg?: ApplicationDocumentAvgOrderByAggregateInput
    _max?: ApplicationDocumentMaxOrderByAggregateInput
    _min?: ApplicationDocumentMinOrderByAggregateInput
    _sum?: ApplicationDocumentSumOrderByAggregateInput
  }

  export type ApplicationDocumentScalarWhereWithAggregatesInput = {
    AND?: ApplicationDocumentScalarWhereWithAggregatesInput | ApplicationDocumentScalarWhereWithAggregatesInput[]
    OR?: ApplicationDocumentScalarWhereWithAggregatesInput[]
    NOT?: ApplicationDocumentScalarWhereWithAggregatesInput | ApplicationDocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    applicationId?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    documentType?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    documentCategory?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    documentTitle?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    fileName?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    fileUrl?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    fileSize?: IntNullableWithAggregatesFilter<"ApplicationDocument"> | number | null
    mimeType?: StringNullableWithAggregatesFilter<"ApplicationDocument"> | string | null
    isRequired?: BoolWithAggregatesFilter<"ApplicationDocument"> | boolean
    submissionDeadline?: DateTimeNullableWithAggregatesFilter<"ApplicationDocument"> | Date | string | null
    reminderSent?: BoolWithAggregatesFilter<"ApplicationDocument"> | boolean
    isVerified?: BoolWithAggregatesFilter<"ApplicationDocument"> | boolean
    verifiedBy?: StringNullableWithAggregatesFilter<"ApplicationDocument"> | string | null
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"ApplicationDocument"> | Date | string | null
    verificationNotes?: StringNullableWithAggregatesFilter<"ApplicationDocument"> | string | null
    documentStatus?: StringWithAggregatesFilter<"ApplicationDocument"> | string
    uploadedAt?: DateTimeWithAggregatesFilter<"ApplicationDocument"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ApplicationDocument"> | Date | string
  }

  export type InterviewWhereInput = {
    AND?: InterviewWhereInput | InterviewWhereInput[]
    OR?: InterviewWhereInput[]
    NOT?: InterviewWhereInput | InterviewWhereInput[]
    id?: StringFilter<"Interview"> | string
    applicationId?: StringFilter<"Interview"> | string
    interviewType?: StringFilter<"Interview"> | string
    scheduledDate?: DateTimeNullableFilter<"Interview"> | Date | string | null
    scheduledTime?: StringNullableFilter<"Interview"> | string | null
    timezone?: StringFilter<"Interview"> | string
    duration?: IntNullableFilter<"Interview"> | number | null
    interviewerName?: StringNullableFilter<"Interview"> | string | null
    interviewerEmail?: StringNullableFilter<"Interview"> | string | null
    meetingLink?: StringNullableFilter<"Interview"> | string | null
    meetingPassword?: StringNullableFilter<"Interview"> | string | null
    location?: StringNullableFilter<"Interview"> | string | null
    interviewStatus?: StringFilter<"Interview"> | string
    interviewScore?: FloatNullableFilter<"Interview"> | number | null
    interviewFeedback?: StringNullableFilter<"Interview"> | string | null
    reminderSent?: BoolFilter<"Interview"> | boolean
    confirmationReceived?: BoolFilter<"Interview"> | boolean
    createdAt?: DateTimeFilter<"Interview"> | Date | string
    updatedAt?: DateTimeFilter<"Interview"> | Date | string
    application?: XOR<ApplicationScalarRelationFilter, ApplicationWhereInput>
    calendarEvents?: CalendarEventListRelationFilter
  }

  export type InterviewOrderByWithRelationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    interviewType?: SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    timezone?: SortOrder
    duration?: SortOrderInput | SortOrder
    interviewerName?: SortOrderInput | SortOrder
    interviewerEmail?: SortOrderInput | SortOrder
    meetingLink?: SortOrderInput | SortOrder
    meetingPassword?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    interviewStatus?: SortOrder
    interviewScore?: SortOrderInput | SortOrder
    interviewFeedback?: SortOrderInput | SortOrder
    reminderSent?: SortOrder
    confirmationReceived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    application?: ApplicationOrderByWithRelationInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
  }

  export type InterviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InterviewWhereInput | InterviewWhereInput[]
    OR?: InterviewWhereInput[]
    NOT?: InterviewWhereInput | InterviewWhereInput[]
    applicationId?: StringFilter<"Interview"> | string
    interviewType?: StringFilter<"Interview"> | string
    scheduledDate?: DateTimeNullableFilter<"Interview"> | Date | string | null
    scheduledTime?: StringNullableFilter<"Interview"> | string | null
    timezone?: StringFilter<"Interview"> | string
    duration?: IntNullableFilter<"Interview"> | number | null
    interviewerName?: StringNullableFilter<"Interview"> | string | null
    interviewerEmail?: StringNullableFilter<"Interview"> | string | null
    meetingLink?: StringNullableFilter<"Interview"> | string | null
    meetingPassword?: StringNullableFilter<"Interview"> | string | null
    location?: StringNullableFilter<"Interview"> | string | null
    interviewStatus?: StringFilter<"Interview"> | string
    interviewScore?: FloatNullableFilter<"Interview"> | number | null
    interviewFeedback?: StringNullableFilter<"Interview"> | string | null
    reminderSent?: BoolFilter<"Interview"> | boolean
    confirmationReceived?: BoolFilter<"Interview"> | boolean
    createdAt?: DateTimeFilter<"Interview"> | Date | string
    updatedAt?: DateTimeFilter<"Interview"> | Date | string
    application?: XOR<ApplicationScalarRelationFilter, ApplicationWhereInput>
    calendarEvents?: CalendarEventListRelationFilter
  }, "id">

  export type InterviewOrderByWithAggregationInput = {
    id?: SortOrder
    applicationId?: SortOrder
    interviewType?: SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    scheduledTime?: SortOrderInput | SortOrder
    timezone?: SortOrder
    duration?: SortOrderInput | SortOrder
    interviewerName?: SortOrderInput | SortOrder
    interviewerEmail?: SortOrderInput | SortOrder
    meetingLink?: SortOrderInput | SortOrder
    meetingPassword?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    interviewStatus?: SortOrder
    interviewScore?: SortOrderInput | SortOrder
    interviewFeedback?: SortOrderInput | SortOrder
    reminderSent?: SortOrder
    confirmationReceived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InterviewCountOrderByAggregateInput
    _avg?: InterviewAvgOrderByAggregateInput
    _max?: InterviewMaxOrderByAggregateInput
    _min?: InterviewMinOrderByAggregateInput
    _sum?: InterviewSumOrderByAggregateInput
  }

  export type InterviewScalarWhereWithAggregatesInput = {
    AND?: InterviewScalarWhereWithAggregatesInput | InterviewScalarWhereWithAggregatesInput[]
    OR?: InterviewScalarWhereWithAggregatesInput[]
    NOT?: InterviewScalarWhereWithAggregatesInput | InterviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Interview"> | string
    applicationId?: StringWithAggregatesFilter<"Interview"> | string
    interviewType?: StringWithAggregatesFilter<"Interview"> | string
    scheduledDate?: DateTimeNullableWithAggregatesFilter<"Interview"> | Date | string | null
    scheduledTime?: StringNullableWithAggregatesFilter<"Interview"> | string | null
    timezone?: StringWithAggregatesFilter<"Interview"> | string
    duration?: IntNullableWithAggregatesFilter<"Interview"> | number | null
    interviewerName?: StringNullableWithAggregatesFilter<"Interview"> | string | null
    interviewerEmail?: StringNullableWithAggregatesFilter<"Interview"> | string | null
    meetingLink?: StringNullableWithAggregatesFilter<"Interview"> | string | null
    meetingPassword?: StringNullableWithAggregatesFilter<"Interview"> | string | null
    location?: StringNullableWithAggregatesFilter<"Interview"> | string | null
    interviewStatus?: StringWithAggregatesFilter<"Interview"> | string
    interviewScore?: FloatNullableWithAggregatesFilter<"Interview"> | number | null
    interviewFeedback?: StringNullableWithAggregatesFilter<"Interview"> | string | null
    reminderSent?: BoolWithAggregatesFilter<"Interview"> | boolean
    confirmationReceived?: BoolWithAggregatesFilter<"Interview"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Interview"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Interview"> | Date | string
  }

  export type TuitionBreakdownWhereInput = {
    AND?: TuitionBreakdownWhereInput | TuitionBreakdownWhereInput[]
    OR?: TuitionBreakdownWhereInput[]
    NOT?: TuitionBreakdownWhereInput | TuitionBreakdownWhereInput[]
    id?: StringFilter<"TuitionBreakdown"> | string
    universityId?: StringFilter<"TuitionBreakdown"> | string
    programId?: StringNullableFilter<"TuitionBreakdown"> | string | null
    academicYear?: StringFilter<"TuitionBreakdown"> | string
    yearNumber?: IntFilter<"TuitionBreakdown"> | number
    baseTuition?: FloatFilter<"TuitionBreakdown"> | number
    labFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    libraryFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    technologyFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    activityFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    healthInsurance?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    dormitoryFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    mealPlanFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    applicationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    registrationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    examFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    graduationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    totalTuition?: FloatFilter<"TuitionBreakdown"> | number
    totalAdditionalFees?: FloatFilter<"TuitionBreakdown"> | number
    grandTotal?: FloatFilter<"TuitionBreakdown"> | number
    currency?: StringFilter<"TuitionBreakdown"> | string
    currencySymbol?: StringFilter<"TuitionBreakdown"> | string
    paymentTerms?: StringNullableFilter<"TuitionBreakdown"> | string | null
    installmentCount?: IntNullableFilter<"TuitionBreakdown"> | number | null
    isActive?: BoolFilter<"TuitionBreakdown"> | boolean
    effectiveDate?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    expiryDate?: DateTimeNullableFilter<"TuitionBreakdown"> | Date | string | null
    createdAt?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    updatedAt?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    paymentSchedule?: PaymentScheduleListRelationFilter
  }

  export type TuitionBreakdownOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    academicYear?: SortOrder
    yearNumber?: SortOrder
    baseTuition?: SortOrder
    labFees?: SortOrderInput | SortOrder
    libraryFees?: SortOrderInput | SortOrder
    technologyFees?: SortOrderInput | SortOrder
    activityFees?: SortOrderInput | SortOrder
    healthInsurance?: SortOrderInput | SortOrder
    dormitoryFees?: SortOrderInput | SortOrder
    mealPlanFees?: SortOrderInput | SortOrder
    applicationFee?: SortOrderInput | SortOrder
    registrationFee?: SortOrderInput | SortOrder
    examFees?: SortOrderInput | SortOrder
    graduationFee?: SortOrderInput | SortOrder
    totalTuition?: SortOrder
    totalAdditionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    installmentCount?: SortOrderInput | SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    paymentSchedule?: PaymentScheduleOrderByRelationAggregateInput
  }

  export type TuitionBreakdownWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universityId_programId_academicYear_yearNumber?: TuitionBreakdownUniversityIdProgramIdAcademicYearYearNumberCompoundUniqueInput
    AND?: TuitionBreakdownWhereInput | TuitionBreakdownWhereInput[]
    OR?: TuitionBreakdownWhereInput[]
    NOT?: TuitionBreakdownWhereInput | TuitionBreakdownWhereInput[]
    universityId?: StringFilter<"TuitionBreakdown"> | string
    programId?: StringNullableFilter<"TuitionBreakdown"> | string | null
    academicYear?: StringFilter<"TuitionBreakdown"> | string
    yearNumber?: IntFilter<"TuitionBreakdown"> | number
    baseTuition?: FloatFilter<"TuitionBreakdown"> | number
    labFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    libraryFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    technologyFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    activityFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    healthInsurance?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    dormitoryFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    mealPlanFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    applicationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    registrationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    examFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    graduationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    totalTuition?: FloatFilter<"TuitionBreakdown"> | number
    totalAdditionalFees?: FloatFilter<"TuitionBreakdown"> | number
    grandTotal?: FloatFilter<"TuitionBreakdown"> | number
    currency?: StringFilter<"TuitionBreakdown"> | string
    currencySymbol?: StringFilter<"TuitionBreakdown"> | string
    paymentTerms?: StringNullableFilter<"TuitionBreakdown"> | string | null
    installmentCount?: IntNullableFilter<"TuitionBreakdown"> | number | null
    isActive?: BoolFilter<"TuitionBreakdown"> | boolean
    effectiveDate?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    expiryDate?: DateTimeNullableFilter<"TuitionBreakdown"> | Date | string | null
    createdAt?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    updatedAt?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    paymentSchedule?: PaymentScheduleListRelationFilter
  }, "id" | "universityId_programId_academicYear_yearNumber">

  export type TuitionBreakdownOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    academicYear?: SortOrder
    yearNumber?: SortOrder
    baseTuition?: SortOrder
    labFees?: SortOrderInput | SortOrder
    libraryFees?: SortOrderInput | SortOrder
    technologyFees?: SortOrderInput | SortOrder
    activityFees?: SortOrderInput | SortOrder
    healthInsurance?: SortOrderInput | SortOrder
    dormitoryFees?: SortOrderInput | SortOrder
    mealPlanFees?: SortOrderInput | SortOrder
    applicationFee?: SortOrderInput | SortOrder
    registrationFee?: SortOrderInput | SortOrder
    examFees?: SortOrderInput | SortOrder
    graduationFee?: SortOrderInput | SortOrder
    totalTuition?: SortOrder
    totalAdditionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    installmentCount?: SortOrderInput | SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TuitionBreakdownCountOrderByAggregateInput
    _avg?: TuitionBreakdownAvgOrderByAggregateInput
    _max?: TuitionBreakdownMaxOrderByAggregateInput
    _min?: TuitionBreakdownMinOrderByAggregateInput
    _sum?: TuitionBreakdownSumOrderByAggregateInput
  }

  export type TuitionBreakdownScalarWhereWithAggregatesInput = {
    AND?: TuitionBreakdownScalarWhereWithAggregatesInput | TuitionBreakdownScalarWhereWithAggregatesInput[]
    OR?: TuitionBreakdownScalarWhereWithAggregatesInput[]
    NOT?: TuitionBreakdownScalarWhereWithAggregatesInput | TuitionBreakdownScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TuitionBreakdown"> | string
    universityId?: StringWithAggregatesFilter<"TuitionBreakdown"> | string
    programId?: StringNullableWithAggregatesFilter<"TuitionBreakdown"> | string | null
    academicYear?: StringWithAggregatesFilter<"TuitionBreakdown"> | string
    yearNumber?: IntWithAggregatesFilter<"TuitionBreakdown"> | number
    baseTuition?: FloatWithAggregatesFilter<"TuitionBreakdown"> | number
    labFees?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    libraryFees?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    technologyFees?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    activityFees?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    healthInsurance?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    dormitoryFees?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    mealPlanFees?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    applicationFee?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    registrationFee?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    examFees?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    graduationFee?: FloatNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    totalTuition?: FloatWithAggregatesFilter<"TuitionBreakdown"> | number
    totalAdditionalFees?: FloatWithAggregatesFilter<"TuitionBreakdown"> | number
    grandTotal?: FloatWithAggregatesFilter<"TuitionBreakdown"> | number
    currency?: StringWithAggregatesFilter<"TuitionBreakdown"> | string
    currencySymbol?: StringWithAggregatesFilter<"TuitionBreakdown"> | string
    paymentTerms?: StringNullableWithAggregatesFilter<"TuitionBreakdown"> | string | null
    installmentCount?: IntNullableWithAggregatesFilter<"TuitionBreakdown"> | number | null
    isActive?: BoolWithAggregatesFilter<"TuitionBreakdown"> | boolean
    effectiveDate?: DateTimeWithAggregatesFilter<"TuitionBreakdown"> | Date | string
    expiryDate?: DateTimeNullableWithAggregatesFilter<"TuitionBreakdown"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"TuitionBreakdown"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"TuitionBreakdown"> | Date | string
  }

  export type PaymentScheduleWhereInput = {
    AND?: PaymentScheduleWhereInput | PaymentScheduleWhereInput[]
    OR?: PaymentScheduleWhereInput[]
    NOT?: PaymentScheduleWhereInput | PaymentScheduleWhereInput[]
    id?: StringFilter<"PaymentSchedule"> | string
    tuitionBreakdownId?: StringFilter<"PaymentSchedule"> | string
    installmentNumber?: IntFilter<"PaymentSchedule"> | number
    dueDate?: DateTimeFilter<"PaymentSchedule"> | Date | string
    amount?: FloatFilter<"PaymentSchedule"> | number
    description?: StringNullableFilter<"PaymentSchedule"> | string | null
    lateFee?: FloatNullableFilter<"PaymentSchedule"> | number | null
    gracePeroidDays?: IntNullableFilter<"PaymentSchedule"> | number | null
    isActive?: BoolFilter<"PaymentSchedule"> | boolean
    createdAt?: DateTimeFilter<"PaymentSchedule"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentSchedule"> | Date | string
    tuitionBreakdown?: XOR<TuitionBreakdownScalarRelationFilter, TuitionBreakdownWhereInput>
  }

  export type PaymentScheduleOrderByWithRelationInput = {
    id?: SortOrder
    tuitionBreakdownId?: SortOrder
    installmentNumber?: SortOrder
    dueDate?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    lateFee?: SortOrderInput | SortOrder
    gracePeroidDays?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tuitionBreakdown?: TuitionBreakdownOrderByWithRelationInput
  }

  export type PaymentScheduleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentScheduleWhereInput | PaymentScheduleWhereInput[]
    OR?: PaymentScheduleWhereInput[]
    NOT?: PaymentScheduleWhereInput | PaymentScheduleWhereInput[]
    tuitionBreakdownId?: StringFilter<"PaymentSchedule"> | string
    installmentNumber?: IntFilter<"PaymentSchedule"> | number
    dueDate?: DateTimeFilter<"PaymentSchedule"> | Date | string
    amount?: FloatFilter<"PaymentSchedule"> | number
    description?: StringNullableFilter<"PaymentSchedule"> | string | null
    lateFee?: FloatNullableFilter<"PaymentSchedule"> | number | null
    gracePeroidDays?: IntNullableFilter<"PaymentSchedule"> | number | null
    isActive?: BoolFilter<"PaymentSchedule"> | boolean
    createdAt?: DateTimeFilter<"PaymentSchedule"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentSchedule"> | Date | string
    tuitionBreakdown?: XOR<TuitionBreakdownScalarRelationFilter, TuitionBreakdownWhereInput>
  }, "id">

  export type PaymentScheduleOrderByWithAggregationInput = {
    id?: SortOrder
    tuitionBreakdownId?: SortOrder
    installmentNumber?: SortOrder
    dueDate?: SortOrder
    amount?: SortOrder
    description?: SortOrderInput | SortOrder
    lateFee?: SortOrderInput | SortOrder
    gracePeroidDays?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PaymentScheduleCountOrderByAggregateInput
    _avg?: PaymentScheduleAvgOrderByAggregateInput
    _max?: PaymentScheduleMaxOrderByAggregateInput
    _min?: PaymentScheduleMinOrderByAggregateInput
    _sum?: PaymentScheduleSumOrderByAggregateInput
  }

  export type PaymentScheduleScalarWhereWithAggregatesInput = {
    AND?: PaymentScheduleScalarWhereWithAggregatesInput | PaymentScheduleScalarWhereWithAggregatesInput[]
    OR?: PaymentScheduleScalarWhereWithAggregatesInput[]
    NOT?: PaymentScheduleScalarWhereWithAggregatesInput | PaymentScheduleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentSchedule"> | string
    tuitionBreakdownId?: StringWithAggregatesFilter<"PaymentSchedule"> | string
    installmentNumber?: IntWithAggregatesFilter<"PaymentSchedule"> | number
    dueDate?: DateTimeWithAggregatesFilter<"PaymentSchedule"> | Date | string
    amount?: FloatWithAggregatesFilter<"PaymentSchedule"> | number
    description?: StringNullableWithAggregatesFilter<"PaymentSchedule"> | string | null
    lateFee?: FloatNullableWithAggregatesFilter<"PaymentSchedule"> | number | null
    gracePeroidDays?: IntNullableWithAggregatesFilter<"PaymentSchedule"> | number | null
    isActive?: BoolWithAggregatesFilter<"PaymentSchedule"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"PaymentSchedule"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PaymentSchedule"> | Date | string
  }

  export type ScholarshipWhereInput = {
    AND?: ScholarshipWhereInput | ScholarshipWhereInput[]
    OR?: ScholarshipWhereInput[]
    NOT?: ScholarshipWhereInput | ScholarshipWhereInput[]
    id?: StringFilter<"Scholarship"> | string
    universityId?: StringFilter<"Scholarship"> | string
    programId?: StringNullableFilter<"Scholarship"> | string | null
    scholarshipName?: StringFilter<"Scholarship"> | string
    scholarshipSlug?: StringFilter<"Scholarship"> | string
    scholarshipType?: StringFilter<"Scholarship"> | string
    description?: StringNullableFilter<"Scholarship"> | string | null
    eligibilityCriteria?: StringNullableFilter<"Scholarship"> | string | null
    amount?: FloatNullableFilter<"Scholarship"> | number | null
    percentage?: FloatNullableFilter<"Scholarship"> | number | null
    maxAmount?: FloatNullableFilter<"Scholarship"> | number | null
    currency?: StringFilter<"Scholarship"> | string
    coverageTuition?: BoolFilter<"Scholarship"> | boolean
    coverageFees?: BoolFilter<"Scholarship"> | boolean
    coverageLiving?: BoolFilter<"Scholarship"> | boolean
    coverageBooks?: BoolFilter<"Scholarship"> | boolean
    applicationRequired?: BoolFilter<"Scholarship"> | boolean
    applicationDeadline?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    documentsRequired?: StringNullableFilter<"Scholarship"> | string | null
    totalAvailable?: IntNullableFilter<"Scholarship"> | number | null
    currentlyAwarded?: IntNullableFilter<"Scholarship"> | number | null
    minimumGpa?: FloatNullableFilter<"Scholarship"> | number | null
    minimumTestScore?: IntNullableFilter<"Scholarship"> | number | null
    testType?: StringNullableFilter<"Scholarship"> | string | null
    citizenshipRequired?: StringNullableFilter<"Scholarship"> | string | null
    isActive?: BoolFilter<"Scholarship"> | boolean
    applicationOpenDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    awardDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    createdAt?: DateTimeFilter<"Scholarship"> | Date | string
    updatedAt?: DateTimeFilter<"Scholarship"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    documents?: ScholarshipDocumentListRelationFilter
    applications?: ScholarshipApplicationListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }

  export type ScholarshipOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    scholarshipName?: SortOrder
    scholarshipSlug?: SortOrder
    scholarshipType?: SortOrder
    description?: SortOrderInput | SortOrder
    eligibilityCriteria?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    percentage?: SortOrderInput | SortOrder
    maxAmount?: SortOrderInput | SortOrder
    currency?: SortOrder
    coverageTuition?: SortOrder
    coverageFees?: SortOrder
    coverageLiving?: SortOrder
    coverageBooks?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrderInput | SortOrder
    documentsRequired?: SortOrderInput | SortOrder
    totalAvailable?: SortOrderInput | SortOrder
    currentlyAwarded?: SortOrderInput | SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    minimumTestScore?: SortOrderInput | SortOrder
    testType?: SortOrderInput | SortOrder
    citizenshipRequired?: SortOrderInput | SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrderInput | SortOrder
    applicationCloseDate?: SortOrderInput | SortOrder
    awardDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    documents?: ScholarshipDocumentOrderByRelationAggregateInput
    applications?: ScholarshipApplicationOrderByRelationAggregateInput
    calendarEvents?: CalendarEventOrderByRelationAggregateInput
  }

  export type ScholarshipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universityId_scholarshipSlug?: ScholarshipUniversityIdScholarshipSlugCompoundUniqueInput
    AND?: ScholarshipWhereInput | ScholarshipWhereInput[]
    OR?: ScholarshipWhereInput[]
    NOT?: ScholarshipWhereInput | ScholarshipWhereInput[]
    universityId?: StringFilter<"Scholarship"> | string
    programId?: StringNullableFilter<"Scholarship"> | string | null
    scholarshipName?: StringFilter<"Scholarship"> | string
    scholarshipSlug?: StringFilter<"Scholarship"> | string
    scholarshipType?: StringFilter<"Scholarship"> | string
    description?: StringNullableFilter<"Scholarship"> | string | null
    eligibilityCriteria?: StringNullableFilter<"Scholarship"> | string | null
    amount?: FloatNullableFilter<"Scholarship"> | number | null
    percentage?: FloatNullableFilter<"Scholarship"> | number | null
    maxAmount?: FloatNullableFilter<"Scholarship"> | number | null
    currency?: StringFilter<"Scholarship"> | string
    coverageTuition?: BoolFilter<"Scholarship"> | boolean
    coverageFees?: BoolFilter<"Scholarship"> | boolean
    coverageLiving?: BoolFilter<"Scholarship"> | boolean
    coverageBooks?: BoolFilter<"Scholarship"> | boolean
    applicationRequired?: BoolFilter<"Scholarship"> | boolean
    applicationDeadline?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    documentsRequired?: StringNullableFilter<"Scholarship"> | string | null
    totalAvailable?: IntNullableFilter<"Scholarship"> | number | null
    currentlyAwarded?: IntNullableFilter<"Scholarship"> | number | null
    minimumGpa?: FloatNullableFilter<"Scholarship"> | number | null
    minimumTestScore?: IntNullableFilter<"Scholarship"> | number | null
    testType?: StringNullableFilter<"Scholarship"> | string | null
    citizenshipRequired?: StringNullableFilter<"Scholarship"> | string | null
    isActive?: BoolFilter<"Scholarship"> | boolean
    applicationOpenDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    awardDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    createdAt?: DateTimeFilter<"Scholarship"> | Date | string
    updatedAt?: DateTimeFilter<"Scholarship"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    documents?: ScholarshipDocumentListRelationFilter
    applications?: ScholarshipApplicationListRelationFilter
    calendarEvents?: CalendarEventListRelationFilter
  }, "id" | "universityId_scholarshipSlug">

  export type ScholarshipOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    scholarshipName?: SortOrder
    scholarshipSlug?: SortOrder
    scholarshipType?: SortOrder
    description?: SortOrderInput | SortOrder
    eligibilityCriteria?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    percentage?: SortOrderInput | SortOrder
    maxAmount?: SortOrderInput | SortOrder
    currency?: SortOrder
    coverageTuition?: SortOrder
    coverageFees?: SortOrder
    coverageLiving?: SortOrder
    coverageBooks?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrderInput | SortOrder
    documentsRequired?: SortOrderInput | SortOrder
    totalAvailable?: SortOrderInput | SortOrder
    currentlyAwarded?: SortOrderInput | SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    minimumTestScore?: SortOrderInput | SortOrder
    testType?: SortOrderInput | SortOrder
    citizenshipRequired?: SortOrderInput | SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrderInput | SortOrder
    applicationCloseDate?: SortOrderInput | SortOrder
    awardDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ScholarshipCountOrderByAggregateInput
    _avg?: ScholarshipAvgOrderByAggregateInput
    _max?: ScholarshipMaxOrderByAggregateInput
    _min?: ScholarshipMinOrderByAggregateInput
    _sum?: ScholarshipSumOrderByAggregateInput
  }

  export type ScholarshipScalarWhereWithAggregatesInput = {
    AND?: ScholarshipScalarWhereWithAggregatesInput | ScholarshipScalarWhereWithAggregatesInput[]
    OR?: ScholarshipScalarWhereWithAggregatesInput[]
    NOT?: ScholarshipScalarWhereWithAggregatesInput | ScholarshipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Scholarship"> | string
    universityId?: StringWithAggregatesFilter<"Scholarship"> | string
    programId?: StringNullableWithAggregatesFilter<"Scholarship"> | string | null
    scholarshipName?: StringWithAggregatesFilter<"Scholarship"> | string
    scholarshipSlug?: StringWithAggregatesFilter<"Scholarship"> | string
    scholarshipType?: StringWithAggregatesFilter<"Scholarship"> | string
    description?: StringNullableWithAggregatesFilter<"Scholarship"> | string | null
    eligibilityCriteria?: StringNullableWithAggregatesFilter<"Scholarship"> | string | null
    amount?: FloatNullableWithAggregatesFilter<"Scholarship"> | number | null
    percentage?: FloatNullableWithAggregatesFilter<"Scholarship"> | number | null
    maxAmount?: FloatNullableWithAggregatesFilter<"Scholarship"> | number | null
    currency?: StringWithAggregatesFilter<"Scholarship"> | string
    coverageTuition?: BoolWithAggregatesFilter<"Scholarship"> | boolean
    coverageFees?: BoolWithAggregatesFilter<"Scholarship"> | boolean
    coverageLiving?: BoolWithAggregatesFilter<"Scholarship"> | boolean
    coverageBooks?: BoolWithAggregatesFilter<"Scholarship"> | boolean
    applicationRequired?: BoolWithAggregatesFilter<"Scholarship"> | boolean
    applicationDeadline?: DateTimeNullableWithAggregatesFilter<"Scholarship"> | Date | string | null
    documentsRequired?: StringNullableWithAggregatesFilter<"Scholarship"> | string | null
    totalAvailable?: IntNullableWithAggregatesFilter<"Scholarship"> | number | null
    currentlyAwarded?: IntNullableWithAggregatesFilter<"Scholarship"> | number | null
    minimumGpa?: FloatNullableWithAggregatesFilter<"Scholarship"> | number | null
    minimumTestScore?: IntNullableWithAggregatesFilter<"Scholarship"> | number | null
    testType?: StringNullableWithAggregatesFilter<"Scholarship"> | string | null
    citizenshipRequired?: StringNullableWithAggregatesFilter<"Scholarship"> | string | null
    isActive?: BoolWithAggregatesFilter<"Scholarship"> | boolean
    applicationOpenDate?: DateTimeNullableWithAggregatesFilter<"Scholarship"> | Date | string | null
    applicationCloseDate?: DateTimeNullableWithAggregatesFilter<"Scholarship"> | Date | string | null
    awardDate?: DateTimeNullableWithAggregatesFilter<"Scholarship"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Scholarship"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Scholarship"> | Date | string
  }

  export type ScholarshipDocumentWhereInput = {
    AND?: ScholarshipDocumentWhereInput | ScholarshipDocumentWhereInput[]
    OR?: ScholarshipDocumentWhereInput[]
    NOT?: ScholarshipDocumentWhereInput | ScholarshipDocumentWhereInput[]
    id?: StringFilter<"ScholarshipDocument"> | string
    scholarshipId?: StringFilter<"ScholarshipDocument"> | string
    documentType?: StringFilter<"ScholarshipDocument"> | string
    documentTitle?: StringFilter<"ScholarshipDocument"> | string
    fileName?: StringFilter<"ScholarshipDocument"> | string
    fileUrl?: StringFilter<"ScholarshipDocument"> | string
    fileSize?: IntNullableFilter<"ScholarshipDocument"> | number | null
    mimeType?: StringNullableFilter<"ScholarshipDocument"> | string | null
    isRequired?: BoolFilter<"ScholarshipDocument"> | boolean
    displayOrder?: IntFilter<"ScholarshipDocument"> | number
    isPublic?: BoolFilter<"ScholarshipDocument"> | boolean
    downloadCount?: IntFilter<"ScholarshipDocument"> | number
    uploadedAt?: DateTimeFilter<"ScholarshipDocument"> | Date | string
    updatedAt?: DateTimeFilter<"ScholarshipDocument"> | Date | string
    scholarship?: XOR<ScholarshipScalarRelationFilter, ScholarshipWhereInput>
  }

  export type ScholarshipDocumentOrderByWithRelationInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    isPublic?: SortOrder
    downloadCount?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    scholarship?: ScholarshipOrderByWithRelationInput
  }

  export type ScholarshipDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ScholarshipDocumentWhereInput | ScholarshipDocumentWhereInput[]
    OR?: ScholarshipDocumentWhereInput[]
    NOT?: ScholarshipDocumentWhereInput | ScholarshipDocumentWhereInput[]
    scholarshipId?: StringFilter<"ScholarshipDocument"> | string
    documentType?: StringFilter<"ScholarshipDocument"> | string
    documentTitle?: StringFilter<"ScholarshipDocument"> | string
    fileName?: StringFilter<"ScholarshipDocument"> | string
    fileUrl?: StringFilter<"ScholarshipDocument"> | string
    fileSize?: IntNullableFilter<"ScholarshipDocument"> | number | null
    mimeType?: StringNullableFilter<"ScholarshipDocument"> | string | null
    isRequired?: BoolFilter<"ScholarshipDocument"> | boolean
    displayOrder?: IntFilter<"ScholarshipDocument"> | number
    isPublic?: BoolFilter<"ScholarshipDocument"> | boolean
    downloadCount?: IntFilter<"ScholarshipDocument"> | number
    uploadedAt?: DateTimeFilter<"ScholarshipDocument"> | Date | string
    updatedAt?: DateTimeFilter<"ScholarshipDocument"> | Date | string
    scholarship?: XOR<ScholarshipScalarRelationFilter, ScholarshipWhereInput>
  }, "id">

  export type ScholarshipDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    isPublic?: SortOrder
    downloadCount?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ScholarshipDocumentCountOrderByAggregateInput
    _avg?: ScholarshipDocumentAvgOrderByAggregateInput
    _max?: ScholarshipDocumentMaxOrderByAggregateInput
    _min?: ScholarshipDocumentMinOrderByAggregateInput
    _sum?: ScholarshipDocumentSumOrderByAggregateInput
  }

  export type ScholarshipDocumentScalarWhereWithAggregatesInput = {
    AND?: ScholarshipDocumentScalarWhereWithAggregatesInput | ScholarshipDocumentScalarWhereWithAggregatesInput[]
    OR?: ScholarshipDocumentScalarWhereWithAggregatesInput[]
    NOT?: ScholarshipDocumentScalarWhereWithAggregatesInput | ScholarshipDocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ScholarshipDocument"> | string
    scholarshipId?: StringWithAggregatesFilter<"ScholarshipDocument"> | string
    documentType?: StringWithAggregatesFilter<"ScholarshipDocument"> | string
    documentTitle?: StringWithAggregatesFilter<"ScholarshipDocument"> | string
    fileName?: StringWithAggregatesFilter<"ScholarshipDocument"> | string
    fileUrl?: StringWithAggregatesFilter<"ScholarshipDocument"> | string
    fileSize?: IntNullableWithAggregatesFilter<"ScholarshipDocument"> | number | null
    mimeType?: StringNullableWithAggregatesFilter<"ScholarshipDocument"> | string | null
    isRequired?: BoolWithAggregatesFilter<"ScholarshipDocument"> | boolean
    displayOrder?: IntWithAggregatesFilter<"ScholarshipDocument"> | number
    isPublic?: BoolWithAggregatesFilter<"ScholarshipDocument"> | boolean
    downloadCount?: IntWithAggregatesFilter<"ScholarshipDocument"> | number
    uploadedAt?: DateTimeWithAggregatesFilter<"ScholarshipDocument"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ScholarshipDocument"> | Date | string
  }

  export type ScholarshipApplicationWhereInput = {
    AND?: ScholarshipApplicationWhereInput | ScholarshipApplicationWhereInput[]
    OR?: ScholarshipApplicationWhereInput[]
    NOT?: ScholarshipApplicationWhereInput | ScholarshipApplicationWhereInput[]
    id?: StringFilter<"ScholarshipApplication"> | string
    scholarshipId?: StringFilter<"ScholarshipApplication"> | string
    userId?: StringNullableFilter<"ScholarshipApplication"> | string | null
    applicationId?: StringNullableFilter<"ScholarshipApplication"> | string | null
    firstName?: StringFilter<"ScholarshipApplication"> | string
    lastName?: StringFilter<"ScholarshipApplication"> | string
    email?: StringFilter<"ScholarshipApplication"> | string
    phone?: StringNullableFilter<"ScholarshipApplication"> | string | null
    currentGpa?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    testScore?: IntNullableFilter<"ScholarshipApplication"> | number | null
    testType?: StringNullableFilter<"ScholarshipApplication"> | string | null
    familyIncome?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    financialNeed?: StringNullableFilter<"ScholarshipApplication"> | string | null
    applicationStatus?: StringFilter<"ScholarshipApplication"> | string
    submissionDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    awardAmount?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    documentsUploaded?: StringNullableFilter<"ScholarshipApplication"> | string | null
    createdAt?: DateTimeFilter<"ScholarshipApplication"> | Date | string
    updatedAt?: DateTimeFilter<"ScholarshipApplication"> | Date | string
    scholarship?: XOR<ScholarshipScalarRelationFilter, ScholarshipWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
  }

  export type ScholarshipApplicationOrderByWithRelationInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    currentGpa?: SortOrderInput | SortOrder
    testScore?: SortOrderInput | SortOrder
    testType?: SortOrderInput | SortOrder
    familyIncome?: SortOrderInput | SortOrder
    financialNeed?: SortOrderInput | SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrderInput | SortOrder
    reviewDate?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    awardAmount?: SortOrderInput | SortOrder
    documentsUploaded?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    scholarship?: ScholarshipOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    application?: ApplicationOrderByWithRelationInput
  }

  export type ScholarshipApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ScholarshipApplicationWhereInput | ScholarshipApplicationWhereInput[]
    OR?: ScholarshipApplicationWhereInput[]
    NOT?: ScholarshipApplicationWhereInput | ScholarshipApplicationWhereInput[]
    scholarshipId?: StringFilter<"ScholarshipApplication"> | string
    userId?: StringNullableFilter<"ScholarshipApplication"> | string | null
    applicationId?: StringNullableFilter<"ScholarshipApplication"> | string | null
    firstName?: StringFilter<"ScholarshipApplication"> | string
    lastName?: StringFilter<"ScholarshipApplication"> | string
    email?: StringFilter<"ScholarshipApplication"> | string
    phone?: StringNullableFilter<"ScholarshipApplication"> | string | null
    currentGpa?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    testScore?: IntNullableFilter<"ScholarshipApplication"> | number | null
    testType?: StringNullableFilter<"ScholarshipApplication"> | string | null
    familyIncome?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    financialNeed?: StringNullableFilter<"ScholarshipApplication"> | string | null
    applicationStatus?: StringFilter<"ScholarshipApplication"> | string
    submissionDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    awardAmount?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    documentsUploaded?: StringNullableFilter<"ScholarshipApplication"> | string | null
    createdAt?: DateTimeFilter<"ScholarshipApplication"> | Date | string
    updatedAt?: DateTimeFilter<"ScholarshipApplication"> | Date | string
    scholarship?: XOR<ScholarshipScalarRelationFilter, ScholarshipWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
  }, "id">

  export type ScholarshipApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    currentGpa?: SortOrderInput | SortOrder
    testScore?: SortOrderInput | SortOrder
    testType?: SortOrderInput | SortOrder
    familyIncome?: SortOrderInput | SortOrder
    financialNeed?: SortOrderInput | SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrderInput | SortOrder
    reviewDate?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    awardAmount?: SortOrderInput | SortOrder
    documentsUploaded?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ScholarshipApplicationCountOrderByAggregateInput
    _avg?: ScholarshipApplicationAvgOrderByAggregateInput
    _max?: ScholarshipApplicationMaxOrderByAggregateInput
    _min?: ScholarshipApplicationMinOrderByAggregateInput
    _sum?: ScholarshipApplicationSumOrderByAggregateInput
  }

  export type ScholarshipApplicationScalarWhereWithAggregatesInput = {
    AND?: ScholarshipApplicationScalarWhereWithAggregatesInput | ScholarshipApplicationScalarWhereWithAggregatesInput[]
    OR?: ScholarshipApplicationScalarWhereWithAggregatesInput[]
    NOT?: ScholarshipApplicationScalarWhereWithAggregatesInput | ScholarshipApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ScholarshipApplication"> | string
    scholarshipId?: StringWithAggregatesFilter<"ScholarshipApplication"> | string
    userId?: StringNullableWithAggregatesFilter<"ScholarshipApplication"> | string | null
    applicationId?: StringNullableWithAggregatesFilter<"ScholarshipApplication"> | string | null
    firstName?: StringWithAggregatesFilter<"ScholarshipApplication"> | string
    lastName?: StringWithAggregatesFilter<"ScholarshipApplication"> | string
    email?: StringWithAggregatesFilter<"ScholarshipApplication"> | string
    phone?: StringNullableWithAggregatesFilter<"ScholarshipApplication"> | string | null
    currentGpa?: FloatNullableWithAggregatesFilter<"ScholarshipApplication"> | number | null
    testScore?: IntNullableWithAggregatesFilter<"ScholarshipApplication"> | number | null
    testType?: StringNullableWithAggregatesFilter<"ScholarshipApplication"> | string | null
    familyIncome?: FloatNullableWithAggregatesFilter<"ScholarshipApplication"> | number | null
    financialNeed?: StringNullableWithAggregatesFilter<"ScholarshipApplication"> | string | null
    applicationStatus?: StringWithAggregatesFilter<"ScholarshipApplication"> | string
    submissionDate?: DateTimeNullableWithAggregatesFilter<"ScholarshipApplication"> | Date | string | null
    reviewDate?: DateTimeNullableWithAggregatesFilter<"ScholarshipApplication"> | Date | string | null
    decisionDate?: DateTimeNullableWithAggregatesFilter<"ScholarshipApplication"> | Date | string | null
    awardAmount?: FloatNullableWithAggregatesFilter<"ScholarshipApplication"> | number | null
    documentsUploaded?: StringNullableWithAggregatesFilter<"ScholarshipApplication"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ScholarshipApplication"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ScholarshipApplication"> | Date | string
  }

  export type FeeStructureWhereInput = {
    AND?: FeeStructureWhereInput | FeeStructureWhereInput[]
    OR?: FeeStructureWhereInput[]
    NOT?: FeeStructureWhereInput | FeeStructureWhereInput[]
    id?: StringFilter<"FeeStructure"> | string
    universityId?: StringFilter<"FeeStructure"> | string
    programId?: StringNullableFilter<"FeeStructure"> | string | null
    structureName?: StringFilter<"FeeStructure"> | string
    structureType?: StringFilter<"FeeStructure"> | string
    academicYear?: StringFilter<"FeeStructure"> | string
    tuitionFee?: FloatFilter<"FeeStructure"> | number
    admissionFee?: FloatNullableFilter<"FeeStructure"> | number | null
    registrationFee?: FloatNullableFilter<"FeeStructure"> | number | null
    examFee?: FloatNullableFilter<"FeeStructure"> | number | null
    libraryFee?: FloatNullableFilter<"FeeStructure"> | number | null
    labFee?: FloatNullableFilter<"FeeStructure"> | number | null
    hostelFee?: FloatNullableFilter<"FeeStructure"> | number | null
    messFee?: FloatNullableFilter<"FeeStructure"> | number | null
    transportFee?: FloatNullableFilter<"FeeStructure"> | number | null
    sportsFee?: FloatNullableFilter<"FeeStructure"> | number | null
    medicalFee?: FloatNullableFilter<"FeeStructure"> | number | null
    healthInsurance?: FloatNullableFilter<"FeeStructure"> | number | null
    accidentInsurance?: FloatNullableFilter<"FeeStructure"> | number | null
    studentActivityFee?: FloatNullableFilter<"FeeStructure"> | number | null
    technologyFee?: FloatNullableFilter<"FeeStructure"> | number | null
    securityDeposit?: FloatNullableFilter<"FeeStructure"> | number | null
    cautionMoney?: FloatNullableFilter<"FeeStructure"> | number | null
    isDepositRefundable?: BoolFilter<"FeeStructure"> | boolean
    totalMandatoryFees?: FloatFilter<"FeeStructure"> | number
    totalOptionalFees?: FloatFilter<"FeeStructure"> | number
    grandTotal?: FloatFilter<"FeeStructure"> | number
    currency?: StringFilter<"FeeStructure"> | string
    currencySymbol?: StringFilter<"FeeStructure"> | string
    paymentTerms?: StringNullableFilter<"FeeStructure"> | string | null
    installmentCount?: IntNullableFilter<"FeeStructure"> | number | null
    isActive?: BoolFilter<"FeeStructure"> | boolean
    effectiveDate?: DateTimeFilter<"FeeStructure"> | Date | string
    expiryDate?: DateTimeNullableFilter<"FeeStructure"> | Date | string | null
    createdAt?: DateTimeFilter<"FeeStructure"> | Date | string
    updatedAt?: DateTimeFilter<"FeeStructure"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
  }

  export type FeeStructureOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    structureName?: SortOrder
    structureType?: SortOrder
    academicYear?: SortOrder
    tuitionFee?: SortOrder
    admissionFee?: SortOrderInput | SortOrder
    registrationFee?: SortOrderInput | SortOrder
    examFee?: SortOrderInput | SortOrder
    libraryFee?: SortOrderInput | SortOrder
    labFee?: SortOrderInput | SortOrder
    hostelFee?: SortOrderInput | SortOrder
    messFee?: SortOrderInput | SortOrder
    transportFee?: SortOrderInput | SortOrder
    sportsFee?: SortOrderInput | SortOrder
    medicalFee?: SortOrderInput | SortOrder
    healthInsurance?: SortOrderInput | SortOrder
    accidentInsurance?: SortOrderInput | SortOrder
    studentActivityFee?: SortOrderInput | SortOrder
    technologyFee?: SortOrderInput | SortOrder
    securityDeposit?: SortOrderInput | SortOrder
    cautionMoney?: SortOrderInput | SortOrder
    isDepositRefundable?: SortOrder
    totalMandatoryFees?: SortOrder
    totalOptionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    installmentCount?: SortOrderInput | SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
  }

  export type FeeStructureWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    universityId_programId_structureType_academicYear?: FeeStructureUniversityIdProgramIdStructureTypeAcademicYearCompoundUniqueInput
    AND?: FeeStructureWhereInput | FeeStructureWhereInput[]
    OR?: FeeStructureWhereInput[]
    NOT?: FeeStructureWhereInput | FeeStructureWhereInput[]
    universityId?: StringFilter<"FeeStructure"> | string
    programId?: StringNullableFilter<"FeeStructure"> | string | null
    structureName?: StringFilter<"FeeStructure"> | string
    structureType?: StringFilter<"FeeStructure"> | string
    academicYear?: StringFilter<"FeeStructure"> | string
    tuitionFee?: FloatFilter<"FeeStructure"> | number
    admissionFee?: FloatNullableFilter<"FeeStructure"> | number | null
    registrationFee?: FloatNullableFilter<"FeeStructure"> | number | null
    examFee?: FloatNullableFilter<"FeeStructure"> | number | null
    libraryFee?: FloatNullableFilter<"FeeStructure"> | number | null
    labFee?: FloatNullableFilter<"FeeStructure"> | number | null
    hostelFee?: FloatNullableFilter<"FeeStructure"> | number | null
    messFee?: FloatNullableFilter<"FeeStructure"> | number | null
    transportFee?: FloatNullableFilter<"FeeStructure"> | number | null
    sportsFee?: FloatNullableFilter<"FeeStructure"> | number | null
    medicalFee?: FloatNullableFilter<"FeeStructure"> | number | null
    healthInsurance?: FloatNullableFilter<"FeeStructure"> | number | null
    accidentInsurance?: FloatNullableFilter<"FeeStructure"> | number | null
    studentActivityFee?: FloatNullableFilter<"FeeStructure"> | number | null
    technologyFee?: FloatNullableFilter<"FeeStructure"> | number | null
    securityDeposit?: FloatNullableFilter<"FeeStructure"> | number | null
    cautionMoney?: FloatNullableFilter<"FeeStructure"> | number | null
    isDepositRefundable?: BoolFilter<"FeeStructure"> | boolean
    totalMandatoryFees?: FloatFilter<"FeeStructure"> | number
    totalOptionalFees?: FloatFilter<"FeeStructure"> | number
    grandTotal?: FloatFilter<"FeeStructure"> | number
    currency?: StringFilter<"FeeStructure"> | string
    currencySymbol?: StringFilter<"FeeStructure"> | string
    paymentTerms?: StringNullableFilter<"FeeStructure"> | string | null
    installmentCount?: IntNullableFilter<"FeeStructure"> | number | null
    isActive?: BoolFilter<"FeeStructure"> | boolean
    effectiveDate?: DateTimeFilter<"FeeStructure"> | Date | string
    expiryDate?: DateTimeNullableFilter<"FeeStructure"> | Date | string | null
    createdAt?: DateTimeFilter<"FeeStructure"> | Date | string
    updatedAt?: DateTimeFilter<"FeeStructure"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
  }, "id" | "universityId_programId_structureType_academicYear">

  export type FeeStructureOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    structureName?: SortOrder
    structureType?: SortOrder
    academicYear?: SortOrder
    tuitionFee?: SortOrder
    admissionFee?: SortOrderInput | SortOrder
    registrationFee?: SortOrderInput | SortOrder
    examFee?: SortOrderInput | SortOrder
    libraryFee?: SortOrderInput | SortOrder
    labFee?: SortOrderInput | SortOrder
    hostelFee?: SortOrderInput | SortOrder
    messFee?: SortOrderInput | SortOrder
    transportFee?: SortOrderInput | SortOrder
    sportsFee?: SortOrderInput | SortOrder
    medicalFee?: SortOrderInput | SortOrder
    healthInsurance?: SortOrderInput | SortOrder
    accidentInsurance?: SortOrderInput | SortOrder
    studentActivityFee?: SortOrderInput | SortOrder
    technologyFee?: SortOrderInput | SortOrder
    securityDeposit?: SortOrderInput | SortOrder
    cautionMoney?: SortOrderInput | SortOrder
    isDepositRefundable?: SortOrder
    totalMandatoryFees?: SortOrder
    totalOptionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrderInput | SortOrder
    installmentCount?: SortOrderInput | SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FeeStructureCountOrderByAggregateInput
    _avg?: FeeStructureAvgOrderByAggregateInput
    _max?: FeeStructureMaxOrderByAggregateInput
    _min?: FeeStructureMinOrderByAggregateInput
    _sum?: FeeStructureSumOrderByAggregateInput
  }

  export type FeeStructureScalarWhereWithAggregatesInput = {
    AND?: FeeStructureScalarWhereWithAggregatesInput | FeeStructureScalarWhereWithAggregatesInput[]
    OR?: FeeStructureScalarWhereWithAggregatesInput[]
    NOT?: FeeStructureScalarWhereWithAggregatesInput | FeeStructureScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FeeStructure"> | string
    universityId?: StringWithAggregatesFilter<"FeeStructure"> | string
    programId?: StringNullableWithAggregatesFilter<"FeeStructure"> | string | null
    structureName?: StringWithAggregatesFilter<"FeeStructure"> | string
    structureType?: StringWithAggregatesFilter<"FeeStructure"> | string
    academicYear?: StringWithAggregatesFilter<"FeeStructure"> | string
    tuitionFee?: FloatWithAggregatesFilter<"FeeStructure"> | number
    admissionFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    registrationFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    examFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    libraryFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    labFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    hostelFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    messFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    transportFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    sportsFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    medicalFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    healthInsurance?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    accidentInsurance?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    studentActivityFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    technologyFee?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    securityDeposit?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    cautionMoney?: FloatNullableWithAggregatesFilter<"FeeStructure"> | number | null
    isDepositRefundable?: BoolWithAggregatesFilter<"FeeStructure"> | boolean
    totalMandatoryFees?: FloatWithAggregatesFilter<"FeeStructure"> | number
    totalOptionalFees?: FloatWithAggregatesFilter<"FeeStructure"> | number
    grandTotal?: FloatWithAggregatesFilter<"FeeStructure"> | number
    currency?: StringWithAggregatesFilter<"FeeStructure"> | string
    currencySymbol?: StringWithAggregatesFilter<"FeeStructure"> | string
    paymentTerms?: StringNullableWithAggregatesFilter<"FeeStructure"> | string | null
    installmentCount?: IntNullableWithAggregatesFilter<"FeeStructure"> | number | null
    isActive?: BoolWithAggregatesFilter<"FeeStructure"> | boolean
    effectiveDate?: DateTimeWithAggregatesFilter<"FeeStructure"> | Date | string
    expiryDate?: DateTimeNullableWithAggregatesFilter<"FeeStructure"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"FeeStructure"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FeeStructure"> | Date | string
  }

  export type FinancialAidWhereInput = {
    AND?: FinancialAidWhereInput | FinancialAidWhereInput[]
    OR?: FinancialAidWhereInput[]
    NOT?: FinancialAidWhereInput | FinancialAidWhereInput[]
    id?: StringFilter<"FinancialAid"> | string
    universityId?: StringFilter<"FinancialAid"> | string
    programId?: StringNullableFilter<"FinancialAid"> | string | null
    aidName?: StringFilter<"FinancialAid"> | string
    aidType?: StringFilter<"FinancialAid"> | string
    description?: StringNullableFilter<"FinancialAid"> | string | null
    amount?: FloatNullableFilter<"FinancialAid"> | number | null
    percentage?: FloatNullableFilter<"FinancialAid"> | number | null
    maxAmount?: FloatNullableFilter<"FinancialAid"> | number | null
    currency?: StringFilter<"FinancialAid"> | string
    interestRate?: FloatNullableFilter<"FinancialAid"> | number | null
    repaymentPeriod?: IntNullableFilter<"FinancialAid"> | number | null
    gracePeriod?: IntNullableFilter<"FinancialAid"> | number | null
    eligibilityCriteria?: StringNullableFilter<"FinancialAid"> | string | null
    minimumGpa?: FloatNullableFilter<"FinancialAid"> | number | null
    maximumFamilyIncome?: FloatNullableFilter<"FinancialAid"> | number | null
    citizenshipRequired?: StringNullableFilter<"FinancialAid"> | string | null
    applicationRequired?: BoolFilter<"FinancialAid"> | boolean
    applicationDeadline?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    documentsRequired?: StringNullableFilter<"FinancialAid"> | string | null
    isActive?: BoolFilter<"FinancialAid"> | boolean
    applicationOpenDate?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    createdAt?: DateTimeFilter<"FinancialAid"> | Date | string
    updatedAt?: DateTimeFilter<"FinancialAid"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    applications?: FinancialAidApplicationListRelationFilter
  }

  export type FinancialAidOrderByWithRelationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    aidName?: SortOrder
    aidType?: SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    percentage?: SortOrderInput | SortOrder
    maxAmount?: SortOrderInput | SortOrder
    currency?: SortOrder
    interestRate?: SortOrderInput | SortOrder
    repaymentPeriod?: SortOrderInput | SortOrder
    gracePeriod?: SortOrderInput | SortOrder
    eligibilityCriteria?: SortOrderInput | SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    maximumFamilyIncome?: SortOrderInput | SortOrder
    citizenshipRequired?: SortOrderInput | SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrderInput | SortOrder
    documentsRequired?: SortOrderInput | SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrderInput | SortOrder
    applicationCloseDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    university?: UniversityOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    applications?: FinancialAidApplicationOrderByRelationAggregateInput
  }

  export type FinancialAidWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FinancialAidWhereInput | FinancialAidWhereInput[]
    OR?: FinancialAidWhereInput[]
    NOT?: FinancialAidWhereInput | FinancialAidWhereInput[]
    universityId?: StringFilter<"FinancialAid"> | string
    programId?: StringNullableFilter<"FinancialAid"> | string | null
    aidName?: StringFilter<"FinancialAid"> | string
    aidType?: StringFilter<"FinancialAid"> | string
    description?: StringNullableFilter<"FinancialAid"> | string | null
    amount?: FloatNullableFilter<"FinancialAid"> | number | null
    percentage?: FloatNullableFilter<"FinancialAid"> | number | null
    maxAmount?: FloatNullableFilter<"FinancialAid"> | number | null
    currency?: StringFilter<"FinancialAid"> | string
    interestRate?: FloatNullableFilter<"FinancialAid"> | number | null
    repaymentPeriod?: IntNullableFilter<"FinancialAid"> | number | null
    gracePeriod?: IntNullableFilter<"FinancialAid"> | number | null
    eligibilityCriteria?: StringNullableFilter<"FinancialAid"> | string | null
    minimumGpa?: FloatNullableFilter<"FinancialAid"> | number | null
    maximumFamilyIncome?: FloatNullableFilter<"FinancialAid"> | number | null
    citizenshipRequired?: StringNullableFilter<"FinancialAid"> | string | null
    applicationRequired?: BoolFilter<"FinancialAid"> | boolean
    applicationDeadline?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    documentsRequired?: StringNullableFilter<"FinancialAid"> | string | null
    isActive?: BoolFilter<"FinancialAid"> | boolean
    applicationOpenDate?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    createdAt?: DateTimeFilter<"FinancialAid"> | Date | string
    updatedAt?: DateTimeFilter<"FinancialAid"> | Date | string
    university?: XOR<UniversityScalarRelationFilter, UniversityWhereInput>
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    applications?: FinancialAidApplicationListRelationFilter
  }, "id">

  export type FinancialAidOrderByWithAggregationInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrderInput | SortOrder
    aidName?: SortOrder
    aidType?: SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrderInput | SortOrder
    percentage?: SortOrderInput | SortOrder
    maxAmount?: SortOrderInput | SortOrder
    currency?: SortOrder
    interestRate?: SortOrderInput | SortOrder
    repaymentPeriod?: SortOrderInput | SortOrder
    gracePeriod?: SortOrderInput | SortOrder
    eligibilityCriteria?: SortOrderInput | SortOrder
    minimumGpa?: SortOrderInput | SortOrder
    maximumFamilyIncome?: SortOrderInput | SortOrder
    citizenshipRequired?: SortOrderInput | SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrderInput | SortOrder
    documentsRequired?: SortOrderInput | SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrderInput | SortOrder
    applicationCloseDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FinancialAidCountOrderByAggregateInput
    _avg?: FinancialAidAvgOrderByAggregateInput
    _max?: FinancialAidMaxOrderByAggregateInput
    _min?: FinancialAidMinOrderByAggregateInput
    _sum?: FinancialAidSumOrderByAggregateInput
  }

  export type FinancialAidScalarWhereWithAggregatesInput = {
    AND?: FinancialAidScalarWhereWithAggregatesInput | FinancialAidScalarWhereWithAggregatesInput[]
    OR?: FinancialAidScalarWhereWithAggregatesInput[]
    NOT?: FinancialAidScalarWhereWithAggregatesInput | FinancialAidScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FinancialAid"> | string
    universityId?: StringWithAggregatesFilter<"FinancialAid"> | string
    programId?: StringNullableWithAggregatesFilter<"FinancialAid"> | string | null
    aidName?: StringWithAggregatesFilter<"FinancialAid"> | string
    aidType?: StringWithAggregatesFilter<"FinancialAid"> | string
    description?: StringNullableWithAggregatesFilter<"FinancialAid"> | string | null
    amount?: FloatNullableWithAggregatesFilter<"FinancialAid"> | number | null
    percentage?: FloatNullableWithAggregatesFilter<"FinancialAid"> | number | null
    maxAmount?: FloatNullableWithAggregatesFilter<"FinancialAid"> | number | null
    currency?: StringWithAggregatesFilter<"FinancialAid"> | string
    interestRate?: FloatNullableWithAggregatesFilter<"FinancialAid"> | number | null
    repaymentPeriod?: IntNullableWithAggregatesFilter<"FinancialAid"> | number | null
    gracePeriod?: IntNullableWithAggregatesFilter<"FinancialAid"> | number | null
    eligibilityCriteria?: StringNullableWithAggregatesFilter<"FinancialAid"> | string | null
    minimumGpa?: FloatNullableWithAggregatesFilter<"FinancialAid"> | number | null
    maximumFamilyIncome?: FloatNullableWithAggregatesFilter<"FinancialAid"> | number | null
    citizenshipRequired?: StringNullableWithAggregatesFilter<"FinancialAid"> | string | null
    applicationRequired?: BoolWithAggregatesFilter<"FinancialAid"> | boolean
    applicationDeadline?: DateTimeNullableWithAggregatesFilter<"FinancialAid"> | Date | string | null
    documentsRequired?: StringNullableWithAggregatesFilter<"FinancialAid"> | string | null
    isActive?: BoolWithAggregatesFilter<"FinancialAid"> | boolean
    applicationOpenDate?: DateTimeNullableWithAggregatesFilter<"FinancialAid"> | Date | string | null
    applicationCloseDate?: DateTimeNullableWithAggregatesFilter<"FinancialAid"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"FinancialAid"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FinancialAid"> | Date | string
  }

  export type FinancialAidApplicationWhereInput = {
    AND?: FinancialAidApplicationWhereInput | FinancialAidApplicationWhereInput[]
    OR?: FinancialAidApplicationWhereInput[]
    NOT?: FinancialAidApplicationWhereInput | FinancialAidApplicationWhereInput[]
    id?: StringFilter<"FinancialAidApplication"> | string
    financialAidId?: StringFilter<"FinancialAidApplication"> | string
    userId?: StringNullableFilter<"FinancialAidApplication"> | string | null
    applicationId?: StringNullableFilter<"FinancialAidApplication"> | string | null
    firstName?: StringFilter<"FinancialAidApplication"> | string
    lastName?: StringFilter<"FinancialAidApplication"> | string
    email?: StringFilter<"FinancialAidApplication"> | string
    phone?: StringNullableFilter<"FinancialAidApplication"> | string | null
    familyIncome?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    assets?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    liabilities?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    dependents?: IntNullableFilter<"FinancialAidApplication"> | number | null
    applicationStatus?: StringFilter<"FinancialAidApplication"> | string
    submissionDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    approvedAmount?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    documentsUploaded?: StringNullableFilter<"FinancialAidApplication"> | string | null
    createdAt?: DateTimeFilter<"FinancialAidApplication"> | Date | string
    updatedAt?: DateTimeFilter<"FinancialAidApplication"> | Date | string
    financialAid?: XOR<FinancialAidScalarRelationFilter, FinancialAidWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
  }

  export type FinancialAidApplicationOrderByWithRelationInput = {
    id?: SortOrder
    financialAidId?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    familyIncome?: SortOrderInput | SortOrder
    assets?: SortOrderInput | SortOrder
    liabilities?: SortOrderInput | SortOrder
    dependents?: SortOrderInput | SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrderInput | SortOrder
    reviewDate?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    approvedAmount?: SortOrderInput | SortOrder
    documentsUploaded?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    financialAid?: FinancialAidOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    application?: ApplicationOrderByWithRelationInput
  }

  export type FinancialAidApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FinancialAidApplicationWhereInput | FinancialAidApplicationWhereInput[]
    OR?: FinancialAidApplicationWhereInput[]
    NOT?: FinancialAidApplicationWhereInput | FinancialAidApplicationWhereInput[]
    financialAidId?: StringFilter<"FinancialAidApplication"> | string
    userId?: StringNullableFilter<"FinancialAidApplication"> | string | null
    applicationId?: StringNullableFilter<"FinancialAidApplication"> | string | null
    firstName?: StringFilter<"FinancialAidApplication"> | string
    lastName?: StringFilter<"FinancialAidApplication"> | string
    email?: StringFilter<"FinancialAidApplication"> | string
    phone?: StringNullableFilter<"FinancialAidApplication"> | string | null
    familyIncome?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    assets?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    liabilities?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    dependents?: IntNullableFilter<"FinancialAidApplication"> | number | null
    applicationStatus?: StringFilter<"FinancialAidApplication"> | string
    submissionDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    approvedAmount?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    documentsUploaded?: StringNullableFilter<"FinancialAidApplication"> | string | null
    createdAt?: DateTimeFilter<"FinancialAidApplication"> | Date | string
    updatedAt?: DateTimeFilter<"FinancialAidApplication"> | Date | string
    financialAid?: XOR<FinancialAidScalarRelationFilter, FinancialAidWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
  }, "id">

  export type FinancialAidApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    financialAidId?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    familyIncome?: SortOrderInput | SortOrder
    assets?: SortOrderInput | SortOrder
    liabilities?: SortOrderInput | SortOrder
    dependents?: SortOrderInput | SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrderInput | SortOrder
    reviewDate?: SortOrderInput | SortOrder
    decisionDate?: SortOrderInput | SortOrder
    approvedAmount?: SortOrderInput | SortOrder
    documentsUploaded?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FinancialAidApplicationCountOrderByAggregateInput
    _avg?: FinancialAidApplicationAvgOrderByAggregateInput
    _max?: FinancialAidApplicationMaxOrderByAggregateInput
    _min?: FinancialAidApplicationMinOrderByAggregateInput
    _sum?: FinancialAidApplicationSumOrderByAggregateInput
  }

  export type FinancialAidApplicationScalarWhereWithAggregatesInput = {
    AND?: FinancialAidApplicationScalarWhereWithAggregatesInput | FinancialAidApplicationScalarWhereWithAggregatesInput[]
    OR?: FinancialAidApplicationScalarWhereWithAggregatesInput[]
    NOT?: FinancialAidApplicationScalarWhereWithAggregatesInput | FinancialAidApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FinancialAidApplication"> | string
    financialAidId?: StringWithAggregatesFilter<"FinancialAidApplication"> | string
    userId?: StringNullableWithAggregatesFilter<"FinancialAidApplication"> | string | null
    applicationId?: StringNullableWithAggregatesFilter<"FinancialAidApplication"> | string | null
    firstName?: StringWithAggregatesFilter<"FinancialAidApplication"> | string
    lastName?: StringWithAggregatesFilter<"FinancialAidApplication"> | string
    email?: StringWithAggregatesFilter<"FinancialAidApplication"> | string
    phone?: StringNullableWithAggregatesFilter<"FinancialAidApplication"> | string | null
    familyIncome?: FloatNullableWithAggregatesFilter<"FinancialAidApplication"> | number | null
    assets?: FloatNullableWithAggregatesFilter<"FinancialAidApplication"> | number | null
    liabilities?: FloatNullableWithAggregatesFilter<"FinancialAidApplication"> | number | null
    dependents?: IntNullableWithAggregatesFilter<"FinancialAidApplication"> | number | null
    applicationStatus?: StringWithAggregatesFilter<"FinancialAidApplication"> | string
    submissionDate?: DateTimeNullableWithAggregatesFilter<"FinancialAidApplication"> | Date | string | null
    reviewDate?: DateTimeNullableWithAggregatesFilter<"FinancialAidApplication"> | Date | string | null
    decisionDate?: DateTimeNullableWithAggregatesFilter<"FinancialAidApplication"> | Date | string | null
    approvedAmount?: FloatNullableWithAggregatesFilter<"FinancialAidApplication"> | number | null
    documentsUploaded?: StringNullableWithAggregatesFilter<"FinancialAidApplication"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"FinancialAidApplication"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FinancialAidApplication"> | Date | string
  }

  export type Admin_UserWhereInput = {
    AND?: Admin_UserWhereInput | Admin_UserWhereInput[]
    OR?: Admin_UserWhereInput[]
    NOT?: Admin_UserWhereInput | Admin_UserWhereInput[]
    id?: StringFilter<"Admin_User"> | string
    email?: StringFilter<"Admin_User"> | string
    passwordHash?: StringFilter<"Admin_User"> | string
    firstName?: StringFilter<"Admin_User"> | string
    lastName?: StringFilter<"Admin_User"> | string
    role?: StringFilter<"Admin_User"> | string
    status?: StringFilter<"Admin_User"> | string
    is2FAEnabled?: BoolFilter<"Admin_User"> | boolean
    twoFactorSecret?: StringNullableFilter<"Admin_User"> | string | null
    phone?: StringNullableFilter<"Admin_User"> | string | null
    profileImageUrl?: StringNullableFilter<"Admin_User"> | string | null
    lastLogin?: DateTimeNullableFilter<"Admin_User"> | Date | string | null
    lastLoginIP?: StringNullableFilter<"Admin_User"> | string | null
    failedLoginAttempts?: IntFilter<"Admin_User"> | number
    createdAt?: DateTimeFilter<"Admin_User"> | Date | string
    updatedAt?: DateTimeFilter<"Admin_User"> | Date | string
    refreshTokens?: RefreshTokenListRelationFilter
  }

  export type Admin_UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    status?: SortOrder
    is2FAEnabled?: SortOrder
    twoFactorSecret?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    profileImageUrl?: SortOrderInput | SortOrder
    lastLogin?: SortOrderInput | SortOrder
    lastLoginIP?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
  }

  export type Admin_UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: Admin_UserWhereInput | Admin_UserWhereInput[]
    OR?: Admin_UserWhereInput[]
    NOT?: Admin_UserWhereInput | Admin_UserWhereInput[]
    passwordHash?: StringFilter<"Admin_User"> | string
    firstName?: StringFilter<"Admin_User"> | string
    lastName?: StringFilter<"Admin_User"> | string
    role?: StringFilter<"Admin_User"> | string
    status?: StringFilter<"Admin_User"> | string
    is2FAEnabled?: BoolFilter<"Admin_User"> | boolean
    twoFactorSecret?: StringNullableFilter<"Admin_User"> | string | null
    phone?: StringNullableFilter<"Admin_User"> | string | null
    profileImageUrl?: StringNullableFilter<"Admin_User"> | string | null
    lastLogin?: DateTimeNullableFilter<"Admin_User"> | Date | string | null
    lastLoginIP?: StringNullableFilter<"Admin_User"> | string | null
    failedLoginAttempts?: IntFilter<"Admin_User"> | number
    createdAt?: DateTimeFilter<"Admin_User"> | Date | string
    updatedAt?: DateTimeFilter<"Admin_User"> | Date | string
    refreshTokens?: RefreshTokenListRelationFilter
  }, "id" | "email">

  export type Admin_UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    status?: SortOrder
    is2FAEnabled?: SortOrder
    twoFactorSecret?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    profileImageUrl?: SortOrderInput | SortOrder
    lastLogin?: SortOrderInput | SortOrder
    lastLoginIP?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: Admin_UserCountOrderByAggregateInput
    _avg?: Admin_UserAvgOrderByAggregateInput
    _max?: Admin_UserMaxOrderByAggregateInput
    _min?: Admin_UserMinOrderByAggregateInput
    _sum?: Admin_UserSumOrderByAggregateInput
  }

  export type Admin_UserScalarWhereWithAggregatesInput = {
    AND?: Admin_UserScalarWhereWithAggregatesInput | Admin_UserScalarWhereWithAggregatesInput[]
    OR?: Admin_UserScalarWhereWithAggregatesInput[]
    NOT?: Admin_UserScalarWhereWithAggregatesInput | Admin_UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Admin_User"> | string
    email?: StringWithAggregatesFilter<"Admin_User"> | string
    passwordHash?: StringWithAggregatesFilter<"Admin_User"> | string
    firstName?: StringWithAggregatesFilter<"Admin_User"> | string
    lastName?: StringWithAggregatesFilter<"Admin_User"> | string
    role?: StringWithAggregatesFilter<"Admin_User"> | string
    status?: StringWithAggregatesFilter<"Admin_User"> | string
    is2FAEnabled?: BoolWithAggregatesFilter<"Admin_User"> | boolean
    twoFactorSecret?: StringNullableWithAggregatesFilter<"Admin_User"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Admin_User"> | string | null
    profileImageUrl?: StringNullableWithAggregatesFilter<"Admin_User"> | string | null
    lastLogin?: DateTimeNullableWithAggregatesFilter<"Admin_User"> | Date | string | null
    lastLoginIP?: StringNullableWithAggregatesFilter<"Admin_User"> | string | null
    failedLoginAttempts?: IntWithAggregatesFilter<"Admin_User"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Admin_User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Admin_User"> | Date | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    adminUser?: XOR<Admin_UserScalarRelationFilter, Admin_UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    adminUser?: Admin_UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    adminUser?: XOR<Admin_UserScalarRelationFilter, Admin_UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RefreshToken"> | string
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: StringWithAggregatesFilter<"RefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
  }

  export type EssayPromptWhereInput = {
    AND?: EssayPromptWhereInput | EssayPromptWhereInput[]
    OR?: EssayPromptWhereInput[]
    NOT?: EssayPromptWhereInput | EssayPromptWhereInput[]
    id?: StringFilter<"EssayPrompt"> | string
    admissionId?: StringNullableFilter<"EssayPrompt"> | string | null
    programId?: StringNullableFilter<"EssayPrompt"> | string | null
    intakeId?: StringNullableFilter<"EssayPrompt"> | string | null
    promptTitle?: StringFilter<"EssayPrompt"> | string
    promptText?: StringFilter<"EssayPrompt"> | string
    wordLimit?: IntFilter<"EssayPrompt"> | number
    minWordCount?: IntFilter<"EssayPrompt"> | number
    isMandatory?: BoolFilter<"EssayPrompt"> | boolean
    isActive?: BoolFilter<"EssayPrompt"> | boolean
    createdAt?: DateTimeFilter<"EssayPrompt"> | Date | string
    updatedAt?: DateTimeFilter<"EssayPrompt"> | Date | string
    admission?: XOR<AdmissionNullableScalarRelationFilter, AdmissionWhereInput> | null
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    submissions?: EssaySubmissionListRelationFilter
    essays?: EssayListRelationFilter
  }

  export type EssayPromptOrderByWithRelationInput = {
    id?: SortOrder
    admissionId?: SortOrderInput | SortOrder
    programId?: SortOrderInput | SortOrder
    intakeId?: SortOrderInput | SortOrder
    promptTitle?: SortOrder
    promptText?: SortOrder
    wordLimit?: SortOrder
    minWordCount?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    admission?: AdmissionOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    intake?: IntakeOrderByWithRelationInput
    submissions?: EssaySubmissionOrderByRelationAggregateInput
    essays?: EssayOrderByRelationAggregateInput
  }

  export type EssayPromptWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EssayPromptWhereInput | EssayPromptWhereInput[]
    OR?: EssayPromptWhereInput[]
    NOT?: EssayPromptWhereInput | EssayPromptWhereInput[]
    admissionId?: StringNullableFilter<"EssayPrompt"> | string | null
    programId?: StringNullableFilter<"EssayPrompt"> | string | null
    intakeId?: StringNullableFilter<"EssayPrompt"> | string | null
    promptTitle?: StringFilter<"EssayPrompt"> | string
    promptText?: StringFilter<"EssayPrompt"> | string
    wordLimit?: IntFilter<"EssayPrompt"> | number
    minWordCount?: IntFilter<"EssayPrompt"> | number
    isMandatory?: BoolFilter<"EssayPrompt"> | boolean
    isActive?: BoolFilter<"EssayPrompt"> | boolean
    createdAt?: DateTimeFilter<"EssayPrompt"> | Date | string
    updatedAt?: DateTimeFilter<"EssayPrompt"> | Date | string
    admission?: XOR<AdmissionNullableScalarRelationFilter, AdmissionWhereInput> | null
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    submissions?: EssaySubmissionListRelationFilter
    essays?: EssayListRelationFilter
  }, "id">

  export type EssayPromptOrderByWithAggregationInput = {
    id?: SortOrder
    admissionId?: SortOrderInput | SortOrder
    programId?: SortOrderInput | SortOrder
    intakeId?: SortOrderInput | SortOrder
    promptTitle?: SortOrder
    promptText?: SortOrder
    wordLimit?: SortOrder
    minWordCount?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EssayPromptCountOrderByAggregateInput
    _avg?: EssayPromptAvgOrderByAggregateInput
    _max?: EssayPromptMaxOrderByAggregateInput
    _min?: EssayPromptMinOrderByAggregateInput
    _sum?: EssayPromptSumOrderByAggregateInput
  }

  export type EssayPromptScalarWhereWithAggregatesInput = {
    AND?: EssayPromptScalarWhereWithAggregatesInput | EssayPromptScalarWhereWithAggregatesInput[]
    OR?: EssayPromptScalarWhereWithAggregatesInput[]
    NOT?: EssayPromptScalarWhereWithAggregatesInput | EssayPromptScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EssayPrompt"> | string
    admissionId?: StringNullableWithAggregatesFilter<"EssayPrompt"> | string | null
    programId?: StringNullableWithAggregatesFilter<"EssayPrompt"> | string | null
    intakeId?: StringNullableWithAggregatesFilter<"EssayPrompt"> | string | null
    promptTitle?: StringWithAggregatesFilter<"EssayPrompt"> | string
    promptText?: StringWithAggregatesFilter<"EssayPrompt"> | string
    wordLimit?: IntWithAggregatesFilter<"EssayPrompt"> | number
    minWordCount?: IntWithAggregatesFilter<"EssayPrompt"> | number
    isMandatory?: BoolWithAggregatesFilter<"EssayPrompt"> | boolean
    isActive?: BoolWithAggregatesFilter<"EssayPrompt"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"EssayPrompt"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EssayPrompt"> | Date | string
  }

  export type EssaySubmissionWhereInput = {
    AND?: EssaySubmissionWhereInput | EssaySubmissionWhereInput[]
    OR?: EssaySubmissionWhereInput[]
    NOT?: EssaySubmissionWhereInput | EssaySubmissionWhereInput[]
    id?: StringFilter<"EssaySubmission"> | string
    essayPromptId?: StringFilter<"EssaySubmission"> | string
    userId?: StringNullableFilter<"EssaySubmission"> | string | null
    applicationId?: StringNullableFilter<"EssaySubmission"> | string | null
    title?: StringNullableFilter<"EssaySubmission"> | string | null
    content?: StringFilter<"EssaySubmission"> | string
    wordCount?: IntFilter<"EssaySubmission"> | number
    status?: StringFilter<"EssaySubmission"> | string
    submissionDate?: DateTimeNullableFilter<"EssaySubmission"> | Date | string | null
    lastEditedAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    isUsingTemplate?: BoolFilter<"EssaySubmission"> | boolean
    templateVersion?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewStatus?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewerId?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewerComment?: StringNullableFilter<"EssaySubmission"> | string | null
    internalRating?: FloatNullableFilter<"EssaySubmission"> | number | null
    createdAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    updatedAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    essayPrompt?: XOR<EssayPromptScalarRelationFilter, EssayPromptWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
  }

  export type EssaySubmissionOrderByWithRelationInput = {
    id?: SortOrder
    essayPromptId?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    status?: SortOrder
    submissionDate?: SortOrderInput | SortOrder
    lastEditedAt?: SortOrder
    isUsingTemplate?: SortOrder
    templateVersion?: SortOrderInput | SortOrder
    reviewStatus?: SortOrderInput | SortOrder
    reviewerId?: SortOrderInput | SortOrder
    reviewerComment?: SortOrderInput | SortOrder
    internalRating?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    essayPrompt?: EssayPromptOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    application?: ApplicationOrderByWithRelationInput
  }

  export type EssaySubmissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EssaySubmissionWhereInput | EssaySubmissionWhereInput[]
    OR?: EssaySubmissionWhereInput[]
    NOT?: EssaySubmissionWhereInput | EssaySubmissionWhereInput[]
    essayPromptId?: StringFilter<"EssaySubmission"> | string
    userId?: StringNullableFilter<"EssaySubmission"> | string | null
    applicationId?: StringNullableFilter<"EssaySubmission"> | string | null
    title?: StringNullableFilter<"EssaySubmission"> | string | null
    content?: StringFilter<"EssaySubmission"> | string
    wordCount?: IntFilter<"EssaySubmission"> | number
    status?: StringFilter<"EssaySubmission"> | string
    submissionDate?: DateTimeNullableFilter<"EssaySubmission"> | Date | string | null
    lastEditedAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    isUsingTemplate?: BoolFilter<"EssaySubmission"> | boolean
    templateVersion?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewStatus?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewerId?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewerComment?: StringNullableFilter<"EssaySubmission"> | string | null
    internalRating?: FloatNullableFilter<"EssaySubmission"> | number | null
    createdAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    updatedAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    essayPrompt?: XOR<EssayPromptScalarRelationFilter, EssayPromptWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
  }, "id">

  export type EssaySubmissionOrderByWithAggregationInput = {
    id?: SortOrder
    essayPromptId?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    status?: SortOrder
    submissionDate?: SortOrderInput | SortOrder
    lastEditedAt?: SortOrder
    isUsingTemplate?: SortOrder
    templateVersion?: SortOrderInput | SortOrder
    reviewStatus?: SortOrderInput | SortOrder
    reviewerId?: SortOrderInput | SortOrder
    reviewerComment?: SortOrderInput | SortOrder
    internalRating?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EssaySubmissionCountOrderByAggregateInput
    _avg?: EssaySubmissionAvgOrderByAggregateInput
    _max?: EssaySubmissionMaxOrderByAggregateInput
    _min?: EssaySubmissionMinOrderByAggregateInput
    _sum?: EssaySubmissionSumOrderByAggregateInput
  }

  export type EssaySubmissionScalarWhereWithAggregatesInput = {
    AND?: EssaySubmissionScalarWhereWithAggregatesInput | EssaySubmissionScalarWhereWithAggregatesInput[]
    OR?: EssaySubmissionScalarWhereWithAggregatesInput[]
    NOT?: EssaySubmissionScalarWhereWithAggregatesInput | EssaySubmissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EssaySubmission"> | string
    essayPromptId?: StringWithAggregatesFilter<"EssaySubmission"> | string
    userId?: StringNullableWithAggregatesFilter<"EssaySubmission"> | string | null
    applicationId?: StringNullableWithAggregatesFilter<"EssaySubmission"> | string | null
    title?: StringNullableWithAggregatesFilter<"EssaySubmission"> | string | null
    content?: StringWithAggregatesFilter<"EssaySubmission"> | string
    wordCount?: IntWithAggregatesFilter<"EssaySubmission"> | number
    status?: StringWithAggregatesFilter<"EssaySubmission"> | string
    submissionDate?: DateTimeNullableWithAggregatesFilter<"EssaySubmission"> | Date | string | null
    lastEditedAt?: DateTimeWithAggregatesFilter<"EssaySubmission"> | Date | string
    isUsingTemplate?: BoolWithAggregatesFilter<"EssaySubmission"> | boolean
    templateVersion?: StringNullableWithAggregatesFilter<"EssaySubmission"> | string | null
    reviewStatus?: StringNullableWithAggregatesFilter<"EssaySubmission"> | string | null
    reviewerId?: StringNullableWithAggregatesFilter<"EssaySubmission"> | string | null
    reviewerComment?: StringNullableWithAggregatesFilter<"EssaySubmission"> | string | null
    internalRating?: FloatNullableWithAggregatesFilter<"EssaySubmission"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"EssaySubmission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EssaySubmission"> | Date | string
  }

  export type EssayWhereInput = {
    AND?: EssayWhereInput | EssayWhereInput[]
    OR?: EssayWhereInput[]
    NOT?: EssayWhereInput | EssayWhereInput[]
    id?: StringFilter<"Essay"> | string
    userId?: StringNullableFilter<"Essay"> | string | null
    applicationId?: StringNullableFilter<"Essay"> | string | null
    programId?: StringFilter<"Essay"> | string
    essayPromptId?: StringFilter<"Essay"> | string
    title?: StringFilter<"Essay"> | string
    content?: StringFilter<"Essay"> | string
    wordCount?: IntFilter<"Essay"> | number
    wordLimit?: IntFilter<"Essay"> | number
    status?: StringFilter<"Essay"> | string
    priority?: StringFilter<"Essay"> | string
    isCompleted?: BoolFilter<"Essay"> | boolean
    completedAt?: DateTimeNullableFilter<"Essay"> | Date | string | null
    completionPercentage?: FloatFilter<"Essay"> | number
    lastModified?: DateTimeFilter<"Essay"> | Date | string
    createdAt?: DateTimeFilter<"Essay"> | Date | string
    updatedAt?: DateTimeFilter<"Essay"> | Date | string
    lastAutoSaved?: DateTimeFilter<"Essay"> | Date | string
    autoSaveEnabled?: BoolFilter<"Essay"> | boolean
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    essayPrompt?: XOR<EssayPromptScalarRelationFilter, EssayPromptWhereInput>
    versions?: EssayVersionListRelationFilter
    aiResults?: AIResultListRelationFilter
    EssayCompletionLog?: EssayCompletionLogListRelationFilter
  }

  export type EssayOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    programId?: SortOrder
    essayPromptId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    wordLimit?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    completionPercentage?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastAutoSaved?: SortOrder
    autoSaveEnabled?: SortOrder
    user?: UserOrderByWithRelationInput
    application?: ApplicationOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    essayPrompt?: EssayPromptOrderByWithRelationInput
    versions?: EssayVersionOrderByRelationAggregateInput
    aiResults?: AIResultOrderByRelationAggregateInput
    EssayCompletionLog?: EssayCompletionLogOrderByRelationAggregateInput
  }

  export type EssayWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_programId_essayPromptId?: EssayUserIdProgramIdEssayPromptIdCompoundUniqueInput
    AND?: EssayWhereInput | EssayWhereInput[]
    OR?: EssayWhereInput[]
    NOT?: EssayWhereInput | EssayWhereInput[]
    userId?: StringNullableFilter<"Essay"> | string | null
    applicationId?: StringNullableFilter<"Essay"> | string | null
    programId?: StringFilter<"Essay"> | string
    essayPromptId?: StringFilter<"Essay"> | string
    title?: StringFilter<"Essay"> | string
    content?: StringFilter<"Essay"> | string
    wordCount?: IntFilter<"Essay"> | number
    wordLimit?: IntFilter<"Essay"> | number
    status?: StringFilter<"Essay"> | string
    priority?: StringFilter<"Essay"> | string
    isCompleted?: BoolFilter<"Essay"> | boolean
    completedAt?: DateTimeNullableFilter<"Essay"> | Date | string | null
    completionPercentage?: FloatFilter<"Essay"> | number
    lastModified?: DateTimeFilter<"Essay"> | Date | string
    createdAt?: DateTimeFilter<"Essay"> | Date | string
    updatedAt?: DateTimeFilter<"Essay"> | Date | string
    lastAutoSaved?: DateTimeFilter<"Essay"> | Date | string
    autoSaveEnabled?: BoolFilter<"Essay"> | boolean
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
    program?: XOR<ProgramScalarRelationFilter, ProgramWhereInput>
    essayPrompt?: XOR<EssayPromptScalarRelationFilter, EssayPromptWhereInput>
    versions?: EssayVersionListRelationFilter
    aiResults?: AIResultListRelationFilter
    EssayCompletionLog?: EssayCompletionLogListRelationFilter
  }, "id" | "userId_programId_essayPromptId">

  export type EssayOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    programId?: SortOrder
    essayPromptId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    wordLimit?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    completionPercentage?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastAutoSaved?: SortOrder
    autoSaveEnabled?: SortOrder
    _count?: EssayCountOrderByAggregateInput
    _avg?: EssayAvgOrderByAggregateInput
    _max?: EssayMaxOrderByAggregateInput
    _min?: EssayMinOrderByAggregateInput
    _sum?: EssaySumOrderByAggregateInput
  }

  export type EssayScalarWhereWithAggregatesInput = {
    AND?: EssayScalarWhereWithAggregatesInput | EssayScalarWhereWithAggregatesInput[]
    OR?: EssayScalarWhereWithAggregatesInput[]
    NOT?: EssayScalarWhereWithAggregatesInput | EssayScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Essay"> | string
    userId?: StringNullableWithAggregatesFilter<"Essay"> | string | null
    applicationId?: StringNullableWithAggregatesFilter<"Essay"> | string | null
    programId?: StringWithAggregatesFilter<"Essay"> | string
    essayPromptId?: StringWithAggregatesFilter<"Essay"> | string
    title?: StringWithAggregatesFilter<"Essay"> | string
    content?: StringWithAggregatesFilter<"Essay"> | string
    wordCount?: IntWithAggregatesFilter<"Essay"> | number
    wordLimit?: IntWithAggregatesFilter<"Essay"> | number
    status?: StringWithAggregatesFilter<"Essay"> | string
    priority?: StringWithAggregatesFilter<"Essay"> | string
    isCompleted?: BoolWithAggregatesFilter<"Essay"> | boolean
    completedAt?: DateTimeNullableWithAggregatesFilter<"Essay"> | Date | string | null
    completionPercentage?: FloatWithAggregatesFilter<"Essay"> | number
    lastModified?: DateTimeWithAggregatesFilter<"Essay"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Essay"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Essay"> | Date | string
    lastAutoSaved?: DateTimeWithAggregatesFilter<"Essay"> | Date | string
    autoSaveEnabled?: BoolWithAggregatesFilter<"Essay"> | boolean
  }

  export type EssayVersionWhereInput = {
    AND?: EssayVersionWhereInput | EssayVersionWhereInput[]
    OR?: EssayVersionWhereInput[]
    NOT?: EssayVersionWhereInput | EssayVersionWhereInput[]
    id?: StringFilter<"EssayVersion"> | string
    essayId?: StringFilter<"EssayVersion"> | string
    content?: StringFilter<"EssayVersion"> | string
    wordCount?: IntFilter<"EssayVersion"> | number
    label?: StringFilter<"EssayVersion"> | string
    timestamp?: DateTimeFilter<"EssayVersion"> | Date | string
    isAutoSave?: BoolFilter<"EssayVersion"> | boolean
    changesSinceLastVersion?: StringNullableFilter<"EssayVersion"> | string | null
    essay?: XOR<EssayScalarRelationFilter, EssayWhereInput>
    aiResults?: AIResultListRelationFilter
  }

  export type EssayVersionOrderByWithRelationInput = {
    id?: SortOrder
    essayId?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    label?: SortOrder
    timestamp?: SortOrder
    isAutoSave?: SortOrder
    changesSinceLastVersion?: SortOrderInput | SortOrder
    essay?: EssayOrderByWithRelationInput
    aiResults?: AIResultOrderByRelationAggregateInput
  }

  export type EssayVersionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EssayVersionWhereInput | EssayVersionWhereInput[]
    OR?: EssayVersionWhereInput[]
    NOT?: EssayVersionWhereInput | EssayVersionWhereInput[]
    essayId?: StringFilter<"EssayVersion"> | string
    content?: StringFilter<"EssayVersion"> | string
    wordCount?: IntFilter<"EssayVersion"> | number
    label?: StringFilter<"EssayVersion"> | string
    timestamp?: DateTimeFilter<"EssayVersion"> | Date | string
    isAutoSave?: BoolFilter<"EssayVersion"> | boolean
    changesSinceLastVersion?: StringNullableFilter<"EssayVersion"> | string | null
    essay?: XOR<EssayScalarRelationFilter, EssayWhereInput>
    aiResults?: AIResultListRelationFilter
  }, "id">

  export type EssayVersionOrderByWithAggregationInput = {
    id?: SortOrder
    essayId?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    label?: SortOrder
    timestamp?: SortOrder
    isAutoSave?: SortOrder
    changesSinceLastVersion?: SortOrderInput | SortOrder
    _count?: EssayVersionCountOrderByAggregateInput
    _avg?: EssayVersionAvgOrderByAggregateInput
    _max?: EssayVersionMaxOrderByAggregateInput
    _min?: EssayVersionMinOrderByAggregateInput
    _sum?: EssayVersionSumOrderByAggregateInput
  }

  export type EssayVersionScalarWhereWithAggregatesInput = {
    AND?: EssayVersionScalarWhereWithAggregatesInput | EssayVersionScalarWhereWithAggregatesInput[]
    OR?: EssayVersionScalarWhereWithAggregatesInput[]
    NOT?: EssayVersionScalarWhereWithAggregatesInput | EssayVersionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EssayVersion"> | string
    essayId?: StringWithAggregatesFilter<"EssayVersion"> | string
    content?: StringWithAggregatesFilter<"EssayVersion"> | string
    wordCount?: IntWithAggregatesFilter<"EssayVersion"> | number
    label?: StringWithAggregatesFilter<"EssayVersion"> | string
    timestamp?: DateTimeWithAggregatesFilter<"EssayVersion"> | Date | string
    isAutoSave?: BoolWithAggregatesFilter<"EssayVersion"> | boolean
    changesSinceLastVersion?: StringNullableWithAggregatesFilter<"EssayVersion"> | string | null
  }

  export type AIResultWhereInput = {
    AND?: AIResultWhereInput | AIResultWhereInput[]
    OR?: AIResultWhereInput[]
    NOT?: AIResultWhereInput | AIResultWhereInput[]
    id?: StringFilter<"AIResult"> | string
    essayId?: StringFilter<"AIResult"> | string
    essayVersionId?: StringNullableFilter<"AIResult"> | string | null
    analysisType?: StringFilter<"AIResult"> | string
    overallScore?: FloatNullableFilter<"AIResult"> | number | null
    suggestions?: StringFilter<"AIResult"> | string
    strengths?: StringNullableFilter<"AIResult"> | string | null
    improvements?: StringNullableFilter<"AIResult"> | string | null
    warnings?: StringNullableFilter<"AIResult"> | string | null
    aiProvider?: StringFilter<"AIResult"> | string
    modelUsed?: StringNullableFilter<"AIResult"> | string | null
    promptVersion?: StringNullableFilter<"AIResult"> | string | null
    status?: StringFilter<"AIResult"> | string
    processingTime?: IntNullableFilter<"AIResult"> | number | null
    errorMessage?: StringNullableFilter<"AIResult"> | string | null
    readabilityScore?: FloatNullableFilter<"AIResult"> | number | null
    sentenceCount?: IntNullableFilter<"AIResult"> | number | null
    paragraphCount?: IntNullableFilter<"AIResult"> | number | null
    avgSentenceLength?: FloatNullableFilter<"AIResult"> | number | null
    complexWordCount?: IntNullableFilter<"AIResult"> | number | null
    passiveVoiceCount?: IntNullableFilter<"AIResult"> | number | null
    structureScore?: FloatNullableFilter<"AIResult"> | number | null
    contentRelevance?: FloatNullableFilter<"AIResult"> | number | null
    narrativeFlow?: FloatNullableFilter<"AIResult"> | number | null
    leadershipEmphasis?: FloatNullableFilter<"AIResult"> | number | null
    specificityScore?: FloatNullableFilter<"AIResult"> | number | null
    grammarIssues?: IntNullableFilter<"AIResult"> | number | null
    createdAt?: DateTimeFilter<"AIResult"> | Date | string
    updatedAt?: DateTimeFilter<"AIResult"> | Date | string
    essay?: XOR<EssayScalarRelationFilter, EssayWhereInput>
    essayVersion?: XOR<EssayVersionNullableScalarRelationFilter, EssayVersionWhereInput> | null
  }

  export type AIResultOrderByWithRelationInput = {
    id?: SortOrder
    essayId?: SortOrder
    essayVersionId?: SortOrderInput | SortOrder
    analysisType?: SortOrder
    overallScore?: SortOrderInput | SortOrder
    suggestions?: SortOrder
    strengths?: SortOrderInput | SortOrder
    improvements?: SortOrderInput | SortOrder
    warnings?: SortOrderInput | SortOrder
    aiProvider?: SortOrder
    modelUsed?: SortOrderInput | SortOrder
    promptVersion?: SortOrderInput | SortOrder
    status?: SortOrder
    processingTime?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    readabilityScore?: SortOrderInput | SortOrder
    sentenceCount?: SortOrderInput | SortOrder
    paragraphCount?: SortOrderInput | SortOrder
    avgSentenceLength?: SortOrderInput | SortOrder
    complexWordCount?: SortOrderInput | SortOrder
    passiveVoiceCount?: SortOrderInput | SortOrder
    structureScore?: SortOrderInput | SortOrder
    contentRelevance?: SortOrderInput | SortOrder
    narrativeFlow?: SortOrderInput | SortOrder
    leadershipEmphasis?: SortOrderInput | SortOrder
    specificityScore?: SortOrderInput | SortOrder
    grammarIssues?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    essay?: EssayOrderByWithRelationInput
    essayVersion?: EssayVersionOrderByWithRelationInput
  }

  export type AIResultWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AIResultWhereInput | AIResultWhereInput[]
    OR?: AIResultWhereInput[]
    NOT?: AIResultWhereInput | AIResultWhereInput[]
    essayId?: StringFilter<"AIResult"> | string
    essayVersionId?: StringNullableFilter<"AIResult"> | string | null
    analysisType?: StringFilter<"AIResult"> | string
    overallScore?: FloatNullableFilter<"AIResult"> | number | null
    suggestions?: StringFilter<"AIResult"> | string
    strengths?: StringNullableFilter<"AIResult"> | string | null
    improvements?: StringNullableFilter<"AIResult"> | string | null
    warnings?: StringNullableFilter<"AIResult"> | string | null
    aiProvider?: StringFilter<"AIResult"> | string
    modelUsed?: StringNullableFilter<"AIResult"> | string | null
    promptVersion?: StringNullableFilter<"AIResult"> | string | null
    status?: StringFilter<"AIResult"> | string
    processingTime?: IntNullableFilter<"AIResult"> | number | null
    errorMessage?: StringNullableFilter<"AIResult"> | string | null
    readabilityScore?: FloatNullableFilter<"AIResult"> | number | null
    sentenceCount?: IntNullableFilter<"AIResult"> | number | null
    paragraphCount?: IntNullableFilter<"AIResult"> | number | null
    avgSentenceLength?: FloatNullableFilter<"AIResult"> | number | null
    complexWordCount?: IntNullableFilter<"AIResult"> | number | null
    passiveVoiceCount?: IntNullableFilter<"AIResult"> | number | null
    structureScore?: FloatNullableFilter<"AIResult"> | number | null
    contentRelevance?: FloatNullableFilter<"AIResult"> | number | null
    narrativeFlow?: FloatNullableFilter<"AIResult"> | number | null
    leadershipEmphasis?: FloatNullableFilter<"AIResult"> | number | null
    specificityScore?: FloatNullableFilter<"AIResult"> | number | null
    grammarIssues?: IntNullableFilter<"AIResult"> | number | null
    createdAt?: DateTimeFilter<"AIResult"> | Date | string
    updatedAt?: DateTimeFilter<"AIResult"> | Date | string
    essay?: XOR<EssayScalarRelationFilter, EssayWhereInput>
    essayVersion?: XOR<EssayVersionNullableScalarRelationFilter, EssayVersionWhereInput> | null
  }, "id">

  export type AIResultOrderByWithAggregationInput = {
    id?: SortOrder
    essayId?: SortOrder
    essayVersionId?: SortOrderInput | SortOrder
    analysisType?: SortOrder
    overallScore?: SortOrderInput | SortOrder
    suggestions?: SortOrder
    strengths?: SortOrderInput | SortOrder
    improvements?: SortOrderInput | SortOrder
    warnings?: SortOrderInput | SortOrder
    aiProvider?: SortOrder
    modelUsed?: SortOrderInput | SortOrder
    promptVersion?: SortOrderInput | SortOrder
    status?: SortOrder
    processingTime?: SortOrderInput | SortOrder
    errorMessage?: SortOrderInput | SortOrder
    readabilityScore?: SortOrderInput | SortOrder
    sentenceCount?: SortOrderInput | SortOrder
    paragraphCount?: SortOrderInput | SortOrder
    avgSentenceLength?: SortOrderInput | SortOrder
    complexWordCount?: SortOrderInput | SortOrder
    passiveVoiceCount?: SortOrderInput | SortOrder
    structureScore?: SortOrderInput | SortOrder
    contentRelevance?: SortOrderInput | SortOrder
    narrativeFlow?: SortOrderInput | SortOrder
    leadershipEmphasis?: SortOrderInput | SortOrder
    specificityScore?: SortOrderInput | SortOrder
    grammarIssues?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AIResultCountOrderByAggregateInput
    _avg?: AIResultAvgOrderByAggregateInput
    _max?: AIResultMaxOrderByAggregateInput
    _min?: AIResultMinOrderByAggregateInput
    _sum?: AIResultSumOrderByAggregateInput
  }

  export type AIResultScalarWhereWithAggregatesInput = {
    AND?: AIResultScalarWhereWithAggregatesInput | AIResultScalarWhereWithAggregatesInput[]
    OR?: AIResultScalarWhereWithAggregatesInput[]
    NOT?: AIResultScalarWhereWithAggregatesInput | AIResultScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AIResult"> | string
    essayId?: StringWithAggregatesFilter<"AIResult"> | string
    essayVersionId?: StringNullableWithAggregatesFilter<"AIResult"> | string | null
    analysisType?: StringWithAggregatesFilter<"AIResult"> | string
    overallScore?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    suggestions?: StringWithAggregatesFilter<"AIResult"> | string
    strengths?: StringNullableWithAggregatesFilter<"AIResult"> | string | null
    improvements?: StringNullableWithAggregatesFilter<"AIResult"> | string | null
    warnings?: StringNullableWithAggregatesFilter<"AIResult"> | string | null
    aiProvider?: StringWithAggregatesFilter<"AIResult"> | string
    modelUsed?: StringNullableWithAggregatesFilter<"AIResult"> | string | null
    promptVersion?: StringNullableWithAggregatesFilter<"AIResult"> | string | null
    status?: StringWithAggregatesFilter<"AIResult"> | string
    processingTime?: IntNullableWithAggregatesFilter<"AIResult"> | number | null
    errorMessage?: StringNullableWithAggregatesFilter<"AIResult"> | string | null
    readabilityScore?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    sentenceCount?: IntNullableWithAggregatesFilter<"AIResult"> | number | null
    paragraphCount?: IntNullableWithAggregatesFilter<"AIResult"> | number | null
    avgSentenceLength?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    complexWordCount?: IntNullableWithAggregatesFilter<"AIResult"> | number | null
    passiveVoiceCount?: IntNullableWithAggregatesFilter<"AIResult"> | number | null
    structureScore?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    contentRelevance?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    narrativeFlow?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    leadershipEmphasis?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    specificityScore?: FloatNullableWithAggregatesFilter<"AIResult"> | number | null
    grammarIssues?: IntNullableWithAggregatesFilter<"AIResult"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"AIResult"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AIResult"> | Date | string
  }

  export type EssayCompletionLogWhereInput = {
    AND?: EssayCompletionLogWhereInput | EssayCompletionLogWhereInput[]
    OR?: EssayCompletionLogWhereInput[]
    NOT?: EssayCompletionLogWhereInput | EssayCompletionLogWhereInput[]
    id?: StringFilter<"EssayCompletionLog"> | string
    essayId?: StringFilter<"EssayCompletionLog"> | string
    userId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    completedAt?: DateTimeFilter<"EssayCompletionLog"> | Date | string
    wordCountAtCompletion?: IntFilter<"EssayCompletionLog"> | number
    wordLimit?: IntFilter<"EssayCompletionLog"> | number
    completionMethod?: StringFilter<"EssayCompletionLog"> | string
    previousStatus?: StringNullableFilter<"EssayCompletionLog"> | string | null
    programId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    universityId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    essayPromptTitle?: StringNullableFilter<"EssayCompletionLog"> | string | null
    createdAt?: DateTimeFilter<"EssayCompletionLog"> | Date | string
    essay?: XOR<EssayScalarRelationFilter, EssayWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type EssayCompletionLogOrderByWithRelationInput = {
    id?: SortOrder
    essayId?: SortOrder
    userId?: SortOrderInput | SortOrder
    completedAt?: SortOrder
    wordCountAtCompletion?: SortOrder
    wordLimit?: SortOrder
    completionMethod?: SortOrder
    previousStatus?: SortOrderInput | SortOrder
    programId?: SortOrderInput | SortOrder
    universityId?: SortOrderInput | SortOrder
    essayPromptTitle?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    essay?: EssayOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type EssayCompletionLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EssayCompletionLogWhereInput | EssayCompletionLogWhereInput[]
    OR?: EssayCompletionLogWhereInput[]
    NOT?: EssayCompletionLogWhereInput | EssayCompletionLogWhereInput[]
    essayId?: StringFilter<"EssayCompletionLog"> | string
    userId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    completedAt?: DateTimeFilter<"EssayCompletionLog"> | Date | string
    wordCountAtCompletion?: IntFilter<"EssayCompletionLog"> | number
    wordLimit?: IntFilter<"EssayCompletionLog"> | number
    completionMethod?: StringFilter<"EssayCompletionLog"> | string
    previousStatus?: StringNullableFilter<"EssayCompletionLog"> | string | null
    programId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    universityId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    essayPromptTitle?: StringNullableFilter<"EssayCompletionLog"> | string | null
    createdAt?: DateTimeFilter<"EssayCompletionLog"> | Date | string
    essay?: XOR<EssayScalarRelationFilter, EssayWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type EssayCompletionLogOrderByWithAggregationInput = {
    id?: SortOrder
    essayId?: SortOrder
    userId?: SortOrderInput | SortOrder
    completedAt?: SortOrder
    wordCountAtCompletion?: SortOrder
    wordLimit?: SortOrder
    completionMethod?: SortOrder
    previousStatus?: SortOrderInput | SortOrder
    programId?: SortOrderInput | SortOrder
    universityId?: SortOrderInput | SortOrder
    essayPromptTitle?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: EssayCompletionLogCountOrderByAggregateInput
    _avg?: EssayCompletionLogAvgOrderByAggregateInput
    _max?: EssayCompletionLogMaxOrderByAggregateInput
    _min?: EssayCompletionLogMinOrderByAggregateInput
    _sum?: EssayCompletionLogSumOrderByAggregateInput
  }

  export type EssayCompletionLogScalarWhereWithAggregatesInput = {
    AND?: EssayCompletionLogScalarWhereWithAggregatesInput | EssayCompletionLogScalarWhereWithAggregatesInput[]
    OR?: EssayCompletionLogScalarWhereWithAggregatesInput[]
    NOT?: EssayCompletionLogScalarWhereWithAggregatesInput | EssayCompletionLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EssayCompletionLog"> | string
    essayId?: StringWithAggregatesFilter<"EssayCompletionLog"> | string
    userId?: StringNullableWithAggregatesFilter<"EssayCompletionLog"> | string | null
    completedAt?: DateTimeWithAggregatesFilter<"EssayCompletionLog"> | Date | string
    wordCountAtCompletion?: IntWithAggregatesFilter<"EssayCompletionLog"> | number
    wordLimit?: IntWithAggregatesFilter<"EssayCompletionLog"> | number
    completionMethod?: StringWithAggregatesFilter<"EssayCompletionLog"> | string
    previousStatus?: StringNullableWithAggregatesFilter<"EssayCompletionLog"> | string | null
    programId?: StringNullableWithAggregatesFilter<"EssayCompletionLog"> | string | null
    universityId?: StringNullableWithAggregatesFilter<"EssayCompletionLog"> | string | null
    essayPromptTitle?: StringNullableWithAggregatesFilter<"EssayCompletionLog"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EssayCompletionLog"> | Date | string
  }

  export type CalendarEventWhereInput = {
    AND?: CalendarEventWhereInput | CalendarEventWhereInput[]
    OR?: CalendarEventWhereInput[]
    NOT?: CalendarEventWhereInput | CalendarEventWhereInput[]
    id?: StringFilter<"CalendarEvent"> | string
    userId?: StringNullableFilter<"CalendarEvent"> | string | null
    title?: StringFilter<"CalendarEvent"> | string
    description?: StringNullableFilter<"CalendarEvent"> | string | null
    location?: StringNullableFilter<"CalendarEvent"> | string | null
    startDate?: DateTimeFilter<"CalendarEvent"> | Date | string
    endDate?: DateTimeFilter<"CalendarEvent"> | Date | string
    timezone?: StringFilter<"CalendarEvent"> | string
    isAllDay?: BoolFilter<"CalendarEvent"> | boolean
    eventType?: StringFilter<"CalendarEvent"> | string
    eventStatus?: StringFilter<"CalendarEvent"> | string
    priority?: StringFilter<"CalendarEvent"> | string
    universityId?: StringNullableFilter<"CalendarEvent"> | string | null
    programId?: StringNullableFilter<"CalendarEvent"> | string | null
    applicationId?: StringNullableFilter<"CalendarEvent"> | string | null
    admissionId?: StringNullableFilter<"CalendarEvent"> | string | null
    intakeId?: StringNullableFilter<"CalendarEvent"> | string | null
    admissionDeadlineId?: StringNullableFilter<"CalendarEvent"> | string | null
    interviewId?: StringNullableFilter<"CalendarEvent"> | string | null
    scholarshipId?: StringNullableFilter<"CalendarEvent"> | string | null
    isRecurring?: BoolFilter<"CalendarEvent"> | boolean
    recurringPattern?: StringNullableFilter<"CalendarEvent"> | string | null
    parentEventId?: StringNullableFilter<"CalendarEvent"> | string | null
    hasReminders?: BoolFilter<"CalendarEvent"> | boolean
    isSystemGenerated?: BoolFilter<"CalendarEvent"> | boolean
    color?: StringNullableFilter<"CalendarEvent"> | string | null
    isVisible?: BoolFilter<"CalendarEvent"> | boolean
    completionStatus?: StringFilter<"CalendarEvent"> | string
    completedAt?: DateTimeNullableFilter<"CalendarEvent"> | Date | string | null
    completionNotes?: StringNullableFilter<"CalendarEvent"> | string | null
    createdAt?: DateTimeFilter<"CalendarEvent"> | Date | string
    updatedAt?: DateTimeFilter<"CalendarEvent"> | Date | string
    lastModifiedBy?: StringNullableFilter<"CalendarEvent"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    university?: XOR<UniversityNullableScalarRelationFilter, UniversityWhereInput> | null
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
    admission?: XOR<AdmissionNullableScalarRelationFilter, AdmissionWhereInput> | null
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    admissionDeadline?: XOR<AdmissionDeadlineNullableScalarRelationFilter, AdmissionDeadlineWhereInput> | null
    interview?: XOR<InterviewNullableScalarRelationFilter, InterviewWhereInput> | null
    scholarship?: XOR<ScholarshipNullableScalarRelationFilter, ScholarshipWhereInput> | null
    reminders?: EventReminderListRelationFilter
  }

  export type CalendarEventOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    timezone?: SortOrder
    isAllDay?: SortOrder
    eventType?: SortOrder
    eventStatus?: SortOrder
    priority?: SortOrder
    universityId?: SortOrderInput | SortOrder
    programId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    admissionId?: SortOrderInput | SortOrder
    intakeId?: SortOrderInput | SortOrder
    admissionDeadlineId?: SortOrderInput | SortOrder
    interviewId?: SortOrderInput | SortOrder
    scholarshipId?: SortOrderInput | SortOrder
    isRecurring?: SortOrder
    recurringPattern?: SortOrderInput | SortOrder
    parentEventId?: SortOrderInput | SortOrder
    hasReminders?: SortOrder
    isSystemGenerated?: SortOrder
    color?: SortOrderInput | SortOrder
    isVisible?: SortOrder
    completionStatus?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    completionNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastModifiedBy?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    university?: UniversityOrderByWithRelationInput
    program?: ProgramOrderByWithRelationInput
    application?: ApplicationOrderByWithRelationInput
    admission?: AdmissionOrderByWithRelationInput
    intake?: IntakeOrderByWithRelationInput
    admissionDeadline?: AdmissionDeadlineOrderByWithRelationInput
    interview?: InterviewOrderByWithRelationInput
    scholarship?: ScholarshipOrderByWithRelationInput
    reminders?: EventReminderOrderByRelationAggregateInput
  }

  export type CalendarEventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CalendarEventWhereInput | CalendarEventWhereInput[]
    OR?: CalendarEventWhereInput[]
    NOT?: CalendarEventWhereInput | CalendarEventWhereInput[]
    userId?: StringNullableFilter<"CalendarEvent"> | string | null
    title?: StringFilter<"CalendarEvent"> | string
    description?: StringNullableFilter<"CalendarEvent"> | string | null
    location?: StringNullableFilter<"CalendarEvent"> | string | null
    startDate?: DateTimeFilter<"CalendarEvent"> | Date | string
    endDate?: DateTimeFilter<"CalendarEvent"> | Date | string
    timezone?: StringFilter<"CalendarEvent"> | string
    isAllDay?: BoolFilter<"CalendarEvent"> | boolean
    eventType?: StringFilter<"CalendarEvent"> | string
    eventStatus?: StringFilter<"CalendarEvent"> | string
    priority?: StringFilter<"CalendarEvent"> | string
    universityId?: StringNullableFilter<"CalendarEvent"> | string | null
    programId?: StringNullableFilter<"CalendarEvent"> | string | null
    applicationId?: StringNullableFilter<"CalendarEvent"> | string | null
    admissionId?: StringNullableFilter<"CalendarEvent"> | string | null
    intakeId?: StringNullableFilter<"CalendarEvent"> | string | null
    admissionDeadlineId?: StringNullableFilter<"CalendarEvent"> | string | null
    interviewId?: StringNullableFilter<"CalendarEvent"> | string | null
    scholarshipId?: StringNullableFilter<"CalendarEvent"> | string | null
    isRecurring?: BoolFilter<"CalendarEvent"> | boolean
    recurringPattern?: StringNullableFilter<"CalendarEvent"> | string | null
    parentEventId?: StringNullableFilter<"CalendarEvent"> | string | null
    hasReminders?: BoolFilter<"CalendarEvent"> | boolean
    isSystemGenerated?: BoolFilter<"CalendarEvent"> | boolean
    color?: StringNullableFilter<"CalendarEvent"> | string | null
    isVisible?: BoolFilter<"CalendarEvent"> | boolean
    completionStatus?: StringFilter<"CalendarEvent"> | string
    completedAt?: DateTimeNullableFilter<"CalendarEvent"> | Date | string | null
    completionNotes?: StringNullableFilter<"CalendarEvent"> | string | null
    createdAt?: DateTimeFilter<"CalendarEvent"> | Date | string
    updatedAt?: DateTimeFilter<"CalendarEvent"> | Date | string
    lastModifiedBy?: StringNullableFilter<"CalendarEvent"> | string | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    university?: XOR<UniversityNullableScalarRelationFilter, UniversityWhereInput> | null
    program?: XOR<ProgramNullableScalarRelationFilter, ProgramWhereInput> | null
    application?: XOR<ApplicationNullableScalarRelationFilter, ApplicationWhereInput> | null
    admission?: XOR<AdmissionNullableScalarRelationFilter, AdmissionWhereInput> | null
    intake?: XOR<IntakeNullableScalarRelationFilter, IntakeWhereInput> | null
    admissionDeadline?: XOR<AdmissionDeadlineNullableScalarRelationFilter, AdmissionDeadlineWhereInput> | null
    interview?: XOR<InterviewNullableScalarRelationFilter, InterviewWhereInput> | null
    scholarship?: XOR<ScholarshipNullableScalarRelationFilter, ScholarshipWhereInput> | null
    reminders?: EventReminderListRelationFilter
  }, "id">

  export type CalendarEventOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    timezone?: SortOrder
    isAllDay?: SortOrder
    eventType?: SortOrder
    eventStatus?: SortOrder
    priority?: SortOrder
    universityId?: SortOrderInput | SortOrder
    programId?: SortOrderInput | SortOrder
    applicationId?: SortOrderInput | SortOrder
    admissionId?: SortOrderInput | SortOrder
    intakeId?: SortOrderInput | SortOrder
    admissionDeadlineId?: SortOrderInput | SortOrder
    interviewId?: SortOrderInput | SortOrder
    scholarshipId?: SortOrderInput | SortOrder
    isRecurring?: SortOrder
    recurringPattern?: SortOrderInput | SortOrder
    parentEventId?: SortOrderInput | SortOrder
    hasReminders?: SortOrder
    isSystemGenerated?: SortOrder
    color?: SortOrderInput | SortOrder
    isVisible?: SortOrder
    completionStatus?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    completionNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastModifiedBy?: SortOrderInput | SortOrder
    _count?: CalendarEventCountOrderByAggregateInput
    _max?: CalendarEventMaxOrderByAggregateInput
    _min?: CalendarEventMinOrderByAggregateInput
  }

  export type CalendarEventScalarWhereWithAggregatesInput = {
    AND?: CalendarEventScalarWhereWithAggregatesInput | CalendarEventScalarWhereWithAggregatesInput[]
    OR?: CalendarEventScalarWhereWithAggregatesInput[]
    NOT?: CalendarEventScalarWhereWithAggregatesInput | CalendarEventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CalendarEvent"> | string
    userId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    title?: StringWithAggregatesFilter<"CalendarEvent"> | string
    description?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    location?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    startDate?: DateTimeWithAggregatesFilter<"CalendarEvent"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"CalendarEvent"> | Date | string
    timezone?: StringWithAggregatesFilter<"CalendarEvent"> | string
    isAllDay?: BoolWithAggregatesFilter<"CalendarEvent"> | boolean
    eventType?: StringWithAggregatesFilter<"CalendarEvent"> | string
    eventStatus?: StringWithAggregatesFilter<"CalendarEvent"> | string
    priority?: StringWithAggregatesFilter<"CalendarEvent"> | string
    universityId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    programId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    applicationId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    admissionId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    intakeId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    admissionDeadlineId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    interviewId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    scholarshipId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    isRecurring?: BoolWithAggregatesFilter<"CalendarEvent"> | boolean
    recurringPattern?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    parentEventId?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    hasReminders?: BoolWithAggregatesFilter<"CalendarEvent"> | boolean
    isSystemGenerated?: BoolWithAggregatesFilter<"CalendarEvent"> | boolean
    color?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    isVisible?: BoolWithAggregatesFilter<"CalendarEvent"> | boolean
    completionStatus?: StringWithAggregatesFilter<"CalendarEvent"> | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"CalendarEvent"> | Date | string | null
    completionNotes?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CalendarEvent"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CalendarEvent"> | Date | string
    lastModifiedBy?: StringNullableWithAggregatesFilter<"CalendarEvent"> | string | null
  }

  export type EventReminderWhereInput = {
    AND?: EventReminderWhereInput | EventReminderWhereInput[]
    OR?: EventReminderWhereInput[]
    NOT?: EventReminderWhereInput | EventReminderWhereInput[]
    id?: StringFilter<"EventReminder"> | string
    eventId?: StringFilter<"EventReminder"> | string
    userId?: StringFilter<"EventReminder"> | string
    reminderType?: StringFilter<"EventReminder"> | string
    reminderTime?: IntFilter<"EventReminder"> | number
    reminderMessage?: StringNullableFilter<"EventReminder"> | string | null
    scheduledFor?: DateTimeFilter<"EventReminder"> | Date | string
    isActive?: BoolFilter<"EventReminder"> | boolean
    isSent?: BoolFilter<"EventReminder"> | boolean
    sentAt?: DateTimeNullableFilter<"EventReminder"> | Date | string | null
    failureReason?: StringNullableFilter<"EventReminder"> | string | null
    retryCount?: IntFilter<"EventReminder"> | number
    createdAt?: DateTimeFilter<"EventReminder"> | Date | string
    updatedAt?: DateTimeFilter<"EventReminder"> | Date | string
    event?: XOR<CalendarEventScalarRelationFilter, CalendarEventWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type EventReminderOrderByWithRelationInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
    reminderType?: SortOrder
    reminderTime?: SortOrder
    reminderMessage?: SortOrderInput | SortOrder
    scheduledFor?: SortOrder
    isActive?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    event?: CalendarEventOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type EventReminderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    eventId_userId_reminderTime_reminderType?: EventReminderEventIdUserIdReminderTimeReminderTypeCompoundUniqueInput
    AND?: EventReminderWhereInput | EventReminderWhereInput[]
    OR?: EventReminderWhereInput[]
    NOT?: EventReminderWhereInput | EventReminderWhereInput[]
    eventId?: StringFilter<"EventReminder"> | string
    userId?: StringFilter<"EventReminder"> | string
    reminderType?: StringFilter<"EventReminder"> | string
    reminderTime?: IntFilter<"EventReminder"> | number
    reminderMessage?: StringNullableFilter<"EventReminder"> | string | null
    scheduledFor?: DateTimeFilter<"EventReminder"> | Date | string
    isActive?: BoolFilter<"EventReminder"> | boolean
    isSent?: BoolFilter<"EventReminder"> | boolean
    sentAt?: DateTimeNullableFilter<"EventReminder"> | Date | string | null
    failureReason?: StringNullableFilter<"EventReminder"> | string | null
    retryCount?: IntFilter<"EventReminder"> | number
    createdAt?: DateTimeFilter<"EventReminder"> | Date | string
    updatedAt?: DateTimeFilter<"EventReminder"> | Date | string
    event?: XOR<CalendarEventScalarRelationFilter, CalendarEventWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "eventId_userId_reminderTime_reminderType">

  export type EventReminderOrderByWithAggregationInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
    reminderType?: SortOrder
    reminderTime?: SortOrder
    reminderMessage?: SortOrderInput | SortOrder
    scheduledFor?: SortOrder
    isActive?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EventReminderCountOrderByAggregateInput
    _avg?: EventReminderAvgOrderByAggregateInput
    _max?: EventReminderMaxOrderByAggregateInput
    _min?: EventReminderMinOrderByAggregateInput
    _sum?: EventReminderSumOrderByAggregateInput
  }

  export type EventReminderScalarWhereWithAggregatesInput = {
    AND?: EventReminderScalarWhereWithAggregatesInput | EventReminderScalarWhereWithAggregatesInput[]
    OR?: EventReminderScalarWhereWithAggregatesInput[]
    NOT?: EventReminderScalarWhereWithAggregatesInput | EventReminderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EventReminder"> | string
    eventId?: StringWithAggregatesFilter<"EventReminder"> | string
    userId?: StringWithAggregatesFilter<"EventReminder"> | string
    reminderType?: StringWithAggregatesFilter<"EventReminder"> | string
    reminderTime?: IntWithAggregatesFilter<"EventReminder"> | number
    reminderMessage?: StringNullableWithAggregatesFilter<"EventReminder"> | string | null
    scheduledFor?: DateTimeWithAggregatesFilter<"EventReminder"> | Date | string
    isActive?: BoolWithAggregatesFilter<"EventReminder"> | boolean
    isSent?: BoolWithAggregatesFilter<"EventReminder"> | boolean
    sentAt?: DateTimeNullableWithAggregatesFilter<"EventReminder"> | Date | string | null
    failureReason?: StringNullableWithAggregatesFilter<"EventReminder"> | string | null
    retryCount?: IntWithAggregatesFilter<"EventReminder"> | number
    createdAt?: DateTimeWithAggregatesFilter<"EventReminder"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EventReminder"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserProfileCreateInput = {
    id?: string
    countries?: UserProfileCreatecountriesInput | string[]
    courses?: UserProfileCreatecoursesInput | string[]
    studyLevel?: string | null
    gpa?: string | null
    testScores?: string | null
    workExperience?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProfileInput
  }

  export type UserProfileUncheckedCreateInput = {
    id?: string
    userId: string
    countries?: UserProfileCreatecountriesInput | string[]
    courses?: UserProfileCreatecoursesInput | string[]
    studyLevel?: string | null
    gpa?: string | null
    testScores?: string | null
    workExperience?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    countries?: UserProfileUpdatecountriesInput | string[]
    courses?: UserProfileUpdatecoursesInput | string[]
    studyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableStringFieldUpdateOperationsInput | string | null
    testScores?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfileNestedInput
  }

  export type UserProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    countries?: UserProfileUpdatecountriesInput | string[]
    courses?: UserProfileUpdatecoursesInput | string[]
    studyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableStringFieldUpdateOperationsInput | string | null
    testScores?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserProfileCreateManyInput = {
    id?: string
    userId: string
    countries?: UserProfileCreatecountriesInput | string[]
    courses?: UserProfileCreatecoursesInput | string[]
    studyLevel?: string | null
    gpa?: string | null
    testScores?: string | null
    workExperience?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    countries?: UserProfileUpdatecountriesInput | string[]
    courses?: UserProfileUpdatecoursesInput | string[]
    studyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableStringFieldUpdateOperationsInput | string | null
    testScores?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    countries?: UserProfileUpdatecountriesInput | string[]
    courses?: UserProfileUpdatecoursesInput | string[]
    studyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableStringFieldUpdateOperationsInput | string | null
    testScores?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionCreateInput = {
    id?: string
    plan: string
    status: string
    billingCycle?: string | null
    trialStartDate?: Date | string | null
    trialEndDate?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSubscriptionInput
  }

  export type SubscriptionUncheckedCreateInput = {
    id?: string
    userId: string
    plan: string
    status: string
    billingCycle?: string | null
    trialStartDate?: Date | string | null
    trialEndDate?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    billingCycle?: NullableStringFieldUpdateOperationsInput | string | null
    trialStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSubscriptionNestedInput
  }

  export type SubscriptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    billingCycle?: NullableStringFieldUpdateOperationsInput | string | null
    trialStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionCreateManyInput = {
    id?: string
    userId: string
    plan: string
    status: string
    billingCycle?: string | null
    trialStartDate?: Date | string | null
    trialEndDate?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    billingCycle?: NullableStringFieldUpdateOperationsInput | string | null
    trialStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    billingCycle?: NullableStringFieldUpdateOperationsInput | string | null
    trialStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventCreateInput = {
    id?: string
    userId?: string | null
    eventType?: string | null
    plan?: string | null
    amount?: number | null
    currency?: string
    stripeEventId?: string | null
    createdAt?: Date | string
  }

  export type PaymentEventUncheckedCreateInput = {
    id?: string
    userId?: string | null
    eventType?: string | null
    plan?: string | null
    amount?: number | null
    currency?: string
    stripeEventId?: string | null
    createdAt?: Date | string
  }

  export type PaymentEventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    eventType?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    stripeEventId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    eventType?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    stripeEventId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventCreateManyInput = {
    id?: string
    userId?: string | null
    eventType?: string | null
    plan?: string | null
    amount?: number | null
    currency?: string
    stripeEventId?: string | null
    createdAt?: Date | string
  }

  export type PaymentEventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    eventType?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    stripeEventId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentEventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    eventType?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    stripeEventId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityCreateInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityCreateManyInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
  }

  export type UniversityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniversityImageCreateInput = {
    id?: string
    imageUrl: string
    imageType?: string | null
    imageTitle?: string | null
    imageAltText: string
    imageCaption?: string | null
    fileSize?: number | null
    width?: number | null
    height?: number | null
    isPrimary?: boolean
    displayOrder?: number
    createdAt?: Date | string
    university: UniversityCreateNestedOneWithoutImagesInput
  }

  export type UniversityImageUncheckedCreateInput = {
    id?: string
    universityId: string
    imageUrl: string
    imageType?: string | null
    imageTitle?: string | null
    imageAltText: string
    imageCaption?: string | null
    fileSize?: number | null
    width?: number | null
    height?: number | null
    isPrimary?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type UniversityImageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    imageType?: NullableStringFieldUpdateOperationsInput | string | null
    imageTitle?: NullableStringFieldUpdateOperationsInput | string | null
    imageAltText?: StringFieldUpdateOperationsInput | string
    imageCaption?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutImagesNestedInput
  }

  export type UniversityImageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    imageType?: NullableStringFieldUpdateOperationsInput | string | null
    imageTitle?: NullableStringFieldUpdateOperationsInput | string | null
    imageAltText?: StringFieldUpdateOperationsInput | string
    imageCaption?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityImageCreateManyInput = {
    id?: string
    universityId: string
    imageUrl: string
    imageType?: string | null
    imageTitle?: string | null
    imageAltText: string
    imageCaption?: string | null
    fileSize?: number | null
    width?: number | null
    height?: number | null
    isPrimary?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type UniversityImageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    imageType?: NullableStringFieldUpdateOperationsInput | string | null
    imageTitle?: NullableStringFieldUpdateOperationsInput | string | null
    imageAltText?: StringFieldUpdateOperationsInput | string
    imageCaption?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityImageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    imageType?: NullableStringFieldUpdateOperationsInput | string | null
    imageTitle?: NullableStringFieldUpdateOperationsInput | string | null
    imageAltText?: StringFieldUpdateOperationsInput | string
    imageCaption?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramDepartmentCreateInput = {
    id?: string
    createdAt?: Date | string
    program: ProgramCreateNestedOneWithoutDepartmentsInput
    department: DepartmentCreateNestedOneWithoutProgramsInput
  }

  export type ProgramDepartmentUncheckedCreateInput = {
    id?: string
    programId: string
    departmentId: string
    createdAt?: Date | string
  }

  export type ProgramDepartmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneRequiredWithoutDepartmentsNestedInput
    department?: DepartmentUpdateOneRequiredWithoutProgramsNestedInput
  }

  export type ProgramDepartmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramDepartmentCreateManyInput = {
    id?: string
    programId: string
    departmentId: string
    createdAt?: Date | string
  }

  export type ProgramDepartmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramDepartmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartmentCreateInput = {
    id?: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutDepartmentsInput
    programs?: ProgramDepartmentCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateInput = {
    id?: string
    universityId: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
    programs?: ProgramDepartmentUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutDepartmentsNestedInput
    programs?: ProgramDepartmentUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    programs?: ProgramDepartmentUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentCreateManyInput = {
    id?: string
    universityId: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramCreateInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type ProgramCreateManyInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProgramUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SyllabusCreateInput = {
    id?: string
    fileUrl: string
    uploadedAt?: Date | string
    program: ProgramCreateNestedOneWithoutSyllabusInput
  }

  export type SyllabusUncheckedCreateInput = {
    id?: string
    programId: string
    fileUrl: string
    uploadedAt?: Date | string
  }

  export type SyllabusUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneRequiredWithoutSyllabusNestedInput
  }

  export type SyllabusUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SyllabusCreateManyInput = {
    id?: string
    programId: string
    fileUrl: string
    uploadedAt?: Date | string
  }

  export type SyllabusUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SyllabusUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramRankingCreateInput = {
    id?: string
    year: number
    rank: number
    source?: string | null
    createdAt?: Date | string
    program: ProgramCreateNestedOneWithoutRankingsInput
  }

  export type ProgramRankingUncheckedCreateInput = {
    id?: string
    programId: string
    year: number
    rank: number
    source?: string | null
    createdAt?: Date | string
  }

  export type ProgramRankingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    rank?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneRequiredWithoutRankingsNestedInput
  }

  export type ProgramRankingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    rank?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramRankingCreateManyInput = {
    id?: string
    programId: string
    year: number
    rank: number
    source?: string | null
    createdAt?: Date | string
  }

  export type ProgramRankingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    rank?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramRankingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    rank?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalLinkCreateInput = {
    id?: string
    title: string
    url: string
    createdAt?: Date | string
    program: ProgramCreateNestedOneWithoutExternalLinksInput
  }

  export type ExternalLinkUncheckedCreateInput = {
    id?: string
    programId: string
    title: string
    url: string
    createdAt?: Date | string
  }

  export type ExternalLinkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneRequiredWithoutExternalLinksNestedInput
  }

  export type ExternalLinkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalLinkCreateManyInput = {
    id?: string
    programId: string
    title: string
    url: string
    createdAt?: Date | string
  }

  export type ExternalLinkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalLinkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionCreateInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutAdmissionsInput
    program: ProgramCreateNestedOneWithoutAdmissionsInput
    intakes?: IntakeCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateInput = {
    id?: string
    universityId: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    intakes?: IntakeUncheckedCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutAdmissionsNestedInput
    program?: ProgramUpdateOneRequiredWithoutAdmissionsNestedInput
    intakes?: IntakeUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intakes?: IntakeUncheckedUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionCreateManyInput = {
    id?: string
    universityId: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdmissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntakeCreateInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutIntakesInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutIntakeInput
    applications?: ApplicationCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutIntakeInput
  }

  export type IntakeUncheckedCreateInput = {
    id?: string
    admissionId: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutIntakeInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutIntakeInput
  }

  export type IntakeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutIntakesNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeCreateManyInput = {
    id?: string
    admissionId: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IntakeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntakeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionDeadlineCreateInput = {
    id?: string
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutDeadlinesInput
    intake?: IntakeCreateNestedOneWithoutDeadlinesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionDeadlineInput
  }

  export type AdmissionDeadlineUncheckedCreateInput = {
    id?: string
    admissionId: string
    intakeId?: string | null
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionDeadlineInput
  }

  export type AdmissionDeadlineUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutDeadlinesNestedInput
    intake?: IntakeUpdateOneWithoutDeadlinesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionDeadlineNestedInput
  }

  export type AdmissionDeadlineUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionDeadlineNestedInput
  }

  export type AdmissionDeadlineCreateManyInput = {
    id?: string
    admissionId: string
    intakeId?: string | null
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdmissionDeadlineUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionDeadlineUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationCreateManyInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationProgressCreateInput = {
    id?: string
    stageName: string
    stageStatus: string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    notes?: string | null
    completedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    application: ApplicationCreateNestedOneWithoutApplicationProgressInput
  }

  export type ApplicationProgressUncheckedCreateInput = {
    id?: string
    applicationId: string
    stageName: string
    stageStatus: string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    notes?: string | null
    completedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationProgressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageName?: StringFieldUpdateOperationsInput | string
    stageStatus?: StringFieldUpdateOperationsInput | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    application?: ApplicationUpdateOneRequiredWithoutApplicationProgressNestedInput
  }

  export type ApplicationProgressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    stageName?: StringFieldUpdateOperationsInput | string
    stageStatus?: StringFieldUpdateOperationsInput | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationProgressCreateManyInput = {
    id?: string
    applicationId: string
    stageName: string
    stageStatus: string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    notes?: string | null
    completedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationProgressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageName?: StringFieldUpdateOperationsInput | string
    stageStatus?: StringFieldUpdateOperationsInput | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationProgressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    stageName?: StringFieldUpdateOperationsInput | string
    stageStatus?: StringFieldUpdateOperationsInput | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationDocumentCreateInput = {
    id?: string
    documentType: string
    documentCategory: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    submissionDeadline?: Date | string | null
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    documentStatus?: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    application: ApplicationCreateNestedOneWithoutDocumentsInput
  }

  export type ApplicationDocumentUncheckedCreateInput = {
    id?: string
    applicationId: string
    documentType: string
    documentCategory: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    submissionDeadline?: Date | string | null
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    documentStatus?: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationDocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentCategory?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    submissionDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    documentStatus?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    application?: ApplicationUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type ApplicationDocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentCategory?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    submissionDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    documentStatus?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationDocumentCreateManyInput = {
    id?: string
    applicationId: string
    documentType: string
    documentCategory: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    submissionDeadline?: Date | string | null
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    documentStatus?: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationDocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentCategory?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    submissionDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    documentStatus?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationDocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentCategory?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    submissionDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    documentStatus?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InterviewCreateInput = {
    id?: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    application: ApplicationCreateNestedOneWithoutInterviewsInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutInterviewInput
  }

  export type InterviewUncheckedCreateInput = {
    id?: string
    applicationId: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutInterviewInput
  }

  export type InterviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    application?: ApplicationUpdateOneRequiredWithoutInterviewsNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutInterviewNestedInput
  }

  export type InterviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutInterviewNestedInput
  }

  export type InterviewCreateManyInput = {
    id?: string
    applicationId: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InterviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InterviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TuitionBreakdownCreateInput = {
    id?: string
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutTuitionBreakdownsInput
    program?: ProgramCreateNestedOneWithoutTuitionBreakdownsInput
    paymentSchedule?: PaymentScheduleCreateNestedManyWithoutTuitionBreakdownInput
  }

  export type TuitionBreakdownUncheckedCreateInput = {
    id?: string
    universityId: string
    programId?: string | null
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentSchedule?: PaymentScheduleUncheckedCreateNestedManyWithoutTuitionBreakdownInput
  }

  export type TuitionBreakdownUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutTuitionBreakdownsNestedInput
    program?: ProgramUpdateOneWithoutTuitionBreakdownsNestedInput
    paymentSchedule?: PaymentScheduleUpdateManyWithoutTuitionBreakdownNestedInput
  }

  export type TuitionBreakdownUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentSchedule?: PaymentScheduleUncheckedUpdateManyWithoutTuitionBreakdownNestedInput
  }

  export type TuitionBreakdownCreateManyInput = {
    id?: string
    universityId: string
    programId?: string | null
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TuitionBreakdownUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TuitionBreakdownUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentScheduleCreateInput = {
    id?: string
    installmentNumber: number
    dueDate: Date | string
    amount: number
    description?: string | null
    lateFee?: number | null
    gracePeroidDays?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    tuitionBreakdown: TuitionBreakdownCreateNestedOneWithoutPaymentScheduleInput
  }

  export type PaymentScheduleUncheckedCreateInput = {
    id?: string
    tuitionBreakdownId: string
    installmentNumber: number
    dueDate: Date | string
    amount: number
    description?: string | null
    lateFee?: number | null
    gracePeroidDays?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentScheduleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    installmentNumber?: IntFieldUpdateOperationsInput | number
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lateFee?: NullableFloatFieldUpdateOperationsInput | number | null
    gracePeroidDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tuitionBreakdown?: TuitionBreakdownUpdateOneRequiredWithoutPaymentScheduleNestedInput
  }

  export type PaymentScheduleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tuitionBreakdownId?: StringFieldUpdateOperationsInput | string
    installmentNumber?: IntFieldUpdateOperationsInput | number
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lateFee?: NullableFloatFieldUpdateOperationsInput | number | null
    gracePeroidDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentScheduleCreateManyInput = {
    id?: string
    tuitionBreakdownId: string
    installmentNumber: number
    dueDate: Date | string
    amount: number
    description?: string | null
    lateFee?: number | null
    gracePeroidDays?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentScheduleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    installmentNumber?: IntFieldUpdateOperationsInput | number
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lateFee?: NullableFloatFieldUpdateOperationsInput | number | null
    gracePeroidDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentScheduleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tuitionBreakdownId?: StringFieldUpdateOperationsInput | string
    installmentNumber?: IntFieldUpdateOperationsInput | number
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lateFee?: NullableFloatFieldUpdateOperationsInput | number | null
    gracePeroidDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipCreateInput = {
    id?: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutScholarshipsInput
    program?: ProgramCreateNestedOneWithoutScholarshipsInput
    documents?: ScholarshipDocumentCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipUncheckedCreateInput = {
    id?: string
    universityId: string
    programId?: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ScholarshipDocumentUncheckedCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutScholarshipsNestedInput
    program?: ProgramUpdateOneWithoutScholarshipsNestedInput
    documents?: ScholarshipDocumentUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipCreateManyInput = {
    id?: string
    universityId: string
    programId?: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipDocumentCreateInput = {
    id?: string
    documentType: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    displayOrder?: number
    isPublic?: boolean
    downloadCount?: number
    uploadedAt?: Date | string
    updatedAt?: Date | string
    scholarship: ScholarshipCreateNestedOneWithoutDocumentsInput
  }

  export type ScholarshipDocumentUncheckedCreateInput = {
    id?: string
    scholarshipId: string
    documentType: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    displayOrder?: number
    isPublic?: boolean
    downloadCount?: number
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipDocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    downloadCount?: IntFieldUpdateOperationsInput | number
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scholarship?: ScholarshipUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type ScholarshipDocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    downloadCount?: IntFieldUpdateOperationsInput | number
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipDocumentCreateManyInput = {
    id?: string
    scholarshipId: string
    documentType: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    displayOrder?: number
    isPublic?: boolean
    downloadCount?: number
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipDocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    downloadCount?: IntFieldUpdateOperationsInput | number
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipDocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    downloadCount?: IntFieldUpdateOperationsInput | number
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    scholarship: ScholarshipCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutScholarshipApplicationsInput
    application?: ApplicationCreateNestedOneWithoutScholarshipApplicationsInput
  }

  export type ScholarshipApplicationUncheckedCreateInput = {
    id?: string
    scholarshipId: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scholarship?: ScholarshipUpdateOneRequiredWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutScholarshipApplicationsNestedInput
    application?: ApplicationUpdateOneWithoutScholarshipApplicationsNestedInput
  }

  export type ScholarshipApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationCreateManyInput = {
    id?: string
    scholarshipId: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeeStructureCreateInput = {
    id?: string
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutFeeStructuresInput
    program?: ProgramCreateNestedOneWithoutFeeStructuresInput
  }

  export type FeeStructureUncheckedCreateInput = {
    id?: string
    universityId: string
    programId?: string | null
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FeeStructureUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutFeeStructuresNestedInput
    program?: ProgramUpdateOneWithoutFeeStructuresNestedInput
  }

  export type FeeStructureUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeeStructureCreateManyInput = {
    id?: string
    universityId: string
    programId?: string | null
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FeeStructureUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeeStructureUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidCreateInput = {
    id?: string
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutFinancialAidsInput
    program?: ProgramCreateNestedOneWithoutFinancialAidsInput
    applications?: FinancialAidApplicationCreateNestedManyWithoutFinancialAidInput
  }

  export type FinancialAidUncheckedCreateInput = {
    id?: string
    universityId: string
    programId?: string | null
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutFinancialAidInput
  }

  export type FinancialAidUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutFinancialAidsNestedInput
    program?: ProgramUpdateOneWithoutFinancialAidsNestedInput
    applications?: FinancialAidApplicationUpdateManyWithoutFinancialAidNestedInput
  }

  export type FinancialAidUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: FinancialAidApplicationUncheckedUpdateManyWithoutFinancialAidNestedInput
  }

  export type FinancialAidCreateManyInput = {
    id?: string
    universityId: string
    programId?: string | null
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    financialAid: FinancialAidCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutFinancialAidApplicationsInput
    application?: ApplicationCreateNestedOneWithoutFinancialAidApplicationsInput
  }

  export type FinancialAidApplicationUncheckedCreateInput = {
    id?: string
    financialAidId: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    financialAid?: FinancialAidUpdateOneRequiredWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutFinancialAidApplicationsNestedInput
    application?: ApplicationUpdateOneWithoutFinancialAidApplicationsNestedInput
  }

  export type FinancialAidApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    financialAidId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationCreateManyInput = {
    id?: string
    financialAidId: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    financialAidId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Admin_UserCreateInput = {
    id?: string
    email: string
    passwordHash: string
    firstName: string
    lastName: string
    role?: string
    status?: string
    is2FAEnabled?: boolean
    twoFactorSecret?: string | null
    phone?: string | null
    profileImageUrl?: string | null
    lastLogin?: Date | string | null
    lastLoginIP?: string | null
    failedLoginAttempts?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    refreshTokens?: RefreshTokenCreateNestedManyWithoutAdminUserInput
  }

  export type Admin_UserUncheckedCreateInput = {
    id?: string
    email: string
    passwordHash: string
    firstName: string
    lastName: string
    role?: string
    status?: string
    is2FAEnabled?: boolean
    twoFactorSecret?: string | null
    phone?: string | null
    profileImageUrl?: string | null
    lastLogin?: Date | string | null
    lastLoginIP?: string | null
    failedLoginAttempts?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutAdminUserInput
  }

  export type Admin_UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    is2FAEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshTokens?: RefreshTokenUpdateManyWithoutAdminUserNestedInput
  }

  export type Admin_UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    is2FAEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutAdminUserNestedInput
  }

  export type Admin_UserCreateManyInput = {
    id?: string
    email: string
    passwordHash: string
    firstName: string
    lastName: string
    role?: string
    status?: string
    is2FAEnabled?: boolean
    twoFactorSecret?: string | null
    phone?: string | null
    profileImageUrl?: string | null
    lastLogin?: Date | string | null
    lastLoginIP?: string | null
    failedLoginAttempts?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Admin_UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    is2FAEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Admin_UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    is2FAEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    adminUser: Admin_UserCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    adminUser?: Admin_UserUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayPromptCreateInput = {
    id?: string
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    admission?: AdmissionCreateNestedOneWithoutEssayPromptsInput
    program?: ProgramCreateNestedOneWithoutEssayPromptsInput
    intake?: IntakeCreateNestedOneWithoutEssayPromptsInput
    submissions?: EssaySubmissionCreateNestedManyWithoutEssayPromptInput
    essays?: EssayCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptUncheckedCreateInput = {
    id?: string
    admissionId?: string | null
    programId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissions?: EssaySubmissionUncheckedCreateNestedManyWithoutEssayPromptInput
    essays?: EssayUncheckedCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneWithoutEssayPromptsNestedInput
    program?: ProgramUpdateOneWithoutEssayPromptsNestedInput
    intake?: IntakeUpdateOneWithoutEssayPromptsNestedInput
    submissions?: EssaySubmissionUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissions?: EssaySubmissionUncheckedUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUncheckedUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptCreateManyInput = {
    id?: string
    admissionId?: string | null
    programId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssayPromptUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayPromptUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionCreateInput = {
    id?: string
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    essayPrompt: EssayPromptCreateNestedOneWithoutSubmissionsInput
    user?: UserCreateNestedOneWithoutEssaySubmissionsInput
    application?: ApplicationCreateNestedOneWithoutEssaySubmissionsInput
  }

  export type EssaySubmissionUncheckedCreateInput = {
    id?: string
    essayPromptId: string
    userId?: string | null
    applicationId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssaySubmissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutSubmissionsNestedInput
    user?: UserUpdateOneWithoutEssaySubmissionsNestedInput
    application?: ApplicationUpdateOneWithoutEssaySubmissionsNestedInput
  }

  export type EssaySubmissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionCreateManyInput = {
    id?: string
    essayPromptId: string
    userId?: string | null
    applicationId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssaySubmissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayCreateInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    user?: UserCreateNestedOneWithoutEssaysInput
    application?: ApplicationCreateNestedOneWithoutEssaysInput
    program: ProgramCreateNestedOneWithoutEssaysInput
    essayPrompt: EssayPromptCreateNestedOneWithoutEssaysInput
    versions?: EssayVersionCreateNestedManyWithoutEssayInput
    aiResults?: AIResultCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    versions?: EssayVersionUncheckedCreateNestedManyWithoutEssayInput
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneWithoutEssaysNestedInput
    application?: ApplicationUpdateOneWithoutEssaysNestedInput
    program?: ProgramUpdateOneRequiredWithoutEssaysNestedInput
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutEssaysNestedInput
    versions?: EssayVersionUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    versions?: EssayVersionUncheckedUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type EssayCreateManyInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
  }

  export type EssayUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EssayUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EssayVersionCreateInput = {
    id?: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
    essay: EssayCreateNestedOneWithoutVersionsInput
    aiResults?: AIResultCreateNestedManyWithoutEssayVersionInput
  }

  export type EssayVersionUncheckedCreateInput = {
    id?: string
    essayId: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayVersionInput
  }

  export type EssayVersionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
    essay?: EssayUpdateOneRequiredWithoutVersionsNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayVersionNestedInput
  }

  export type EssayVersionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayVersionNestedInput
  }

  export type EssayVersionCreateManyInput = {
    id?: string
    essayId: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
  }

  export type EssayVersionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EssayVersionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AIResultCreateInput = {
    id?: string
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    essay: EssayCreateNestedOneWithoutAiResultsInput
    essayVersion?: EssayVersionCreateNestedOneWithoutAiResultsInput
  }

  export type AIResultUncheckedCreateInput = {
    id?: string
    essayId: string
    essayVersionId?: string | null
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIResultUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essay?: EssayUpdateOneRequiredWithoutAiResultsNestedInput
    essayVersion?: EssayVersionUpdateOneWithoutAiResultsNestedInput
  }

  export type AIResultUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    essayVersionId?: NullableStringFieldUpdateOperationsInput | string | null
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIResultCreateManyInput = {
    id?: string
    essayId: string
    essayVersionId?: string | null
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIResultUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIResultUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    essayVersionId?: NullableStringFieldUpdateOperationsInput | string | null
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayCompletionLogCreateInput = {
    id?: string
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
    essay: EssayCreateNestedOneWithoutEssayCompletionLogInput
    user?: UserCreateNestedOneWithoutEssayCompletionLogInput
  }

  export type EssayCompletionLogUncheckedCreateInput = {
    id?: string
    essayId: string
    userId?: string | null
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
  }

  export type EssayCompletionLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essay?: EssayUpdateOneRequiredWithoutEssayCompletionLogNestedInput
    user?: UserUpdateOneWithoutEssayCompletionLogNestedInput
  }

  export type EssayCompletionLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayCompletionLogCreateManyInput = {
    id?: string
    essayId: string
    userId?: string | null
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
  }

  export type EssayCompletionLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayCompletionLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalendarEventCreateInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventCreateManyInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type CalendarEventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CalendarEventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventReminderCreateInput = {
    id?: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    event: CalendarEventCreateNestedOneWithoutRemindersInput
    user: UserCreateNestedOneWithoutEventRemindersInput
  }

  export type EventReminderUncheckedCreateInput = {
    id?: string
    eventId: string
    userId: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EventReminderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    event?: CalendarEventUpdateOneRequiredWithoutRemindersNestedInput
    user?: UserUpdateOneRequiredWithoutEventRemindersNestedInput
  }

  export type EventReminderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventReminderCreateManyInput = {
    id?: string
    eventId: string
    userId: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EventReminderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventReminderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserProfileNullableScalarRelationFilter = {
    is?: UserProfileWhereInput | null
    isNot?: UserProfileWhereInput | null
  }

  export type SubscriptionNullableScalarRelationFilter = {
    is?: SubscriptionWhereInput | null
    isNot?: SubscriptionWhereInput | null
  }

  export type ApplicationListRelationFilter = {
    every?: ApplicationWhereInput
    some?: ApplicationWhereInput
    none?: ApplicationWhereInput
  }

  export type ScholarshipApplicationListRelationFilter = {
    every?: ScholarshipApplicationWhereInput
    some?: ScholarshipApplicationWhereInput
    none?: ScholarshipApplicationWhereInput
  }

  export type FinancialAidApplicationListRelationFilter = {
    every?: FinancialAidApplicationWhereInput
    some?: FinancialAidApplicationWhereInput
    none?: FinancialAidApplicationWhereInput
  }

  export type EssaySubmissionListRelationFilter = {
    every?: EssaySubmissionWhereInput
    some?: EssaySubmissionWhereInput
    none?: EssaySubmissionWhereInput
  }

  export type UniversityListRelationFilter = {
    every?: UniversityWhereInput
    some?: UniversityWhereInput
    none?: UniversityWhereInput
  }

  export type CalendarEventListRelationFilter = {
    every?: CalendarEventWhereInput
    some?: CalendarEventWhereInput
    none?: CalendarEventWhereInput
  }

  export type EventReminderListRelationFilter = {
    every?: EventReminderWhereInput
    some?: EventReminderWhereInput
    none?: EventReminderWhereInput
  }

  export type EssayListRelationFilter = {
    every?: EssayWhereInput
    some?: EssayWhereInput
    none?: EssayWhereInput
  }

  export type EssayCompletionLogListRelationFilter = {
    every?: EssayCompletionLogWhereInput
    some?: EssayCompletionLogWhereInput
    none?: EssayCompletionLogWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ScholarshipApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FinancialAidApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EssaySubmissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CalendarEventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventReminderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EssayOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EssayCompletionLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    image?: SortOrder
    password?: SortOrder
    provider?: SortOrder
    emailVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    image?: SortOrder
    password?: SortOrder
    provider?: SortOrder
    emailVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    image?: SortOrder
    password?: SortOrder
    provider?: SortOrder
    emailVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserProfileCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    countries?: SortOrder
    courses?: SortOrder
    studyLevel?: SortOrder
    gpa?: SortOrder
    testScores?: SortOrder
    workExperience?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    studyLevel?: SortOrder
    gpa?: SortOrder
    testScores?: SortOrder
    workExperience?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserProfileMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    studyLevel?: SortOrder
    gpa?: SortOrder
    testScores?: SortOrder
    workExperience?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SubscriptionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    billingCycle?: SortOrder
    trialStartDate?: SortOrder
    trialEndDate?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    stripeCustomerId?: SortOrder
    stripeSubscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    billingCycle?: SortOrder
    trialStartDate?: SortOrder
    trialEndDate?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    stripeCustomerId?: SortOrder
    stripeSubscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    plan?: SortOrder
    status?: SortOrder
    billingCycle?: SortOrder
    trialStartDate?: SortOrder
    trialEndDate?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    stripeCustomerId?: SortOrder
    stripeSubscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type PaymentEventCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    eventType?: SortOrder
    plan?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    stripeEventId?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentEventAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentEventMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    eventType?: SortOrder
    plan?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    stripeEventId?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentEventMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    eventType?: SortOrder
    plan?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    stripeEventId?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentEventSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UniversityImageListRelationFilter = {
    every?: UniversityImageWhereInput
    some?: UniversityImageWhereInput
    none?: UniversityImageWhereInput
  }

  export type ProgramListRelationFilter = {
    every?: ProgramWhereInput
    some?: ProgramWhereInput
    none?: ProgramWhereInput
  }

  export type DepartmentListRelationFilter = {
    every?: DepartmentWhereInput
    some?: DepartmentWhereInput
    none?: DepartmentWhereInput
  }

  export type AdmissionListRelationFilter = {
    every?: AdmissionWhereInput
    some?: AdmissionWhereInput
    none?: AdmissionWhereInput
  }

  export type TuitionBreakdownListRelationFilter = {
    every?: TuitionBreakdownWhereInput
    some?: TuitionBreakdownWhereInput
    none?: TuitionBreakdownWhereInput
  }

  export type ScholarshipListRelationFilter = {
    every?: ScholarshipWhereInput
    some?: ScholarshipWhereInput
    none?: ScholarshipWhereInput
  }

  export type FeeStructureListRelationFilter = {
    every?: FeeStructureWhereInput
    some?: FeeStructureWhereInput
    none?: FeeStructureWhereInput
  }

  export type FinancialAidListRelationFilter = {
    every?: FinancialAidWhereInput
    some?: FinancialAidWhereInput
    none?: FinancialAidWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UniversityImageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProgramOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepartmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdmissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TuitionBreakdownOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ScholarshipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FeeStructureOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FinancialAidOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UniversityCountOrderByAggregateInput = {
    id?: SortOrder
    universityName?: SortOrder
    slug?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    fullAddress?: SortOrder
    shortDescription?: SortOrder
    overview?: SortOrder
    history?: SortOrder
    missionStatement?: SortOrder
    visionStatement?: SortOrder
    accreditationDetails?: SortOrder
    whyChooseHighlights?: SortOrder
    careerOutcomes?: SortOrder
    ftGlobalRanking?: SortOrder
    ftRegionalRanking?: SortOrder
    ftRankingYear?: SortOrder
    usNewsRanking?: SortOrder
    qsRanking?: SortOrder
    timesRanking?: SortOrder
    acceptanceRate?: SortOrder
    gmatAverageScore?: SortOrder
    gmatScoreMin?: SortOrder
    gmatScoreMax?: SortOrder
    minimumGpa?: SortOrder
    languageTestRequirements?: SortOrder
    tuitionFees?: SortOrder
    additionalFees?: SortOrder
    totalCost?: SortOrder
    currency?: SortOrder
    scholarshipInfo?: SortOrder
    financialAidDetails?: SortOrder
    admissionsOfficeContact?: SortOrder
    internationalOfficeContact?: SortOrder
    generalInquiriesContact?: SortOrder
    websiteUrl?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metaKeywords?: SortOrder
    canonicalUrl?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    averageDeadlines?: SortOrder
    studentsPerYear?: SortOrder
    brochureUrl?: SortOrder
    additionalDocumentUrls?: SortOrder
    averageProgramLengthMonths?: SortOrder
    intakes?: SortOrder
  }

  export type UniversityAvgOrderByAggregateInput = {
    ftGlobalRanking?: SortOrder
    ftRegionalRanking?: SortOrder
    ftRankingYear?: SortOrder
    usNewsRanking?: SortOrder
    qsRanking?: SortOrder
    timesRanking?: SortOrder
    acceptanceRate?: SortOrder
    gmatAverageScore?: SortOrder
    gmatScoreMin?: SortOrder
    gmatScoreMax?: SortOrder
    minimumGpa?: SortOrder
    tuitionFees?: SortOrder
    additionalFees?: SortOrder
    totalCost?: SortOrder
    studentsPerYear?: SortOrder
    averageProgramLengthMonths?: SortOrder
  }

  export type UniversityMaxOrderByAggregateInput = {
    id?: SortOrder
    universityName?: SortOrder
    slug?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    fullAddress?: SortOrder
    shortDescription?: SortOrder
    overview?: SortOrder
    history?: SortOrder
    missionStatement?: SortOrder
    visionStatement?: SortOrder
    accreditationDetails?: SortOrder
    careerOutcomes?: SortOrder
    ftGlobalRanking?: SortOrder
    ftRegionalRanking?: SortOrder
    ftRankingYear?: SortOrder
    usNewsRanking?: SortOrder
    qsRanking?: SortOrder
    timesRanking?: SortOrder
    acceptanceRate?: SortOrder
    gmatAverageScore?: SortOrder
    gmatScoreMin?: SortOrder
    gmatScoreMax?: SortOrder
    minimumGpa?: SortOrder
    languageTestRequirements?: SortOrder
    tuitionFees?: SortOrder
    additionalFees?: SortOrder
    totalCost?: SortOrder
    currency?: SortOrder
    scholarshipInfo?: SortOrder
    financialAidDetails?: SortOrder
    admissionsOfficeContact?: SortOrder
    internationalOfficeContact?: SortOrder
    generalInquiriesContact?: SortOrder
    websiteUrl?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metaKeywords?: SortOrder
    canonicalUrl?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    averageDeadlines?: SortOrder
    studentsPerYear?: SortOrder
    brochureUrl?: SortOrder
    averageProgramLengthMonths?: SortOrder
    intakes?: SortOrder
  }

  export type UniversityMinOrderByAggregateInput = {
    id?: SortOrder
    universityName?: SortOrder
    slug?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    fullAddress?: SortOrder
    shortDescription?: SortOrder
    overview?: SortOrder
    history?: SortOrder
    missionStatement?: SortOrder
    visionStatement?: SortOrder
    accreditationDetails?: SortOrder
    careerOutcomes?: SortOrder
    ftGlobalRanking?: SortOrder
    ftRegionalRanking?: SortOrder
    ftRankingYear?: SortOrder
    usNewsRanking?: SortOrder
    qsRanking?: SortOrder
    timesRanking?: SortOrder
    acceptanceRate?: SortOrder
    gmatAverageScore?: SortOrder
    gmatScoreMin?: SortOrder
    gmatScoreMax?: SortOrder
    minimumGpa?: SortOrder
    languageTestRequirements?: SortOrder
    tuitionFees?: SortOrder
    additionalFees?: SortOrder
    totalCost?: SortOrder
    currency?: SortOrder
    scholarshipInfo?: SortOrder
    financialAidDetails?: SortOrder
    admissionsOfficeContact?: SortOrder
    internationalOfficeContact?: SortOrder
    generalInquiriesContact?: SortOrder
    websiteUrl?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metaKeywords?: SortOrder
    canonicalUrl?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    averageDeadlines?: SortOrder
    studentsPerYear?: SortOrder
    brochureUrl?: SortOrder
    averageProgramLengthMonths?: SortOrder
    intakes?: SortOrder
  }

  export type UniversitySumOrderByAggregateInput = {
    ftGlobalRanking?: SortOrder
    ftRegionalRanking?: SortOrder
    ftRankingYear?: SortOrder
    usNewsRanking?: SortOrder
    qsRanking?: SortOrder
    timesRanking?: SortOrder
    acceptanceRate?: SortOrder
    gmatAverageScore?: SortOrder
    gmatScoreMin?: SortOrder
    gmatScoreMax?: SortOrder
    minimumGpa?: SortOrder
    tuitionFees?: SortOrder
    additionalFees?: SortOrder
    totalCost?: SortOrder
    studentsPerYear?: SortOrder
    averageProgramLengthMonths?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type UniversityScalarRelationFilter = {
    is?: UniversityWhereInput
    isNot?: UniversityWhereInput
  }

  export type UniversityImageCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    imageUrl?: SortOrder
    imageType?: SortOrder
    imageTitle?: SortOrder
    imageAltText?: SortOrder
    imageCaption?: SortOrder
    fileSize?: SortOrder
    width?: SortOrder
    height?: SortOrder
    isPrimary?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type UniversityImageAvgOrderByAggregateInput = {
    fileSize?: SortOrder
    width?: SortOrder
    height?: SortOrder
    displayOrder?: SortOrder
  }

  export type UniversityImageMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    imageUrl?: SortOrder
    imageType?: SortOrder
    imageTitle?: SortOrder
    imageAltText?: SortOrder
    imageCaption?: SortOrder
    fileSize?: SortOrder
    width?: SortOrder
    height?: SortOrder
    isPrimary?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type UniversityImageMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    imageUrl?: SortOrder
    imageType?: SortOrder
    imageTitle?: SortOrder
    imageAltText?: SortOrder
    imageCaption?: SortOrder
    fileSize?: SortOrder
    width?: SortOrder
    height?: SortOrder
    isPrimary?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type UniversityImageSumOrderByAggregateInput = {
    fileSize?: SortOrder
    width?: SortOrder
    height?: SortOrder
    displayOrder?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type ProgramScalarRelationFilter = {
    is?: ProgramWhereInput
    isNot?: ProgramWhereInput
  }

  export type DepartmentScalarRelationFilter = {
    is?: DepartmentWhereInput
    isNot?: DepartmentWhereInput
  }

  export type ProgramDepartmentProgramIdDepartmentIdCompoundUniqueInput = {
    programId: string
    departmentId: string
  }

  export type ProgramDepartmentCountOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    departmentId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProgramDepartmentMaxOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    departmentId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProgramDepartmentMinOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    departmentId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProgramDepartmentListRelationFilter = {
    every?: ProgramDepartmentWhereInput
    some?: ProgramDepartmentWhereInput
    none?: ProgramDepartmentWhereInput
  }

  export type ProgramDepartmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepartmentUniversityIdSlugCompoundUniqueInput = {
    universityId: string
    slug: string
  }

  export type DepartmentCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartmentMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DepartmentMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SyllabusNullableScalarRelationFilter = {
    is?: SyllabusWhereInput | null
    isNot?: SyllabusWhereInput | null
  }

  export type ProgramRankingListRelationFilter = {
    every?: ProgramRankingWhereInput
    some?: ProgramRankingWhereInput
    none?: ProgramRankingWhereInput
  }

  export type ExternalLinkListRelationFilter = {
    every?: ExternalLinkWhereInput
    some?: ExternalLinkWhereInput
    none?: ExternalLinkWhereInput
  }

  export type EssayPromptListRelationFilter = {
    every?: EssayPromptWhereInput
    some?: EssayPromptWhereInput
    none?: EssayPromptWhereInput
  }

  export type ProgramRankingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ExternalLinkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EssayPromptOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProgramCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programName?: SortOrder
    programSlug?: SortOrder
    degreeType?: SortOrder
    programLength?: SortOrder
    specializations?: SortOrder
    programDescription?: SortOrder
    curriculumOverview?: SortOrder
    admissionRequirements?: SortOrder
    averageEntranceScore?: SortOrder
    programTuitionFees?: SortOrder
    programAdditionalFees?: SortOrder
    programMetaTitle?: SortOrder
    programMetaDescription?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProgramAvgOrderByAggregateInput = {
    programLength?: SortOrder
    averageEntranceScore?: SortOrder
    programTuitionFees?: SortOrder
    programAdditionalFees?: SortOrder
  }

  export type ProgramMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programName?: SortOrder
    programSlug?: SortOrder
    degreeType?: SortOrder
    programLength?: SortOrder
    specializations?: SortOrder
    programDescription?: SortOrder
    curriculumOverview?: SortOrder
    admissionRequirements?: SortOrder
    averageEntranceScore?: SortOrder
    programTuitionFees?: SortOrder
    programAdditionalFees?: SortOrder
    programMetaTitle?: SortOrder
    programMetaDescription?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProgramMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programName?: SortOrder
    programSlug?: SortOrder
    degreeType?: SortOrder
    programLength?: SortOrder
    specializations?: SortOrder
    programDescription?: SortOrder
    curriculumOverview?: SortOrder
    admissionRequirements?: SortOrder
    averageEntranceScore?: SortOrder
    programTuitionFees?: SortOrder
    programAdditionalFees?: SortOrder
    programMetaTitle?: SortOrder
    programMetaDescription?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProgramSumOrderByAggregateInput = {
    programLength?: SortOrder
    averageEntranceScore?: SortOrder
    programTuitionFees?: SortOrder
    programAdditionalFees?: SortOrder
  }

  export type SyllabusCountOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
  }

  export type SyllabusMaxOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
  }

  export type SyllabusMinOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
  }

  export type ProgramRankingProgramIdYearCompoundUniqueInput = {
    programId: string
    year: number
  }

  export type ProgramRankingCountOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    year?: SortOrder
    rank?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
  }

  export type ProgramRankingAvgOrderByAggregateInput = {
    year?: SortOrder
    rank?: SortOrder
  }

  export type ProgramRankingMaxOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    year?: SortOrder
    rank?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
  }

  export type ProgramRankingMinOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    year?: SortOrder
    rank?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
  }

  export type ProgramRankingSumOrderByAggregateInput = {
    year?: SortOrder
    rank?: SortOrder
  }

  export type ExternalLinkCountOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    title?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
  }

  export type ExternalLinkMaxOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    title?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
  }

  export type ExternalLinkMinOrderByAggregateInput = {
    id?: SortOrder
    programId?: SortOrder
    title?: SortOrder
    url?: SortOrder
    createdAt?: SortOrder
  }

  export type IntakeListRelationFilter = {
    every?: IntakeWhereInput
    some?: IntakeWhereInput
    none?: IntakeWhereInput
  }

  export type AdmissionDeadlineListRelationFilter = {
    every?: AdmissionDeadlineWhereInput
    some?: AdmissionDeadlineWhereInput
    none?: AdmissionDeadlineWhereInput
  }

  export type IntakeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdmissionDeadlineOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AdmissionUniversityIdProgramIdCompoundUniqueInput = {
    universityId: string
    programId: string
  }

  export type AdmissionCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    minimumGpa?: SortOrder
    maximumGpa?: SortOrder
    gmatMinScore?: SortOrder
    gmatMaxScore?: SortOrder
    gmatAverageScore?: SortOrder
    greMinScore?: SortOrder
    greMaxScore?: SortOrder
    greAverageScore?: SortOrder
    ieltsMinScore?: SortOrder
    toeflMinScore?: SortOrder
    pteMinScore?: SortOrder
    duolingoMinScore?: SortOrder
    languageExemptions?: SortOrder
    workExperienceRequired?: SortOrder
    minWorkExperience?: SortOrder
    maxWorkExperience?: SortOrder
    preferredIndustries?: SortOrder
    applicationFee?: SortOrder
    currency?: SortOrder
    documentsRequired?: SortOrder
    additionalRequirements?: SortOrder
    acceptanceRate?: SortOrder
    totalApplications?: SortOrder
    totalAccepted?: SortOrder
    statisticsYear?: SortOrder
    isActive?: SortOrder
    admissionStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdmissionAvgOrderByAggregateInput = {
    minimumGpa?: SortOrder
    maximumGpa?: SortOrder
    gmatMinScore?: SortOrder
    gmatMaxScore?: SortOrder
    gmatAverageScore?: SortOrder
    greMinScore?: SortOrder
    greMaxScore?: SortOrder
    greAverageScore?: SortOrder
    ieltsMinScore?: SortOrder
    toeflMinScore?: SortOrder
    pteMinScore?: SortOrder
    duolingoMinScore?: SortOrder
    minWorkExperience?: SortOrder
    maxWorkExperience?: SortOrder
    applicationFee?: SortOrder
    acceptanceRate?: SortOrder
    totalApplications?: SortOrder
    totalAccepted?: SortOrder
    statisticsYear?: SortOrder
  }

  export type AdmissionMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    minimumGpa?: SortOrder
    maximumGpa?: SortOrder
    gmatMinScore?: SortOrder
    gmatMaxScore?: SortOrder
    gmatAverageScore?: SortOrder
    greMinScore?: SortOrder
    greMaxScore?: SortOrder
    greAverageScore?: SortOrder
    ieltsMinScore?: SortOrder
    toeflMinScore?: SortOrder
    pteMinScore?: SortOrder
    duolingoMinScore?: SortOrder
    languageExemptions?: SortOrder
    workExperienceRequired?: SortOrder
    minWorkExperience?: SortOrder
    maxWorkExperience?: SortOrder
    preferredIndustries?: SortOrder
    applicationFee?: SortOrder
    currency?: SortOrder
    documentsRequired?: SortOrder
    additionalRequirements?: SortOrder
    acceptanceRate?: SortOrder
    totalApplications?: SortOrder
    totalAccepted?: SortOrder
    statisticsYear?: SortOrder
    isActive?: SortOrder
    admissionStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdmissionMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    minimumGpa?: SortOrder
    maximumGpa?: SortOrder
    gmatMinScore?: SortOrder
    gmatMaxScore?: SortOrder
    gmatAverageScore?: SortOrder
    greMinScore?: SortOrder
    greMaxScore?: SortOrder
    greAverageScore?: SortOrder
    ieltsMinScore?: SortOrder
    toeflMinScore?: SortOrder
    pteMinScore?: SortOrder
    duolingoMinScore?: SortOrder
    languageExemptions?: SortOrder
    workExperienceRequired?: SortOrder
    minWorkExperience?: SortOrder
    maxWorkExperience?: SortOrder
    preferredIndustries?: SortOrder
    applicationFee?: SortOrder
    currency?: SortOrder
    documentsRequired?: SortOrder
    additionalRequirements?: SortOrder
    acceptanceRate?: SortOrder
    totalApplications?: SortOrder
    totalAccepted?: SortOrder
    statisticsYear?: SortOrder
    isActive?: SortOrder
    admissionStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdmissionSumOrderByAggregateInput = {
    minimumGpa?: SortOrder
    maximumGpa?: SortOrder
    gmatMinScore?: SortOrder
    gmatMaxScore?: SortOrder
    gmatAverageScore?: SortOrder
    greMinScore?: SortOrder
    greMaxScore?: SortOrder
    greAverageScore?: SortOrder
    ieltsMinScore?: SortOrder
    toeflMinScore?: SortOrder
    pteMinScore?: SortOrder
    duolingoMinScore?: SortOrder
    minWorkExperience?: SortOrder
    maxWorkExperience?: SortOrder
    applicationFee?: SortOrder
    acceptanceRate?: SortOrder
    totalApplications?: SortOrder
    totalAccepted?: SortOrder
    statisticsYear?: SortOrder
  }

  export type AdmissionScalarRelationFilter = {
    is?: AdmissionWhereInput
    isNot?: AdmissionWhereInput
  }

  export type IntakeAdmissionIdIntakeTypeIntakeYearCompoundUniqueInput = {
    admissionId: string
    intakeType: string
    intakeYear: number
  }

  export type IntakeCountOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeName?: SortOrder
    intakeType?: SortOrder
    intakeYear?: SortOrder
    intakeMonth?: SortOrder
    totalSeats?: SortOrder
    availableSeats?: SortOrder
    internationalSeats?: SortOrder
    domesticSeats?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    isActive?: SortOrder
    intakeStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntakeAvgOrderByAggregateInput = {
    intakeYear?: SortOrder
    intakeMonth?: SortOrder
    totalSeats?: SortOrder
    availableSeats?: SortOrder
    internationalSeats?: SortOrder
    domesticSeats?: SortOrder
  }

  export type IntakeMaxOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeName?: SortOrder
    intakeType?: SortOrder
    intakeYear?: SortOrder
    intakeMonth?: SortOrder
    totalSeats?: SortOrder
    availableSeats?: SortOrder
    internationalSeats?: SortOrder
    domesticSeats?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    isActive?: SortOrder
    intakeStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntakeMinOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeName?: SortOrder
    intakeType?: SortOrder
    intakeYear?: SortOrder
    intakeMonth?: SortOrder
    totalSeats?: SortOrder
    availableSeats?: SortOrder
    internationalSeats?: SortOrder
    domesticSeats?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    isActive?: SortOrder
    intakeStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntakeSumOrderByAggregateInput = {
    intakeYear?: SortOrder
    intakeMonth?: SortOrder
    totalSeats?: SortOrder
    availableSeats?: SortOrder
    internationalSeats?: SortOrder
    domesticSeats?: SortOrder
  }

  export type IntakeNullableScalarRelationFilter = {
    is?: IntakeWhereInput | null
    isNot?: IntakeWhereInput | null
  }

  export type AdmissionDeadlineCountOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrder
    deadlineType?: SortOrder
    deadlineDate?: SortOrder
    deadlineTime?: SortOrder
    timezone?: SortOrder
    title?: SortOrder
    description?: SortOrder
    isExtended?: SortOrder
    originalDeadline?: SortOrder
    priority?: SortOrder
    isActive?: SortOrder
    reminderSent?: SortOrder
    reminderDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdmissionDeadlineMaxOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrder
    deadlineType?: SortOrder
    deadlineDate?: SortOrder
    deadlineTime?: SortOrder
    timezone?: SortOrder
    title?: SortOrder
    description?: SortOrder
    isExtended?: SortOrder
    originalDeadline?: SortOrder
    priority?: SortOrder
    isActive?: SortOrder
    reminderSent?: SortOrder
    reminderDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdmissionDeadlineMinOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrder
    deadlineType?: SortOrder
    deadlineDate?: SortOrder
    deadlineTime?: SortOrder
    timezone?: SortOrder
    title?: SortOrder
    description?: SortOrder
    isExtended?: SortOrder
    originalDeadline?: SortOrder
    priority?: SortOrder
    isActive?: SortOrder
    reminderSent?: SortOrder
    reminderDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type ApplicationDocumentListRelationFilter = {
    every?: ApplicationDocumentWhereInput
    some?: ApplicationDocumentWhereInput
    none?: ApplicationDocumentWhereInput
  }

  export type ApplicationProgressListRelationFilter = {
    every?: ApplicationProgressWhereInput
    some?: ApplicationProgressWhereInput
    none?: ApplicationProgressWhereInput
  }

  export type InterviewListRelationFilter = {
    every?: InterviewWhereInput
    some?: InterviewWhereInput
    none?: InterviewWhereInput
  }

  export type ApplicationDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ApplicationProgressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InterviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrder
    userId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    nationality?: SortOrder
    currentGpa?: SortOrder
    gmatScore?: SortOrder
    greScore?: SortOrder
    ieltsScore?: SortOrder
    toeflScore?: SortOrder
    pteScore?: SortOrder
    duolingoScore?: SortOrder
    workExperienceMonths?: SortOrder
    workExperienceDetails?: SortOrder
    applicationStatus?: SortOrder
    currentStage?: SortOrder
    stageUpdatedAt?: SortOrder
    completionPercentage?: SortOrder
    nextDeadlineId?: SortOrder
    completedDeadlines?: SortOrder
    missedDeadlines?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    lastActivityAt?: SortOrder
    applicationFeesPaid?: SortOrder
    applicationFeesAmount?: SortOrder
    documentsUploaded?: SortOrder
    documentsVerified?: SortOrder
    lastContactDate?: SortOrder
    contactNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationAvgOrderByAggregateInput = {
    currentGpa?: SortOrder
    gmatScore?: SortOrder
    greScore?: SortOrder
    ieltsScore?: SortOrder
    toeflScore?: SortOrder
    pteScore?: SortOrder
    duolingoScore?: SortOrder
    workExperienceMonths?: SortOrder
    completionPercentage?: SortOrder
    applicationFeesAmount?: SortOrder
  }

  export type ApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrder
    userId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    nationality?: SortOrder
    currentGpa?: SortOrder
    gmatScore?: SortOrder
    greScore?: SortOrder
    ieltsScore?: SortOrder
    toeflScore?: SortOrder
    pteScore?: SortOrder
    duolingoScore?: SortOrder
    workExperienceMonths?: SortOrder
    workExperienceDetails?: SortOrder
    applicationStatus?: SortOrder
    currentStage?: SortOrder
    stageUpdatedAt?: SortOrder
    completionPercentage?: SortOrder
    nextDeadlineId?: SortOrder
    completedDeadlines?: SortOrder
    missedDeadlines?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    lastActivityAt?: SortOrder
    applicationFeesPaid?: SortOrder
    applicationFeesAmount?: SortOrder
    documentsUploaded?: SortOrder
    documentsVerified?: SortOrder
    lastContactDate?: SortOrder
    contactNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrder
    userId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    nationality?: SortOrder
    currentGpa?: SortOrder
    gmatScore?: SortOrder
    greScore?: SortOrder
    ieltsScore?: SortOrder
    toeflScore?: SortOrder
    pteScore?: SortOrder
    duolingoScore?: SortOrder
    workExperienceMonths?: SortOrder
    workExperienceDetails?: SortOrder
    applicationStatus?: SortOrder
    currentStage?: SortOrder
    stageUpdatedAt?: SortOrder
    completionPercentage?: SortOrder
    nextDeadlineId?: SortOrder
    completedDeadlines?: SortOrder
    missedDeadlines?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    lastActivityAt?: SortOrder
    applicationFeesPaid?: SortOrder
    applicationFeesAmount?: SortOrder
    documentsUploaded?: SortOrder
    documentsVerified?: SortOrder
    lastContactDate?: SortOrder
    contactNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationSumOrderByAggregateInput = {
    currentGpa?: SortOrder
    gmatScore?: SortOrder
    greScore?: SortOrder
    ieltsScore?: SortOrder
    toeflScore?: SortOrder
    pteScore?: SortOrder
    duolingoScore?: SortOrder
    workExperienceMonths?: SortOrder
    completionPercentage?: SortOrder
    applicationFeesAmount?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type ApplicationScalarRelationFilter = {
    is?: ApplicationWhereInput
    isNot?: ApplicationWhereInput
  }

  export type ApplicationProgressApplicationIdStageNameCompoundUniqueInput = {
    applicationId: string
    stageName: string
  }

  export type ApplicationProgressCountOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    stageName?: SortOrder
    stageStatus?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    notes?: SortOrder
    completedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationProgressMaxOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    stageName?: SortOrder
    stageStatus?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    notes?: SortOrder
    completedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationProgressMinOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    stageName?: SortOrder
    stageStatus?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    notes?: SortOrder
    completedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    documentType?: SortOrder
    documentCategory?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRequired?: SortOrder
    submissionDeadline?: SortOrder
    reminderSent?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    documentStatus?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationDocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type ApplicationDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    documentType?: SortOrder
    documentCategory?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRequired?: SortOrder
    submissionDeadline?: SortOrder
    reminderSent?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    documentStatus?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    documentType?: SortOrder
    documentCategory?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRequired?: SortOrder
    submissionDeadline?: SortOrder
    reminderSent?: SortOrder
    isVerified?: SortOrder
    verifiedBy?: SortOrder
    verifiedAt?: SortOrder
    verificationNotes?: SortOrder
    documentStatus?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ApplicationDocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type InterviewCountOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    interviewType?: SortOrder
    scheduledDate?: SortOrder
    scheduledTime?: SortOrder
    timezone?: SortOrder
    duration?: SortOrder
    interviewerName?: SortOrder
    interviewerEmail?: SortOrder
    meetingLink?: SortOrder
    meetingPassword?: SortOrder
    location?: SortOrder
    interviewStatus?: SortOrder
    interviewScore?: SortOrder
    interviewFeedback?: SortOrder
    reminderSent?: SortOrder
    confirmationReceived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InterviewAvgOrderByAggregateInput = {
    duration?: SortOrder
    interviewScore?: SortOrder
  }

  export type InterviewMaxOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    interviewType?: SortOrder
    scheduledDate?: SortOrder
    scheduledTime?: SortOrder
    timezone?: SortOrder
    duration?: SortOrder
    interviewerName?: SortOrder
    interviewerEmail?: SortOrder
    meetingLink?: SortOrder
    meetingPassword?: SortOrder
    location?: SortOrder
    interviewStatus?: SortOrder
    interviewScore?: SortOrder
    interviewFeedback?: SortOrder
    reminderSent?: SortOrder
    confirmationReceived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InterviewMinOrderByAggregateInput = {
    id?: SortOrder
    applicationId?: SortOrder
    interviewType?: SortOrder
    scheduledDate?: SortOrder
    scheduledTime?: SortOrder
    timezone?: SortOrder
    duration?: SortOrder
    interviewerName?: SortOrder
    interviewerEmail?: SortOrder
    meetingLink?: SortOrder
    meetingPassword?: SortOrder
    location?: SortOrder
    interviewStatus?: SortOrder
    interviewScore?: SortOrder
    interviewFeedback?: SortOrder
    reminderSent?: SortOrder
    confirmationReceived?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InterviewSumOrderByAggregateInput = {
    duration?: SortOrder
    interviewScore?: SortOrder
  }

  export type ProgramNullableScalarRelationFilter = {
    is?: ProgramWhereInput | null
    isNot?: ProgramWhereInput | null
  }

  export type PaymentScheduleListRelationFilter = {
    every?: PaymentScheduleWhereInput
    some?: PaymentScheduleWhereInput
    none?: PaymentScheduleWhereInput
  }

  export type PaymentScheduleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TuitionBreakdownUniversityIdProgramIdAcademicYearYearNumberCompoundUniqueInput = {
    universityId: string
    programId: string
    academicYear: string
    yearNumber: number
  }

  export type TuitionBreakdownCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    academicYear?: SortOrder
    yearNumber?: SortOrder
    baseTuition?: SortOrder
    labFees?: SortOrder
    libraryFees?: SortOrder
    technologyFees?: SortOrder
    activityFees?: SortOrder
    healthInsurance?: SortOrder
    dormitoryFees?: SortOrder
    mealPlanFees?: SortOrder
    applicationFee?: SortOrder
    registrationFee?: SortOrder
    examFees?: SortOrder
    graduationFee?: SortOrder
    totalTuition?: SortOrder
    totalAdditionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrder
    installmentCount?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TuitionBreakdownAvgOrderByAggregateInput = {
    yearNumber?: SortOrder
    baseTuition?: SortOrder
    labFees?: SortOrder
    libraryFees?: SortOrder
    technologyFees?: SortOrder
    activityFees?: SortOrder
    healthInsurance?: SortOrder
    dormitoryFees?: SortOrder
    mealPlanFees?: SortOrder
    applicationFee?: SortOrder
    registrationFee?: SortOrder
    examFees?: SortOrder
    graduationFee?: SortOrder
    totalTuition?: SortOrder
    totalAdditionalFees?: SortOrder
    grandTotal?: SortOrder
    installmentCount?: SortOrder
  }

  export type TuitionBreakdownMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    academicYear?: SortOrder
    yearNumber?: SortOrder
    baseTuition?: SortOrder
    labFees?: SortOrder
    libraryFees?: SortOrder
    technologyFees?: SortOrder
    activityFees?: SortOrder
    healthInsurance?: SortOrder
    dormitoryFees?: SortOrder
    mealPlanFees?: SortOrder
    applicationFee?: SortOrder
    registrationFee?: SortOrder
    examFees?: SortOrder
    graduationFee?: SortOrder
    totalTuition?: SortOrder
    totalAdditionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrder
    installmentCount?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TuitionBreakdownMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    academicYear?: SortOrder
    yearNumber?: SortOrder
    baseTuition?: SortOrder
    labFees?: SortOrder
    libraryFees?: SortOrder
    technologyFees?: SortOrder
    activityFees?: SortOrder
    healthInsurance?: SortOrder
    dormitoryFees?: SortOrder
    mealPlanFees?: SortOrder
    applicationFee?: SortOrder
    registrationFee?: SortOrder
    examFees?: SortOrder
    graduationFee?: SortOrder
    totalTuition?: SortOrder
    totalAdditionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrder
    installmentCount?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TuitionBreakdownSumOrderByAggregateInput = {
    yearNumber?: SortOrder
    baseTuition?: SortOrder
    labFees?: SortOrder
    libraryFees?: SortOrder
    technologyFees?: SortOrder
    activityFees?: SortOrder
    healthInsurance?: SortOrder
    dormitoryFees?: SortOrder
    mealPlanFees?: SortOrder
    applicationFee?: SortOrder
    registrationFee?: SortOrder
    examFees?: SortOrder
    graduationFee?: SortOrder
    totalTuition?: SortOrder
    totalAdditionalFees?: SortOrder
    grandTotal?: SortOrder
    installmentCount?: SortOrder
  }

  export type TuitionBreakdownScalarRelationFilter = {
    is?: TuitionBreakdownWhereInput
    isNot?: TuitionBreakdownWhereInput
  }

  export type PaymentScheduleCountOrderByAggregateInput = {
    id?: SortOrder
    tuitionBreakdownId?: SortOrder
    installmentNumber?: SortOrder
    dueDate?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    lateFee?: SortOrder
    gracePeroidDays?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentScheduleAvgOrderByAggregateInput = {
    installmentNumber?: SortOrder
    amount?: SortOrder
    lateFee?: SortOrder
    gracePeroidDays?: SortOrder
  }

  export type PaymentScheduleMaxOrderByAggregateInput = {
    id?: SortOrder
    tuitionBreakdownId?: SortOrder
    installmentNumber?: SortOrder
    dueDate?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    lateFee?: SortOrder
    gracePeroidDays?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentScheduleMinOrderByAggregateInput = {
    id?: SortOrder
    tuitionBreakdownId?: SortOrder
    installmentNumber?: SortOrder
    dueDate?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    lateFee?: SortOrder
    gracePeroidDays?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentScheduleSumOrderByAggregateInput = {
    installmentNumber?: SortOrder
    amount?: SortOrder
    lateFee?: SortOrder
    gracePeroidDays?: SortOrder
  }

  export type ScholarshipDocumentListRelationFilter = {
    every?: ScholarshipDocumentWhereInput
    some?: ScholarshipDocumentWhereInput
    none?: ScholarshipDocumentWhereInput
  }

  export type ScholarshipDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ScholarshipUniversityIdScholarshipSlugCompoundUniqueInput = {
    universityId: string
    scholarshipSlug: string
  }

  export type ScholarshipCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    scholarshipName?: SortOrder
    scholarshipSlug?: SortOrder
    scholarshipType?: SortOrder
    description?: SortOrder
    eligibilityCriteria?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    currency?: SortOrder
    coverageTuition?: SortOrder
    coverageFees?: SortOrder
    coverageLiving?: SortOrder
    coverageBooks?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrder
    documentsRequired?: SortOrder
    totalAvailable?: SortOrder
    currentlyAwarded?: SortOrder
    minimumGpa?: SortOrder
    minimumTestScore?: SortOrder
    testType?: SortOrder
    citizenshipRequired?: SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    awardDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipAvgOrderByAggregateInput = {
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    totalAvailable?: SortOrder
    currentlyAwarded?: SortOrder
    minimumGpa?: SortOrder
    minimumTestScore?: SortOrder
  }

  export type ScholarshipMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    scholarshipName?: SortOrder
    scholarshipSlug?: SortOrder
    scholarshipType?: SortOrder
    description?: SortOrder
    eligibilityCriteria?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    currency?: SortOrder
    coverageTuition?: SortOrder
    coverageFees?: SortOrder
    coverageLiving?: SortOrder
    coverageBooks?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrder
    documentsRequired?: SortOrder
    totalAvailable?: SortOrder
    currentlyAwarded?: SortOrder
    minimumGpa?: SortOrder
    minimumTestScore?: SortOrder
    testType?: SortOrder
    citizenshipRequired?: SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    awardDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    scholarshipName?: SortOrder
    scholarshipSlug?: SortOrder
    scholarshipType?: SortOrder
    description?: SortOrder
    eligibilityCriteria?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    currency?: SortOrder
    coverageTuition?: SortOrder
    coverageFees?: SortOrder
    coverageLiving?: SortOrder
    coverageBooks?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrder
    documentsRequired?: SortOrder
    totalAvailable?: SortOrder
    currentlyAwarded?: SortOrder
    minimumGpa?: SortOrder
    minimumTestScore?: SortOrder
    testType?: SortOrder
    citizenshipRequired?: SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    awardDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipSumOrderByAggregateInput = {
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    totalAvailable?: SortOrder
    currentlyAwarded?: SortOrder
    minimumGpa?: SortOrder
    minimumTestScore?: SortOrder
  }

  export type ScholarshipScalarRelationFilter = {
    is?: ScholarshipWhereInput
    isNot?: ScholarshipWhereInput
  }

  export type ScholarshipDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    isPublic?: SortOrder
    downloadCount?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipDocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
    displayOrder?: SortOrder
    downloadCount?: SortOrder
  }

  export type ScholarshipDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    isPublic?: SortOrder
    downloadCount?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    documentType?: SortOrder
    documentTitle?: SortOrder
    fileName?: SortOrder
    fileUrl?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    isPublic?: SortOrder
    downloadCount?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipDocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
    displayOrder?: SortOrder
    downloadCount?: SortOrder
  }

  export type ApplicationNullableScalarRelationFilter = {
    is?: ApplicationWhereInput | null
    isNot?: ApplicationWhereInput | null
  }

  export type ScholarshipApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    currentGpa?: SortOrder
    testScore?: SortOrder
    testType?: SortOrder
    familyIncome?: SortOrder
    financialNeed?: SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    awardAmount?: SortOrder
    documentsUploaded?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipApplicationAvgOrderByAggregateInput = {
    currentGpa?: SortOrder
    testScore?: SortOrder
    familyIncome?: SortOrder
    awardAmount?: SortOrder
  }

  export type ScholarshipApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    currentGpa?: SortOrder
    testScore?: SortOrder
    testType?: SortOrder
    familyIncome?: SortOrder
    financialNeed?: SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    awardAmount?: SortOrder
    documentsUploaded?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    scholarshipId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    currentGpa?: SortOrder
    testScore?: SortOrder
    testType?: SortOrder
    familyIncome?: SortOrder
    financialNeed?: SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    awardAmount?: SortOrder
    documentsUploaded?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ScholarshipApplicationSumOrderByAggregateInput = {
    currentGpa?: SortOrder
    testScore?: SortOrder
    familyIncome?: SortOrder
    awardAmount?: SortOrder
  }

  export type FeeStructureUniversityIdProgramIdStructureTypeAcademicYearCompoundUniqueInput = {
    universityId: string
    programId: string
    structureType: string
    academicYear: string
  }

  export type FeeStructureCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    structureName?: SortOrder
    structureType?: SortOrder
    academicYear?: SortOrder
    tuitionFee?: SortOrder
    admissionFee?: SortOrder
    registrationFee?: SortOrder
    examFee?: SortOrder
    libraryFee?: SortOrder
    labFee?: SortOrder
    hostelFee?: SortOrder
    messFee?: SortOrder
    transportFee?: SortOrder
    sportsFee?: SortOrder
    medicalFee?: SortOrder
    healthInsurance?: SortOrder
    accidentInsurance?: SortOrder
    studentActivityFee?: SortOrder
    technologyFee?: SortOrder
    securityDeposit?: SortOrder
    cautionMoney?: SortOrder
    isDepositRefundable?: SortOrder
    totalMandatoryFees?: SortOrder
    totalOptionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrder
    installmentCount?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FeeStructureAvgOrderByAggregateInput = {
    tuitionFee?: SortOrder
    admissionFee?: SortOrder
    registrationFee?: SortOrder
    examFee?: SortOrder
    libraryFee?: SortOrder
    labFee?: SortOrder
    hostelFee?: SortOrder
    messFee?: SortOrder
    transportFee?: SortOrder
    sportsFee?: SortOrder
    medicalFee?: SortOrder
    healthInsurance?: SortOrder
    accidentInsurance?: SortOrder
    studentActivityFee?: SortOrder
    technologyFee?: SortOrder
    securityDeposit?: SortOrder
    cautionMoney?: SortOrder
    totalMandatoryFees?: SortOrder
    totalOptionalFees?: SortOrder
    grandTotal?: SortOrder
    installmentCount?: SortOrder
  }

  export type FeeStructureMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    structureName?: SortOrder
    structureType?: SortOrder
    academicYear?: SortOrder
    tuitionFee?: SortOrder
    admissionFee?: SortOrder
    registrationFee?: SortOrder
    examFee?: SortOrder
    libraryFee?: SortOrder
    labFee?: SortOrder
    hostelFee?: SortOrder
    messFee?: SortOrder
    transportFee?: SortOrder
    sportsFee?: SortOrder
    medicalFee?: SortOrder
    healthInsurance?: SortOrder
    accidentInsurance?: SortOrder
    studentActivityFee?: SortOrder
    technologyFee?: SortOrder
    securityDeposit?: SortOrder
    cautionMoney?: SortOrder
    isDepositRefundable?: SortOrder
    totalMandatoryFees?: SortOrder
    totalOptionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrder
    installmentCount?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FeeStructureMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    structureName?: SortOrder
    structureType?: SortOrder
    academicYear?: SortOrder
    tuitionFee?: SortOrder
    admissionFee?: SortOrder
    registrationFee?: SortOrder
    examFee?: SortOrder
    libraryFee?: SortOrder
    labFee?: SortOrder
    hostelFee?: SortOrder
    messFee?: SortOrder
    transportFee?: SortOrder
    sportsFee?: SortOrder
    medicalFee?: SortOrder
    healthInsurance?: SortOrder
    accidentInsurance?: SortOrder
    studentActivityFee?: SortOrder
    technologyFee?: SortOrder
    securityDeposit?: SortOrder
    cautionMoney?: SortOrder
    isDepositRefundable?: SortOrder
    totalMandatoryFees?: SortOrder
    totalOptionalFees?: SortOrder
    grandTotal?: SortOrder
    currency?: SortOrder
    currencySymbol?: SortOrder
    paymentTerms?: SortOrder
    installmentCount?: SortOrder
    isActive?: SortOrder
    effectiveDate?: SortOrder
    expiryDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FeeStructureSumOrderByAggregateInput = {
    tuitionFee?: SortOrder
    admissionFee?: SortOrder
    registrationFee?: SortOrder
    examFee?: SortOrder
    libraryFee?: SortOrder
    labFee?: SortOrder
    hostelFee?: SortOrder
    messFee?: SortOrder
    transportFee?: SortOrder
    sportsFee?: SortOrder
    medicalFee?: SortOrder
    healthInsurance?: SortOrder
    accidentInsurance?: SortOrder
    studentActivityFee?: SortOrder
    technologyFee?: SortOrder
    securityDeposit?: SortOrder
    cautionMoney?: SortOrder
    totalMandatoryFees?: SortOrder
    totalOptionalFees?: SortOrder
    grandTotal?: SortOrder
    installmentCount?: SortOrder
  }

  export type FinancialAidCountOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    aidName?: SortOrder
    aidType?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    currency?: SortOrder
    interestRate?: SortOrder
    repaymentPeriod?: SortOrder
    gracePeriod?: SortOrder
    eligibilityCriteria?: SortOrder
    minimumGpa?: SortOrder
    maximumFamilyIncome?: SortOrder
    citizenshipRequired?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrder
    documentsRequired?: SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinancialAidAvgOrderByAggregateInput = {
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    interestRate?: SortOrder
    repaymentPeriod?: SortOrder
    gracePeriod?: SortOrder
    minimumGpa?: SortOrder
    maximumFamilyIncome?: SortOrder
  }

  export type FinancialAidMaxOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    aidName?: SortOrder
    aidType?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    currency?: SortOrder
    interestRate?: SortOrder
    repaymentPeriod?: SortOrder
    gracePeriod?: SortOrder
    eligibilityCriteria?: SortOrder
    minimumGpa?: SortOrder
    maximumFamilyIncome?: SortOrder
    citizenshipRequired?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrder
    documentsRequired?: SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinancialAidMinOrderByAggregateInput = {
    id?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    aidName?: SortOrder
    aidType?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    currency?: SortOrder
    interestRate?: SortOrder
    repaymentPeriod?: SortOrder
    gracePeriod?: SortOrder
    eligibilityCriteria?: SortOrder
    minimumGpa?: SortOrder
    maximumFamilyIncome?: SortOrder
    citizenshipRequired?: SortOrder
    applicationRequired?: SortOrder
    applicationDeadline?: SortOrder
    documentsRequired?: SortOrder
    isActive?: SortOrder
    applicationOpenDate?: SortOrder
    applicationCloseDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinancialAidSumOrderByAggregateInput = {
    amount?: SortOrder
    percentage?: SortOrder
    maxAmount?: SortOrder
    interestRate?: SortOrder
    repaymentPeriod?: SortOrder
    gracePeriod?: SortOrder
    minimumGpa?: SortOrder
    maximumFamilyIncome?: SortOrder
  }

  export type FinancialAidScalarRelationFilter = {
    is?: FinancialAidWhereInput
    isNot?: FinancialAidWhereInput
  }

  export type FinancialAidApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    financialAidId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    familyIncome?: SortOrder
    assets?: SortOrder
    liabilities?: SortOrder
    dependents?: SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    approvedAmount?: SortOrder
    documentsUploaded?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinancialAidApplicationAvgOrderByAggregateInput = {
    familyIncome?: SortOrder
    assets?: SortOrder
    liabilities?: SortOrder
    dependents?: SortOrder
    approvedAmount?: SortOrder
  }

  export type FinancialAidApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    financialAidId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    familyIncome?: SortOrder
    assets?: SortOrder
    liabilities?: SortOrder
    dependents?: SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    approvedAmount?: SortOrder
    documentsUploaded?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinancialAidApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    financialAidId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    familyIncome?: SortOrder
    assets?: SortOrder
    liabilities?: SortOrder
    dependents?: SortOrder
    applicationStatus?: SortOrder
    submissionDate?: SortOrder
    reviewDate?: SortOrder
    decisionDate?: SortOrder
    approvedAmount?: SortOrder
    documentsUploaded?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinancialAidApplicationSumOrderByAggregateInput = {
    familyIncome?: SortOrder
    assets?: SortOrder
    liabilities?: SortOrder
    dependents?: SortOrder
    approvedAmount?: SortOrder
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Admin_UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    status?: SortOrder
    is2FAEnabled?: SortOrder
    twoFactorSecret?: SortOrder
    phone?: SortOrder
    profileImageUrl?: SortOrder
    lastLogin?: SortOrder
    lastLoginIP?: SortOrder
    failedLoginAttempts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Admin_UserAvgOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type Admin_UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    status?: SortOrder
    is2FAEnabled?: SortOrder
    twoFactorSecret?: SortOrder
    phone?: SortOrder
    profileImageUrl?: SortOrder
    lastLogin?: SortOrder
    lastLoginIP?: SortOrder
    failedLoginAttempts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Admin_UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    passwordHash?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    status?: SortOrder
    is2FAEnabled?: SortOrder
    twoFactorSecret?: SortOrder
    phone?: SortOrder
    profileImageUrl?: SortOrder
    lastLogin?: SortOrder
    lastLoginIP?: SortOrder
    failedLoginAttempts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Admin_UserSumOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type Admin_UserScalarRelationFilter = {
    is?: Admin_UserWhereInput
    isNot?: Admin_UserWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type AdmissionNullableScalarRelationFilter = {
    is?: AdmissionWhereInput | null
    isNot?: AdmissionWhereInput | null
  }

  export type EssayPromptCountOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrder
    promptTitle?: SortOrder
    promptText?: SortOrder
    wordLimit?: SortOrder
    minWordCount?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EssayPromptAvgOrderByAggregateInput = {
    wordLimit?: SortOrder
    minWordCount?: SortOrder
  }

  export type EssayPromptMaxOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrder
    promptTitle?: SortOrder
    promptText?: SortOrder
    wordLimit?: SortOrder
    minWordCount?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EssayPromptMinOrderByAggregateInput = {
    id?: SortOrder
    admissionId?: SortOrder
    programId?: SortOrder
    intakeId?: SortOrder
    promptTitle?: SortOrder
    promptText?: SortOrder
    wordLimit?: SortOrder
    minWordCount?: SortOrder
    isMandatory?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EssayPromptSumOrderByAggregateInput = {
    wordLimit?: SortOrder
    minWordCount?: SortOrder
  }

  export type EssayPromptScalarRelationFilter = {
    is?: EssayPromptWhereInput
    isNot?: EssayPromptWhereInput
  }

  export type EssaySubmissionCountOrderByAggregateInput = {
    id?: SortOrder
    essayPromptId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    status?: SortOrder
    submissionDate?: SortOrder
    lastEditedAt?: SortOrder
    isUsingTemplate?: SortOrder
    templateVersion?: SortOrder
    reviewStatus?: SortOrder
    reviewerId?: SortOrder
    reviewerComment?: SortOrder
    internalRating?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EssaySubmissionAvgOrderByAggregateInput = {
    wordCount?: SortOrder
    internalRating?: SortOrder
  }

  export type EssaySubmissionMaxOrderByAggregateInput = {
    id?: SortOrder
    essayPromptId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    status?: SortOrder
    submissionDate?: SortOrder
    lastEditedAt?: SortOrder
    isUsingTemplate?: SortOrder
    templateVersion?: SortOrder
    reviewStatus?: SortOrder
    reviewerId?: SortOrder
    reviewerComment?: SortOrder
    internalRating?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EssaySubmissionMinOrderByAggregateInput = {
    id?: SortOrder
    essayPromptId?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    status?: SortOrder
    submissionDate?: SortOrder
    lastEditedAt?: SortOrder
    isUsingTemplate?: SortOrder
    templateVersion?: SortOrder
    reviewStatus?: SortOrder
    reviewerId?: SortOrder
    reviewerComment?: SortOrder
    internalRating?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EssaySubmissionSumOrderByAggregateInput = {
    wordCount?: SortOrder
    internalRating?: SortOrder
  }

  export type EssayVersionListRelationFilter = {
    every?: EssayVersionWhereInput
    some?: EssayVersionWhereInput
    none?: EssayVersionWhereInput
  }

  export type AIResultListRelationFilter = {
    every?: AIResultWhereInput
    some?: AIResultWhereInput
    none?: AIResultWhereInput
  }

  export type EssayVersionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AIResultOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EssayUserIdProgramIdEssayPromptIdCompoundUniqueInput = {
    userId: string
    programId: string
    essayPromptId: string
  }

  export type EssayCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    programId?: SortOrder
    essayPromptId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    wordLimit?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrder
    completionPercentage?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastAutoSaved?: SortOrder
    autoSaveEnabled?: SortOrder
  }

  export type EssayAvgOrderByAggregateInput = {
    wordCount?: SortOrder
    wordLimit?: SortOrder
    completionPercentage?: SortOrder
  }

  export type EssayMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    programId?: SortOrder
    essayPromptId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    wordLimit?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrder
    completionPercentage?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastAutoSaved?: SortOrder
    autoSaveEnabled?: SortOrder
  }

  export type EssayMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    applicationId?: SortOrder
    programId?: SortOrder
    essayPromptId?: SortOrder
    title?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    wordLimit?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    isCompleted?: SortOrder
    completedAt?: SortOrder
    completionPercentage?: SortOrder
    lastModified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastAutoSaved?: SortOrder
    autoSaveEnabled?: SortOrder
  }

  export type EssaySumOrderByAggregateInput = {
    wordCount?: SortOrder
    wordLimit?: SortOrder
    completionPercentage?: SortOrder
  }

  export type EssayScalarRelationFilter = {
    is?: EssayWhereInput
    isNot?: EssayWhereInput
  }

  export type EssayVersionCountOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    label?: SortOrder
    timestamp?: SortOrder
    isAutoSave?: SortOrder
    changesSinceLastVersion?: SortOrder
  }

  export type EssayVersionAvgOrderByAggregateInput = {
    wordCount?: SortOrder
  }

  export type EssayVersionMaxOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    label?: SortOrder
    timestamp?: SortOrder
    isAutoSave?: SortOrder
    changesSinceLastVersion?: SortOrder
  }

  export type EssayVersionMinOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    content?: SortOrder
    wordCount?: SortOrder
    label?: SortOrder
    timestamp?: SortOrder
    isAutoSave?: SortOrder
    changesSinceLastVersion?: SortOrder
  }

  export type EssayVersionSumOrderByAggregateInput = {
    wordCount?: SortOrder
  }

  export type EssayVersionNullableScalarRelationFilter = {
    is?: EssayVersionWhereInput | null
    isNot?: EssayVersionWhereInput | null
  }

  export type AIResultCountOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    essayVersionId?: SortOrder
    analysisType?: SortOrder
    overallScore?: SortOrder
    suggestions?: SortOrder
    strengths?: SortOrder
    improvements?: SortOrder
    warnings?: SortOrder
    aiProvider?: SortOrder
    modelUsed?: SortOrder
    promptVersion?: SortOrder
    status?: SortOrder
    processingTime?: SortOrder
    errorMessage?: SortOrder
    readabilityScore?: SortOrder
    sentenceCount?: SortOrder
    paragraphCount?: SortOrder
    avgSentenceLength?: SortOrder
    complexWordCount?: SortOrder
    passiveVoiceCount?: SortOrder
    structureScore?: SortOrder
    contentRelevance?: SortOrder
    narrativeFlow?: SortOrder
    leadershipEmphasis?: SortOrder
    specificityScore?: SortOrder
    grammarIssues?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIResultAvgOrderByAggregateInput = {
    overallScore?: SortOrder
    processingTime?: SortOrder
    readabilityScore?: SortOrder
    sentenceCount?: SortOrder
    paragraphCount?: SortOrder
    avgSentenceLength?: SortOrder
    complexWordCount?: SortOrder
    passiveVoiceCount?: SortOrder
    structureScore?: SortOrder
    contentRelevance?: SortOrder
    narrativeFlow?: SortOrder
    leadershipEmphasis?: SortOrder
    specificityScore?: SortOrder
    grammarIssues?: SortOrder
  }

  export type AIResultMaxOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    essayVersionId?: SortOrder
    analysisType?: SortOrder
    overallScore?: SortOrder
    suggestions?: SortOrder
    strengths?: SortOrder
    improvements?: SortOrder
    warnings?: SortOrder
    aiProvider?: SortOrder
    modelUsed?: SortOrder
    promptVersion?: SortOrder
    status?: SortOrder
    processingTime?: SortOrder
    errorMessage?: SortOrder
    readabilityScore?: SortOrder
    sentenceCount?: SortOrder
    paragraphCount?: SortOrder
    avgSentenceLength?: SortOrder
    complexWordCount?: SortOrder
    passiveVoiceCount?: SortOrder
    structureScore?: SortOrder
    contentRelevance?: SortOrder
    narrativeFlow?: SortOrder
    leadershipEmphasis?: SortOrder
    specificityScore?: SortOrder
    grammarIssues?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIResultMinOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    essayVersionId?: SortOrder
    analysisType?: SortOrder
    overallScore?: SortOrder
    suggestions?: SortOrder
    strengths?: SortOrder
    improvements?: SortOrder
    warnings?: SortOrder
    aiProvider?: SortOrder
    modelUsed?: SortOrder
    promptVersion?: SortOrder
    status?: SortOrder
    processingTime?: SortOrder
    errorMessage?: SortOrder
    readabilityScore?: SortOrder
    sentenceCount?: SortOrder
    paragraphCount?: SortOrder
    avgSentenceLength?: SortOrder
    complexWordCount?: SortOrder
    passiveVoiceCount?: SortOrder
    structureScore?: SortOrder
    contentRelevance?: SortOrder
    narrativeFlow?: SortOrder
    leadershipEmphasis?: SortOrder
    specificityScore?: SortOrder
    grammarIssues?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIResultSumOrderByAggregateInput = {
    overallScore?: SortOrder
    processingTime?: SortOrder
    readabilityScore?: SortOrder
    sentenceCount?: SortOrder
    paragraphCount?: SortOrder
    avgSentenceLength?: SortOrder
    complexWordCount?: SortOrder
    passiveVoiceCount?: SortOrder
    structureScore?: SortOrder
    contentRelevance?: SortOrder
    narrativeFlow?: SortOrder
    leadershipEmphasis?: SortOrder
    specificityScore?: SortOrder
    grammarIssues?: SortOrder
  }

  export type EssayCompletionLogCountOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    userId?: SortOrder
    completedAt?: SortOrder
    wordCountAtCompletion?: SortOrder
    wordLimit?: SortOrder
    completionMethod?: SortOrder
    previousStatus?: SortOrder
    programId?: SortOrder
    universityId?: SortOrder
    essayPromptTitle?: SortOrder
    createdAt?: SortOrder
  }

  export type EssayCompletionLogAvgOrderByAggregateInput = {
    wordCountAtCompletion?: SortOrder
    wordLimit?: SortOrder
  }

  export type EssayCompletionLogMaxOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    userId?: SortOrder
    completedAt?: SortOrder
    wordCountAtCompletion?: SortOrder
    wordLimit?: SortOrder
    completionMethod?: SortOrder
    previousStatus?: SortOrder
    programId?: SortOrder
    universityId?: SortOrder
    essayPromptTitle?: SortOrder
    createdAt?: SortOrder
  }

  export type EssayCompletionLogMinOrderByAggregateInput = {
    id?: SortOrder
    essayId?: SortOrder
    userId?: SortOrder
    completedAt?: SortOrder
    wordCountAtCompletion?: SortOrder
    wordLimit?: SortOrder
    completionMethod?: SortOrder
    previousStatus?: SortOrder
    programId?: SortOrder
    universityId?: SortOrder
    essayPromptTitle?: SortOrder
    createdAt?: SortOrder
  }

  export type EssayCompletionLogSumOrderByAggregateInput = {
    wordCountAtCompletion?: SortOrder
    wordLimit?: SortOrder
  }

  export type UniversityNullableScalarRelationFilter = {
    is?: UniversityWhereInput | null
    isNot?: UniversityWhereInput | null
  }

  export type AdmissionDeadlineNullableScalarRelationFilter = {
    is?: AdmissionDeadlineWhereInput | null
    isNot?: AdmissionDeadlineWhereInput | null
  }

  export type InterviewNullableScalarRelationFilter = {
    is?: InterviewWhereInput | null
    isNot?: InterviewWhereInput | null
  }

  export type ScholarshipNullableScalarRelationFilter = {
    is?: ScholarshipWhereInput | null
    isNot?: ScholarshipWhereInput | null
  }

  export type CalendarEventCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    timezone?: SortOrder
    isAllDay?: SortOrder
    eventType?: SortOrder
    eventStatus?: SortOrder
    priority?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    applicationId?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrder
    admissionDeadlineId?: SortOrder
    interviewId?: SortOrder
    scholarshipId?: SortOrder
    isRecurring?: SortOrder
    recurringPattern?: SortOrder
    parentEventId?: SortOrder
    hasReminders?: SortOrder
    isSystemGenerated?: SortOrder
    color?: SortOrder
    isVisible?: SortOrder
    completionStatus?: SortOrder
    completedAt?: SortOrder
    completionNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastModifiedBy?: SortOrder
  }

  export type CalendarEventMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    timezone?: SortOrder
    isAllDay?: SortOrder
    eventType?: SortOrder
    eventStatus?: SortOrder
    priority?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    applicationId?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrder
    admissionDeadlineId?: SortOrder
    interviewId?: SortOrder
    scholarshipId?: SortOrder
    isRecurring?: SortOrder
    recurringPattern?: SortOrder
    parentEventId?: SortOrder
    hasReminders?: SortOrder
    isSystemGenerated?: SortOrder
    color?: SortOrder
    isVisible?: SortOrder
    completionStatus?: SortOrder
    completedAt?: SortOrder
    completionNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastModifiedBy?: SortOrder
  }

  export type CalendarEventMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    timezone?: SortOrder
    isAllDay?: SortOrder
    eventType?: SortOrder
    eventStatus?: SortOrder
    priority?: SortOrder
    universityId?: SortOrder
    programId?: SortOrder
    applicationId?: SortOrder
    admissionId?: SortOrder
    intakeId?: SortOrder
    admissionDeadlineId?: SortOrder
    interviewId?: SortOrder
    scholarshipId?: SortOrder
    isRecurring?: SortOrder
    recurringPattern?: SortOrder
    parentEventId?: SortOrder
    hasReminders?: SortOrder
    isSystemGenerated?: SortOrder
    color?: SortOrder
    isVisible?: SortOrder
    completionStatus?: SortOrder
    completedAt?: SortOrder
    completionNotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastModifiedBy?: SortOrder
  }

  export type CalendarEventScalarRelationFilter = {
    is?: CalendarEventWhereInput
    isNot?: CalendarEventWhereInput
  }

  export type EventReminderEventIdUserIdReminderTimeReminderTypeCompoundUniqueInput = {
    eventId: string
    userId: string
    reminderTime: number
    reminderType: string
  }

  export type EventReminderCountOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
    reminderType?: SortOrder
    reminderTime?: SortOrder
    reminderMessage?: SortOrder
    scheduledFor?: SortOrder
    isActive?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrder
    failureReason?: SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EventReminderAvgOrderByAggregateInput = {
    reminderTime?: SortOrder
    retryCount?: SortOrder
  }

  export type EventReminderMaxOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
    reminderType?: SortOrder
    reminderTime?: SortOrder
    reminderMessage?: SortOrder
    scheduledFor?: SortOrder
    isActive?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrder
    failureReason?: SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EventReminderMinOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    userId?: SortOrder
    reminderType?: SortOrder
    reminderTime?: SortOrder
    reminderMessage?: SortOrder
    scheduledFor?: SortOrder
    isActive?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrder
    failureReason?: SortOrder
    retryCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EventReminderSumOrderByAggregateInput = {
    reminderTime?: SortOrder
    retryCount?: SortOrder
  }

  export type UserProfileCreateNestedOneWithoutUserInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    connect?: UserProfileWhereUniqueInput
  }

  export type SubscriptionCreateNestedOneWithoutUserInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput
    connect?: SubscriptionWhereUniqueInput
  }

  export type ApplicationCreateNestedManyWithoutUserInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type ScholarshipApplicationCreateNestedManyWithoutUserInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutUserInput, ScholarshipApplicationUncheckedCreateWithoutUserInput> | ScholarshipApplicationCreateWithoutUserInput[] | ScholarshipApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutUserInput | ScholarshipApplicationCreateOrConnectWithoutUserInput[]
    createMany?: ScholarshipApplicationCreateManyUserInputEnvelope
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
  }

  export type FinancialAidApplicationCreateNestedManyWithoutUserInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutUserInput, FinancialAidApplicationUncheckedCreateWithoutUserInput> | FinancialAidApplicationCreateWithoutUserInput[] | FinancialAidApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutUserInput | FinancialAidApplicationCreateOrConnectWithoutUserInput[]
    createMany?: FinancialAidApplicationCreateManyUserInputEnvelope
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
  }

  export type EssaySubmissionCreateNestedManyWithoutUserInput = {
    create?: XOR<EssaySubmissionCreateWithoutUserInput, EssaySubmissionUncheckedCreateWithoutUserInput> | EssaySubmissionCreateWithoutUserInput[] | EssaySubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutUserInput | EssaySubmissionCreateOrConnectWithoutUserInput[]
    createMany?: EssaySubmissionCreateManyUserInputEnvelope
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
  }

  export type UniversityCreateNestedManyWithoutSavedByUsersInput = {
    create?: XOR<UniversityCreateWithoutSavedByUsersInput, UniversityUncheckedCreateWithoutSavedByUsersInput> | UniversityCreateWithoutSavedByUsersInput[] | UniversityUncheckedCreateWithoutSavedByUsersInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutSavedByUsersInput | UniversityCreateOrConnectWithoutSavedByUsersInput[]
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
  }

  export type CalendarEventCreateNestedManyWithoutUserInput = {
    create?: XOR<CalendarEventCreateWithoutUserInput, CalendarEventUncheckedCreateWithoutUserInput> | CalendarEventCreateWithoutUserInput[] | CalendarEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUserInput | CalendarEventCreateOrConnectWithoutUserInput[]
    createMany?: CalendarEventCreateManyUserInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type EventReminderCreateNestedManyWithoutUserInput = {
    create?: XOR<EventReminderCreateWithoutUserInput, EventReminderUncheckedCreateWithoutUserInput> | EventReminderCreateWithoutUserInput[] | EventReminderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutUserInput | EventReminderCreateOrConnectWithoutUserInput[]
    createMany?: EventReminderCreateManyUserInputEnvelope
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
  }

  export type EssayCreateNestedManyWithoutUserInput = {
    create?: XOR<EssayCreateWithoutUserInput, EssayUncheckedCreateWithoutUserInput> | EssayCreateWithoutUserInput[] | EssayUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutUserInput | EssayCreateOrConnectWithoutUserInput[]
    createMany?: EssayCreateManyUserInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type EssayCompletionLogCreateNestedManyWithoutUserInput = {
    create?: XOR<EssayCompletionLogCreateWithoutUserInput, EssayCompletionLogUncheckedCreateWithoutUserInput> | EssayCompletionLogCreateWithoutUserInput[] | EssayCompletionLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutUserInput | EssayCompletionLogCreateOrConnectWithoutUserInput[]
    createMany?: EssayCompletionLogCreateManyUserInputEnvelope
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
  }

  export type UserProfileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    connect?: UserProfileWhereUniqueInput
  }

  export type SubscriptionUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput
    connect?: SubscriptionWhereUniqueInput
  }

  export type ApplicationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutUserInput, ScholarshipApplicationUncheckedCreateWithoutUserInput> | ScholarshipApplicationCreateWithoutUserInput[] | ScholarshipApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutUserInput | ScholarshipApplicationCreateOrConnectWithoutUserInput[]
    createMany?: ScholarshipApplicationCreateManyUserInputEnvelope
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
  }

  export type FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutUserInput, FinancialAidApplicationUncheckedCreateWithoutUserInput> | FinancialAidApplicationCreateWithoutUserInput[] | FinancialAidApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutUserInput | FinancialAidApplicationCreateOrConnectWithoutUserInput[]
    createMany?: FinancialAidApplicationCreateManyUserInputEnvelope
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
  }

  export type EssaySubmissionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EssaySubmissionCreateWithoutUserInput, EssaySubmissionUncheckedCreateWithoutUserInput> | EssaySubmissionCreateWithoutUserInput[] | EssaySubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutUserInput | EssaySubmissionCreateOrConnectWithoutUserInput[]
    createMany?: EssaySubmissionCreateManyUserInputEnvelope
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
  }

  export type UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput = {
    create?: XOR<UniversityCreateWithoutSavedByUsersInput, UniversityUncheckedCreateWithoutSavedByUsersInput> | UniversityCreateWithoutSavedByUsersInput[] | UniversityUncheckedCreateWithoutSavedByUsersInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutSavedByUsersInput | UniversityCreateOrConnectWithoutSavedByUsersInput[]
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CalendarEventCreateWithoutUserInput, CalendarEventUncheckedCreateWithoutUserInput> | CalendarEventCreateWithoutUserInput[] | CalendarEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUserInput | CalendarEventCreateOrConnectWithoutUserInput[]
    createMany?: CalendarEventCreateManyUserInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type EventReminderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EventReminderCreateWithoutUserInput, EventReminderUncheckedCreateWithoutUserInput> | EventReminderCreateWithoutUserInput[] | EventReminderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutUserInput | EventReminderCreateOrConnectWithoutUserInput[]
    createMany?: EventReminderCreateManyUserInputEnvelope
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
  }

  export type EssayUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EssayCreateWithoutUserInput, EssayUncheckedCreateWithoutUserInput> | EssayCreateWithoutUserInput[] | EssayUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutUserInput | EssayCreateOrConnectWithoutUserInput[]
    createMany?: EssayCreateManyUserInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<EssayCompletionLogCreateWithoutUserInput, EssayCompletionLogUncheckedCreateWithoutUserInput> | EssayCompletionLogCreateWithoutUserInput[] | EssayCompletionLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutUserInput | EssayCompletionLogCreateOrConnectWithoutUserInput[]
    createMany?: EssayCompletionLogCreateManyUserInputEnvelope
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserProfileUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    upsert?: UserProfileUpsertWithoutUserInput
    disconnect?: UserProfileWhereInput | boolean
    delete?: UserProfileWhereInput | boolean
    connect?: UserProfileWhereUniqueInput
    update?: XOR<XOR<UserProfileUpdateToOneWithWhereWithoutUserInput, UserProfileUpdateWithoutUserInput>, UserProfileUncheckedUpdateWithoutUserInput>
  }

  export type SubscriptionUpdateOneWithoutUserNestedInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput
    upsert?: SubscriptionUpsertWithoutUserInput
    disconnect?: SubscriptionWhereInput | boolean
    delete?: SubscriptionWhereInput | boolean
    connect?: SubscriptionWhereUniqueInput
    update?: XOR<XOR<SubscriptionUpdateToOneWithWhereWithoutUserInput, SubscriptionUpdateWithoutUserInput>, SubscriptionUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUpdateManyWithoutUserNestedInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutUserInput | ApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutUserInput | ApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutUserInput | ApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type ScholarshipApplicationUpdateManyWithoutUserNestedInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutUserInput, ScholarshipApplicationUncheckedCreateWithoutUserInput> | ScholarshipApplicationCreateWithoutUserInput[] | ScholarshipApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutUserInput | ScholarshipApplicationCreateOrConnectWithoutUserInput[]
    upsert?: ScholarshipApplicationUpsertWithWhereUniqueWithoutUserInput | ScholarshipApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ScholarshipApplicationCreateManyUserInputEnvelope
    set?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    disconnect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    delete?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    update?: ScholarshipApplicationUpdateWithWhereUniqueWithoutUserInput | ScholarshipApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ScholarshipApplicationUpdateManyWithWhereWithoutUserInput | ScholarshipApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
  }

  export type FinancialAidApplicationUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutUserInput, FinancialAidApplicationUncheckedCreateWithoutUserInput> | FinancialAidApplicationCreateWithoutUserInput[] | FinancialAidApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutUserInput | FinancialAidApplicationCreateOrConnectWithoutUserInput[]
    upsert?: FinancialAidApplicationUpsertWithWhereUniqueWithoutUserInput | FinancialAidApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinancialAidApplicationCreateManyUserInputEnvelope
    set?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    disconnect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    delete?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    update?: FinancialAidApplicationUpdateWithWhereUniqueWithoutUserInput | FinancialAidApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinancialAidApplicationUpdateManyWithWhereWithoutUserInput | FinancialAidApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
  }

  export type EssaySubmissionUpdateManyWithoutUserNestedInput = {
    create?: XOR<EssaySubmissionCreateWithoutUserInput, EssaySubmissionUncheckedCreateWithoutUserInput> | EssaySubmissionCreateWithoutUserInput[] | EssaySubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutUserInput | EssaySubmissionCreateOrConnectWithoutUserInput[]
    upsert?: EssaySubmissionUpsertWithWhereUniqueWithoutUserInput | EssaySubmissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EssaySubmissionCreateManyUserInputEnvelope
    set?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    disconnect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    delete?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    update?: EssaySubmissionUpdateWithWhereUniqueWithoutUserInput | EssaySubmissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EssaySubmissionUpdateManyWithWhereWithoutUserInput | EssaySubmissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
  }

  export type UniversityUpdateManyWithoutSavedByUsersNestedInput = {
    create?: XOR<UniversityCreateWithoutSavedByUsersInput, UniversityUncheckedCreateWithoutSavedByUsersInput> | UniversityCreateWithoutSavedByUsersInput[] | UniversityUncheckedCreateWithoutSavedByUsersInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutSavedByUsersInput | UniversityCreateOrConnectWithoutSavedByUsersInput[]
    upsert?: UniversityUpsertWithWhereUniqueWithoutSavedByUsersInput | UniversityUpsertWithWhereUniqueWithoutSavedByUsersInput[]
    set?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    disconnect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    delete?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    update?: UniversityUpdateWithWhereUniqueWithoutSavedByUsersInput | UniversityUpdateWithWhereUniqueWithoutSavedByUsersInput[]
    updateMany?: UniversityUpdateManyWithWhereWithoutSavedByUsersInput | UniversityUpdateManyWithWhereWithoutSavedByUsersInput[]
    deleteMany?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
  }

  export type CalendarEventUpdateManyWithoutUserNestedInput = {
    create?: XOR<CalendarEventCreateWithoutUserInput, CalendarEventUncheckedCreateWithoutUserInput> | CalendarEventCreateWithoutUserInput[] | CalendarEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUserInput | CalendarEventCreateOrConnectWithoutUserInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutUserInput | CalendarEventUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CalendarEventCreateManyUserInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutUserInput | CalendarEventUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutUserInput | CalendarEventUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type EventReminderUpdateManyWithoutUserNestedInput = {
    create?: XOR<EventReminderCreateWithoutUserInput, EventReminderUncheckedCreateWithoutUserInput> | EventReminderCreateWithoutUserInput[] | EventReminderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutUserInput | EventReminderCreateOrConnectWithoutUserInput[]
    upsert?: EventReminderUpsertWithWhereUniqueWithoutUserInput | EventReminderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EventReminderCreateManyUserInputEnvelope
    set?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    disconnect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    delete?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    update?: EventReminderUpdateWithWhereUniqueWithoutUserInput | EventReminderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EventReminderUpdateManyWithWhereWithoutUserInput | EventReminderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EventReminderScalarWhereInput | EventReminderScalarWhereInput[]
  }

  export type EssayUpdateManyWithoutUserNestedInput = {
    create?: XOR<EssayCreateWithoutUserInput, EssayUncheckedCreateWithoutUserInput> | EssayCreateWithoutUserInput[] | EssayUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutUserInput | EssayCreateOrConnectWithoutUserInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutUserInput | EssayUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EssayCreateManyUserInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutUserInput | EssayUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutUserInput | EssayUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type EssayCompletionLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<EssayCompletionLogCreateWithoutUserInput, EssayCompletionLogUncheckedCreateWithoutUserInput> | EssayCompletionLogCreateWithoutUserInput[] | EssayCompletionLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutUserInput | EssayCompletionLogCreateOrConnectWithoutUserInput[]
    upsert?: EssayCompletionLogUpsertWithWhereUniqueWithoutUserInput | EssayCompletionLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EssayCompletionLogCreateManyUserInputEnvelope
    set?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    disconnect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    delete?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    update?: EssayCompletionLogUpdateWithWhereUniqueWithoutUserInput | EssayCompletionLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EssayCompletionLogUpdateManyWithWhereWithoutUserInput | EssayCompletionLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EssayCompletionLogScalarWhereInput | EssayCompletionLogScalarWhereInput[]
  }

  export type UserProfileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserProfileCreateOrConnectWithoutUserInput
    upsert?: UserProfileUpsertWithoutUserInput
    disconnect?: UserProfileWhereInput | boolean
    delete?: UserProfileWhereInput | boolean
    connect?: UserProfileWhereUniqueInput
    update?: XOR<XOR<UserProfileUpdateToOneWithWhereWithoutUserInput, UserProfileUpdateWithoutUserInput>, UserProfileUncheckedUpdateWithoutUserInput>
  }

  export type SubscriptionUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput
    upsert?: SubscriptionUpsertWithoutUserInput
    disconnect?: SubscriptionWhereInput | boolean
    delete?: SubscriptionWhereInput | boolean
    connect?: SubscriptionWhereUniqueInput
    update?: XOR<XOR<SubscriptionUpdateToOneWithWhereWithoutUserInput, SubscriptionUpdateWithoutUserInput>, SubscriptionUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput> | ApplicationCreateWithoutUserInput[] | ApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUserInput | ApplicationCreateOrConnectWithoutUserInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutUserInput | ApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ApplicationCreateManyUserInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutUserInput | ApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutUserInput | ApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutUserInput, ScholarshipApplicationUncheckedCreateWithoutUserInput> | ScholarshipApplicationCreateWithoutUserInput[] | ScholarshipApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutUserInput | ScholarshipApplicationCreateOrConnectWithoutUserInput[]
    upsert?: ScholarshipApplicationUpsertWithWhereUniqueWithoutUserInput | ScholarshipApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ScholarshipApplicationCreateManyUserInputEnvelope
    set?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    disconnect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    delete?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    update?: ScholarshipApplicationUpdateWithWhereUniqueWithoutUserInput | ScholarshipApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ScholarshipApplicationUpdateManyWithWhereWithoutUserInput | ScholarshipApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
  }

  export type FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutUserInput, FinancialAidApplicationUncheckedCreateWithoutUserInput> | FinancialAidApplicationCreateWithoutUserInput[] | FinancialAidApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutUserInput | FinancialAidApplicationCreateOrConnectWithoutUserInput[]
    upsert?: FinancialAidApplicationUpsertWithWhereUniqueWithoutUserInput | FinancialAidApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinancialAidApplicationCreateManyUserInputEnvelope
    set?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    disconnect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    delete?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    update?: FinancialAidApplicationUpdateWithWhereUniqueWithoutUserInput | FinancialAidApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinancialAidApplicationUpdateManyWithWhereWithoutUserInput | FinancialAidApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
  }

  export type EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EssaySubmissionCreateWithoutUserInput, EssaySubmissionUncheckedCreateWithoutUserInput> | EssaySubmissionCreateWithoutUserInput[] | EssaySubmissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutUserInput | EssaySubmissionCreateOrConnectWithoutUserInput[]
    upsert?: EssaySubmissionUpsertWithWhereUniqueWithoutUserInput | EssaySubmissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EssaySubmissionCreateManyUserInputEnvelope
    set?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    disconnect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    delete?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    update?: EssaySubmissionUpdateWithWhereUniqueWithoutUserInput | EssaySubmissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EssaySubmissionUpdateManyWithWhereWithoutUserInput | EssaySubmissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
  }

  export type UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput = {
    create?: XOR<UniversityCreateWithoutSavedByUsersInput, UniversityUncheckedCreateWithoutSavedByUsersInput> | UniversityCreateWithoutSavedByUsersInput[] | UniversityUncheckedCreateWithoutSavedByUsersInput[]
    connectOrCreate?: UniversityCreateOrConnectWithoutSavedByUsersInput | UniversityCreateOrConnectWithoutSavedByUsersInput[]
    upsert?: UniversityUpsertWithWhereUniqueWithoutSavedByUsersInput | UniversityUpsertWithWhereUniqueWithoutSavedByUsersInput[]
    set?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    disconnect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    delete?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    connect?: UniversityWhereUniqueInput | UniversityWhereUniqueInput[]
    update?: UniversityUpdateWithWhereUniqueWithoutSavedByUsersInput | UniversityUpdateWithWhereUniqueWithoutSavedByUsersInput[]
    updateMany?: UniversityUpdateManyWithWhereWithoutSavedByUsersInput | UniversityUpdateManyWithWhereWithoutSavedByUsersInput[]
    deleteMany?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CalendarEventCreateWithoutUserInput, CalendarEventUncheckedCreateWithoutUserInput> | CalendarEventCreateWithoutUserInput[] | CalendarEventUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUserInput | CalendarEventCreateOrConnectWithoutUserInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutUserInput | CalendarEventUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CalendarEventCreateManyUserInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutUserInput | CalendarEventUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutUserInput | CalendarEventUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type EventReminderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EventReminderCreateWithoutUserInput, EventReminderUncheckedCreateWithoutUserInput> | EventReminderCreateWithoutUserInput[] | EventReminderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutUserInput | EventReminderCreateOrConnectWithoutUserInput[]
    upsert?: EventReminderUpsertWithWhereUniqueWithoutUserInput | EventReminderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EventReminderCreateManyUserInputEnvelope
    set?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    disconnect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    delete?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    update?: EventReminderUpdateWithWhereUniqueWithoutUserInput | EventReminderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EventReminderUpdateManyWithWhereWithoutUserInput | EventReminderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EventReminderScalarWhereInput | EventReminderScalarWhereInput[]
  }

  export type EssayUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EssayCreateWithoutUserInput, EssayUncheckedCreateWithoutUserInput> | EssayCreateWithoutUserInput[] | EssayUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutUserInput | EssayCreateOrConnectWithoutUserInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutUserInput | EssayUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EssayCreateManyUserInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutUserInput | EssayUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutUserInput | EssayUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<EssayCompletionLogCreateWithoutUserInput, EssayCompletionLogUncheckedCreateWithoutUserInput> | EssayCompletionLogCreateWithoutUserInput[] | EssayCompletionLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutUserInput | EssayCompletionLogCreateOrConnectWithoutUserInput[]
    upsert?: EssayCompletionLogUpsertWithWhereUniqueWithoutUserInput | EssayCompletionLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: EssayCompletionLogCreateManyUserInputEnvelope
    set?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    disconnect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    delete?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    update?: EssayCompletionLogUpdateWithWhereUniqueWithoutUserInput | EssayCompletionLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: EssayCompletionLogUpdateManyWithWhereWithoutUserInput | EssayCompletionLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: EssayCompletionLogScalarWhereInput | EssayCompletionLogScalarWhereInput[]
  }

  export type UserProfileCreatecountriesInput = {
    set: string[]
  }

  export type UserProfileCreatecoursesInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutProfileInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    connect?: UserWhereUniqueInput
  }

  export type UserProfileUpdatecountriesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UserProfileUpdatecoursesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UserUpdateOneRequiredWithoutProfileNestedInput = {
    create?: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfileInput
    upsert?: UserUpsertWithoutProfileInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfileInput, UserUpdateWithoutProfileInput>, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserCreateNestedOneWithoutSubscriptionInput = {
    create?: XOR<UserCreateWithoutSubscriptionInput, UserUncheckedCreateWithoutSubscriptionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscriptionInput
    connect?: UserWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneRequiredWithoutSubscriptionNestedInput = {
    create?: XOR<UserCreateWithoutSubscriptionInput, UserUncheckedCreateWithoutSubscriptionInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscriptionInput
    upsert?: UserUpsertWithoutSubscriptionInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubscriptionInput, UserUpdateWithoutSubscriptionInput>, UserUncheckedUpdateWithoutSubscriptionInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UniversityCreatewhyChooseHighlightsInput = {
    set: string[]
  }

  export type UniversityCreateadditionalDocumentUrlsInput = {
    set: string[]
  }

  export type UniversityImageCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversityImageCreateWithoutUniversityInput, UniversityImageUncheckedCreateWithoutUniversityInput> | UniversityImageCreateWithoutUniversityInput[] | UniversityImageUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityImageCreateOrConnectWithoutUniversityInput | UniversityImageCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversityImageCreateManyUniversityInputEnvelope
    connect?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
  }

  export type ProgramCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ProgramCreateWithoutUniversityInput, ProgramUncheckedCreateWithoutUniversityInput> | ProgramCreateWithoutUniversityInput[] | ProgramUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramCreateOrConnectWithoutUniversityInput | ProgramCreateOrConnectWithoutUniversityInput[]
    createMany?: ProgramCreateManyUniversityInputEnvelope
    connect?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
  }

  export type DepartmentCreateNestedManyWithoutUniversityInput = {
    create?: XOR<DepartmentCreateWithoutUniversityInput, DepartmentUncheckedCreateWithoutUniversityInput> | DepartmentCreateWithoutUniversityInput[] | DepartmentUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutUniversityInput | DepartmentCreateOrConnectWithoutUniversityInput[]
    createMany?: DepartmentCreateManyUniversityInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type AdmissionCreateNestedManyWithoutUniversityInput = {
    create?: XOR<AdmissionCreateWithoutUniversityInput, AdmissionUncheckedCreateWithoutUniversityInput> | AdmissionCreateWithoutUniversityInput[] | AdmissionUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutUniversityInput | AdmissionCreateOrConnectWithoutUniversityInput[]
    createMany?: AdmissionCreateManyUniversityInputEnvelope
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ApplicationCreateWithoutUniversityInput, ApplicationUncheckedCreateWithoutUniversityInput> | ApplicationCreateWithoutUniversityInput[] | ApplicationUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUniversityInput | ApplicationCreateOrConnectWithoutUniversityInput[]
    createMany?: ApplicationCreateManyUniversityInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type TuitionBreakdownCreateNestedManyWithoutUniversityInput = {
    create?: XOR<TuitionBreakdownCreateWithoutUniversityInput, TuitionBreakdownUncheckedCreateWithoutUniversityInput> | TuitionBreakdownCreateWithoutUniversityInput[] | TuitionBreakdownUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutUniversityInput | TuitionBreakdownCreateOrConnectWithoutUniversityInput[]
    createMany?: TuitionBreakdownCreateManyUniversityInputEnvelope
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
  }

  export type ScholarshipCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ScholarshipCreateWithoutUniversityInput, ScholarshipUncheckedCreateWithoutUniversityInput> | ScholarshipCreateWithoutUniversityInput[] | ScholarshipUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutUniversityInput | ScholarshipCreateOrConnectWithoutUniversityInput[]
    createMany?: ScholarshipCreateManyUniversityInputEnvelope
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
  }

  export type FeeStructureCreateNestedManyWithoutUniversityInput = {
    create?: XOR<FeeStructureCreateWithoutUniversityInput, FeeStructureUncheckedCreateWithoutUniversityInput> | FeeStructureCreateWithoutUniversityInput[] | FeeStructureUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutUniversityInput | FeeStructureCreateOrConnectWithoutUniversityInput[]
    createMany?: FeeStructureCreateManyUniversityInputEnvelope
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
  }

  export type FinancialAidCreateNestedManyWithoutUniversityInput = {
    create?: XOR<FinancialAidCreateWithoutUniversityInput, FinancialAidUncheckedCreateWithoutUniversityInput> | FinancialAidCreateWithoutUniversityInput[] | FinancialAidUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutUniversityInput | FinancialAidCreateOrConnectWithoutUniversityInput[]
    createMany?: FinancialAidCreateManyUniversityInputEnvelope
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutSavedUniversitiesInput = {
    create?: XOR<UserCreateWithoutSavedUniversitiesInput, UserUncheckedCreateWithoutSavedUniversitiesInput> | UserCreateWithoutSavedUniversitiesInput[] | UserUncheckedCreateWithoutSavedUniversitiesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSavedUniversitiesInput | UserCreateOrConnectWithoutSavedUniversitiesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CalendarEventCreateNestedManyWithoutUniversityInput = {
    create?: XOR<CalendarEventCreateWithoutUniversityInput, CalendarEventUncheckedCreateWithoutUniversityInput> | CalendarEventCreateWithoutUniversityInput[] | CalendarEventUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUniversityInput | CalendarEventCreateOrConnectWithoutUniversityInput[]
    createMany?: CalendarEventCreateManyUniversityInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type UniversityImageUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<UniversityImageCreateWithoutUniversityInput, UniversityImageUncheckedCreateWithoutUniversityInput> | UniversityImageCreateWithoutUniversityInput[] | UniversityImageUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityImageCreateOrConnectWithoutUniversityInput | UniversityImageCreateOrConnectWithoutUniversityInput[]
    createMany?: UniversityImageCreateManyUniversityInputEnvelope
    connect?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
  }

  export type ProgramUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ProgramCreateWithoutUniversityInput, ProgramUncheckedCreateWithoutUniversityInput> | ProgramCreateWithoutUniversityInput[] | ProgramUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramCreateOrConnectWithoutUniversityInput | ProgramCreateOrConnectWithoutUniversityInput[]
    createMany?: ProgramCreateManyUniversityInputEnvelope
    connect?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
  }

  export type DepartmentUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<DepartmentCreateWithoutUniversityInput, DepartmentUncheckedCreateWithoutUniversityInput> | DepartmentCreateWithoutUniversityInput[] | DepartmentUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutUniversityInput | DepartmentCreateOrConnectWithoutUniversityInput[]
    createMany?: DepartmentCreateManyUniversityInputEnvelope
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
  }

  export type AdmissionUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<AdmissionCreateWithoutUniversityInput, AdmissionUncheckedCreateWithoutUniversityInput> | AdmissionCreateWithoutUniversityInput[] | AdmissionUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutUniversityInput | AdmissionCreateOrConnectWithoutUniversityInput[]
    createMany?: AdmissionCreateManyUniversityInputEnvelope
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ApplicationCreateWithoutUniversityInput, ApplicationUncheckedCreateWithoutUniversityInput> | ApplicationCreateWithoutUniversityInput[] | ApplicationUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUniversityInput | ApplicationCreateOrConnectWithoutUniversityInput[]
    createMany?: ApplicationCreateManyUniversityInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<TuitionBreakdownCreateWithoutUniversityInput, TuitionBreakdownUncheckedCreateWithoutUniversityInput> | TuitionBreakdownCreateWithoutUniversityInput[] | TuitionBreakdownUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutUniversityInput | TuitionBreakdownCreateOrConnectWithoutUniversityInput[]
    createMany?: TuitionBreakdownCreateManyUniversityInputEnvelope
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
  }

  export type ScholarshipUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<ScholarshipCreateWithoutUniversityInput, ScholarshipUncheckedCreateWithoutUniversityInput> | ScholarshipCreateWithoutUniversityInput[] | ScholarshipUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutUniversityInput | ScholarshipCreateOrConnectWithoutUniversityInput[]
    createMany?: ScholarshipCreateManyUniversityInputEnvelope
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
  }

  export type FeeStructureUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<FeeStructureCreateWithoutUniversityInput, FeeStructureUncheckedCreateWithoutUniversityInput> | FeeStructureCreateWithoutUniversityInput[] | FeeStructureUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutUniversityInput | FeeStructureCreateOrConnectWithoutUniversityInput[]
    createMany?: FeeStructureCreateManyUniversityInputEnvelope
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
  }

  export type FinancialAidUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<FinancialAidCreateWithoutUniversityInput, FinancialAidUncheckedCreateWithoutUniversityInput> | FinancialAidCreateWithoutUniversityInput[] | FinancialAidUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutUniversityInput | FinancialAidCreateOrConnectWithoutUniversityInput[]
    createMany?: FinancialAidCreateManyUniversityInputEnvelope
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput = {
    create?: XOR<UserCreateWithoutSavedUniversitiesInput, UserUncheckedCreateWithoutSavedUniversitiesInput> | UserCreateWithoutSavedUniversitiesInput[] | UserUncheckedCreateWithoutSavedUniversitiesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSavedUniversitiesInput | UserCreateOrConnectWithoutSavedUniversitiesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutUniversityInput = {
    create?: XOR<CalendarEventCreateWithoutUniversityInput, CalendarEventUncheckedCreateWithoutUniversityInput> | CalendarEventCreateWithoutUniversityInput[] | CalendarEventUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUniversityInput | CalendarEventCreateOrConnectWithoutUniversityInput[]
    createMany?: CalendarEventCreateManyUniversityInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type UniversityUpdatewhyChooseHighlightsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UniversityUpdateadditionalDocumentUrlsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UniversityImageUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversityImageCreateWithoutUniversityInput, UniversityImageUncheckedCreateWithoutUniversityInput> | UniversityImageCreateWithoutUniversityInput[] | UniversityImageUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityImageCreateOrConnectWithoutUniversityInput | UniversityImageCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversityImageUpsertWithWhereUniqueWithoutUniversityInput | UniversityImageUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversityImageCreateManyUniversityInputEnvelope
    set?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    disconnect?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    delete?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    connect?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    update?: UniversityImageUpdateWithWhereUniqueWithoutUniversityInput | UniversityImageUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversityImageUpdateManyWithWhereWithoutUniversityInput | UniversityImageUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversityImageScalarWhereInput | UniversityImageScalarWhereInput[]
  }

  export type ProgramUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ProgramCreateWithoutUniversityInput, ProgramUncheckedCreateWithoutUniversityInput> | ProgramCreateWithoutUniversityInput[] | ProgramUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramCreateOrConnectWithoutUniversityInput | ProgramCreateOrConnectWithoutUniversityInput[]
    upsert?: ProgramUpsertWithWhereUniqueWithoutUniversityInput | ProgramUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ProgramCreateManyUniversityInputEnvelope
    set?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    disconnect?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    delete?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    connect?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    update?: ProgramUpdateWithWhereUniqueWithoutUniversityInput | ProgramUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ProgramUpdateManyWithWhereWithoutUniversityInput | ProgramUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ProgramScalarWhereInput | ProgramScalarWhereInput[]
  }

  export type DepartmentUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<DepartmentCreateWithoutUniversityInput, DepartmentUncheckedCreateWithoutUniversityInput> | DepartmentCreateWithoutUniversityInput[] | DepartmentUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutUniversityInput | DepartmentCreateOrConnectWithoutUniversityInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutUniversityInput | DepartmentUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: DepartmentCreateManyUniversityInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutUniversityInput | DepartmentUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutUniversityInput | DepartmentUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type AdmissionUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<AdmissionCreateWithoutUniversityInput, AdmissionUncheckedCreateWithoutUniversityInput> | AdmissionCreateWithoutUniversityInput[] | AdmissionUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutUniversityInput | AdmissionCreateOrConnectWithoutUniversityInput[]
    upsert?: AdmissionUpsertWithWhereUniqueWithoutUniversityInput | AdmissionUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: AdmissionCreateManyUniversityInputEnvelope
    set?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    disconnect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    delete?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    update?: AdmissionUpdateWithWhereUniqueWithoutUniversityInput | AdmissionUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: AdmissionUpdateManyWithWhereWithoutUniversityInput | AdmissionUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: AdmissionScalarWhereInput | AdmissionScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ApplicationCreateWithoutUniversityInput, ApplicationUncheckedCreateWithoutUniversityInput> | ApplicationCreateWithoutUniversityInput[] | ApplicationUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUniversityInput | ApplicationCreateOrConnectWithoutUniversityInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutUniversityInput | ApplicationUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ApplicationCreateManyUniversityInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutUniversityInput | ApplicationUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutUniversityInput | ApplicationUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type TuitionBreakdownUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<TuitionBreakdownCreateWithoutUniversityInput, TuitionBreakdownUncheckedCreateWithoutUniversityInput> | TuitionBreakdownCreateWithoutUniversityInput[] | TuitionBreakdownUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutUniversityInput | TuitionBreakdownCreateOrConnectWithoutUniversityInput[]
    upsert?: TuitionBreakdownUpsertWithWhereUniqueWithoutUniversityInput | TuitionBreakdownUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: TuitionBreakdownCreateManyUniversityInputEnvelope
    set?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    disconnect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    delete?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    update?: TuitionBreakdownUpdateWithWhereUniqueWithoutUniversityInput | TuitionBreakdownUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: TuitionBreakdownUpdateManyWithWhereWithoutUniversityInput | TuitionBreakdownUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: TuitionBreakdownScalarWhereInput | TuitionBreakdownScalarWhereInput[]
  }

  export type ScholarshipUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ScholarshipCreateWithoutUniversityInput, ScholarshipUncheckedCreateWithoutUniversityInput> | ScholarshipCreateWithoutUniversityInput[] | ScholarshipUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutUniversityInput | ScholarshipCreateOrConnectWithoutUniversityInput[]
    upsert?: ScholarshipUpsertWithWhereUniqueWithoutUniversityInput | ScholarshipUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ScholarshipCreateManyUniversityInputEnvelope
    set?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    disconnect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    delete?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    update?: ScholarshipUpdateWithWhereUniqueWithoutUniversityInput | ScholarshipUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ScholarshipUpdateManyWithWhereWithoutUniversityInput | ScholarshipUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ScholarshipScalarWhereInput | ScholarshipScalarWhereInput[]
  }

  export type FeeStructureUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<FeeStructureCreateWithoutUniversityInput, FeeStructureUncheckedCreateWithoutUniversityInput> | FeeStructureCreateWithoutUniversityInput[] | FeeStructureUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutUniversityInput | FeeStructureCreateOrConnectWithoutUniversityInput[]
    upsert?: FeeStructureUpsertWithWhereUniqueWithoutUniversityInput | FeeStructureUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: FeeStructureCreateManyUniversityInputEnvelope
    set?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    disconnect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    delete?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    update?: FeeStructureUpdateWithWhereUniqueWithoutUniversityInput | FeeStructureUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: FeeStructureUpdateManyWithWhereWithoutUniversityInput | FeeStructureUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: FeeStructureScalarWhereInput | FeeStructureScalarWhereInput[]
  }

  export type FinancialAidUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<FinancialAidCreateWithoutUniversityInput, FinancialAidUncheckedCreateWithoutUniversityInput> | FinancialAidCreateWithoutUniversityInput[] | FinancialAidUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutUniversityInput | FinancialAidCreateOrConnectWithoutUniversityInput[]
    upsert?: FinancialAidUpsertWithWhereUniqueWithoutUniversityInput | FinancialAidUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: FinancialAidCreateManyUniversityInputEnvelope
    set?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    disconnect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    delete?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    update?: FinancialAidUpdateWithWhereUniqueWithoutUniversityInput | FinancialAidUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: FinancialAidUpdateManyWithWhereWithoutUniversityInput | FinancialAidUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: FinancialAidScalarWhereInput | FinancialAidScalarWhereInput[]
  }

  export type UserUpdateManyWithoutSavedUniversitiesNestedInput = {
    create?: XOR<UserCreateWithoutSavedUniversitiesInput, UserUncheckedCreateWithoutSavedUniversitiesInput> | UserCreateWithoutSavedUniversitiesInput[] | UserUncheckedCreateWithoutSavedUniversitiesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSavedUniversitiesInput | UserCreateOrConnectWithoutSavedUniversitiesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutSavedUniversitiesInput | UserUpsertWithWhereUniqueWithoutSavedUniversitiesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutSavedUniversitiesInput | UserUpdateWithWhereUniqueWithoutSavedUniversitiesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutSavedUniversitiesInput | UserUpdateManyWithWhereWithoutSavedUniversitiesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CalendarEventUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<CalendarEventCreateWithoutUniversityInput, CalendarEventUncheckedCreateWithoutUniversityInput> | CalendarEventCreateWithoutUniversityInput[] | CalendarEventUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUniversityInput | CalendarEventCreateOrConnectWithoutUniversityInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutUniversityInput | CalendarEventUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: CalendarEventCreateManyUniversityInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutUniversityInput | CalendarEventUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutUniversityInput | CalendarEventUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<UniversityImageCreateWithoutUniversityInput, UniversityImageUncheckedCreateWithoutUniversityInput> | UniversityImageCreateWithoutUniversityInput[] | UniversityImageUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: UniversityImageCreateOrConnectWithoutUniversityInput | UniversityImageCreateOrConnectWithoutUniversityInput[]
    upsert?: UniversityImageUpsertWithWhereUniqueWithoutUniversityInput | UniversityImageUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: UniversityImageCreateManyUniversityInputEnvelope
    set?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    disconnect?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    delete?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    connect?: UniversityImageWhereUniqueInput | UniversityImageWhereUniqueInput[]
    update?: UniversityImageUpdateWithWhereUniqueWithoutUniversityInput | UniversityImageUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: UniversityImageUpdateManyWithWhereWithoutUniversityInput | UniversityImageUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: UniversityImageScalarWhereInput | UniversityImageScalarWhereInput[]
  }

  export type ProgramUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ProgramCreateWithoutUniversityInput, ProgramUncheckedCreateWithoutUniversityInput> | ProgramCreateWithoutUniversityInput[] | ProgramUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ProgramCreateOrConnectWithoutUniversityInput | ProgramCreateOrConnectWithoutUniversityInput[]
    upsert?: ProgramUpsertWithWhereUniqueWithoutUniversityInput | ProgramUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ProgramCreateManyUniversityInputEnvelope
    set?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    disconnect?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    delete?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    connect?: ProgramWhereUniqueInput | ProgramWhereUniqueInput[]
    update?: ProgramUpdateWithWhereUniqueWithoutUniversityInput | ProgramUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ProgramUpdateManyWithWhereWithoutUniversityInput | ProgramUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ProgramScalarWhereInput | ProgramScalarWhereInput[]
  }

  export type DepartmentUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<DepartmentCreateWithoutUniversityInput, DepartmentUncheckedCreateWithoutUniversityInput> | DepartmentCreateWithoutUniversityInput[] | DepartmentUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: DepartmentCreateOrConnectWithoutUniversityInput | DepartmentCreateOrConnectWithoutUniversityInput[]
    upsert?: DepartmentUpsertWithWhereUniqueWithoutUniversityInput | DepartmentUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: DepartmentCreateManyUniversityInputEnvelope
    set?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    disconnect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    delete?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    connect?: DepartmentWhereUniqueInput | DepartmentWhereUniqueInput[]
    update?: DepartmentUpdateWithWhereUniqueWithoutUniversityInput | DepartmentUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: DepartmentUpdateManyWithWhereWithoutUniversityInput | DepartmentUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
  }

  export type AdmissionUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<AdmissionCreateWithoutUniversityInput, AdmissionUncheckedCreateWithoutUniversityInput> | AdmissionCreateWithoutUniversityInput[] | AdmissionUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutUniversityInput | AdmissionCreateOrConnectWithoutUniversityInput[]
    upsert?: AdmissionUpsertWithWhereUniqueWithoutUniversityInput | AdmissionUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: AdmissionCreateManyUniversityInputEnvelope
    set?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    disconnect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    delete?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    update?: AdmissionUpdateWithWhereUniqueWithoutUniversityInput | AdmissionUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: AdmissionUpdateManyWithWhereWithoutUniversityInput | AdmissionUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: AdmissionScalarWhereInput | AdmissionScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ApplicationCreateWithoutUniversityInput, ApplicationUncheckedCreateWithoutUniversityInput> | ApplicationCreateWithoutUniversityInput[] | ApplicationUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutUniversityInput | ApplicationCreateOrConnectWithoutUniversityInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutUniversityInput | ApplicationUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ApplicationCreateManyUniversityInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutUniversityInput | ApplicationUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutUniversityInput | ApplicationUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<TuitionBreakdownCreateWithoutUniversityInput, TuitionBreakdownUncheckedCreateWithoutUniversityInput> | TuitionBreakdownCreateWithoutUniversityInput[] | TuitionBreakdownUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutUniversityInput | TuitionBreakdownCreateOrConnectWithoutUniversityInput[]
    upsert?: TuitionBreakdownUpsertWithWhereUniqueWithoutUniversityInput | TuitionBreakdownUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: TuitionBreakdownCreateManyUniversityInputEnvelope
    set?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    disconnect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    delete?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    update?: TuitionBreakdownUpdateWithWhereUniqueWithoutUniversityInput | TuitionBreakdownUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: TuitionBreakdownUpdateManyWithWhereWithoutUniversityInput | TuitionBreakdownUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: TuitionBreakdownScalarWhereInput | TuitionBreakdownScalarWhereInput[]
  }

  export type ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<ScholarshipCreateWithoutUniversityInput, ScholarshipUncheckedCreateWithoutUniversityInput> | ScholarshipCreateWithoutUniversityInput[] | ScholarshipUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutUniversityInput | ScholarshipCreateOrConnectWithoutUniversityInput[]
    upsert?: ScholarshipUpsertWithWhereUniqueWithoutUniversityInput | ScholarshipUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: ScholarshipCreateManyUniversityInputEnvelope
    set?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    disconnect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    delete?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    update?: ScholarshipUpdateWithWhereUniqueWithoutUniversityInput | ScholarshipUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: ScholarshipUpdateManyWithWhereWithoutUniversityInput | ScholarshipUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: ScholarshipScalarWhereInput | ScholarshipScalarWhereInput[]
  }

  export type FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<FeeStructureCreateWithoutUniversityInput, FeeStructureUncheckedCreateWithoutUniversityInput> | FeeStructureCreateWithoutUniversityInput[] | FeeStructureUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutUniversityInput | FeeStructureCreateOrConnectWithoutUniversityInput[]
    upsert?: FeeStructureUpsertWithWhereUniqueWithoutUniversityInput | FeeStructureUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: FeeStructureCreateManyUniversityInputEnvelope
    set?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    disconnect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    delete?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    update?: FeeStructureUpdateWithWhereUniqueWithoutUniversityInput | FeeStructureUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: FeeStructureUpdateManyWithWhereWithoutUniversityInput | FeeStructureUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: FeeStructureScalarWhereInput | FeeStructureScalarWhereInput[]
  }

  export type FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<FinancialAidCreateWithoutUniversityInput, FinancialAidUncheckedCreateWithoutUniversityInput> | FinancialAidCreateWithoutUniversityInput[] | FinancialAidUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutUniversityInput | FinancialAidCreateOrConnectWithoutUniversityInput[]
    upsert?: FinancialAidUpsertWithWhereUniqueWithoutUniversityInput | FinancialAidUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: FinancialAidCreateManyUniversityInputEnvelope
    set?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    disconnect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    delete?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    update?: FinancialAidUpdateWithWhereUniqueWithoutUniversityInput | FinancialAidUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: FinancialAidUpdateManyWithWhereWithoutUniversityInput | FinancialAidUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: FinancialAidScalarWhereInput | FinancialAidScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput = {
    create?: XOR<UserCreateWithoutSavedUniversitiesInput, UserUncheckedCreateWithoutSavedUniversitiesInput> | UserCreateWithoutSavedUniversitiesInput[] | UserUncheckedCreateWithoutSavedUniversitiesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutSavedUniversitiesInput | UserCreateOrConnectWithoutSavedUniversitiesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutSavedUniversitiesInput | UserUpsertWithWhereUniqueWithoutSavedUniversitiesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutSavedUniversitiesInput | UserUpdateWithWhereUniqueWithoutSavedUniversitiesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutSavedUniversitiesInput | UserUpdateManyWithWhereWithoutSavedUniversitiesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput = {
    create?: XOR<CalendarEventCreateWithoutUniversityInput, CalendarEventUncheckedCreateWithoutUniversityInput> | CalendarEventCreateWithoutUniversityInput[] | CalendarEventUncheckedCreateWithoutUniversityInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutUniversityInput | CalendarEventCreateOrConnectWithoutUniversityInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutUniversityInput | CalendarEventUpsertWithWhereUniqueWithoutUniversityInput[]
    createMany?: CalendarEventCreateManyUniversityInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutUniversityInput | CalendarEventUpdateWithWhereUniqueWithoutUniversityInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutUniversityInput | CalendarEventUpdateManyWithWhereWithoutUniversityInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type UniversityCreateNestedOneWithoutImagesInput = {
    create?: XOR<UniversityCreateWithoutImagesInput, UniversityUncheckedCreateWithoutImagesInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutImagesInput
    connect?: UniversityWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UniversityUpdateOneRequiredWithoutImagesNestedInput = {
    create?: XOR<UniversityCreateWithoutImagesInput, UniversityUncheckedCreateWithoutImagesInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutImagesInput
    upsert?: UniversityUpsertWithoutImagesInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutImagesInput, UniversityUpdateWithoutImagesInput>, UniversityUncheckedUpdateWithoutImagesInput>
  }

  export type ProgramCreateNestedOneWithoutDepartmentsInput = {
    create?: XOR<ProgramCreateWithoutDepartmentsInput, ProgramUncheckedCreateWithoutDepartmentsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutDepartmentsInput
    connect?: ProgramWhereUniqueInput
  }

  export type DepartmentCreateNestedOneWithoutProgramsInput = {
    create?: XOR<DepartmentCreateWithoutProgramsInput, DepartmentUncheckedCreateWithoutProgramsInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutProgramsInput
    connect?: DepartmentWhereUniqueInput
  }

  export type ProgramUpdateOneRequiredWithoutDepartmentsNestedInput = {
    create?: XOR<ProgramCreateWithoutDepartmentsInput, ProgramUncheckedCreateWithoutDepartmentsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutDepartmentsInput
    upsert?: ProgramUpsertWithoutDepartmentsInput
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutDepartmentsInput, ProgramUpdateWithoutDepartmentsInput>, ProgramUncheckedUpdateWithoutDepartmentsInput>
  }

  export type DepartmentUpdateOneRequiredWithoutProgramsNestedInput = {
    create?: XOR<DepartmentCreateWithoutProgramsInput, DepartmentUncheckedCreateWithoutProgramsInput>
    connectOrCreate?: DepartmentCreateOrConnectWithoutProgramsInput
    upsert?: DepartmentUpsertWithoutProgramsInput
    connect?: DepartmentWhereUniqueInput
    update?: XOR<XOR<DepartmentUpdateToOneWithWhereWithoutProgramsInput, DepartmentUpdateWithoutProgramsInput>, DepartmentUncheckedUpdateWithoutProgramsInput>
  }

  export type UniversityCreateNestedOneWithoutDepartmentsInput = {
    create?: XOR<UniversityCreateWithoutDepartmentsInput, UniversityUncheckedCreateWithoutDepartmentsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutDepartmentsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramDepartmentCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<ProgramDepartmentCreateWithoutDepartmentInput, ProgramDepartmentUncheckedCreateWithoutDepartmentInput> | ProgramDepartmentCreateWithoutDepartmentInput[] | ProgramDepartmentUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutDepartmentInput | ProgramDepartmentCreateOrConnectWithoutDepartmentInput[]
    createMany?: ProgramDepartmentCreateManyDepartmentInputEnvelope
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
  }

  export type ProgramDepartmentUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<ProgramDepartmentCreateWithoutDepartmentInput, ProgramDepartmentUncheckedCreateWithoutDepartmentInput> | ProgramDepartmentCreateWithoutDepartmentInput[] | ProgramDepartmentUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutDepartmentInput | ProgramDepartmentCreateOrConnectWithoutDepartmentInput[]
    createMany?: ProgramDepartmentCreateManyDepartmentInputEnvelope
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutDepartmentsNestedInput = {
    create?: XOR<UniversityCreateWithoutDepartmentsInput, UniversityUncheckedCreateWithoutDepartmentsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutDepartmentsInput
    upsert?: UniversityUpsertWithoutDepartmentsInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutDepartmentsInput, UniversityUpdateWithoutDepartmentsInput>, UniversityUncheckedUpdateWithoutDepartmentsInput>
  }

  export type ProgramDepartmentUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<ProgramDepartmentCreateWithoutDepartmentInput, ProgramDepartmentUncheckedCreateWithoutDepartmentInput> | ProgramDepartmentCreateWithoutDepartmentInput[] | ProgramDepartmentUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutDepartmentInput | ProgramDepartmentCreateOrConnectWithoutDepartmentInput[]
    upsert?: ProgramDepartmentUpsertWithWhereUniqueWithoutDepartmentInput | ProgramDepartmentUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: ProgramDepartmentCreateManyDepartmentInputEnvelope
    set?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    disconnect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    delete?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    update?: ProgramDepartmentUpdateWithWhereUniqueWithoutDepartmentInput | ProgramDepartmentUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: ProgramDepartmentUpdateManyWithWhereWithoutDepartmentInput | ProgramDepartmentUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: ProgramDepartmentScalarWhereInput | ProgramDepartmentScalarWhereInput[]
  }

  export type ProgramDepartmentUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<ProgramDepartmentCreateWithoutDepartmentInput, ProgramDepartmentUncheckedCreateWithoutDepartmentInput> | ProgramDepartmentCreateWithoutDepartmentInput[] | ProgramDepartmentUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutDepartmentInput | ProgramDepartmentCreateOrConnectWithoutDepartmentInput[]
    upsert?: ProgramDepartmentUpsertWithWhereUniqueWithoutDepartmentInput | ProgramDepartmentUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: ProgramDepartmentCreateManyDepartmentInputEnvelope
    set?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    disconnect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    delete?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    update?: ProgramDepartmentUpdateWithWhereUniqueWithoutDepartmentInput | ProgramDepartmentUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: ProgramDepartmentUpdateManyWithWhereWithoutDepartmentInput | ProgramDepartmentUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: ProgramDepartmentScalarWhereInput | ProgramDepartmentScalarWhereInput[]
  }

  export type UniversityCreateNestedOneWithoutProgramsInput = {
    create?: XOR<UniversityCreateWithoutProgramsInput, UniversityUncheckedCreateWithoutProgramsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutProgramsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramDepartmentCreateNestedManyWithoutProgramInput = {
    create?: XOR<ProgramDepartmentCreateWithoutProgramInput, ProgramDepartmentUncheckedCreateWithoutProgramInput> | ProgramDepartmentCreateWithoutProgramInput[] | ProgramDepartmentUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutProgramInput | ProgramDepartmentCreateOrConnectWithoutProgramInput[]
    createMany?: ProgramDepartmentCreateManyProgramInputEnvelope
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
  }

  export type SyllabusCreateNestedOneWithoutProgramInput = {
    create?: XOR<SyllabusCreateWithoutProgramInput, SyllabusUncheckedCreateWithoutProgramInput>
    connectOrCreate?: SyllabusCreateOrConnectWithoutProgramInput
    connect?: SyllabusWhereUniqueInput
  }

  export type ProgramRankingCreateNestedManyWithoutProgramInput = {
    create?: XOR<ProgramRankingCreateWithoutProgramInput, ProgramRankingUncheckedCreateWithoutProgramInput> | ProgramRankingCreateWithoutProgramInput[] | ProgramRankingUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramRankingCreateOrConnectWithoutProgramInput | ProgramRankingCreateOrConnectWithoutProgramInput[]
    createMany?: ProgramRankingCreateManyProgramInputEnvelope
    connect?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
  }

  export type ExternalLinkCreateNestedManyWithoutProgramInput = {
    create?: XOR<ExternalLinkCreateWithoutProgramInput, ExternalLinkUncheckedCreateWithoutProgramInput> | ExternalLinkCreateWithoutProgramInput[] | ExternalLinkUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ExternalLinkCreateOrConnectWithoutProgramInput | ExternalLinkCreateOrConnectWithoutProgramInput[]
    createMany?: ExternalLinkCreateManyProgramInputEnvelope
    connect?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
  }

  export type AdmissionCreateNestedManyWithoutProgramInput = {
    create?: XOR<AdmissionCreateWithoutProgramInput, AdmissionUncheckedCreateWithoutProgramInput> | AdmissionCreateWithoutProgramInput[] | AdmissionUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutProgramInput | AdmissionCreateOrConnectWithoutProgramInput[]
    createMany?: AdmissionCreateManyProgramInputEnvelope
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutProgramInput = {
    create?: XOR<ApplicationCreateWithoutProgramInput, ApplicationUncheckedCreateWithoutProgramInput> | ApplicationCreateWithoutProgramInput[] | ApplicationUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutProgramInput | ApplicationCreateOrConnectWithoutProgramInput[]
    createMany?: ApplicationCreateManyProgramInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type TuitionBreakdownCreateNestedManyWithoutProgramInput = {
    create?: XOR<TuitionBreakdownCreateWithoutProgramInput, TuitionBreakdownUncheckedCreateWithoutProgramInput> | TuitionBreakdownCreateWithoutProgramInput[] | TuitionBreakdownUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutProgramInput | TuitionBreakdownCreateOrConnectWithoutProgramInput[]
    createMany?: TuitionBreakdownCreateManyProgramInputEnvelope
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
  }

  export type ScholarshipCreateNestedManyWithoutProgramInput = {
    create?: XOR<ScholarshipCreateWithoutProgramInput, ScholarshipUncheckedCreateWithoutProgramInput> | ScholarshipCreateWithoutProgramInput[] | ScholarshipUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutProgramInput | ScholarshipCreateOrConnectWithoutProgramInput[]
    createMany?: ScholarshipCreateManyProgramInputEnvelope
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
  }

  export type FeeStructureCreateNestedManyWithoutProgramInput = {
    create?: XOR<FeeStructureCreateWithoutProgramInput, FeeStructureUncheckedCreateWithoutProgramInput> | FeeStructureCreateWithoutProgramInput[] | FeeStructureUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutProgramInput | FeeStructureCreateOrConnectWithoutProgramInput[]
    createMany?: FeeStructureCreateManyProgramInputEnvelope
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
  }

  export type FinancialAidCreateNestedManyWithoutProgramInput = {
    create?: XOR<FinancialAidCreateWithoutProgramInput, FinancialAidUncheckedCreateWithoutProgramInput> | FinancialAidCreateWithoutProgramInput[] | FinancialAidUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutProgramInput | FinancialAidCreateOrConnectWithoutProgramInput[]
    createMany?: FinancialAidCreateManyProgramInputEnvelope
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
  }

  export type EssayPromptCreateNestedManyWithoutProgramInput = {
    create?: XOR<EssayPromptCreateWithoutProgramInput, EssayPromptUncheckedCreateWithoutProgramInput> | EssayPromptCreateWithoutProgramInput[] | EssayPromptUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutProgramInput | EssayPromptCreateOrConnectWithoutProgramInput[]
    createMany?: EssayPromptCreateManyProgramInputEnvelope
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
  }

  export type CalendarEventCreateNestedManyWithoutProgramInput = {
    create?: XOR<CalendarEventCreateWithoutProgramInput, CalendarEventUncheckedCreateWithoutProgramInput> | CalendarEventCreateWithoutProgramInput[] | CalendarEventUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutProgramInput | CalendarEventCreateOrConnectWithoutProgramInput[]
    createMany?: CalendarEventCreateManyProgramInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type EssayCreateNestedManyWithoutProgramInput = {
    create?: XOR<EssayCreateWithoutProgramInput, EssayUncheckedCreateWithoutProgramInput> | EssayCreateWithoutProgramInput[] | EssayUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutProgramInput | EssayCreateOrConnectWithoutProgramInput[]
    createMany?: EssayCreateManyProgramInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<ProgramDepartmentCreateWithoutProgramInput, ProgramDepartmentUncheckedCreateWithoutProgramInput> | ProgramDepartmentCreateWithoutProgramInput[] | ProgramDepartmentUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutProgramInput | ProgramDepartmentCreateOrConnectWithoutProgramInput[]
    createMany?: ProgramDepartmentCreateManyProgramInputEnvelope
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
  }

  export type SyllabusUncheckedCreateNestedOneWithoutProgramInput = {
    create?: XOR<SyllabusCreateWithoutProgramInput, SyllabusUncheckedCreateWithoutProgramInput>
    connectOrCreate?: SyllabusCreateOrConnectWithoutProgramInput
    connect?: SyllabusWhereUniqueInput
  }

  export type ProgramRankingUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<ProgramRankingCreateWithoutProgramInput, ProgramRankingUncheckedCreateWithoutProgramInput> | ProgramRankingCreateWithoutProgramInput[] | ProgramRankingUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramRankingCreateOrConnectWithoutProgramInput | ProgramRankingCreateOrConnectWithoutProgramInput[]
    createMany?: ProgramRankingCreateManyProgramInputEnvelope
    connect?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
  }

  export type ExternalLinkUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<ExternalLinkCreateWithoutProgramInput, ExternalLinkUncheckedCreateWithoutProgramInput> | ExternalLinkCreateWithoutProgramInput[] | ExternalLinkUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ExternalLinkCreateOrConnectWithoutProgramInput | ExternalLinkCreateOrConnectWithoutProgramInput[]
    createMany?: ExternalLinkCreateManyProgramInputEnvelope
    connect?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
  }

  export type AdmissionUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<AdmissionCreateWithoutProgramInput, AdmissionUncheckedCreateWithoutProgramInput> | AdmissionCreateWithoutProgramInput[] | AdmissionUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutProgramInput | AdmissionCreateOrConnectWithoutProgramInput[]
    createMany?: AdmissionCreateManyProgramInputEnvelope
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<ApplicationCreateWithoutProgramInput, ApplicationUncheckedCreateWithoutProgramInput> | ApplicationCreateWithoutProgramInput[] | ApplicationUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutProgramInput | ApplicationCreateOrConnectWithoutProgramInput[]
    createMany?: ApplicationCreateManyProgramInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<TuitionBreakdownCreateWithoutProgramInput, TuitionBreakdownUncheckedCreateWithoutProgramInput> | TuitionBreakdownCreateWithoutProgramInput[] | TuitionBreakdownUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutProgramInput | TuitionBreakdownCreateOrConnectWithoutProgramInput[]
    createMany?: TuitionBreakdownCreateManyProgramInputEnvelope
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
  }

  export type ScholarshipUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<ScholarshipCreateWithoutProgramInput, ScholarshipUncheckedCreateWithoutProgramInput> | ScholarshipCreateWithoutProgramInput[] | ScholarshipUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutProgramInput | ScholarshipCreateOrConnectWithoutProgramInput[]
    createMany?: ScholarshipCreateManyProgramInputEnvelope
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
  }

  export type FeeStructureUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<FeeStructureCreateWithoutProgramInput, FeeStructureUncheckedCreateWithoutProgramInput> | FeeStructureCreateWithoutProgramInput[] | FeeStructureUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutProgramInput | FeeStructureCreateOrConnectWithoutProgramInput[]
    createMany?: FeeStructureCreateManyProgramInputEnvelope
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
  }

  export type FinancialAidUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<FinancialAidCreateWithoutProgramInput, FinancialAidUncheckedCreateWithoutProgramInput> | FinancialAidCreateWithoutProgramInput[] | FinancialAidUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutProgramInput | FinancialAidCreateOrConnectWithoutProgramInput[]
    createMany?: FinancialAidCreateManyProgramInputEnvelope
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
  }

  export type EssayPromptUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<EssayPromptCreateWithoutProgramInput, EssayPromptUncheckedCreateWithoutProgramInput> | EssayPromptCreateWithoutProgramInput[] | EssayPromptUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutProgramInput | EssayPromptCreateOrConnectWithoutProgramInput[]
    createMany?: EssayPromptCreateManyProgramInputEnvelope
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<CalendarEventCreateWithoutProgramInput, CalendarEventUncheckedCreateWithoutProgramInput> | CalendarEventCreateWithoutProgramInput[] | CalendarEventUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutProgramInput | CalendarEventCreateOrConnectWithoutProgramInput[]
    createMany?: CalendarEventCreateManyProgramInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type EssayUncheckedCreateNestedManyWithoutProgramInput = {
    create?: XOR<EssayCreateWithoutProgramInput, EssayUncheckedCreateWithoutProgramInput> | EssayCreateWithoutProgramInput[] | EssayUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutProgramInput | EssayCreateOrConnectWithoutProgramInput[]
    createMany?: EssayCreateManyProgramInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutProgramsNestedInput = {
    create?: XOR<UniversityCreateWithoutProgramsInput, UniversityUncheckedCreateWithoutProgramsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutProgramsInput
    upsert?: UniversityUpsertWithoutProgramsInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutProgramsInput, UniversityUpdateWithoutProgramsInput>, UniversityUncheckedUpdateWithoutProgramsInput>
  }

  export type ProgramDepartmentUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ProgramDepartmentCreateWithoutProgramInput, ProgramDepartmentUncheckedCreateWithoutProgramInput> | ProgramDepartmentCreateWithoutProgramInput[] | ProgramDepartmentUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutProgramInput | ProgramDepartmentCreateOrConnectWithoutProgramInput[]
    upsert?: ProgramDepartmentUpsertWithWhereUniqueWithoutProgramInput | ProgramDepartmentUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ProgramDepartmentCreateManyProgramInputEnvelope
    set?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    disconnect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    delete?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    update?: ProgramDepartmentUpdateWithWhereUniqueWithoutProgramInput | ProgramDepartmentUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ProgramDepartmentUpdateManyWithWhereWithoutProgramInput | ProgramDepartmentUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ProgramDepartmentScalarWhereInput | ProgramDepartmentScalarWhereInput[]
  }

  export type SyllabusUpdateOneWithoutProgramNestedInput = {
    create?: XOR<SyllabusCreateWithoutProgramInput, SyllabusUncheckedCreateWithoutProgramInput>
    connectOrCreate?: SyllabusCreateOrConnectWithoutProgramInput
    upsert?: SyllabusUpsertWithoutProgramInput
    disconnect?: SyllabusWhereInput | boolean
    delete?: SyllabusWhereInput | boolean
    connect?: SyllabusWhereUniqueInput
    update?: XOR<XOR<SyllabusUpdateToOneWithWhereWithoutProgramInput, SyllabusUpdateWithoutProgramInput>, SyllabusUncheckedUpdateWithoutProgramInput>
  }

  export type ProgramRankingUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ProgramRankingCreateWithoutProgramInput, ProgramRankingUncheckedCreateWithoutProgramInput> | ProgramRankingCreateWithoutProgramInput[] | ProgramRankingUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramRankingCreateOrConnectWithoutProgramInput | ProgramRankingCreateOrConnectWithoutProgramInput[]
    upsert?: ProgramRankingUpsertWithWhereUniqueWithoutProgramInput | ProgramRankingUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ProgramRankingCreateManyProgramInputEnvelope
    set?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    disconnect?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    delete?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    connect?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    update?: ProgramRankingUpdateWithWhereUniqueWithoutProgramInput | ProgramRankingUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ProgramRankingUpdateManyWithWhereWithoutProgramInput | ProgramRankingUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ProgramRankingScalarWhereInput | ProgramRankingScalarWhereInput[]
  }

  export type ExternalLinkUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ExternalLinkCreateWithoutProgramInput, ExternalLinkUncheckedCreateWithoutProgramInput> | ExternalLinkCreateWithoutProgramInput[] | ExternalLinkUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ExternalLinkCreateOrConnectWithoutProgramInput | ExternalLinkCreateOrConnectWithoutProgramInput[]
    upsert?: ExternalLinkUpsertWithWhereUniqueWithoutProgramInput | ExternalLinkUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ExternalLinkCreateManyProgramInputEnvelope
    set?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    disconnect?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    delete?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    connect?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    update?: ExternalLinkUpdateWithWhereUniqueWithoutProgramInput | ExternalLinkUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ExternalLinkUpdateManyWithWhereWithoutProgramInput | ExternalLinkUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ExternalLinkScalarWhereInput | ExternalLinkScalarWhereInput[]
  }

  export type AdmissionUpdateManyWithoutProgramNestedInput = {
    create?: XOR<AdmissionCreateWithoutProgramInput, AdmissionUncheckedCreateWithoutProgramInput> | AdmissionCreateWithoutProgramInput[] | AdmissionUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutProgramInput | AdmissionCreateOrConnectWithoutProgramInput[]
    upsert?: AdmissionUpsertWithWhereUniqueWithoutProgramInput | AdmissionUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: AdmissionCreateManyProgramInputEnvelope
    set?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    disconnect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    delete?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    update?: AdmissionUpdateWithWhereUniqueWithoutProgramInput | AdmissionUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: AdmissionUpdateManyWithWhereWithoutProgramInput | AdmissionUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: AdmissionScalarWhereInput | AdmissionScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ApplicationCreateWithoutProgramInput, ApplicationUncheckedCreateWithoutProgramInput> | ApplicationCreateWithoutProgramInput[] | ApplicationUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutProgramInput | ApplicationCreateOrConnectWithoutProgramInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutProgramInput | ApplicationUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ApplicationCreateManyProgramInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutProgramInput | ApplicationUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutProgramInput | ApplicationUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type TuitionBreakdownUpdateManyWithoutProgramNestedInput = {
    create?: XOR<TuitionBreakdownCreateWithoutProgramInput, TuitionBreakdownUncheckedCreateWithoutProgramInput> | TuitionBreakdownCreateWithoutProgramInput[] | TuitionBreakdownUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutProgramInput | TuitionBreakdownCreateOrConnectWithoutProgramInput[]
    upsert?: TuitionBreakdownUpsertWithWhereUniqueWithoutProgramInput | TuitionBreakdownUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: TuitionBreakdownCreateManyProgramInputEnvelope
    set?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    disconnect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    delete?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    update?: TuitionBreakdownUpdateWithWhereUniqueWithoutProgramInput | TuitionBreakdownUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: TuitionBreakdownUpdateManyWithWhereWithoutProgramInput | TuitionBreakdownUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: TuitionBreakdownScalarWhereInput | TuitionBreakdownScalarWhereInput[]
  }

  export type ScholarshipUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ScholarshipCreateWithoutProgramInput, ScholarshipUncheckedCreateWithoutProgramInput> | ScholarshipCreateWithoutProgramInput[] | ScholarshipUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutProgramInput | ScholarshipCreateOrConnectWithoutProgramInput[]
    upsert?: ScholarshipUpsertWithWhereUniqueWithoutProgramInput | ScholarshipUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ScholarshipCreateManyProgramInputEnvelope
    set?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    disconnect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    delete?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    update?: ScholarshipUpdateWithWhereUniqueWithoutProgramInput | ScholarshipUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ScholarshipUpdateManyWithWhereWithoutProgramInput | ScholarshipUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ScholarshipScalarWhereInput | ScholarshipScalarWhereInput[]
  }

  export type FeeStructureUpdateManyWithoutProgramNestedInput = {
    create?: XOR<FeeStructureCreateWithoutProgramInput, FeeStructureUncheckedCreateWithoutProgramInput> | FeeStructureCreateWithoutProgramInput[] | FeeStructureUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutProgramInput | FeeStructureCreateOrConnectWithoutProgramInput[]
    upsert?: FeeStructureUpsertWithWhereUniqueWithoutProgramInput | FeeStructureUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: FeeStructureCreateManyProgramInputEnvelope
    set?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    disconnect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    delete?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    update?: FeeStructureUpdateWithWhereUniqueWithoutProgramInput | FeeStructureUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: FeeStructureUpdateManyWithWhereWithoutProgramInput | FeeStructureUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: FeeStructureScalarWhereInput | FeeStructureScalarWhereInput[]
  }

  export type FinancialAidUpdateManyWithoutProgramNestedInput = {
    create?: XOR<FinancialAidCreateWithoutProgramInput, FinancialAidUncheckedCreateWithoutProgramInput> | FinancialAidCreateWithoutProgramInput[] | FinancialAidUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutProgramInput | FinancialAidCreateOrConnectWithoutProgramInput[]
    upsert?: FinancialAidUpsertWithWhereUniqueWithoutProgramInput | FinancialAidUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: FinancialAidCreateManyProgramInputEnvelope
    set?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    disconnect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    delete?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    update?: FinancialAidUpdateWithWhereUniqueWithoutProgramInput | FinancialAidUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: FinancialAidUpdateManyWithWhereWithoutProgramInput | FinancialAidUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: FinancialAidScalarWhereInput | FinancialAidScalarWhereInput[]
  }

  export type EssayPromptUpdateManyWithoutProgramNestedInput = {
    create?: XOR<EssayPromptCreateWithoutProgramInput, EssayPromptUncheckedCreateWithoutProgramInput> | EssayPromptCreateWithoutProgramInput[] | EssayPromptUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutProgramInput | EssayPromptCreateOrConnectWithoutProgramInput[]
    upsert?: EssayPromptUpsertWithWhereUniqueWithoutProgramInput | EssayPromptUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: EssayPromptCreateManyProgramInputEnvelope
    set?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    disconnect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    delete?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    update?: EssayPromptUpdateWithWhereUniqueWithoutProgramInput | EssayPromptUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: EssayPromptUpdateManyWithWhereWithoutProgramInput | EssayPromptUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
  }

  export type CalendarEventUpdateManyWithoutProgramNestedInput = {
    create?: XOR<CalendarEventCreateWithoutProgramInput, CalendarEventUncheckedCreateWithoutProgramInput> | CalendarEventCreateWithoutProgramInput[] | CalendarEventUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutProgramInput | CalendarEventCreateOrConnectWithoutProgramInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutProgramInput | CalendarEventUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: CalendarEventCreateManyProgramInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutProgramInput | CalendarEventUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutProgramInput | CalendarEventUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type EssayUpdateManyWithoutProgramNestedInput = {
    create?: XOR<EssayCreateWithoutProgramInput, EssayUncheckedCreateWithoutProgramInput> | EssayCreateWithoutProgramInput[] | EssayUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutProgramInput | EssayCreateOrConnectWithoutProgramInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutProgramInput | EssayUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: EssayCreateManyProgramInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutProgramInput | EssayUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutProgramInput | EssayUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ProgramDepartmentCreateWithoutProgramInput, ProgramDepartmentUncheckedCreateWithoutProgramInput> | ProgramDepartmentCreateWithoutProgramInput[] | ProgramDepartmentUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramDepartmentCreateOrConnectWithoutProgramInput | ProgramDepartmentCreateOrConnectWithoutProgramInput[]
    upsert?: ProgramDepartmentUpsertWithWhereUniqueWithoutProgramInput | ProgramDepartmentUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ProgramDepartmentCreateManyProgramInputEnvelope
    set?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    disconnect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    delete?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    connect?: ProgramDepartmentWhereUniqueInput | ProgramDepartmentWhereUniqueInput[]
    update?: ProgramDepartmentUpdateWithWhereUniqueWithoutProgramInput | ProgramDepartmentUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ProgramDepartmentUpdateManyWithWhereWithoutProgramInput | ProgramDepartmentUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ProgramDepartmentScalarWhereInput | ProgramDepartmentScalarWhereInput[]
  }

  export type SyllabusUncheckedUpdateOneWithoutProgramNestedInput = {
    create?: XOR<SyllabusCreateWithoutProgramInput, SyllabusUncheckedCreateWithoutProgramInput>
    connectOrCreate?: SyllabusCreateOrConnectWithoutProgramInput
    upsert?: SyllabusUpsertWithoutProgramInput
    disconnect?: SyllabusWhereInput | boolean
    delete?: SyllabusWhereInput | boolean
    connect?: SyllabusWhereUniqueInput
    update?: XOR<XOR<SyllabusUpdateToOneWithWhereWithoutProgramInput, SyllabusUpdateWithoutProgramInput>, SyllabusUncheckedUpdateWithoutProgramInput>
  }

  export type ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ProgramRankingCreateWithoutProgramInput, ProgramRankingUncheckedCreateWithoutProgramInput> | ProgramRankingCreateWithoutProgramInput[] | ProgramRankingUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ProgramRankingCreateOrConnectWithoutProgramInput | ProgramRankingCreateOrConnectWithoutProgramInput[]
    upsert?: ProgramRankingUpsertWithWhereUniqueWithoutProgramInput | ProgramRankingUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ProgramRankingCreateManyProgramInputEnvelope
    set?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    disconnect?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    delete?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    connect?: ProgramRankingWhereUniqueInput | ProgramRankingWhereUniqueInput[]
    update?: ProgramRankingUpdateWithWhereUniqueWithoutProgramInput | ProgramRankingUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ProgramRankingUpdateManyWithWhereWithoutProgramInput | ProgramRankingUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ProgramRankingScalarWhereInput | ProgramRankingScalarWhereInput[]
  }

  export type ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ExternalLinkCreateWithoutProgramInput, ExternalLinkUncheckedCreateWithoutProgramInput> | ExternalLinkCreateWithoutProgramInput[] | ExternalLinkUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ExternalLinkCreateOrConnectWithoutProgramInput | ExternalLinkCreateOrConnectWithoutProgramInput[]
    upsert?: ExternalLinkUpsertWithWhereUniqueWithoutProgramInput | ExternalLinkUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ExternalLinkCreateManyProgramInputEnvelope
    set?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    disconnect?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    delete?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    connect?: ExternalLinkWhereUniqueInput | ExternalLinkWhereUniqueInput[]
    update?: ExternalLinkUpdateWithWhereUniqueWithoutProgramInput | ExternalLinkUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ExternalLinkUpdateManyWithWhereWithoutProgramInput | ExternalLinkUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ExternalLinkScalarWhereInput | ExternalLinkScalarWhereInput[]
  }

  export type AdmissionUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<AdmissionCreateWithoutProgramInput, AdmissionUncheckedCreateWithoutProgramInput> | AdmissionCreateWithoutProgramInput[] | AdmissionUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: AdmissionCreateOrConnectWithoutProgramInput | AdmissionCreateOrConnectWithoutProgramInput[]
    upsert?: AdmissionUpsertWithWhereUniqueWithoutProgramInput | AdmissionUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: AdmissionCreateManyProgramInputEnvelope
    set?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    disconnect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    delete?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    connect?: AdmissionWhereUniqueInput | AdmissionWhereUniqueInput[]
    update?: AdmissionUpdateWithWhereUniqueWithoutProgramInput | AdmissionUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: AdmissionUpdateManyWithWhereWithoutProgramInput | AdmissionUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: AdmissionScalarWhereInput | AdmissionScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ApplicationCreateWithoutProgramInput, ApplicationUncheckedCreateWithoutProgramInput> | ApplicationCreateWithoutProgramInput[] | ApplicationUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutProgramInput | ApplicationCreateOrConnectWithoutProgramInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutProgramInput | ApplicationUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ApplicationCreateManyProgramInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutProgramInput | ApplicationUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutProgramInput | ApplicationUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<TuitionBreakdownCreateWithoutProgramInput, TuitionBreakdownUncheckedCreateWithoutProgramInput> | TuitionBreakdownCreateWithoutProgramInput[] | TuitionBreakdownUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutProgramInput | TuitionBreakdownCreateOrConnectWithoutProgramInput[]
    upsert?: TuitionBreakdownUpsertWithWhereUniqueWithoutProgramInput | TuitionBreakdownUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: TuitionBreakdownCreateManyProgramInputEnvelope
    set?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    disconnect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    delete?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    connect?: TuitionBreakdownWhereUniqueInput | TuitionBreakdownWhereUniqueInput[]
    update?: TuitionBreakdownUpdateWithWhereUniqueWithoutProgramInput | TuitionBreakdownUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: TuitionBreakdownUpdateManyWithWhereWithoutProgramInput | TuitionBreakdownUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: TuitionBreakdownScalarWhereInput | TuitionBreakdownScalarWhereInput[]
  }

  export type ScholarshipUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<ScholarshipCreateWithoutProgramInput, ScholarshipUncheckedCreateWithoutProgramInput> | ScholarshipCreateWithoutProgramInput[] | ScholarshipUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: ScholarshipCreateOrConnectWithoutProgramInput | ScholarshipCreateOrConnectWithoutProgramInput[]
    upsert?: ScholarshipUpsertWithWhereUniqueWithoutProgramInput | ScholarshipUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: ScholarshipCreateManyProgramInputEnvelope
    set?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    disconnect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    delete?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    connect?: ScholarshipWhereUniqueInput | ScholarshipWhereUniqueInput[]
    update?: ScholarshipUpdateWithWhereUniqueWithoutProgramInput | ScholarshipUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: ScholarshipUpdateManyWithWhereWithoutProgramInput | ScholarshipUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: ScholarshipScalarWhereInput | ScholarshipScalarWhereInput[]
  }

  export type FeeStructureUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<FeeStructureCreateWithoutProgramInput, FeeStructureUncheckedCreateWithoutProgramInput> | FeeStructureCreateWithoutProgramInput[] | FeeStructureUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FeeStructureCreateOrConnectWithoutProgramInput | FeeStructureCreateOrConnectWithoutProgramInput[]
    upsert?: FeeStructureUpsertWithWhereUniqueWithoutProgramInput | FeeStructureUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: FeeStructureCreateManyProgramInputEnvelope
    set?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    disconnect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    delete?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    connect?: FeeStructureWhereUniqueInput | FeeStructureWhereUniqueInput[]
    update?: FeeStructureUpdateWithWhereUniqueWithoutProgramInput | FeeStructureUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: FeeStructureUpdateManyWithWhereWithoutProgramInput | FeeStructureUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: FeeStructureScalarWhereInput | FeeStructureScalarWhereInput[]
  }

  export type FinancialAidUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<FinancialAidCreateWithoutProgramInput, FinancialAidUncheckedCreateWithoutProgramInput> | FinancialAidCreateWithoutProgramInput[] | FinancialAidUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: FinancialAidCreateOrConnectWithoutProgramInput | FinancialAidCreateOrConnectWithoutProgramInput[]
    upsert?: FinancialAidUpsertWithWhereUniqueWithoutProgramInput | FinancialAidUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: FinancialAidCreateManyProgramInputEnvelope
    set?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    disconnect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    delete?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    connect?: FinancialAidWhereUniqueInput | FinancialAidWhereUniqueInput[]
    update?: FinancialAidUpdateWithWhereUniqueWithoutProgramInput | FinancialAidUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: FinancialAidUpdateManyWithWhereWithoutProgramInput | FinancialAidUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: FinancialAidScalarWhereInput | FinancialAidScalarWhereInput[]
  }

  export type EssayPromptUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<EssayPromptCreateWithoutProgramInput, EssayPromptUncheckedCreateWithoutProgramInput> | EssayPromptCreateWithoutProgramInput[] | EssayPromptUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutProgramInput | EssayPromptCreateOrConnectWithoutProgramInput[]
    upsert?: EssayPromptUpsertWithWhereUniqueWithoutProgramInput | EssayPromptUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: EssayPromptCreateManyProgramInputEnvelope
    set?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    disconnect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    delete?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    update?: EssayPromptUpdateWithWhereUniqueWithoutProgramInput | EssayPromptUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: EssayPromptUpdateManyWithWhereWithoutProgramInput | EssayPromptUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<CalendarEventCreateWithoutProgramInput, CalendarEventUncheckedCreateWithoutProgramInput> | CalendarEventCreateWithoutProgramInput[] | CalendarEventUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutProgramInput | CalendarEventCreateOrConnectWithoutProgramInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutProgramInput | CalendarEventUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: CalendarEventCreateManyProgramInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutProgramInput | CalendarEventUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutProgramInput | CalendarEventUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type EssayUncheckedUpdateManyWithoutProgramNestedInput = {
    create?: XOR<EssayCreateWithoutProgramInput, EssayUncheckedCreateWithoutProgramInput> | EssayCreateWithoutProgramInput[] | EssayUncheckedCreateWithoutProgramInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutProgramInput | EssayCreateOrConnectWithoutProgramInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutProgramInput | EssayUpsertWithWhereUniqueWithoutProgramInput[]
    createMany?: EssayCreateManyProgramInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutProgramInput | EssayUpdateWithWhereUniqueWithoutProgramInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutProgramInput | EssayUpdateManyWithWhereWithoutProgramInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type ProgramCreateNestedOneWithoutSyllabusInput = {
    create?: XOR<ProgramCreateWithoutSyllabusInput, ProgramUncheckedCreateWithoutSyllabusInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutSyllabusInput
    connect?: ProgramWhereUniqueInput
  }

  export type ProgramUpdateOneRequiredWithoutSyllabusNestedInput = {
    create?: XOR<ProgramCreateWithoutSyllabusInput, ProgramUncheckedCreateWithoutSyllabusInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutSyllabusInput
    upsert?: ProgramUpsertWithoutSyllabusInput
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutSyllabusInput, ProgramUpdateWithoutSyllabusInput>, ProgramUncheckedUpdateWithoutSyllabusInput>
  }

  export type ProgramCreateNestedOneWithoutRankingsInput = {
    create?: XOR<ProgramCreateWithoutRankingsInput, ProgramUncheckedCreateWithoutRankingsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutRankingsInput
    connect?: ProgramWhereUniqueInput
  }

  export type ProgramUpdateOneRequiredWithoutRankingsNestedInput = {
    create?: XOR<ProgramCreateWithoutRankingsInput, ProgramUncheckedCreateWithoutRankingsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutRankingsInput
    upsert?: ProgramUpsertWithoutRankingsInput
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutRankingsInput, ProgramUpdateWithoutRankingsInput>, ProgramUncheckedUpdateWithoutRankingsInput>
  }

  export type ProgramCreateNestedOneWithoutExternalLinksInput = {
    create?: XOR<ProgramCreateWithoutExternalLinksInput, ProgramUncheckedCreateWithoutExternalLinksInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutExternalLinksInput
    connect?: ProgramWhereUniqueInput
  }

  export type ProgramUpdateOneRequiredWithoutExternalLinksNestedInput = {
    create?: XOR<ProgramCreateWithoutExternalLinksInput, ProgramUncheckedCreateWithoutExternalLinksInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutExternalLinksInput
    upsert?: ProgramUpsertWithoutExternalLinksInput
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutExternalLinksInput, ProgramUpdateWithoutExternalLinksInput>, ProgramUncheckedUpdateWithoutExternalLinksInput>
  }

  export type UniversityCreateNestedOneWithoutAdmissionsInput = {
    create?: XOR<UniversityCreateWithoutAdmissionsInput, UniversityUncheckedCreateWithoutAdmissionsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutAdmissionsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutAdmissionsInput = {
    create?: XOR<ProgramCreateWithoutAdmissionsInput, ProgramUncheckedCreateWithoutAdmissionsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutAdmissionsInput
    connect?: ProgramWhereUniqueInput
  }

  export type IntakeCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<IntakeCreateWithoutAdmissionInput, IntakeUncheckedCreateWithoutAdmissionInput> | IntakeCreateWithoutAdmissionInput[] | IntakeUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: IntakeCreateOrConnectWithoutAdmissionInput | IntakeCreateOrConnectWithoutAdmissionInput[]
    createMany?: IntakeCreateManyAdmissionInputEnvelope
    connect?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
  }

  export type AdmissionDeadlineCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutAdmissionInput, AdmissionDeadlineUncheckedCreateWithoutAdmissionInput> | AdmissionDeadlineCreateWithoutAdmissionInput[] | AdmissionDeadlineUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutAdmissionInput | AdmissionDeadlineCreateOrConnectWithoutAdmissionInput[]
    createMany?: AdmissionDeadlineCreateManyAdmissionInputEnvelope
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<ApplicationCreateWithoutAdmissionInput, ApplicationUncheckedCreateWithoutAdmissionInput> | ApplicationCreateWithoutAdmissionInput[] | ApplicationUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAdmissionInput | ApplicationCreateOrConnectWithoutAdmissionInput[]
    createMany?: ApplicationCreateManyAdmissionInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EssayPromptCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<EssayPromptCreateWithoutAdmissionInput, EssayPromptUncheckedCreateWithoutAdmissionInput> | EssayPromptCreateWithoutAdmissionInput[] | EssayPromptUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutAdmissionInput | EssayPromptCreateOrConnectWithoutAdmissionInput[]
    createMany?: EssayPromptCreateManyAdmissionInputEnvelope
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
  }

  export type CalendarEventCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionInput, CalendarEventUncheckedCreateWithoutAdmissionInput> | CalendarEventCreateWithoutAdmissionInput[] | CalendarEventUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionInput | CalendarEventCreateOrConnectWithoutAdmissionInput[]
    createMany?: CalendarEventCreateManyAdmissionInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type IntakeUncheckedCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<IntakeCreateWithoutAdmissionInput, IntakeUncheckedCreateWithoutAdmissionInput> | IntakeCreateWithoutAdmissionInput[] | IntakeUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: IntakeCreateOrConnectWithoutAdmissionInput | IntakeCreateOrConnectWithoutAdmissionInput[]
    createMany?: IntakeCreateManyAdmissionInputEnvelope
    connect?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
  }

  export type AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutAdmissionInput, AdmissionDeadlineUncheckedCreateWithoutAdmissionInput> | AdmissionDeadlineCreateWithoutAdmissionInput[] | AdmissionDeadlineUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutAdmissionInput | AdmissionDeadlineCreateOrConnectWithoutAdmissionInput[]
    createMany?: AdmissionDeadlineCreateManyAdmissionInputEnvelope
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<ApplicationCreateWithoutAdmissionInput, ApplicationUncheckedCreateWithoutAdmissionInput> | ApplicationCreateWithoutAdmissionInput[] | ApplicationUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAdmissionInput | ApplicationCreateOrConnectWithoutAdmissionInput[]
    createMany?: ApplicationCreateManyAdmissionInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<EssayPromptCreateWithoutAdmissionInput, EssayPromptUncheckedCreateWithoutAdmissionInput> | EssayPromptCreateWithoutAdmissionInput[] | EssayPromptUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutAdmissionInput | EssayPromptCreateOrConnectWithoutAdmissionInput[]
    createMany?: EssayPromptCreateManyAdmissionInputEnvelope
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionInput, CalendarEventUncheckedCreateWithoutAdmissionInput> | CalendarEventCreateWithoutAdmissionInput[] | CalendarEventUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionInput | CalendarEventCreateOrConnectWithoutAdmissionInput[]
    createMany?: CalendarEventCreateManyAdmissionInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutAdmissionsNestedInput = {
    create?: XOR<UniversityCreateWithoutAdmissionsInput, UniversityUncheckedCreateWithoutAdmissionsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutAdmissionsInput
    upsert?: UniversityUpsertWithoutAdmissionsInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutAdmissionsInput, UniversityUpdateWithoutAdmissionsInput>, UniversityUncheckedUpdateWithoutAdmissionsInput>
  }

  export type ProgramUpdateOneRequiredWithoutAdmissionsNestedInput = {
    create?: XOR<ProgramCreateWithoutAdmissionsInput, ProgramUncheckedCreateWithoutAdmissionsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutAdmissionsInput
    upsert?: ProgramUpsertWithoutAdmissionsInput
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutAdmissionsInput, ProgramUpdateWithoutAdmissionsInput>, ProgramUncheckedUpdateWithoutAdmissionsInput>
  }

  export type IntakeUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<IntakeCreateWithoutAdmissionInput, IntakeUncheckedCreateWithoutAdmissionInput> | IntakeCreateWithoutAdmissionInput[] | IntakeUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: IntakeCreateOrConnectWithoutAdmissionInput | IntakeCreateOrConnectWithoutAdmissionInput[]
    upsert?: IntakeUpsertWithWhereUniqueWithoutAdmissionInput | IntakeUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: IntakeCreateManyAdmissionInputEnvelope
    set?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    disconnect?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    delete?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    connect?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    update?: IntakeUpdateWithWhereUniqueWithoutAdmissionInput | IntakeUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: IntakeUpdateManyWithWhereWithoutAdmissionInput | IntakeUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: IntakeScalarWhereInput | IntakeScalarWhereInput[]
  }

  export type AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutAdmissionInput, AdmissionDeadlineUncheckedCreateWithoutAdmissionInput> | AdmissionDeadlineCreateWithoutAdmissionInput[] | AdmissionDeadlineUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutAdmissionInput | AdmissionDeadlineCreateOrConnectWithoutAdmissionInput[]
    upsert?: AdmissionDeadlineUpsertWithWhereUniqueWithoutAdmissionInput | AdmissionDeadlineUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: AdmissionDeadlineCreateManyAdmissionInputEnvelope
    set?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    disconnect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    delete?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    update?: AdmissionDeadlineUpdateWithWhereUniqueWithoutAdmissionInput | AdmissionDeadlineUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: AdmissionDeadlineUpdateManyWithWhereWithoutAdmissionInput | AdmissionDeadlineUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: AdmissionDeadlineScalarWhereInput | AdmissionDeadlineScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<ApplicationCreateWithoutAdmissionInput, ApplicationUncheckedCreateWithoutAdmissionInput> | ApplicationCreateWithoutAdmissionInput[] | ApplicationUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAdmissionInput | ApplicationCreateOrConnectWithoutAdmissionInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutAdmissionInput | ApplicationUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: ApplicationCreateManyAdmissionInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutAdmissionInput | ApplicationUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutAdmissionInput | ApplicationUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EssayPromptUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<EssayPromptCreateWithoutAdmissionInput, EssayPromptUncheckedCreateWithoutAdmissionInput> | EssayPromptCreateWithoutAdmissionInput[] | EssayPromptUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutAdmissionInput | EssayPromptCreateOrConnectWithoutAdmissionInput[]
    upsert?: EssayPromptUpsertWithWhereUniqueWithoutAdmissionInput | EssayPromptUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: EssayPromptCreateManyAdmissionInputEnvelope
    set?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    disconnect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    delete?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    update?: EssayPromptUpdateWithWhereUniqueWithoutAdmissionInput | EssayPromptUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: EssayPromptUpdateManyWithWhereWithoutAdmissionInput | EssayPromptUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
  }

  export type CalendarEventUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionInput, CalendarEventUncheckedCreateWithoutAdmissionInput> | CalendarEventCreateWithoutAdmissionInput[] | CalendarEventUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionInput | CalendarEventCreateOrConnectWithoutAdmissionInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutAdmissionInput | CalendarEventUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: CalendarEventCreateManyAdmissionInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutAdmissionInput | CalendarEventUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutAdmissionInput | CalendarEventUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type IntakeUncheckedUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<IntakeCreateWithoutAdmissionInput, IntakeUncheckedCreateWithoutAdmissionInput> | IntakeCreateWithoutAdmissionInput[] | IntakeUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: IntakeCreateOrConnectWithoutAdmissionInput | IntakeCreateOrConnectWithoutAdmissionInput[]
    upsert?: IntakeUpsertWithWhereUniqueWithoutAdmissionInput | IntakeUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: IntakeCreateManyAdmissionInputEnvelope
    set?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    disconnect?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    delete?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    connect?: IntakeWhereUniqueInput | IntakeWhereUniqueInput[]
    update?: IntakeUpdateWithWhereUniqueWithoutAdmissionInput | IntakeUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: IntakeUpdateManyWithWhereWithoutAdmissionInput | IntakeUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: IntakeScalarWhereInput | IntakeScalarWhereInput[]
  }

  export type AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutAdmissionInput, AdmissionDeadlineUncheckedCreateWithoutAdmissionInput> | AdmissionDeadlineCreateWithoutAdmissionInput[] | AdmissionDeadlineUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutAdmissionInput | AdmissionDeadlineCreateOrConnectWithoutAdmissionInput[]
    upsert?: AdmissionDeadlineUpsertWithWhereUniqueWithoutAdmissionInput | AdmissionDeadlineUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: AdmissionDeadlineCreateManyAdmissionInputEnvelope
    set?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    disconnect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    delete?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    update?: AdmissionDeadlineUpdateWithWhereUniqueWithoutAdmissionInput | AdmissionDeadlineUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: AdmissionDeadlineUpdateManyWithWhereWithoutAdmissionInput | AdmissionDeadlineUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: AdmissionDeadlineScalarWhereInput | AdmissionDeadlineScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<ApplicationCreateWithoutAdmissionInput, ApplicationUncheckedCreateWithoutAdmissionInput> | ApplicationCreateWithoutAdmissionInput[] | ApplicationUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutAdmissionInput | ApplicationCreateOrConnectWithoutAdmissionInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutAdmissionInput | ApplicationUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: ApplicationCreateManyAdmissionInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutAdmissionInput | ApplicationUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutAdmissionInput | ApplicationUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<EssayPromptCreateWithoutAdmissionInput, EssayPromptUncheckedCreateWithoutAdmissionInput> | EssayPromptCreateWithoutAdmissionInput[] | EssayPromptUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutAdmissionInput | EssayPromptCreateOrConnectWithoutAdmissionInput[]
    upsert?: EssayPromptUpsertWithWhereUniqueWithoutAdmissionInput | EssayPromptUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: EssayPromptCreateManyAdmissionInputEnvelope
    set?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    disconnect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    delete?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    update?: EssayPromptUpdateWithWhereUniqueWithoutAdmissionInput | EssayPromptUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: EssayPromptUpdateManyWithWhereWithoutAdmissionInput | EssayPromptUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionInput, CalendarEventUncheckedCreateWithoutAdmissionInput> | CalendarEventCreateWithoutAdmissionInput[] | CalendarEventUncheckedCreateWithoutAdmissionInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionInput | CalendarEventCreateOrConnectWithoutAdmissionInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutAdmissionInput | CalendarEventUpsertWithWhereUniqueWithoutAdmissionInput[]
    createMany?: CalendarEventCreateManyAdmissionInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutAdmissionInput | CalendarEventUpdateWithWhereUniqueWithoutAdmissionInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutAdmissionInput | CalendarEventUpdateManyWithWhereWithoutAdmissionInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type AdmissionCreateNestedOneWithoutIntakesInput = {
    create?: XOR<AdmissionCreateWithoutIntakesInput, AdmissionUncheckedCreateWithoutIntakesInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutIntakesInput
    connect?: AdmissionWhereUniqueInput
  }

  export type AdmissionDeadlineCreateNestedManyWithoutIntakeInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutIntakeInput, AdmissionDeadlineUncheckedCreateWithoutIntakeInput> | AdmissionDeadlineCreateWithoutIntakeInput[] | AdmissionDeadlineUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutIntakeInput | AdmissionDeadlineCreateOrConnectWithoutIntakeInput[]
    createMany?: AdmissionDeadlineCreateManyIntakeInputEnvelope
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
  }

  export type ApplicationCreateNestedManyWithoutIntakeInput = {
    create?: XOR<ApplicationCreateWithoutIntakeInput, ApplicationUncheckedCreateWithoutIntakeInput> | ApplicationCreateWithoutIntakeInput[] | ApplicationUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutIntakeInput | ApplicationCreateOrConnectWithoutIntakeInput[]
    createMany?: ApplicationCreateManyIntakeInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EssayPromptCreateNestedManyWithoutIntakeInput = {
    create?: XOR<EssayPromptCreateWithoutIntakeInput, EssayPromptUncheckedCreateWithoutIntakeInput> | EssayPromptCreateWithoutIntakeInput[] | EssayPromptUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutIntakeInput | EssayPromptCreateOrConnectWithoutIntakeInput[]
    createMany?: EssayPromptCreateManyIntakeInputEnvelope
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
  }

  export type CalendarEventCreateNestedManyWithoutIntakeInput = {
    create?: XOR<CalendarEventCreateWithoutIntakeInput, CalendarEventUncheckedCreateWithoutIntakeInput> | CalendarEventCreateWithoutIntakeInput[] | CalendarEventUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutIntakeInput | CalendarEventCreateOrConnectWithoutIntakeInput[]
    createMany?: CalendarEventCreateManyIntakeInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type AdmissionDeadlineUncheckedCreateNestedManyWithoutIntakeInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutIntakeInput, AdmissionDeadlineUncheckedCreateWithoutIntakeInput> | AdmissionDeadlineCreateWithoutIntakeInput[] | AdmissionDeadlineUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutIntakeInput | AdmissionDeadlineCreateOrConnectWithoutIntakeInput[]
    createMany?: AdmissionDeadlineCreateManyIntakeInputEnvelope
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
  }

  export type ApplicationUncheckedCreateNestedManyWithoutIntakeInput = {
    create?: XOR<ApplicationCreateWithoutIntakeInput, ApplicationUncheckedCreateWithoutIntakeInput> | ApplicationCreateWithoutIntakeInput[] | ApplicationUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutIntakeInput | ApplicationCreateOrConnectWithoutIntakeInput[]
    createMany?: ApplicationCreateManyIntakeInputEnvelope
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
  }

  export type EssayPromptUncheckedCreateNestedManyWithoutIntakeInput = {
    create?: XOR<EssayPromptCreateWithoutIntakeInput, EssayPromptUncheckedCreateWithoutIntakeInput> | EssayPromptCreateWithoutIntakeInput[] | EssayPromptUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutIntakeInput | EssayPromptCreateOrConnectWithoutIntakeInput[]
    createMany?: EssayPromptCreateManyIntakeInputEnvelope
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutIntakeInput = {
    create?: XOR<CalendarEventCreateWithoutIntakeInput, CalendarEventUncheckedCreateWithoutIntakeInput> | CalendarEventCreateWithoutIntakeInput[] | CalendarEventUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutIntakeInput | CalendarEventCreateOrConnectWithoutIntakeInput[]
    createMany?: CalendarEventCreateManyIntakeInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type AdmissionUpdateOneRequiredWithoutIntakesNestedInput = {
    create?: XOR<AdmissionCreateWithoutIntakesInput, AdmissionUncheckedCreateWithoutIntakesInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutIntakesInput
    upsert?: AdmissionUpsertWithoutIntakesInput
    connect?: AdmissionWhereUniqueInput
    update?: XOR<XOR<AdmissionUpdateToOneWithWhereWithoutIntakesInput, AdmissionUpdateWithoutIntakesInput>, AdmissionUncheckedUpdateWithoutIntakesInput>
  }

  export type AdmissionDeadlineUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutIntakeInput, AdmissionDeadlineUncheckedCreateWithoutIntakeInput> | AdmissionDeadlineCreateWithoutIntakeInput[] | AdmissionDeadlineUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutIntakeInput | AdmissionDeadlineCreateOrConnectWithoutIntakeInput[]
    upsert?: AdmissionDeadlineUpsertWithWhereUniqueWithoutIntakeInput | AdmissionDeadlineUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: AdmissionDeadlineCreateManyIntakeInputEnvelope
    set?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    disconnect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    delete?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    update?: AdmissionDeadlineUpdateWithWhereUniqueWithoutIntakeInput | AdmissionDeadlineUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: AdmissionDeadlineUpdateManyWithWhereWithoutIntakeInput | AdmissionDeadlineUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: AdmissionDeadlineScalarWhereInput | AdmissionDeadlineScalarWhereInput[]
  }

  export type ApplicationUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<ApplicationCreateWithoutIntakeInput, ApplicationUncheckedCreateWithoutIntakeInput> | ApplicationCreateWithoutIntakeInput[] | ApplicationUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutIntakeInput | ApplicationCreateOrConnectWithoutIntakeInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutIntakeInput | ApplicationUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: ApplicationCreateManyIntakeInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutIntakeInput | ApplicationUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutIntakeInput | ApplicationUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EssayPromptUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<EssayPromptCreateWithoutIntakeInput, EssayPromptUncheckedCreateWithoutIntakeInput> | EssayPromptCreateWithoutIntakeInput[] | EssayPromptUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutIntakeInput | EssayPromptCreateOrConnectWithoutIntakeInput[]
    upsert?: EssayPromptUpsertWithWhereUniqueWithoutIntakeInput | EssayPromptUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: EssayPromptCreateManyIntakeInputEnvelope
    set?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    disconnect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    delete?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    update?: EssayPromptUpdateWithWhereUniqueWithoutIntakeInput | EssayPromptUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: EssayPromptUpdateManyWithWhereWithoutIntakeInput | EssayPromptUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
  }

  export type CalendarEventUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<CalendarEventCreateWithoutIntakeInput, CalendarEventUncheckedCreateWithoutIntakeInput> | CalendarEventCreateWithoutIntakeInput[] | CalendarEventUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutIntakeInput | CalendarEventCreateOrConnectWithoutIntakeInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutIntakeInput | CalendarEventUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: CalendarEventCreateManyIntakeInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutIntakeInput | CalendarEventUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutIntakeInput | CalendarEventUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type AdmissionDeadlineUncheckedUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutIntakeInput, AdmissionDeadlineUncheckedCreateWithoutIntakeInput> | AdmissionDeadlineCreateWithoutIntakeInput[] | AdmissionDeadlineUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutIntakeInput | AdmissionDeadlineCreateOrConnectWithoutIntakeInput[]
    upsert?: AdmissionDeadlineUpsertWithWhereUniqueWithoutIntakeInput | AdmissionDeadlineUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: AdmissionDeadlineCreateManyIntakeInputEnvelope
    set?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    disconnect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    delete?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    connect?: AdmissionDeadlineWhereUniqueInput | AdmissionDeadlineWhereUniqueInput[]
    update?: AdmissionDeadlineUpdateWithWhereUniqueWithoutIntakeInput | AdmissionDeadlineUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: AdmissionDeadlineUpdateManyWithWhereWithoutIntakeInput | AdmissionDeadlineUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: AdmissionDeadlineScalarWhereInput | AdmissionDeadlineScalarWhereInput[]
  }

  export type ApplicationUncheckedUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<ApplicationCreateWithoutIntakeInput, ApplicationUncheckedCreateWithoutIntakeInput> | ApplicationCreateWithoutIntakeInput[] | ApplicationUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: ApplicationCreateOrConnectWithoutIntakeInput | ApplicationCreateOrConnectWithoutIntakeInput[]
    upsert?: ApplicationUpsertWithWhereUniqueWithoutIntakeInput | ApplicationUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: ApplicationCreateManyIntakeInputEnvelope
    set?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    disconnect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    delete?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    connect?: ApplicationWhereUniqueInput | ApplicationWhereUniqueInput[]
    update?: ApplicationUpdateWithWhereUniqueWithoutIntakeInput | ApplicationUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: ApplicationUpdateManyWithWhereWithoutIntakeInput | ApplicationUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
  }

  export type EssayPromptUncheckedUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<EssayPromptCreateWithoutIntakeInput, EssayPromptUncheckedCreateWithoutIntakeInput> | EssayPromptCreateWithoutIntakeInput[] | EssayPromptUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: EssayPromptCreateOrConnectWithoutIntakeInput | EssayPromptCreateOrConnectWithoutIntakeInput[]
    upsert?: EssayPromptUpsertWithWhereUniqueWithoutIntakeInput | EssayPromptUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: EssayPromptCreateManyIntakeInputEnvelope
    set?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    disconnect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    delete?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    connect?: EssayPromptWhereUniqueInput | EssayPromptWhereUniqueInput[]
    update?: EssayPromptUpdateWithWhereUniqueWithoutIntakeInput | EssayPromptUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: EssayPromptUpdateManyWithWhereWithoutIntakeInput | EssayPromptUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutIntakeNestedInput = {
    create?: XOR<CalendarEventCreateWithoutIntakeInput, CalendarEventUncheckedCreateWithoutIntakeInput> | CalendarEventCreateWithoutIntakeInput[] | CalendarEventUncheckedCreateWithoutIntakeInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutIntakeInput | CalendarEventCreateOrConnectWithoutIntakeInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutIntakeInput | CalendarEventUpsertWithWhereUniqueWithoutIntakeInput[]
    createMany?: CalendarEventCreateManyIntakeInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutIntakeInput | CalendarEventUpdateWithWhereUniqueWithoutIntakeInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutIntakeInput | CalendarEventUpdateManyWithWhereWithoutIntakeInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type AdmissionCreateNestedOneWithoutDeadlinesInput = {
    create?: XOR<AdmissionCreateWithoutDeadlinesInput, AdmissionUncheckedCreateWithoutDeadlinesInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutDeadlinesInput
    connect?: AdmissionWhereUniqueInput
  }

  export type IntakeCreateNestedOneWithoutDeadlinesInput = {
    create?: XOR<IntakeCreateWithoutDeadlinesInput, IntakeUncheckedCreateWithoutDeadlinesInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutDeadlinesInput
    connect?: IntakeWhereUniqueInput
  }

  export type CalendarEventCreateNestedManyWithoutAdmissionDeadlineInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionDeadlineInput, CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput> | CalendarEventCreateWithoutAdmissionDeadlineInput[] | CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput | CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput[]
    createMany?: CalendarEventCreateManyAdmissionDeadlineInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutAdmissionDeadlineInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionDeadlineInput, CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput> | CalendarEventCreateWithoutAdmissionDeadlineInput[] | CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput | CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput[]
    createMany?: CalendarEventCreateManyAdmissionDeadlineInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type AdmissionUpdateOneRequiredWithoutDeadlinesNestedInput = {
    create?: XOR<AdmissionCreateWithoutDeadlinesInput, AdmissionUncheckedCreateWithoutDeadlinesInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutDeadlinesInput
    upsert?: AdmissionUpsertWithoutDeadlinesInput
    connect?: AdmissionWhereUniqueInput
    update?: XOR<XOR<AdmissionUpdateToOneWithWhereWithoutDeadlinesInput, AdmissionUpdateWithoutDeadlinesInput>, AdmissionUncheckedUpdateWithoutDeadlinesInput>
  }

  export type IntakeUpdateOneWithoutDeadlinesNestedInput = {
    create?: XOR<IntakeCreateWithoutDeadlinesInput, IntakeUncheckedCreateWithoutDeadlinesInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutDeadlinesInput
    upsert?: IntakeUpsertWithoutDeadlinesInput
    disconnect?: IntakeWhereInput | boolean
    delete?: IntakeWhereInput | boolean
    connect?: IntakeWhereUniqueInput
    update?: XOR<XOR<IntakeUpdateToOneWithWhereWithoutDeadlinesInput, IntakeUpdateWithoutDeadlinesInput>, IntakeUncheckedUpdateWithoutDeadlinesInput>
  }

  export type CalendarEventUpdateManyWithoutAdmissionDeadlineNestedInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionDeadlineInput, CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput> | CalendarEventCreateWithoutAdmissionDeadlineInput[] | CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput | CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutAdmissionDeadlineInput | CalendarEventUpsertWithWhereUniqueWithoutAdmissionDeadlineInput[]
    createMany?: CalendarEventCreateManyAdmissionDeadlineInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutAdmissionDeadlineInput | CalendarEventUpdateWithWhereUniqueWithoutAdmissionDeadlineInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutAdmissionDeadlineInput | CalendarEventUpdateManyWithWhereWithoutAdmissionDeadlineInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutAdmissionDeadlineNestedInput = {
    create?: XOR<CalendarEventCreateWithoutAdmissionDeadlineInput, CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput> | CalendarEventCreateWithoutAdmissionDeadlineInput[] | CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput | CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutAdmissionDeadlineInput | CalendarEventUpsertWithWhereUniqueWithoutAdmissionDeadlineInput[]
    createMany?: CalendarEventCreateManyAdmissionDeadlineInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutAdmissionDeadlineInput | CalendarEventUpdateWithWhereUniqueWithoutAdmissionDeadlineInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutAdmissionDeadlineInput | CalendarEventUpdateManyWithWhereWithoutAdmissionDeadlineInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type AdmissionCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<AdmissionCreateWithoutApplicationsInput, AdmissionUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutApplicationsInput
    connect?: AdmissionWhereUniqueInput
  }

  export type UniversityCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<UniversityCreateWithoutApplicationsInput, UniversityUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutApplicationsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<ProgramCreateWithoutApplicationsInput, ProgramUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutApplicationsInput
    connect?: ProgramWhereUniqueInput
  }

  export type IntakeCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<IntakeCreateWithoutApplicationsInput, IntakeUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutApplicationsInput
    connect?: IntakeWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<UserCreateWithoutApplicationsInput, UserUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutApplicationsInput
    connect?: UserWhereUniqueInput
  }

  export type ApplicationDocumentCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ApplicationDocumentCreateWithoutApplicationInput, ApplicationDocumentUncheckedCreateWithoutApplicationInput> | ApplicationDocumentCreateWithoutApplicationInput[] | ApplicationDocumentUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationDocumentCreateOrConnectWithoutApplicationInput | ApplicationDocumentCreateOrConnectWithoutApplicationInput[]
    createMany?: ApplicationDocumentCreateManyApplicationInputEnvelope
    connect?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
  }

  export type ApplicationProgressCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ApplicationProgressCreateWithoutApplicationInput, ApplicationProgressUncheckedCreateWithoutApplicationInput> | ApplicationProgressCreateWithoutApplicationInput[] | ApplicationProgressUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationProgressCreateOrConnectWithoutApplicationInput | ApplicationProgressCreateOrConnectWithoutApplicationInput[]
    createMany?: ApplicationProgressCreateManyApplicationInputEnvelope
    connect?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
  }

  export type InterviewCreateNestedManyWithoutApplicationInput = {
    create?: XOR<InterviewCreateWithoutApplicationInput, InterviewUncheckedCreateWithoutApplicationInput> | InterviewCreateWithoutApplicationInput[] | InterviewUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: InterviewCreateOrConnectWithoutApplicationInput | InterviewCreateOrConnectWithoutApplicationInput[]
    createMany?: InterviewCreateManyApplicationInputEnvelope
    connect?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
  }

  export type ScholarshipApplicationCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutApplicationInput, ScholarshipApplicationUncheckedCreateWithoutApplicationInput> | ScholarshipApplicationCreateWithoutApplicationInput[] | ScholarshipApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutApplicationInput | ScholarshipApplicationCreateOrConnectWithoutApplicationInput[]
    createMany?: ScholarshipApplicationCreateManyApplicationInputEnvelope
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
  }

  export type FinancialAidApplicationCreateNestedManyWithoutApplicationInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutApplicationInput, FinancialAidApplicationUncheckedCreateWithoutApplicationInput> | FinancialAidApplicationCreateWithoutApplicationInput[] | FinancialAidApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutApplicationInput | FinancialAidApplicationCreateOrConnectWithoutApplicationInput[]
    createMany?: FinancialAidApplicationCreateManyApplicationInputEnvelope
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
  }

  export type EssaySubmissionCreateNestedManyWithoutApplicationInput = {
    create?: XOR<EssaySubmissionCreateWithoutApplicationInput, EssaySubmissionUncheckedCreateWithoutApplicationInput> | EssaySubmissionCreateWithoutApplicationInput[] | EssaySubmissionUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutApplicationInput | EssaySubmissionCreateOrConnectWithoutApplicationInput[]
    createMany?: EssaySubmissionCreateManyApplicationInputEnvelope
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
  }

  export type CalendarEventCreateNestedManyWithoutApplicationInput = {
    create?: XOR<CalendarEventCreateWithoutApplicationInput, CalendarEventUncheckedCreateWithoutApplicationInput> | CalendarEventCreateWithoutApplicationInput[] | CalendarEventUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutApplicationInput | CalendarEventCreateOrConnectWithoutApplicationInput[]
    createMany?: CalendarEventCreateManyApplicationInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type EssayCreateNestedManyWithoutApplicationInput = {
    create?: XOR<EssayCreateWithoutApplicationInput, EssayUncheckedCreateWithoutApplicationInput> | EssayCreateWithoutApplicationInput[] | EssayUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutApplicationInput | EssayCreateOrConnectWithoutApplicationInput[]
    createMany?: EssayCreateManyApplicationInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ApplicationDocumentCreateWithoutApplicationInput, ApplicationDocumentUncheckedCreateWithoutApplicationInput> | ApplicationDocumentCreateWithoutApplicationInput[] | ApplicationDocumentUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationDocumentCreateOrConnectWithoutApplicationInput | ApplicationDocumentCreateOrConnectWithoutApplicationInput[]
    createMany?: ApplicationDocumentCreateManyApplicationInputEnvelope
    connect?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
  }

  export type ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ApplicationProgressCreateWithoutApplicationInput, ApplicationProgressUncheckedCreateWithoutApplicationInput> | ApplicationProgressCreateWithoutApplicationInput[] | ApplicationProgressUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationProgressCreateOrConnectWithoutApplicationInput | ApplicationProgressCreateOrConnectWithoutApplicationInput[]
    createMany?: ApplicationProgressCreateManyApplicationInputEnvelope
    connect?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
  }

  export type InterviewUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<InterviewCreateWithoutApplicationInput, InterviewUncheckedCreateWithoutApplicationInput> | InterviewCreateWithoutApplicationInput[] | InterviewUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: InterviewCreateOrConnectWithoutApplicationInput | InterviewCreateOrConnectWithoutApplicationInput[]
    createMany?: InterviewCreateManyApplicationInputEnvelope
    connect?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
  }

  export type ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutApplicationInput, ScholarshipApplicationUncheckedCreateWithoutApplicationInput> | ScholarshipApplicationCreateWithoutApplicationInput[] | ScholarshipApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutApplicationInput | ScholarshipApplicationCreateOrConnectWithoutApplicationInput[]
    createMany?: ScholarshipApplicationCreateManyApplicationInputEnvelope
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
  }

  export type FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutApplicationInput, FinancialAidApplicationUncheckedCreateWithoutApplicationInput> | FinancialAidApplicationCreateWithoutApplicationInput[] | FinancialAidApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutApplicationInput | FinancialAidApplicationCreateOrConnectWithoutApplicationInput[]
    createMany?: FinancialAidApplicationCreateManyApplicationInputEnvelope
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
  }

  export type EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<EssaySubmissionCreateWithoutApplicationInput, EssaySubmissionUncheckedCreateWithoutApplicationInput> | EssaySubmissionCreateWithoutApplicationInput[] | EssaySubmissionUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutApplicationInput | EssaySubmissionCreateOrConnectWithoutApplicationInput[]
    createMany?: EssaySubmissionCreateManyApplicationInputEnvelope
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<CalendarEventCreateWithoutApplicationInput, CalendarEventUncheckedCreateWithoutApplicationInput> | CalendarEventCreateWithoutApplicationInput[] | CalendarEventUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutApplicationInput | CalendarEventCreateOrConnectWithoutApplicationInput[]
    createMany?: CalendarEventCreateManyApplicationInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type EssayUncheckedCreateNestedManyWithoutApplicationInput = {
    create?: XOR<EssayCreateWithoutApplicationInput, EssayUncheckedCreateWithoutApplicationInput> | EssayCreateWithoutApplicationInput[] | EssayUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutApplicationInput | EssayCreateOrConnectWithoutApplicationInput[]
    createMany?: EssayCreateManyApplicationInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AdmissionUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<AdmissionCreateWithoutApplicationsInput, AdmissionUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutApplicationsInput
    upsert?: AdmissionUpsertWithoutApplicationsInput
    connect?: AdmissionWhereUniqueInput
    update?: XOR<XOR<AdmissionUpdateToOneWithWhereWithoutApplicationsInput, AdmissionUpdateWithoutApplicationsInput>, AdmissionUncheckedUpdateWithoutApplicationsInput>
  }

  export type UniversityUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<UniversityCreateWithoutApplicationsInput, UniversityUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutApplicationsInput
    upsert?: UniversityUpsertWithoutApplicationsInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutApplicationsInput, UniversityUpdateWithoutApplicationsInput>, UniversityUncheckedUpdateWithoutApplicationsInput>
  }

  export type ProgramUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<ProgramCreateWithoutApplicationsInput, ProgramUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutApplicationsInput
    upsert?: ProgramUpsertWithoutApplicationsInput
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutApplicationsInput, ProgramUpdateWithoutApplicationsInput>, ProgramUncheckedUpdateWithoutApplicationsInput>
  }

  export type IntakeUpdateOneWithoutApplicationsNestedInput = {
    create?: XOR<IntakeCreateWithoutApplicationsInput, IntakeUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutApplicationsInput
    upsert?: IntakeUpsertWithoutApplicationsInput
    disconnect?: IntakeWhereInput | boolean
    delete?: IntakeWhereInput | boolean
    connect?: IntakeWhereUniqueInput
    update?: XOR<XOR<IntakeUpdateToOneWithWhereWithoutApplicationsInput, IntakeUpdateWithoutApplicationsInput>, IntakeUncheckedUpdateWithoutApplicationsInput>
  }

  export type UserUpdateOneWithoutApplicationsNestedInput = {
    create?: XOR<UserCreateWithoutApplicationsInput, UserUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutApplicationsInput
    upsert?: UserUpsertWithoutApplicationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutApplicationsInput, UserUpdateWithoutApplicationsInput>, UserUncheckedUpdateWithoutApplicationsInput>
  }

  export type ApplicationDocumentUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ApplicationDocumentCreateWithoutApplicationInput, ApplicationDocumentUncheckedCreateWithoutApplicationInput> | ApplicationDocumentCreateWithoutApplicationInput[] | ApplicationDocumentUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationDocumentCreateOrConnectWithoutApplicationInput | ApplicationDocumentCreateOrConnectWithoutApplicationInput[]
    upsert?: ApplicationDocumentUpsertWithWhereUniqueWithoutApplicationInput | ApplicationDocumentUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ApplicationDocumentCreateManyApplicationInputEnvelope
    set?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    disconnect?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    delete?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    connect?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    update?: ApplicationDocumentUpdateWithWhereUniqueWithoutApplicationInput | ApplicationDocumentUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ApplicationDocumentUpdateManyWithWhereWithoutApplicationInput | ApplicationDocumentUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ApplicationDocumentScalarWhereInput | ApplicationDocumentScalarWhereInput[]
  }

  export type ApplicationProgressUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ApplicationProgressCreateWithoutApplicationInput, ApplicationProgressUncheckedCreateWithoutApplicationInput> | ApplicationProgressCreateWithoutApplicationInput[] | ApplicationProgressUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationProgressCreateOrConnectWithoutApplicationInput | ApplicationProgressCreateOrConnectWithoutApplicationInput[]
    upsert?: ApplicationProgressUpsertWithWhereUniqueWithoutApplicationInput | ApplicationProgressUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ApplicationProgressCreateManyApplicationInputEnvelope
    set?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    disconnect?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    delete?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    connect?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    update?: ApplicationProgressUpdateWithWhereUniqueWithoutApplicationInput | ApplicationProgressUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ApplicationProgressUpdateManyWithWhereWithoutApplicationInput | ApplicationProgressUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ApplicationProgressScalarWhereInput | ApplicationProgressScalarWhereInput[]
  }

  export type InterviewUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<InterviewCreateWithoutApplicationInput, InterviewUncheckedCreateWithoutApplicationInput> | InterviewCreateWithoutApplicationInput[] | InterviewUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: InterviewCreateOrConnectWithoutApplicationInput | InterviewCreateOrConnectWithoutApplicationInput[]
    upsert?: InterviewUpsertWithWhereUniqueWithoutApplicationInput | InterviewUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: InterviewCreateManyApplicationInputEnvelope
    set?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    disconnect?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    delete?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    connect?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    update?: InterviewUpdateWithWhereUniqueWithoutApplicationInput | InterviewUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: InterviewUpdateManyWithWhereWithoutApplicationInput | InterviewUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: InterviewScalarWhereInput | InterviewScalarWhereInput[]
  }

  export type ScholarshipApplicationUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutApplicationInput, ScholarshipApplicationUncheckedCreateWithoutApplicationInput> | ScholarshipApplicationCreateWithoutApplicationInput[] | ScholarshipApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutApplicationInput | ScholarshipApplicationCreateOrConnectWithoutApplicationInput[]
    upsert?: ScholarshipApplicationUpsertWithWhereUniqueWithoutApplicationInput | ScholarshipApplicationUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ScholarshipApplicationCreateManyApplicationInputEnvelope
    set?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    disconnect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    delete?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    update?: ScholarshipApplicationUpdateWithWhereUniqueWithoutApplicationInput | ScholarshipApplicationUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ScholarshipApplicationUpdateManyWithWhereWithoutApplicationInput | ScholarshipApplicationUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
  }

  export type FinancialAidApplicationUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutApplicationInput, FinancialAidApplicationUncheckedCreateWithoutApplicationInput> | FinancialAidApplicationCreateWithoutApplicationInput[] | FinancialAidApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutApplicationInput | FinancialAidApplicationCreateOrConnectWithoutApplicationInput[]
    upsert?: FinancialAidApplicationUpsertWithWhereUniqueWithoutApplicationInput | FinancialAidApplicationUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: FinancialAidApplicationCreateManyApplicationInputEnvelope
    set?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    disconnect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    delete?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    update?: FinancialAidApplicationUpdateWithWhereUniqueWithoutApplicationInput | FinancialAidApplicationUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: FinancialAidApplicationUpdateManyWithWhereWithoutApplicationInput | FinancialAidApplicationUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
  }

  export type EssaySubmissionUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<EssaySubmissionCreateWithoutApplicationInput, EssaySubmissionUncheckedCreateWithoutApplicationInput> | EssaySubmissionCreateWithoutApplicationInput[] | EssaySubmissionUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutApplicationInput | EssaySubmissionCreateOrConnectWithoutApplicationInput[]
    upsert?: EssaySubmissionUpsertWithWhereUniqueWithoutApplicationInput | EssaySubmissionUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: EssaySubmissionCreateManyApplicationInputEnvelope
    set?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    disconnect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    delete?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    update?: EssaySubmissionUpdateWithWhereUniqueWithoutApplicationInput | EssaySubmissionUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: EssaySubmissionUpdateManyWithWhereWithoutApplicationInput | EssaySubmissionUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
  }

  export type CalendarEventUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<CalendarEventCreateWithoutApplicationInput, CalendarEventUncheckedCreateWithoutApplicationInput> | CalendarEventCreateWithoutApplicationInput[] | CalendarEventUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutApplicationInput | CalendarEventCreateOrConnectWithoutApplicationInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutApplicationInput | CalendarEventUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: CalendarEventCreateManyApplicationInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutApplicationInput | CalendarEventUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutApplicationInput | CalendarEventUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type EssayUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<EssayCreateWithoutApplicationInput, EssayUncheckedCreateWithoutApplicationInput> | EssayCreateWithoutApplicationInput[] | EssayUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutApplicationInput | EssayCreateOrConnectWithoutApplicationInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutApplicationInput | EssayUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: EssayCreateManyApplicationInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutApplicationInput | EssayUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutApplicationInput | EssayUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ApplicationDocumentCreateWithoutApplicationInput, ApplicationDocumentUncheckedCreateWithoutApplicationInput> | ApplicationDocumentCreateWithoutApplicationInput[] | ApplicationDocumentUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationDocumentCreateOrConnectWithoutApplicationInput | ApplicationDocumentCreateOrConnectWithoutApplicationInput[]
    upsert?: ApplicationDocumentUpsertWithWhereUniqueWithoutApplicationInput | ApplicationDocumentUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ApplicationDocumentCreateManyApplicationInputEnvelope
    set?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    disconnect?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    delete?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    connect?: ApplicationDocumentWhereUniqueInput | ApplicationDocumentWhereUniqueInput[]
    update?: ApplicationDocumentUpdateWithWhereUniqueWithoutApplicationInput | ApplicationDocumentUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ApplicationDocumentUpdateManyWithWhereWithoutApplicationInput | ApplicationDocumentUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ApplicationDocumentScalarWhereInput | ApplicationDocumentScalarWhereInput[]
  }

  export type ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ApplicationProgressCreateWithoutApplicationInput, ApplicationProgressUncheckedCreateWithoutApplicationInput> | ApplicationProgressCreateWithoutApplicationInput[] | ApplicationProgressUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ApplicationProgressCreateOrConnectWithoutApplicationInput | ApplicationProgressCreateOrConnectWithoutApplicationInput[]
    upsert?: ApplicationProgressUpsertWithWhereUniqueWithoutApplicationInput | ApplicationProgressUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ApplicationProgressCreateManyApplicationInputEnvelope
    set?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    disconnect?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    delete?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    connect?: ApplicationProgressWhereUniqueInput | ApplicationProgressWhereUniqueInput[]
    update?: ApplicationProgressUpdateWithWhereUniqueWithoutApplicationInput | ApplicationProgressUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ApplicationProgressUpdateManyWithWhereWithoutApplicationInput | ApplicationProgressUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ApplicationProgressScalarWhereInput | ApplicationProgressScalarWhereInput[]
  }

  export type InterviewUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<InterviewCreateWithoutApplicationInput, InterviewUncheckedCreateWithoutApplicationInput> | InterviewCreateWithoutApplicationInput[] | InterviewUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: InterviewCreateOrConnectWithoutApplicationInput | InterviewCreateOrConnectWithoutApplicationInput[]
    upsert?: InterviewUpsertWithWhereUniqueWithoutApplicationInput | InterviewUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: InterviewCreateManyApplicationInputEnvelope
    set?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    disconnect?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    delete?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    connect?: InterviewWhereUniqueInput | InterviewWhereUniqueInput[]
    update?: InterviewUpdateWithWhereUniqueWithoutApplicationInput | InterviewUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: InterviewUpdateManyWithWhereWithoutApplicationInput | InterviewUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: InterviewScalarWhereInput | InterviewScalarWhereInput[]
  }

  export type ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutApplicationInput, ScholarshipApplicationUncheckedCreateWithoutApplicationInput> | ScholarshipApplicationCreateWithoutApplicationInput[] | ScholarshipApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutApplicationInput | ScholarshipApplicationCreateOrConnectWithoutApplicationInput[]
    upsert?: ScholarshipApplicationUpsertWithWhereUniqueWithoutApplicationInput | ScholarshipApplicationUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: ScholarshipApplicationCreateManyApplicationInputEnvelope
    set?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    disconnect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    delete?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    update?: ScholarshipApplicationUpdateWithWhereUniqueWithoutApplicationInput | ScholarshipApplicationUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: ScholarshipApplicationUpdateManyWithWhereWithoutApplicationInput | ScholarshipApplicationUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
  }

  export type FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutApplicationInput, FinancialAidApplicationUncheckedCreateWithoutApplicationInput> | FinancialAidApplicationCreateWithoutApplicationInput[] | FinancialAidApplicationUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutApplicationInput | FinancialAidApplicationCreateOrConnectWithoutApplicationInput[]
    upsert?: FinancialAidApplicationUpsertWithWhereUniqueWithoutApplicationInput | FinancialAidApplicationUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: FinancialAidApplicationCreateManyApplicationInputEnvelope
    set?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    disconnect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    delete?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    update?: FinancialAidApplicationUpdateWithWhereUniqueWithoutApplicationInput | FinancialAidApplicationUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: FinancialAidApplicationUpdateManyWithWhereWithoutApplicationInput | FinancialAidApplicationUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
  }

  export type EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<EssaySubmissionCreateWithoutApplicationInput, EssaySubmissionUncheckedCreateWithoutApplicationInput> | EssaySubmissionCreateWithoutApplicationInput[] | EssaySubmissionUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutApplicationInput | EssaySubmissionCreateOrConnectWithoutApplicationInput[]
    upsert?: EssaySubmissionUpsertWithWhereUniqueWithoutApplicationInput | EssaySubmissionUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: EssaySubmissionCreateManyApplicationInputEnvelope
    set?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    disconnect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    delete?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    update?: EssaySubmissionUpdateWithWhereUniqueWithoutApplicationInput | EssaySubmissionUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: EssaySubmissionUpdateManyWithWhereWithoutApplicationInput | EssaySubmissionUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<CalendarEventCreateWithoutApplicationInput, CalendarEventUncheckedCreateWithoutApplicationInput> | CalendarEventCreateWithoutApplicationInput[] | CalendarEventUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutApplicationInput | CalendarEventCreateOrConnectWithoutApplicationInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutApplicationInput | CalendarEventUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: CalendarEventCreateManyApplicationInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutApplicationInput | CalendarEventUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutApplicationInput | CalendarEventUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type EssayUncheckedUpdateManyWithoutApplicationNestedInput = {
    create?: XOR<EssayCreateWithoutApplicationInput, EssayUncheckedCreateWithoutApplicationInput> | EssayCreateWithoutApplicationInput[] | EssayUncheckedCreateWithoutApplicationInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutApplicationInput | EssayCreateOrConnectWithoutApplicationInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutApplicationInput | EssayUpsertWithWhereUniqueWithoutApplicationInput[]
    createMany?: EssayCreateManyApplicationInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutApplicationInput | EssayUpdateWithWhereUniqueWithoutApplicationInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutApplicationInput | EssayUpdateManyWithWhereWithoutApplicationInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type ApplicationCreateNestedOneWithoutApplicationProgressInput = {
    create?: XOR<ApplicationCreateWithoutApplicationProgressInput, ApplicationUncheckedCreateWithoutApplicationProgressInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutApplicationProgressInput
    connect?: ApplicationWhereUniqueInput
  }

  export type ApplicationUpdateOneRequiredWithoutApplicationProgressNestedInput = {
    create?: XOR<ApplicationCreateWithoutApplicationProgressInput, ApplicationUncheckedCreateWithoutApplicationProgressInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutApplicationProgressInput
    upsert?: ApplicationUpsertWithoutApplicationProgressInput
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutApplicationProgressInput, ApplicationUpdateWithoutApplicationProgressInput>, ApplicationUncheckedUpdateWithoutApplicationProgressInput>
  }

  export type ApplicationCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<ApplicationCreateWithoutDocumentsInput, ApplicationUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutDocumentsInput
    connect?: ApplicationWhereUniqueInput
  }

  export type ApplicationUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<ApplicationCreateWithoutDocumentsInput, ApplicationUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutDocumentsInput
    upsert?: ApplicationUpsertWithoutDocumentsInput
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutDocumentsInput, ApplicationUpdateWithoutDocumentsInput>, ApplicationUncheckedUpdateWithoutDocumentsInput>
  }

  export type ApplicationCreateNestedOneWithoutInterviewsInput = {
    create?: XOR<ApplicationCreateWithoutInterviewsInput, ApplicationUncheckedCreateWithoutInterviewsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutInterviewsInput
    connect?: ApplicationWhereUniqueInput
  }

  export type CalendarEventCreateNestedManyWithoutInterviewInput = {
    create?: XOR<CalendarEventCreateWithoutInterviewInput, CalendarEventUncheckedCreateWithoutInterviewInput> | CalendarEventCreateWithoutInterviewInput[] | CalendarEventUncheckedCreateWithoutInterviewInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutInterviewInput | CalendarEventCreateOrConnectWithoutInterviewInput[]
    createMany?: CalendarEventCreateManyInterviewInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutInterviewInput = {
    create?: XOR<CalendarEventCreateWithoutInterviewInput, CalendarEventUncheckedCreateWithoutInterviewInput> | CalendarEventCreateWithoutInterviewInput[] | CalendarEventUncheckedCreateWithoutInterviewInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutInterviewInput | CalendarEventCreateOrConnectWithoutInterviewInput[]
    createMany?: CalendarEventCreateManyInterviewInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type ApplicationUpdateOneRequiredWithoutInterviewsNestedInput = {
    create?: XOR<ApplicationCreateWithoutInterviewsInput, ApplicationUncheckedCreateWithoutInterviewsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutInterviewsInput
    upsert?: ApplicationUpsertWithoutInterviewsInput
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutInterviewsInput, ApplicationUpdateWithoutInterviewsInput>, ApplicationUncheckedUpdateWithoutInterviewsInput>
  }

  export type CalendarEventUpdateManyWithoutInterviewNestedInput = {
    create?: XOR<CalendarEventCreateWithoutInterviewInput, CalendarEventUncheckedCreateWithoutInterviewInput> | CalendarEventCreateWithoutInterviewInput[] | CalendarEventUncheckedCreateWithoutInterviewInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutInterviewInput | CalendarEventCreateOrConnectWithoutInterviewInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutInterviewInput | CalendarEventUpsertWithWhereUniqueWithoutInterviewInput[]
    createMany?: CalendarEventCreateManyInterviewInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutInterviewInput | CalendarEventUpdateWithWhereUniqueWithoutInterviewInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutInterviewInput | CalendarEventUpdateManyWithWhereWithoutInterviewInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutInterviewNestedInput = {
    create?: XOR<CalendarEventCreateWithoutInterviewInput, CalendarEventUncheckedCreateWithoutInterviewInput> | CalendarEventCreateWithoutInterviewInput[] | CalendarEventUncheckedCreateWithoutInterviewInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutInterviewInput | CalendarEventCreateOrConnectWithoutInterviewInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutInterviewInput | CalendarEventUpsertWithWhereUniqueWithoutInterviewInput[]
    createMany?: CalendarEventCreateManyInterviewInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutInterviewInput | CalendarEventUpdateWithWhereUniqueWithoutInterviewInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutInterviewInput | CalendarEventUpdateManyWithWhereWithoutInterviewInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type UniversityCreateNestedOneWithoutTuitionBreakdownsInput = {
    create?: XOR<UniversityCreateWithoutTuitionBreakdownsInput, UniversityUncheckedCreateWithoutTuitionBreakdownsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutTuitionBreakdownsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutTuitionBreakdownsInput = {
    create?: XOR<ProgramCreateWithoutTuitionBreakdownsInput, ProgramUncheckedCreateWithoutTuitionBreakdownsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutTuitionBreakdownsInput
    connect?: ProgramWhereUniqueInput
  }

  export type PaymentScheduleCreateNestedManyWithoutTuitionBreakdownInput = {
    create?: XOR<PaymentScheduleCreateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput> | PaymentScheduleCreateWithoutTuitionBreakdownInput[] | PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput[]
    connectOrCreate?: PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput | PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput[]
    createMany?: PaymentScheduleCreateManyTuitionBreakdownInputEnvelope
    connect?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
  }

  export type PaymentScheduleUncheckedCreateNestedManyWithoutTuitionBreakdownInput = {
    create?: XOR<PaymentScheduleCreateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput> | PaymentScheduleCreateWithoutTuitionBreakdownInput[] | PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput[]
    connectOrCreate?: PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput | PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput[]
    createMany?: PaymentScheduleCreateManyTuitionBreakdownInputEnvelope
    connect?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutTuitionBreakdownsNestedInput = {
    create?: XOR<UniversityCreateWithoutTuitionBreakdownsInput, UniversityUncheckedCreateWithoutTuitionBreakdownsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutTuitionBreakdownsInput
    upsert?: UniversityUpsertWithoutTuitionBreakdownsInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutTuitionBreakdownsInput, UniversityUpdateWithoutTuitionBreakdownsInput>, UniversityUncheckedUpdateWithoutTuitionBreakdownsInput>
  }

  export type ProgramUpdateOneWithoutTuitionBreakdownsNestedInput = {
    create?: XOR<ProgramCreateWithoutTuitionBreakdownsInput, ProgramUncheckedCreateWithoutTuitionBreakdownsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutTuitionBreakdownsInput
    upsert?: ProgramUpsertWithoutTuitionBreakdownsInput
    disconnect?: ProgramWhereInput | boolean
    delete?: ProgramWhereInput | boolean
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutTuitionBreakdownsInput, ProgramUpdateWithoutTuitionBreakdownsInput>, ProgramUncheckedUpdateWithoutTuitionBreakdownsInput>
  }

  export type PaymentScheduleUpdateManyWithoutTuitionBreakdownNestedInput = {
    create?: XOR<PaymentScheduleCreateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput> | PaymentScheduleCreateWithoutTuitionBreakdownInput[] | PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput[]
    connectOrCreate?: PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput | PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput[]
    upsert?: PaymentScheduleUpsertWithWhereUniqueWithoutTuitionBreakdownInput | PaymentScheduleUpsertWithWhereUniqueWithoutTuitionBreakdownInput[]
    createMany?: PaymentScheduleCreateManyTuitionBreakdownInputEnvelope
    set?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    disconnect?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    delete?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    connect?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    update?: PaymentScheduleUpdateWithWhereUniqueWithoutTuitionBreakdownInput | PaymentScheduleUpdateWithWhereUniqueWithoutTuitionBreakdownInput[]
    updateMany?: PaymentScheduleUpdateManyWithWhereWithoutTuitionBreakdownInput | PaymentScheduleUpdateManyWithWhereWithoutTuitionBreakdownInput[]
    deleteMany?: PaymentScheduleScalarWhereInput | PaymentScheduleScalarWhereInput[]
  }

  export type PaymentScheduleUncheckedUpdateManyWithoutTuitionBreakdownNestedInput = {
    create?: XOR<PaymentScheduleCreateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput> | PaymentScheduleCreateWithoutTuitionBreakdownInput[] | PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput[]
    connectOrCreate?: PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput | PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput[]
    upsert?: PaymentScheduleUpsertWithWhereUniqueWithoutTuitionBreakdownInput | PaymentScheduleUpsertWithWhereUniqueWithoutTuitionBreakdownInput[]
    createMany?: PaymentScheduleCreateManyTuitionBreakdownInputEnvelope
    set?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    disconnect?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    delete?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    connect?: PaymentScheduleWhereUniqueInput | PaymentScheduleWhereUniqueInput[]
    update?: PaymentScheduleUpdateWithWhereUniqueWithoutTuitionBreakdownInput | PaymentScheduleUpdateWithWhereUniqueWithoutTuitionBreakdownInput[]
    updateMany?: PaymentScheduleUpdateManyWithWhereWithoutTuitionBreakdownInput | PaymentScheduleUpdateManyWithWhereWithoutTuitionBreakdownInput[]
    deleteMany?: PaymentScheduleScalarWhereInput | PaymentScheduleScalarWhereInput[]
  }

  export type TuitionBreakdownCreateNestedOneWithoutPaymentScheduleInput = {
    create?: XOR<TuitionBreakdownCreateWithoutPaymentScheduleInput, TuitionBreakdownUncheckedCreateWithoutPaymentScheduleInput>
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutPaymentScheduleInput
    connect?: TuitionBreakdownWhereUniqueInput
  }

  export type TuitionBreakdownUpdateOneRequiredWithoutPaymentScheduleNestedInput = {
    create?: XOR<TuitionBreakdownCreateWithoutPaymentScheduleInput, TuitionBreakdownUncheckedCreateWithoutPaymentScheduleInput>
    connectOrCreate?: TuitionBreakdownCreateOrConnectWithoutPaymentScheduleInput
    upsert?: TuitionBreakdownUpsertWithoutPaymentScheduleInput
    connect?: TuitionBreakdownWhereUniqueInput
    update?: XOR<XOR<TuitionBreakdownUpdateToOneWithWhereWithoutPaymentScheduleInput, TuitionBreakdownUpdateWithoutPaymentScheduleInput>, TuitionBreakdownUncheckedUpdateWithoutPaymentScheduleInput>
  }

  export type UniversityCreateNestedOneWithoutScholarshipsInput = {
    create?: XOR<UniversityCreateWithoutScholarshipsInput, UniversityUncheckedCreateWithoutScholarshipsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutScholarshipsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutScholarshipsInput = {
    create?: XOR<ProgramCreateWithoutScholarshipsInput, ProgramUncheckedCreateWithoutScholarshipsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutScholarshipsInput
    connect?: ProgramWhereUniqueInput
  }

  export type ScholarshipDocumentCreateNestedManyWithoutScholarshipInput = {
    create?: XOR<ScholarshipDocumentCreateWithoutScholarshipInput, ScholarshipDocumentUncheckedCreateWithoutScholarshipInput> | ScholarshipDocumentCreateWithoutScholarshipInput[] | ScholarshipDocumentUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipDocumentCreateOrConnectWithoutScholarshipInput | ScholarshipDocumentCreateOrConnectWithoutScholarshipInput[]
    createMany?: ScholarshipDocumentCreateManyScholarshipInputEnvelope
    connect?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
  }

  export type ScholarshipApplicationCreateNestedManyWithoutScholarshipInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutScholarshipInput, ScholarshipApplicationUncheckedCreateWithoutScholarshipInput> | ScholarshipApplicationCreateWithoutScholarshipInput[] | ScholarshipApplicationUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutScholarshipInput | ScholarshipApplicationCreateOrConnectWithoutScholarshipInput[]
    createMany?: ScholarshipApplicationCreateManyScholarshipInputEnvelope
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
  }

  export type CalendarEventCreateNestedManyWithoutScholarshipInput = {
    create?: XOR<CalendarEventCreateWithoutScholarshipInput, CalendarEventUncheckedCreateWithoutScholarshipInput> | CalendarEventCreateWithoutScholarshipInput[] | CalendarEventUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutScholarshipInput | CalendarEventCreateOrConnectWithoutScholarshipInput[]
    createMany?: CalendarEventCreateManyScholarshipInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type ScholarshipDocumentUncheckedCreateNestedManyWithoutScholarshipInput = {
    create?: XOR<ScholarshipDocumentCreateWithoutScholarshipInput, ScholarshipDocumentUncheckedCreateWithoutScholarshipInput> | ScholarshipDocumentCreateWithoutScholarshipInput[] | ScholarshipDocumentUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipDocumentCreateOrConnectWithoutScholarshipInput | ScholarshipDocumentCreateOrConnectWithoutScholarshipInput[]
    createMany?: ScholarshipDocumentCreateManyScholarshipInputEnvelope
    connect?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
  }

  export type ScholarshipApplicationUncheckedCreateNestedManyWithoutScholarshipInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutScholarshipInput, ScholarshipApplicationUncheckedCreateWithoutScholarshipInput> | ScholarshipApplicationCreateWithoutScholarshipInput[] | ScholarshipApplicationUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutScholarshipInput | ScholarshipApplicationCreateOrConnectWithoutScholarshipInput[]
    createMany?: ScholarshipApplicationCreateManyScholarshipInputEnvelope
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
  }

  export type CalendarEventUncheckedCreateNestedManyWithoutScholarshipInput = {
    create?: XOR<CalendarEventCreateWithoutScholarshipInput, CalendarEventUncheckedCreateWithoutScholarshipInput> | CalendarEventCreateWithoutScholarshipInput[] | CalendarEventUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutScholarshipInput | CalendarEventCreateOrConnectWithoutScholarshipInput[]
    createMany?: CalendarEventCreateManyScholarshipInputEnvelope
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutScholarshipsNestedInput = {
    create?: XOR<UniversityCreateWithoutScholarshipsInput, UniversityUncheckedCreateWithoutScholarshipsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutScholarshipsInput
    upsert?: UniversityUpsertWithoutScholarshipsInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutScholarshipsInput, UniversityUpdateWithoutScholarshipsInput>, UniversityUncheckedUpdateWithoutScholarshipsInput>
  }

  export type ProgramUpdateOneWithoutScholarshipsNestedInput = {
    create?: XOR<ProgramCreateWithoutScholarshipsInput, ProgramUncheckedCreateWithoutScholarshipsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutScholarshipsInput
    upsert?: ProgramUpsertWithoutScholarshipsInput
    disconnect?: ProgramWhereInput | boolean
    delete?: ProgramWhereInput | boolean
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutScholarshipsInput, ProgramUpdateWithoutScholarshipsInput>, ProgramUncheckedUpdateWithoutScholarshipsInput>
  }

  export type ScholarshipDocumentUpdateManyWithoutScholarshipNestedInput = {
    create?: XOR<ScholarshipDocumentCreateWithoutScholarshipInput, ScholarshipDocumentUncheckedCreateWithoutScholarshipInput> | ScholarshipDocumentCreateWithoutScholarshipInput[] | ScholarshipDocumentUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipDocumentCreateOrConnectWithoutScholarshipInput | ScholarshipDocumentCreateOrConnectWithoutScholarshipInput[]
    upsert?: ScholarshipDocumentUpsertWithWhereUniqueWithoutScholarshipInput | ScholarshipDocumentUpsertWithWhereUniqueWithoutScholarshipInput[]
    createMany?: ScholarshipDocumentCreateManyScholarshipInputEnvelope
    set?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    disconnect?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    delete?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    connect?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    update?: ScholarshipDocumentUpdateWithWhereUniqueWithoutScholarshipInput | ScholarshipDocumentUpdateWithWhereUniqueWithoutScholarshipInput[]
    updateMany?: ScholarshipDocumentUpdateManyWithWhereWithoutScholarshipInput | ScholarshipDocumentUpdateManyWithWhereWithoutScholarshipInput[]
    deleteMany?: ScholarshipDocumentScalarWhereInput | ScholarshipDocumentScalarWhereInput[]
  }

  export type ScholarshipApplicationUpdateManyWithoutScholarshipNestedInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutScholarshipInput, ScholarshipApplicationUncheckedCreateWithoutScholarshipInput> | ScholarshipApplicationCreateWithoutScholarshipInput[] | ScholarshipApplicationUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutScholarshipInput | ScholarshipApplicationCreateOrConnectWithoutScholarshipInput[]
    upsert?: ScholarshipApplicationUpsertWithWhereUniqueWithoutScholarshipInput | ScholarshipApplicationUpsertWithWhereUniqueWithoutScholarshipInput[]
    createMany?: ScholarshipApplicationCreateManyScholarshipInputEnvelope
    set?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    disconnect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    delete?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    update?: ScholarshipApplicationUpdateWithWhereUniqueWithoutScholarshipInput | ScholarshipApplicationUpdateWithWhereUniqueWithoutScholarshipInput[]
    updateMany?: ScholarshipApplicationUpdateManyWithWhereWithoutScholarshipInput | ScholarshipApplicationUpdateManyWithWhereWithoutScholarshipInput[]
    deleteMany?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
  }

  export type CalendarEventUpdateManyWithoutScholarshipNestedInput = {
    create?: XOR<CalendarEventCreateWithoutScholarshipInput, CalendarEventUncheckedCreateWithoutScholarshipInput> | CalendarEventCreateWithoutScholarshipInput[] | CalendarEventUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutScholarshipInput | CalendarEventCreateOrConnectWithoutScholarshipInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutScholarshipInput | CalendarEventUpsertWithWhereUniqueWithoutScholarshipInput[]
    createMany?: CalendarEventCreateManyScholarshipInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutScholarshipInput | CalendarEventUpdateWithWhereUniqueWithoutScholarshipInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutScholarshipInput | CalendarEventUpdateManyWithWhereWithoutScholarshipInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipNestedInput = {
    create?: XOR<ScholarshipDocumentCreateWithoutScholarshipInput, ScholarshipDocumentUncheckedCreateWithoutScholarshipInput> | ScholarshipDocumentCreateWithoutScholarshipInput[] | ScholarshipDocumentUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipDocumentCreateOrConnectWithoutScholarshipInput | ScholarshipDocumentCreateOrConnectWithoutScholarshipInput[]
    upsert?: ScholarshipDocumentUpsertWithWhereUniqueWithoutScholarshipInput | ScholarshipDocumentUpsertWithWhereUniqueWithoutScholarshipInput[]
    createMany?: ScholarshipDocumentCreateManyScholarshipInputEnvelope
    set?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    disconnect?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    delete?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    connect?: ScholarshipDocumentWhereUniqueInput | ScholarshipDocumentWhereUniqueInput[]
    update?: ScholarshipDocumentUpdateWithWhereUniqueWithoutScholarshipInput | ScholarshipDocumentUpdateWithWhereUniqueWithoutScholarshipInput[]
    updateMany?: ScholarshipDocumentUpdateManyWithWhereWithoutScholarshipInput | ScholarshipDocumentUpdateManyWithWhereWithoutScholarshipInput[]
    deleteMany?: ScholarshipDocumentScalarWhereInput | ScholarshipDocumentScalarWhereInput[]
  }

  export type ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipNestedInput = {
    create?: XOR<ScholarshipApplicationCreateWithoutScholarshipInput, ScholarshipApplicationUncheckedCreateWithoutScholarshipInput> | ScholarshipApplicationCreateWithoutScholarshipInput[] | ScholarshipApplicationUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: ScholarshipApplicationCreateOrConnectWithoutScholarshipInput | ScholarshipApplicationCreateOrConnectWithoutScholarshipInput[]
    upsert?: ScholarshipApplicationUpsertWithWhereUniqueWithoutScholarshipInput | ScholarshipApplicationUpsertWithWhereUniqueWithoutScholarshipInput[]
    createMany?: ScholarshipApplicationCreateManyScholarshipInputEnvelope
    set?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    disconnect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    delete?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    connect?: ScholarshipApplicationWhereUniqueInput | ScholarshipApplicationWhereUniqueInput[]
    update?: ScholarshipApplicationUpdateWithWhereUniqueWithoutScholarshipInput | ScholarshipApplicationUpdateWithWhereUniqueWithoutScholarshipInput[]
    updateMany?: ScholarshipApplicationUpdateManyWithWhereWithoutScholarshipInput | ScholarshipApplicationUpdateManyWithWhereWithoutScholarshipInput[]
    deleteMany?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
  }

  export type CalendarEventUncheckedUpdateManyWithoutScholarshipNestedInput = {
    create?: XOR<CalendarEventCreateWithoutScholarshipInput, CalendarEventUncheckedCreateWithoutScholarshipInput> | CalendarEventCreateWithoutScholarshipInput[] | CalendarEventUncheckedCreateWithoutScholarshipInput[]
    connectOrCreate?: CalendarEventCreateOrConnectWithoutScholarshipInput | CalendarEventCreateOrConnectWithoutScholarshipInput[]
    upsert?: CalendarEventUpsertWithWhereUniqueWithoutScholarshipInput | CalendarEventUpsertWithWhereUniqueWithoutScholarshipInput[]
    createMany?: CalendarEventCreateManyScholarshipInputEnvelope
    set?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    disconnect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    delete?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    connect?: CalendarEventWhereUniqueInput | CalendarEventWhereUniqueInput[]
    update?: CalendarEventUpdateWithWhereUniqueWithoutScholarshipInput | CalendarEventUpdateWithWhereUniqueWithoutScholarshipInput[]
    updateMany?: CalendarEventUpdateManyWithWhereWithoutScholarshipInput | CalendarEventUpdateManyWithWhereWithoutScholarshipInput[]
    deleteMany?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
  }

  export type ScholarshipCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<ScholarshipCreateWithoutDocumentsInput, ScholarshipUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: ScholarshipCreateOrConnectWithoutDocumentsInput
    connect?: ScholarshipWhereUniqueInput
  }

  export type ScholarshipUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<ScholarshipCreateWithoutDocumentsInput, ScholarshipUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: ScholarshipCreateOrConnectWithoutDocumentsInput
    upsert?: ScholarshipUpsertWithoutDocumentsInput
    connect?: ScholarshipWhereUniqueInput
    update?: XOR<XOR<ScholarshipUpdateToOneWithWhereWithoutDocumentsInput, ScholarshipUpdateWithoutDocumentsInput>, ScholarshipUncheckedUpdateWithoutDocumentsInput>
  }

  export type ScholarshipCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<ScholarshipCreateWithoutApplicationsInput, ScholarshipUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: ScholarshipCreateOrConnectWithoutApplicationsInput
    connect?: ScholarshipWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutScholarshipApplicationsInput = {
    create?: XOR<UserCreateWithoutScholarshipApplicationsInput, UserUncheckedCreateWithoutScholarshipApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScholarshipApplicationsInput
    connect?: UserWhereUniqueInput
  }

  export type ApplicationCreateNestedOneWithoutScholarshipApplicationsInput = {
    create?: XOR<ApplicationCreateWithoutScholarshipApplicationsInput, ApplicationUncheckedCreateWithoutScholarshipApplicationsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutScholarshipApplicationsInput
    connect?: ApplicationWhereUniqueInput
  }

  export type ScholarshipUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<ScholarshipCreateWithoutApplicationsInput, ScholarshipUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: ScholarshipCreateOrConnectWithoutApplicationsInput
    upsert?: ScholarshipUpsertWithoutApplicationsInput
    connect?: ScholarshipWhereUniqueInput
    update?: XOR<XOR<ScholarshipUpdateToOneWithWhereWithoutApplicationsInput, ScholarshipUpdateWithoutApplicationsInput>, ScholarshipUncheckedUpdateWithoutApplicationsInput>
  }

  export type UserUpdateOneWithoutScholarshipApplicationsNestedInput = {
    create?: XOR<UserCreateWithoutScholarshipApplicationsInput, UserUncheckedCreateWithoutScholarshipApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutScholarshipApplicationsInput
    upsert?: UserUpsertWithoutScholarshipApplicationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutScholarshipApplicationsInput, UserUpdateWithoutScholarshipApplicationsInput>, UserUncheckedUpdateWithoutScholarshipApplicationsInput>
  }

  export type ApplicationUpdateOneWithoutScholarshipApplicationsNestedInput = {
    create?: XOR<ApplicationCreateWithoutScholarshipApplicationsInput, ApplicationUncheckedCreateWithoutScholarshipApplicationsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutScholarshipApplicationsInput
    upsert?: ApplicationUpsertWithoutScholarshipApplicationsInput
    disconnect?: ApplicationWhereInput | boolean
    delete?: ApplicationWhereInput | boolean
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutScholarshipApplicationsInput, ApplicationUpdateWithoutScholarshipApplicationsInput>, ApplicationUncheckedUpdateWithoutScholarshipApplicationsInput>
  }

  export type UniversityCreateNestedOneWithoutFeeStructuresInput = {
    create?: XOR<UniversityCreateWithoutFeeStructuresInput, UniversityUncheckedCreateWithoutFeeStructuresInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutFeeStructuresInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutFeeStructuresInput = {
    create?: XOR<ProgramCreateWithoutFeeStructuresInput, ProgramUncheckedCreateWithoutFeeStructuresInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutFeeStructuresInput
    connect?: ProgramWhereUniqueInput
  }

  export type UniversityUpdateOneRequiredWithoutFeeStructuresNestedInput = {
    create?: XOR<UniversityCreateWithoutFeeStructuresInput, UniversityUncheckedCreateWithoutFeeStructuresInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutFeeStructuresInput
    upsert?: UniversityUpsertWithoutFeeStructuresInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutFeeStructuresInput, UniversityUpdateWithoutFeeStructuresInput>, UniversityUncheckedUpdateWithoutFeeStructuresInput>
  }

  export type ProgramUpdateOneWithoutFeeStructuresNestedInput = {
    create?: XOR<ProgramCreateWithoutFeeStructuresInput, ProgramUncheckedCreateWithoutFeeStructuresInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutFeeStructuresInput
    upsert?: ProgramUpsertWithoutFeeStructuresInput
    disconnect?: ProgramWhereInput | boolean
    delete?: ProgramWhereInput | boolean
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutFeeStructuresInput, ProgramUpdateWithoutFeeStructuresInput>, ProgramUncheckedUpdateWithoutFeeStructuresInput>
  }

  export type UniversityCreateNestedOneWithoutFinancialAidsInput = {
    create?: XOR<UniversityCreateWithoutFinancialAidsInput, UniversityUncheckedCreateWithoutFinancialAidsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutFinancialAidsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutFinancialAidsInput = {
    create?: XOR<ProgramCreateWithoutFinancialAidsInput, ProgramUncheckedCreateWithoutFinancialAidsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutFinancialAidsInput
    connect?: ProgramWhereUniqueInput
  }

  export type FinancialAidApplicationCreateNestedManyWithoutFinancialAidInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutFinancialAidInput, FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput> | FinancialAidApplicationCreateWithoutFinancialAidInput[] | FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput | FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput[]
    createMany?: FinancialAidApplicationCreateManyFinancialAidInputEnvelope
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
  }

  export type FinancialAidApplicationUncheckedCreateNestedManyWithoutFinancialAidInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutFinancialAidInput, FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput> | FinancialAidApplicationCreateWithoutFinancialAidInput[] | FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput | FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput[]
    createMany?: FinancialAidApplicationCreateManyFinancialAidInputEnvelope
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
  }

  export type UniversityUpdateOneRequiredWithoutFinancialAidsNestedInput = {
    create?: XOR<UniversityCreateWithoutFinancialAidsInput, UniversityUncheckedCreateWithoutFinancialAidsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutFinancialAidsInput
    upsert?: UniversityUpsertWithoutFinancialAidsInput
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutFinancialAidsInput, UniversityUpdateWithoutFinancialAidsInput>, UniversityUncheckedUpdateWithoutFinancialAidsInput>
  }

  export type ProgramUpdateOneWithoutFinancialAidsNestedInput = {
    create?: XOR<ProgramCreateWithoutFinancialAidsInput, ProgramUncheckedCreateWithoutFinancialAidsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutFinancialAidsInput
    upsert?: ProgramUpsertWithoutFinancialAidsInput
    disconnect?: ProgramWhereInput | boolean
    delete?: ProgramWhereInput | boolean
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutFinancialAidsInput, ProgramUpdateWithoutFinancialAidsInput>, ProgramUncheckedUpdateWithoutFinancialAidsInput>
  }

  export type FinancialAidApplicationUpdateManyWithoutFinancialAidNestedInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutFinancialAidInput, FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput> | FinancialAidApplicationCreateWithoutFinancialAidInput[] | FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput | FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput[]
    upsert?: FinancialAidApplicationUpsertWithWhereUniqueWithoutFinancialAidInput | FinancialAidApplicationUpsertWithWhereUniqueWithoutFinancialAidInput[]
    createMany?: FinancialAidApplicationCreateManyFinancialAidInputEnvelope
    set?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    disconnect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    delete?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    update?: FinancialAidApplicationUpdateWithWhereUniqueWithoutFinancialAidInput | FinancialAidApplicationUpdateWithWhereUniqueWithoutFinancialAidInput[]
    updateMany?: FinancialAidApplicationUpdateManyWithWhereWithoutFinancialAidInput | FinancialAidApplicationUpdateManyWithWhereWithoutFinancialAidInput[]
    deleteMany?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
  }

  export type FinancialAidApplicationUncheckedUpdateManyWithoutFinancialAidNestedInput = {
    create?: XOR<FinancialAidApplicationCreateWithoutFinancialAidInput, FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput> | FinancialAidApplicationCreateWithoutFinancialAidInput[] | FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput[]
    connectOrCreate?: FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput | FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput[]
    upsert?: FinancialAidApplicationUpsertWithWhereUniqueWithoutFinancialAidInput | FinancialAidApplicationUpsertWithWhereUniqueWithoutFinancialAidInput[]
    createMany?: FinancialAidApplicationCreateManyFinancialAidInputEnvelope
    set?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    disconnect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    delete?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    connect?: FinancialAidApplicationWhereUniqueInput | FinancialAidApplicationWhereUniqueInput[]
    update?: FinancialAidApplicationUpdateWithWhereUniqueWithoutFinancialAidInput | FinancialAidApplicationUpdateWithWhereUniqueWithoutFinancialAidInput[]
    updateMany?: FinancialAidApplicationUpdateManyWithWhereWithoutFinancialAidInput | FinancialAidApplicationUpdateManyWithWhereWithoutFinancialAidInput[]
    deleteMany?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
  }

  export type FinancialAidCreateNestedOneWithoutApplicationsInput = {
    create?: XOR<FinancialAidCreateWithoutApplicationsInput, FinancialAidUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: FinancialAidCreateOrConnectWithoutApplicationsInput
    connect?: FinancialAidWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFinancialAidApplicationsInput = {
    create?: XOR<UserCreateWithoutFinancialAidApplicationsInput, UserUncheckedCreateWithoutFinancialAidApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinancialAidApplicationsInput
    connect?: UserWhereUniqueInput
  }

  export type ApplicationCreateNestedOneWithoutFinancialAidApplicationsInput = {
    create?: XOR<ApplicationCreateWithoutFinancialAidApplicationsInput, ApplicationUncheckedCreateWithoutFinancialAidApplicationsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutFinancialAidApplicationsInput
    connect?: ApplicationWhereUniqueInput
  }

  export type FinancialAidUpdateOneRequiredWithoutApplicationsNestedInput = {
    create?: XOR<FinancialAidCreateWithoutApplicationsInput, FinancialAidUncheckedCreateWithoutApplicationsInput>
    connectOrCreate?: FinancialAidCreateOrConnectWithoutApplicationsInput
    upsert?: FinancialAidUpsertWithoutApplicationsInput
    connect?: FinancialAidWhereUniqueInput
    update?: XOR<XOR<FinancialAidUpdateToOneWithWhereWithoutApplicationsInput, FinancialAidUpdateWithoutApplicationsInput>, FinancialAidUncheckedUpdateWithoutApplicationsInput>
  }

  export type UserUpdateOneWithoutFinancialAidApplicationsNestedInput = {
    create?: XOR<UserCreateWithoutFinancialAidApplicationsInput, UserUncheckedCreateWithoutFinancialAidApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinancialAidApplicationsInput
    upsert?: UserUpsertWithoutFinancialAidApplicationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFinancialAidApplicationsInput, UserUpdateWithoutFinancialAidApplicationsInput>, UserUncheckedUpdateWithoutFinancialAidApplicationsInput>
  }

  export type ApplicationUpdateOneWithoutFinancialAidApplicationsNestedInput = {
    create?: XOR<ApplicationCreateWithoutFinancialAidApplicationsInput, ApplicationUncheckedCreateWithoutFinancialAidApplicationsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutFinancialAidApplicationsInput
    upsert?: ApplicationUpsertWithoutFinancialAidApplicationsInput
    disconnect?: ApplicationWhereInput | boolean
    delete?: ApplicationWhereInput | boolean
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutFinancialAidApplicationsInput, ApplicationUpdateWithoutFinancialAidApplicationsInput>, ApplicationUncheckedUpdateWithoutFinancialAidApplicationsInput>
  }

  export type RefreshTokenCreateNestedManyWithoutAdminUserInput = {
    create?: XOR<RefreshTokenCreateWithoutAdminUserInput, RefreshTokenUncheckedCreateWithoutAdminUserInput> | RefreshTokenCreateWithoutAdminUserInput[] | RefreshTokenUncheckedCreateWithoutAdminUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutAdminUserInput | RefreshTokenCreateOrConnectWithoutAdminUserInput[]
    createMany?: RefreshTokenCreateManyAdminUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutAdminUserInput = {
    create?: XOR<RefreshTokenCreateWithoutAdminUserInput, RefreshTokenUncheckedCreateWithoutAdminUserInput> | RefreshTokenCreateWithoutAdminUserInput[] | RefreshTokenUncheckedCreateWithoutAdminUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutAdminUserInput | RefreshTokenCreateOrConnectWithoutAdminUserInput[]
    createMany?: RefreshTokenCreateManyAdminUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type RefreshTokenUpdateManyWithoutAdminUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutAdminUserInput, RefreshTokenUncheckedCreateWithoutAdminUserInput> | RefreshTokenCreateWithoutAdminUserInput[] | RefreshTokenUncheckedCreateWithoutAdminUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutAdminUserInput | RefreshTokenCreateOrConnectWithoutAdminUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutAdminUserInput | RefreshTokenUpsertWithWhereUniqueWithoutAdminUserInput[]
    createMany?: RefreshTokenCreateManyAdminUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutAdminUserInput | RefreshTokenUpdateWithWhereUniqueWithoutAdminUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutAdminUserInput | RefreshTokenUpdateManyWithWhereWithoutAdminUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutAdminUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutAdminUserInput, RefreshTokenUncheckedCreateWithoutAdminUserInput> | RefreshTokenCreateWithoutAdminUserInput[] | RefreshTokenUncheckedCreateWithoutAdminUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutAdminUserInput | RefreshTokenCreateOrConnectWithoutAdminUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutAdminUserInput | RefreshTokenUpsertWithWhereUniqueWithoutAdminUserInput[]
    createMany?: RefreshTokenCreateManyAdminUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutAdminUserInput | RefreshTokenUpdateWithWhereUniqueWithoutAdminUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutAdminUserInput | RefreshTokenUpdateManyWithWhereWithoutAdminUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type Admin_UserCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<Admin_UserCreateWithoutRefreshTokensInput, Admin_UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: Admin_UserCreateOrConnectWithoutRefreshTokensInput
    connect?: Admin_UserWhereUniqueInput
  }

  export type Admin_UserUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<Admin_UserCreateWithoutRefreshTokensInput, Admin_UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: Admin_UserCreateOrConnectWithoutRefreshTokensInput
    upsert?: Admin_UserUpsertWithoutRefreshTokensInput
    connect?: Admin_UserWhereUniqueInput
    update?: XOR<XOR<Admin_UserUpdateToOneWithWhereWithoutRefreshTokensInput, Admin_UserUpdateWithoutRefreshTokensInput>, Admin_UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type AdmissionCreateNestedOneWithoutEssayPromptsInput = {
    create?: XOR<AdmissionCreateWithoutEssayPromptsInput, AdmissionUncheckedCreateWithoutEssayPromptsInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutEssayPromptsInput
    connect?: AdmissionWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutEssayPromptsInput = {
    create?: XOR<ProgramCreateWithoutEssayPromptsInput, ProgramUncheckedCreateWithoutEssayPromptsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutEssayPromptsInput
    connect?: ProgramWhereUniqueInput
  }

  export type IntakeCreateNestedOneWithoutEssayPromptsInput = {
    create?: XOR<IntakeCreateWithoutEssayPromptsInput, IntakeUncheckedCreateWithoutEssayPromptsInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutEssayPromptsInput
    connect?: IntakeWhereUniqueInput
  }

  export type EssaySubmissionCreateNestedManyWithoutEssayPromptInput = {
    create?: XOR<EssaySubmissionCreateWithoutEssayPromptInput, EssaySubmissionUncheckedCreateWithoutEssayPromptInput> | EssaySubmissionCreateWithoutEssayPromptInput[] | EssaySubmissionUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutEssayPromptInput | EssaySubmissionCreateOrConnectWithoutEssayPromptInput[]
    createMany?: EssaySubmissionCreateManyEssayPromptInputEnvelope
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
  }

  export type EssayCreateNestedManyWithoutEssayPromptInput = {
    create?: XOR<EssayCreateWithoutEssayPromptInput, EssayUncheckedCreateWithoutEssayPromptInput> | EssayCreateWithoutEssayPromptInput[] | EssayUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutEssayPromptInput | EssayCreateOrConnectWithoutEssayPromptInput[]
    createMany?: EssayCreateManyEssayPromptInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type EssaySubmissionUncheckedCreateNestedManyWithoutEssayPromptInput = {
    create?: XOR<EssaySubmissionCreateWithoutEssayPromptInput, EssaySubmissionUncheckedCreateWithoutEssayPromptInput> | EssaySubmissionCreateWithoutEssayPromptInput[] | EssaySubmissionUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutEssayPromptInput | EssaySubmissionCreateOrConnectWithoutEssayPromptInput[]
    createMany?: EssaySubmissionCreateManyEssayPromptInputEnvelope
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
  }

  export type EssayUncheckedCreateNestedManyWithoutEssayPromptInput = {
    create?: XOR<EssayCreateWithoutEssayPromptInput, EssayUncheckedCreateWithoutEssayPromptInput> | EssayCreateWithoutEssayPromptInput[] | EssayUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutEssayPromptInput | EssayCreateOrConnectWithoutEssayPromptInput[]
    createMany?: EssayCreateManyEssayPromptInputEnvelope
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
  }

  export type AdmissionUpdateOneWithoutEssayPromptsNestedInput = {
    create?: XOR<AdmissionCreateWithoutEssayPromptsInput, AdmissionUncheckedCreateWithoutEssayPromptsInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutEssayPromptsInput
    upsert?: AdmissionUpsertWithoutEssayPromptsInput
    disconnect?: AdmissionWhereInput | boolean
    delete?: AdmissionWhereInput | boolean
    connect?: AdmissionWhereUniqueInput
    update?: XOR<XOR<AdmissionUpdateToOneWithWhereWithoutEssayPromptsInput, AdmissionUpdateWithoutEssayPromptsInput>, AdmissionUncheckedUpdateWithoutEssayPromptsInput>
  }

  export type ProgramUpdateOneWithoutEssayPromptsNestedInput = {
    create?: XOR<ProgramCreateWithoutEssayPromptsInput, ProgramUncheckedCreateWithoutEssayPromptsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutEssayPromptsInput
    upsert?: ProgramUpsertWithoutEssayPromptsInput
    disconnect?: ProgramWhereInput | boolean
    delete?: ProgramWhereInput | boolean
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutEssayPromptsInput, ProgramUpdateWithoutEssayPromptsInput>, ProgramUncheckedUpdateWithoutEssayPromptsInput>
  }

  export type IntakeUpdateOneWithoutEssayPromptsNestedInput = {
    create?: XOR<IntakeCreateWithoutEssayPromptsInput, IntakeUncheckedCreateWithoutEssayPromptsInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutEssayPromptsInput
    upsert?: IntakeUpsertWithoutEssayPromptsInput
    disconnect?: IntakeWhereInput | boolean
    delete?: IntakeWhereInput | boolean
    connect?: IntakeWhereUniqueInput
    update?: XOR<XOR<IntakeUpdateToOneWithWhereWithoutEssayPromptsInput, IntakeUpdateWithoutEssayPromptsInput>, IntakeUncheckedUpdateWithoutEssayPromptsInput>
  }

  export type EssaySubmissionUpdateManyWithoutEssayPromptNestedInput = {
    create?: XOR<EssaySubmissionCreateWithoutEssayPromptInput, EssaySubmissionUncheckedCreateWithoutEssayPromptInput> | EssaySubmissionCreateWithoutEssayPromptInput[] | EssaySubmissionUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutEssayPromptInput | EssaySubmissionCreateOrConnectWithoutEssayPromptInput[]
    upsert?: EssaySubmissionUpsertWithWhereUniqueWithoutEssayPromptInput | EssaySubmissionUpsertWithWhereUniqueWithoutEssayPromptInput[]
    createMany?: EssaySubmissionCreateManyEssayPromptInputEnvelope
    set?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    disconnect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    delete?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    update?: EssaySubmissionUpdateWithWhereUniqueWithoutEssayPromptInput | EssaySubmissionUpdateWithWhereUniqueWithoutEssayPromptInput[]
    updateMany?: EssaySubmissionUpdateManyWithWhereWithoutEssayPromptInput | EssaySubmissionUpdateManyWithWhereWithoutEssayPromptInput[]
    deleteMany?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
  }

  export type EssayUpdateManyWithoutEssayPromptNestedInput = {
    create?: XOR<EssayCreateWithoutEssayPromptInput, EssayUncheckedCreateWithoutEssayPromptInput> | EssayCreateWithoutEssayPromptInput[] | EssayUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutEssayPromptInput | EssayCreateOrConnectWithoutEssayPromptInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutEssayPromptInput | EssayUpsertWithWhereUniqueWithoutEssayPromptInput[]
    createMany?: EssayCreateManyEssayPromptInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutEssayPromptInput | EssayUpdateWithWhereUniqueWithoutEssayPromptInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutEssayPromptInput | EssayUpdateManyWithWhereWithoutEssayPromptInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type EssaySubmissionUncheckedUpdateManyWithoutEssayPromptNestedInput = {
    create?: XOR<EssaySubmissionCreateWithoutEssayPromptInput, EssaySubmissionUncheckedCreateWithoutEssayPromptInput> | EssaySubmissionCreateWithoutEssayPromptInput[] | EssaySubmissionUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssaySubmissionCreateOrConnectWithoutEssayPromptInput | EssaySubmissionCreateOrConnectWithoutEssayPromptInput[]
    upsert?: EssaySubmissionUpsertWithWhereUniqueWithoutEssayPromptInput | EssaySubmissionUpsertWithWhereUniqueWithoutEssayPromptInput[]
    createMany?: EssaySubmissionCreateManyEssayPromptInputEnvelope
    set?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    disconnect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    delete?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    connect?: EssaySubmissionWhereUniqueInput | EssaySubmissionWhereUniqueInput[]
    update?: EssaySubmissionUpdateWithWhereUniqueWithoutEssayPromptInput | EssaySubmissionUpdateWithWhereUniqueWithoutEssayPromptInput[]
    updateMany?: EssaySubmissionUpdateManyWithWhereWithoutEssayPromptInput | EssaySubmissionUpdateManyWithWhereWithoutEssayPromptInput[]
    deleteMany?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
  }

  export type EssayUncheckedUpdateManyWithoutEssayPromptNestedInput = {
    create?: XOR<EssayCreateWithoutEssayPromptInput, EssayUncheckedCreateWithoutEssayPromptInput> | EssayCreateWithoutEssayPromptInput[] | EssayUncheckedCreateWithoutEssayPromptInput[]
    connectOrCreate?: EssayCreateOrConnectWithoutEssayPromptInput | EssayCreateOrConnectWithoutEssayPromptInput[]
    upsert?: EssayUpsertWithWhereUniqueWithoutEssayPromptInput | EssayUpsertWithWhereUniqueWithoutEssayPromptInput[]
    createMany?: EssayCreateManyEssayPromptInputEnvelope
    set?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    disconnect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    delete?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    connect?: EssayWhereUniqueInput | EssayWhereUniqueInput[]
    update?: EssayUpdateWithWhereUniqueWithoutEssayPromptInput | EssayUpdateWithWhereUniqueWithoutEssayPromptInput[]
    updateMany?: EssayUpdateManyWithWhereWithoutEssayPromptInput | EssayUpdateManyWithWhereWithoutEssayPromptInput[]
    deleteMany?: EssayScalarWhereInput | EssayScalarWhereInput[]
  }

  export type EssayPromptCreateNestedOneWithoutSubmissionsInput = {
    create?: XOR<EssayPromptCreateWithoutSubmissionsInput, EssayPromptUncheckedCreateWithoutSubmissionsInput>
    connectOrCreate?: EssayPromptCreateOrConnectWithoutSubmissionsInput
    connect?: EssayPromptWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEssaySubmissionsInput = {
    create?: XOR<UserCreateWithoutEssaySubmissionsInput, UserUncheckedCreateWithoutEssaySubmissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEssaySubmissionsInput
    connect?: UserWhereUniqueInput
  }

  export type ApplicationCreateNestedOneWithoutEssaySubmissionsInput = {
    create?: XOR<ApplicationCreateWithoutEssaySubmissionsInput, ApplicationUncheckedCreateWithoutEssaySubmissionsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutEssaySubmissionsInput
    connect?: ApplicationWhereUniqueInput
  }

  export type EssayPromptUpdateOneRequiredWithoutSubmissionsNestedInput = {
    create?: XOR<EssayPromptCreateWithoutSubmissionsInput, EssayPromptUncheckedCreateWithoutSubmissionsInput>
    connectOrCreate?: EssayPromptCreateOrConnectWithoutSubmissionsInput
    upsert?: EssayPromptUpsertWithoutSubmissionsInput
    connect?: EssayPromptWhereUniqueInput
    update?: XOR<XOR<EssayPromptUpdateToOneWithWhereWithoutSubmissionsInput, EssayPromptUpdateWithoutSubmissionsInput>, EssayPromptUncheckedUpdateWithoutSubmissionsInput>
  }

  export type UserUpdateOneWithoutEssaySubmissionsNestedInput = {
    create?: XOR<UserCreateWithoutEssaySubmissionsInput, UserUncheckedCreateWithoutEssaySubmissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutEssaySubmissionsInput
    upsert?: UserUpsertWithoutEssaySubmissionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEssaySubmissionsInput, UserUpdateWithoutEssaySubmissionsInput>, UserUncheckedUpdateWithoutEssaySubmissionsInput>
  }

  export type ApplicationUpdateOneWithoutEssaySubmissionsNestedInput = {
    create?: XOR<ApplicationCreateWithoutEssaySubmissionsInput, ApplicationUncheckedCreateWithoutEssaySubmissionsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutEssaySubmissionsInput
    upsert?: ApplicationUpsertWithoutEssaySubmissionsInput
    disconnect?: ApplicationWhereInput | boolean
    delete?: ApplicationWhereInput | boolean
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutEssaySubmissionsInput, ApplicationUpdateWithoutEssaySubmissionsInput>, ApplicationUncheckedUpdateWithoutEssaySubmissionsInput>
  }

  export type UserCreateNestedOneWithoutEssaysInput = {
    create?: XOR<UserCreateWithoutEssaysInput, UserUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: UserCreateOrConnectWithoutEssaysInput
    connect?: UserWhereUniqueInput
  }

  export type ApplicationCreateNestedOneWithoutEssaysInput = {
    create?: XOR<ApplicationCreateWithoutEssaysInput, ApplicationUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutEssaysInput
    connect?: ApplicationWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutEssaysInput = {
    create?: XOR<ProgramCreateWithoutEssaysInput, ProgramUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutEssaysInput
    connect?: ProgramWhereUniqueInput
  }

  export type EssayPromptCreateNestedOneWithoutEssaysInput = {
    create?: XOR<EssayPromptCreateWithoutEssaysInput, EssayPromptUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: EssayPromptCreateOrConnectWithoutEssaysInput
    connect?: EssayPromptWhereUniqueInput
  }

  export type EssayVersionCreateNestedManyWithoutEssayInput = {
    create?: XOR<EssayVersionCreateWithoutEssayInput, EssayVersionUncheckedCreateWithoutEssayInput> | EssayVersionCreateWithoutEssayInput[] | EssayVersionUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayVersionCreateOrConnectWithoutEssayInput | EssayVersionCreateOrConnectWithoutEssayInput[]
    createMany?: EssayVersionCreateManyEssayInputEnvelope
    connect?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
  }

  export type AIResultCreateNestedManyWithoutEssayInput = {
    create?: XOR<AIResultCreateWithoutEssayInput, AIResultUncheckedCreateWithoutEssayInput> | AIResultCreateWithoutEssayInput[] | AIResultUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayInput | AIResultCreateOrConnectWithoutEssayInput[]
    createMany?: AIResultCreateManyEssayInputEnvelope
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
  }

  export type EssayCompletionLogCreateNestedManyWithoutEssayInput = {
    create?: XOR<EssayCompletionLogCreateWithoutEssayInput, EssayCompletionLogUncheckedCreateWithoutEssayInput> | EssayCompletionLogCreateWithoutEssayInput[] | EssayCompletionLogUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutEssayInput | EssayCompletionLogCreateOrConnectWithoutEssayInput[]
    createMany?: EssayCompletionLogCreateManyEssayInputEnvelope
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
  }

  export type EssayVersionUncheckedCreateNestedManyWithoutEssayInput = {
    create?: XOR<EssayVersionCreateWithoutEssayInput, EssayVersionUncheckedCreateWithoutEssayInput> | EssayVersionCreateWithoutEssayInput[] | EssayVersionUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayVersionCreateOrConnectWithoutEssayInput | EssayVersionCreateOrConnectWithoutEssayInput[]
    createMany?: EssayVersionCreateManyEssayInputEnvelope
    connect?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
  }

  export type AIResultUncheckedCreateNestedManyWithoutEssayInput = {
    create?: XOR<AIResultCreateWithoutEssayInput, AIResultUncheckedCreateWithoutEssayInput> | AIResultCreateWithoutEssayInput[] | AIResultUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayInput | AIResultCreateOrConnectWithoutEssayInput[]
    createMany?: AIResultCreateManyEssayInputEnvelope
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
  }

  export type EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput = {
    create?: XOR<EssayCompletionLogCreateWithoutEssayInput, EssayCompletionLogUncheckedCreateWithoutEssayInput> | EssayCompletionLogCreateWithoutEssayInput[] | EssayCompletionLogUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutEssayInput | EssayCompletionLogCreateOrConnectWithoutEssayInput[]
    createMany?: EssayCompletionLogCreateManyEssayInputEnvelope
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutEssaysNestedInput = {
    create?: XOR<UserCreateWithoutEssaysInput, UserUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: UserCreateOrConnectWithoutEssaysInput
    upsert?: UserUpsertWithoutEssaysInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEssaysInput, UserUpdateWithoutEssaysInput>, UserUncheckedUpdateWithoutEssaysInput>
  }

  export type ApplicationUpdateOneWithoutEssaysNestedInput = {
    create?: XOR<ApplicationCreateWithoutEssaysInput, ApplicationUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutEssaysInput
    upsert?: ApplicationUpsertWithoutEssaysInput
    disconnect?: ApplicationWhereInput | boolean
    delete?: ApplicationWhereInput | boolean
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutEssaysInput, ApplicationUpdateWithoutEssaysInput>, ApplicationUncheckedUpdateWithoutEssaysInput>
  }

  export type ProgramUpdateOneRequiredWithoutEssaysNestedInput = {
    create?: XOR<ProgramCreateWithoutEssaysInput, ProgramUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutEssaysInput
    upsert?: ProgramUpsertWithoutEssaysInput
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutEssaysInput, ProgramUpdateWithoutEssaysInput>, ProgramUncheckedUpdateWithoutEssaysInput>
  }

  export type EssayPromptUpdateOneRequiredWithoutEssaysNestedInput = {
    create?: XOR<EssayPromptCreateWithoutEssaysInput, EssayPromptUncheckedCreateWithoutEssaysInput>
    connectOrCreate?: EssayPromptCreateOrConnectWithoutEssaysInput
    upsert?: EssayPromptUpsertWithoutEssaysInput
    connect?: EssayPromptWhereUniqueInput
    update?: XOR<XOR<EssayPromptUpdateToOneWithWhereWithoutEssaysInput, EssayPromptUpdateWithoutEssaysInput>, EssayPromptUncheckedUpdateWithoutEssaysInput>
  }

  export type EssayVersionUpdateManyWithoutEssayNestedInput = {
    create?: XOR<EssayVersionCreateWithoutEssayInput, EssayVersionUncheckedCreateWithoutEssayInput> | EssayVersionCreateWithoutEssayInput[] | EssayVersionUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayVersionCreateOrConnectWithoutEssayInput | EssayVersionCreateOrConnectWithoutEssayInput[]
    upsert?: EssayVersionUpsertWithWhereUniqueWithoutEssayInput | EssayVersionUpsertWithWhereUniqueWithoutEssayInput[]
    createMany?: EssayVersionCreateManyEssayInputEnvelope
    set?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    disconnect?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    delete?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    connect?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    update?: EssayVersionUpdateWithWhereUniqueWithoutEssayInput | EssayVersionUpdateWithWhereUniqueWithoutEssayInput[]
    updateMany?: EssayVersionUpdateManyWithWhereWithoutEssayInput | EssayVersionUpdateManyWithWhereWithoutEssayInput[]
    deleteMany?: EssayVersionScalarWhereInput | EssayVersionScalarWhereInput[]
  }

  export type AIResultUpdateManyWithoutEssayNestedInput = {
    create?: XOR<AIResultCreateWithoutEssayInput, AIResultUncheckedCreateWithoutEssayInput> | AIResultCreateWithoutEssayInput[] | AIResultUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayInput | AIResultCreateOrConnectWithoutEssayInput[]
    upsert?: AIResultUpsertWithWhereUniqueWithoutEssayInput | AIResultUpsertWithWhereUniqueWithoutEssayInput[]
    createMany?: AIResultCreateManyEssayInputEnvelope
    set?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    disconnect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    delete?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    update?: AIResultUpdateWithWhereUniqueWithoutEssayInput | AIResultUpdateWithWhereUniqueWithoutEssayInput[]
    updateMany?: AIResultUpdateManyWithWhereWithoutEssayInput | AIResultUpdateManyWithWhereWithoutEssayInput[]
    deleteMany?: AIResultScalarWhereInput | AIResultScalarWhereInput[]
  }

  export type EssayCompletionLogUpdateManyWithoutEssayNestedInput = {
    create?: XOR<EssayCompletionLogCreateWithoutEssayInput, EssayCompletionLogUncheckedCreateWithoutEssayInput> | EssayCompletionLogCreateWithoutEssayInput[] | EssayCompletionLogUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutEssayInput | EssayCompletionLogCreateOrConnectWithoutEssayInput[]
    upsert?: EssayCompletionLogUpsertWithWhereUniqueWithoutEssayInput | EssayCompletionLogUpsertWithWhereUniqueWithoutEssayInput[]
    createMany?: EssayCompletionLogCreateManyEssayInputEnvelope
    set?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    disconnect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    delete?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    update?: EssayCompletionLogUpdateWithWhereUniqueWithoutEssayInput | EssayCompletionLogUpdateWithWhereUniqueWithoutEssayInput[]
    updateMany?: EssayCompletionLogUpdateManyWithWhereWithoutEssayInput | EssayCompletionLogUpdateManyWithWhereWithoutEssayInput[]
    deleteMany?: EssayCompletionLogScalarWhereInput | EssayCompletionLogScalarWhereInput[]
  }

  export type EssayVersionUncheckedUpdateManyWithoutEssayNestedInput = {
    create?: XOR<EssayVersionCreateWithoutEssayInput, EssayVersionUncheckedCreateWithoutEssayInput> | EssayVersionCreateWithoutEssayInput[] | EssayVersionUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayVersionCreateOrConnectWithoutEssayInput | EssayVersionCreateOrConnectWithoutEssayInput[]
    upsert?: EssayVersionUpsertWithWhereUniqueWithoutEssayInput | EssayVersionUpsertWithWhereUniqueWithoutEssayInput[]
    createMany?: EssayVersionCreateManyEssayInputEnvelope
    set?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    disconnect?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    delete?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    connect?: EssayVersionWhereUniqueInput | EssayVersionWhereUniqueInput[]
    update?: EssayVersionUpdateWithWhereUniqueWithoutEssayInput | EssayVersionUpdateWithWhereUniqueWithoutEssayInput[]
    updateMany?: EssayVersionUpdateManyWithWhereWithoutEssayInput | EssayVersionUpdateManyWithWhereWithoutEssayInput[]
    deleteMany?: EssayVersionScalarWhereInput | EssayVersionScalarWhereInput[]
  }

  export type AIResultUncheckedUpdateManyWithoutEssayNestedInput = {
    create?: XOR<AIResultCreateWithoutEssayInput, AIResultUncheckedCreateWithoutEssayInput> | AIResultCreateWithoutEssayInput[] | AIResultUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayInput | AIResultCreateOrConnectWithoutEssayInput[]
    upsert?: AIResultUpsertWithWhereUniqueWithoutEssayInput | AIResultUpsertWithWhereUniqueWithoutEssayInput[]
    createMany?: AIResultCreateManyEssayInputEnvelope
    set?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    disconnect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    delete?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    update?: AIResultUpdateWithWhereUniqueWithoutEssayInput | AIResultUpdateWithWhereUniqueWithoutEssayInput[]
    updateMany?: AIResultUpdateManyWithWhereWithoutEssayInput | AIResultUpdateManyWithWhereWithoutEssayInput[]
    deleteMany?: AIResultScalarWhereInput | AIResultScalarWhereInput[]
  }

  export type EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput = {
    create?: XOR<EssayCompletionLogCreateWithoutEssayInput, EssayCompletionLogUncheckedCreateWithoutEssayInput> | EssayCompletionLogCreateWithoutEssayInput[] | EssayCompletionLogUncheckedCreateWithoutEssayInput[]
    connectOrCreate?: EssayCompletionLogCreateOrConnectWithoutEssayInput | EssayCompletionLogCreateOrConnectWithoutEssayInput[]
    upsert?: EssayCompletionLogUpsertWithWhereUniqueWithoutEssayInput | EssayCompletionLogUpsertWithWhereUniqueWithoutEssayInput[]
    createMany?: EssayCompletionLogCreateManyEssayInputEnvelope
    set?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    disconnect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    delete?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    connect?: EssayCompletionLogWhereUniqueInput | EssayCompletionLogWhereUniqueInput[]
    update?: EssayCompletionLogUpdateWithWhereUniqueWithoutEssayInput | EssayCompletionLogUpdateWithWhereUniqueWithoutEssayInput[]
    updateMany?: EssayCompletionLogUpdateManyWithWhereWithoutEssayInput | EssayCompletionLogUpdateManyWithWhereWithoutEssayInput[]
    deleteMany?: EssayCompletionLogScalarWhereInput | EssayCompletionLogScalarWhereInput[]
  }

  export type EssayCreateNestedOneWithoutVersionsInput = {
    create?: XOR<EssayCreateWithoutVersionsInput, EssayUncheckedCreateWithoutVersionsInput>
    connectOrCreate?: EssayCreateOrConnectWithoutVersionsInput
    connect?: EssayWhereUniqueInput
  }

  export type AIResultCreateNestedManyWithoutEssayVersionInput = {
    create?: XOR<AIResultCreateWithoutEssayVersionInput, AIResultUncheckedCreateWithoutEssayVersionInput> | AIResultCreateWithoutEssayVersionInput[] | AIResultUncheckedCreateWithoutEssayVersionInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayVersionInput | AIResultCreateOrConnectWithoutEssayVersionInput[]
    createMany?: AIResultCreateManyEssayVersionInputEnvelope
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
  }

  export type AIResultUncheckedCreateNestedManyWithoutEssayVersionInput = {
    create?: XOR<AIResultCreateWithoutEssayVersionInput, AIResultUncheckedCreateWithoutEssayVersionInput> | AIResultCreateWithoutEssayVersionInput[] | AIResultUncheckedCreateWithoutEssayVersionInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayVersionInput | AIResultCreateOrConnectWithoutEssayVersionInput[]
    createMany?: AIResultCreateManyEssayVersionInputEnvelope
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
  }

  export type EssayUpdateOneRequiredWithoutVersionsNestedInput = {
    create?: XOR<EssayCreateWithoutVersionsInput, EssayUncheckedCreateWithoutVersionsInput>
    connectOrCreate?: EssayCreateOrConnectWithoutVersionsInput
    upsert?: EssayUpsertWithoutVersionsInput
    connect?: EssayWhereUniqueInput
    update?: XOR<XOR<EssayUpdateToOneWithWhereWithoutVersionsInput, EssayUpdateWithoutVersionsInput>, EssayUncheckedUpdateWithoutVersionsInput>
  }

  export type AIResultUpdateManyWithoutEssayVersionNestedInput = {
    create?: XOR<AIResultCreateWithoutEssayVersionInput, AIResultUncheckedCreateWithoutEssayVersionInput> | AIResultCreateWithoutEssayVersionInput[] | AIResultUncheckedCreateWithoutEssayVersionInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayVersionInput | AIResultCreateOrConnectWithoutEssayVersionInput[]
    upsert?: AIResultUpsertWithWhereUniqueWithoutEssayVersionInput | AIResultUpsertWithWhereUniqueWithoutEssayVersionInput[]
    createMany?: AIResultCreateManyEssayVersionInputEnvelope
    set?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    disconnect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    delete?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    update?: AIResultUpdateWithWhereUniqueWithoutEssayVersionInput | AIResultUpdateWithWhereUniqueWithoutEssayVersionInput[]
    updateMany?: AIResultUpdateManyWithWhereWithoutEssayVersionInput | AIResultUpdateManyWithWhereWithoutEssayVersionInput[]
    deleteMany?: AIResultScalarWhereInput | AIResultScalarWhereInput[]
  }

  export type AIResultUncheckedUpdateManyWithoutEssayVersionNestedInput = {
    create?: XOR<AIResultCreateWithoutEssayVersionInput, AIResultUncheckedCreateWithoutEssayVersionInput> | AIResultCreateWithoutEssayVersionInput[] | AIResultUncheckedCreateWithoutEssayVersionInput[]
    connectOrCreate?: AIResultCreateOrConnectWithoutEssayVersionInput | AIResultCreateOrConnectWithoutEssayVersionInput[]
    upsert?: AIResultUpsertWithWhereUniqueWithoutEssayVersionInput | AIResultUpsertWithWhereUniqueWithoutEssayVersionInput[]
    createMany?: AIResultCreateManyEssayVersionInputEnvelope
    set?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    disconnect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    delete?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    connect?: AIResultWhereUniqueInput | AIResultWhereUniqueInput[]
    update?: AIResultUpdateWithWhereUniqueWithoutEssayVersionInput | AIResultUpdateWithWhereUniqueWithoutEssayVersionInput[]
    updateMany?: AIResultUpdateManyWithWhereWithoutEssayVersionInput | AIResultUpdateManyWithWhereWithoutEssayVersionInput[]
    deleteMany?: AIResultScalarWhereInput | AIResultScalarWhereInput[]
  }

  export type EssayCreateNestedOneWithoutAiResultsInput = {
    create?: XOR<EssayCreateWithoutAiResultsInput, EssayUncheckedCreateWithoutAiResultsInput>
    connectOrCreate?: EssayCreateOrConnectWithoutAiResultsInput
    connect?: EssayWhereUniqueInput
  }

  export type EssayVersionCreateNestedOneWithoutAiResultsInput = {
    create?: XOR<EssayVersionCreateWithoutAiResultsInput, EssayVersionUncheckedCreateWithoutAiResultsInput>
    connectOrCreate?: EssayVersionCreateOrConnectWithoutAiResultsInput
    connect?: EssayVersionWhereUniqueInput
  }

  export type EssayUpdateOneRequiredWithoutAiResultsNestedInput = {
    create?: XOR<EssayCreateWithoutAiResultsInput, EssayUncheckedCreateWithoutAiResultsInput>
    connectOrCreate?: EssayCreateOrConnectWithoutAiResultsInput
    upsert?: EssayUpsertWithoutAiResultsInput
    connect?: EssayWhereUniqueInput
    update?: XOR<XOR<EssayUpdateToOneWithWhereWithoutAiResultsInput, EssayUpdateWithoutAiResultsInput>, EssayUncheckedUpdateWithoutAiResultsInput>
  }

  export type EssayVersionUpdateOneWithoutAiResultsNestedInput = {
    create?: XOR<EssayVersionCreateWithoutAiResultsInput, EssayVersionUncheckedCreateWithoutAiResultsInput>
    connectOrCreate?: EssayVersionCreateOrConnectWithoutAiResultsInput
    upsert?: EssayVersionUpsertWithoutAiResultsInput
    disconnect?: EssayVersionWhereInput | boolean
    delete?: EssayVersionWhereInput | boolean
    connect?: EssayVersionWhereUniqueInput
    update?: XOR<XOR<EssayVersionUpdateToOneWithWhereWithoutAiResultsInput, EssayVersionUpdateWithoutAiResultsInput>, EssayVersionUncheckedUpdateWithoutAiResultsInput>
  }

  export type EssayCreateNestedOneWithoutEssayCompletionLogInput = {
    create?: XOR<EssayCreateWithoutEssayCompletionLogInput, EssayUncheckedCreateWithoutEssayCompletionLogInput>
    connectOrCreate?: EssayCreateOrConnectWithoutEssayCompletionLogInput
    connect?: EssayWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEssayCompletionLogInput = {
    create?: XOR<UserCreateWithoutEssayCompletionLogInput, UserUncheckedCreateWithoutEssayCompletionLogInput>
    connectOrCreate?: UserCreateOrConnectWithoutEssayCompletionLogInput
    connect?: UserWhereUniqueInput
  }

  export type EssayUpdateOneRequiredWithoutEssayCompletionLogNestedInput = {
    create?: XOR<EssayCreateWithoutEssayCompletionLogInput, EssayUncheckedCreateWithoutEssayCompletionLogInput>
    connectOrCreate?: EssayCreateOrConnectWithoutEssayCompletionLogInput
    upsert?: EssayUpsertWithoutEssayCompletionLogInput
    connect?: EssayWhereUniqueInput
    update?: XOR<XOR<EssayUpdateToOneWithWhereWithoutEssayCompletionLogInput, EssayUpdateWithoutEssayCompletionLogInput>, EssayUncheckedUpdateWithoutEssayCompletionLogInput>
  }

  export type UserUpdateOneWithoutEssayCompletionLogNestedInput = {
    create?: XOR<UserCreateWithoutEssayCompletionLogInput, UserUncheckedCreateWithoutEssayCompletionLogInput>
    connectOrCreate?: UserCreateOrConnectWithoutEssayCompletionLogInput
    upsert?: UserUpsertWithoutEssayCompletionLogInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEssayCompletionLogInput, UserUpdateWithoutEssayCompletionLogInput>, UserUncheckedUpdateWithoutEssayCompletionLogInput>
  }

  export type UserCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<UserCreateWithoutCalendarEventsInput, UserUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCalendarEventsInput
    connect?: UserWhereUniqueInput
  }

  export type UniversityCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<UniversityCreateWithoutCalendarEventsInput, UniversityUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutCalendarEventsInput
    connect?: UniversityWhereUniqueInput
  }

  export type ProgramCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<ProgramCreateWithoutCalendarEventsInput, ProgramUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutCalendarEventsInput
    connect?: ProgramWhereUniqueInput
  }

  export type ApplicationCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<ApplicationCreateWithoutCalendarEventsInput, ApplicationUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutCalendarEventsInput
    connect?: ApplicationWhereUniqueInput
  }

  export type AdmissionCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<AdmissionCreateWithoutCalendarEventsInput, AdmissionUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutCalendarEventsInput
    connect?: AdmissionWhereUniqueInput
  }

  export type IntakeCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<IntakeCreateWithoutCalendarEventsInput, IntakeUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutCalendarEventsInput
    connect?: IntakeWhereUniqueInput
  }

  export type AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutCalendarEventsInput, AdmissionDeadlineUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutCalendarEventsInput
    connect?: AdmissionDeadlineWhereUniqueInput
  }

  export type InterviewCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<InterviewCreateWithoutCalendarEventsInput, InterviewUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: InterviewCreateOrConnectWithoutCalendarEventsInput
    connect?: InterviewWhereUniqueInput
  }

  export type ScholarshipCreateNestedOneWithoutCalendarEventsInput = {
    create?: XOR<ScholarshipCreateWithoutCalendarEventsInput, ScholarshipUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: ScholarshipCreateOrConnectWithoutCalendarEventsInput
    connect?: ScholarshipWhereUniqueInput
  }

  export type EventReminderCreateNestedManyWithoutEventInput = {
    create?: XOR<EventReminderCreateWithoutEventInput, EventReminderUncheckedCreateWithoutEventInput> | EventReminderCreateWithoutEventInput[] | EventReminderUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutEventInput | EventReminderCreateOrConnectWithoutEventInput[]
    createMany?: EventReminderCreateManyEventInputEnvelope
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
  }

  export type EventReminderUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<EventReminderCreateWithoutEventInput, EventReminderUncheckedCreateWithoutEventInput> | EventReminderCreateWithoutEventInput[] | EventReminderUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutEventInput | EventReminderCreateOrConnectWithoutEventInput[]
    createMany?: EventReminderCreateManyEventInputEnvelope
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<UserCreateWithoutCalendarEventsInput, UserUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCalendarEventsInput
    upsert?: UserUpsertWithoutCalendarEventsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCalendarEventsInput, UserUpdateWithoutCalendarEventsInput>, UserUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type UniversityUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<UniversityCreateWithoutCalendarEventsInput, UniversityUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: UniversityCreateOrConnectWithoutCalendarEventsInput
    upsert?: UniversityUpsertWithoutCalendarEventsInput
    disconnect?: UniversityWhereInput | boolean
    delete?: UniversityWhereInput | boolean
    connect?: UniversityWhereUniqueInput
    update?: XOR<XOR<UniversityUpdateToOneWithWhereWithoutCalendarEventsInput, UniversityUpdateWithoutCalendarEventsInput>, UniversityUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type ProgramUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<ProgramCreateWithoutCalendarEventsInput, ProgramUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: ProgramCreateOrConnectWithoutCalendarEventsInput
    upsert?: ProgramUpsertWithoutCalendarEventsInput
    disconnect?: ProgramWhereInput | boolean
    delete?: ProgramWhereInput | boolean
    connect?: ProgramWhereUniqueInput
    update?: XOR<XOR<ProgramUpdateToOneWithWhereWithoutCalendarEventsInput, ProgramUpdateWithoutCalendarEventsInput>, ProgramUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type ApplicationUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<ApplicationCreateWithoutCalendarEventsInput, ApplicationUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: ApplicationCreateOrConnectWithoutCalendarEventsInput
    upsert?: ApplicationUpsertWithoutCalendarEventsInput
    disconnect?: ApplicationWhereInput | boolean
    delete?: ApplicationWhereInput | boolean
    connect?: ApplicationWhereUniqueInput
    update?: XOR<XOR<ApplicationUpdateToOneWithWhereWithoutCalendarEventsInput, ApplicationUpdateWithoutCalendarEventsInput>, ApplicationUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type AdmissionUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<AdmissionCreateWithoutCalendarEventsInput, AdmissionUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: AdmissionCreateOrConnectWithoutCalendarEventsInput
    upsert?: AdmissionUpsertWithoutCalendarEventsInput
    disconnect?: AdmissionWhereInput | boolean
    delete?: AdmissionWhereInput | boolean
    connect?: AdmissionWhereUniqueInput
    update?: XOR<XOR<AdmissionUpdateToOneWithWhereWithoutCalendarEventsInput, AdmissionUpdateWithoutCalendarEventsInput>, AdmissionUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type IntakeUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<IntakeCreateWithoutCalendarEventsInput, IntakeUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: IntakeCreateOrConnectWithoutCalendarEventsInput
    upsert?: IntakeUpsertWithoutCalendarEventsInput
    disconnect?: IntakeWhereInput | boolean
    delete?: IntakeWhereInput | boolean
    connect?: IntakeWhereUniqueInput
    update?: XOR<XOR<IntakeUpdateToOneWithWhereWithoutCalendarEventsInput, IntakeUpdateWithoutCalendarEventsInput>, IntakeUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<AdmissionDeadlineCreateWithoutCalendarEventsInput, AdmissionDeadlineUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: AdmissionDeadlineCreateOrConnectWithoutCalendarEventsInput
    upsert?: AdmissionDeadlineUpsertWithoutCalendarEventsInput
    disconnect?: AdmissionDeadlineWhereInput | boolean
    delete?: AdmissionDeadlineWhereInput | boolean
    connect?: AdmissionDeadlineWhereUniqueInput
    update?: XOR<XOR<AdmissionDeadlineUpdateToOneWithWhereWithoutCalendarEventsInput, AdmissionDeadlineUpdateWithoutCalendarEventsInput>, AdmissionDeadlineUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type InterviewUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<InterviewCreateWithoutCalendarEventsInput, InterviewUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: InterviewCreateOrConnectWithoutCalendarEventsInput
    upsert?: InterviewUpsertWithoutCalendarEventsInput
    disconnect?: InterviewWhereInput | boolean
    delete?: InterviewWhereInput | boolean
    connect?: InterviewWhereUniqueInput
    update?: XOR<XOR<InterviewUpdateToOneWithWhereWithoutCalendarEventsInput, InterviewUpdateWithoutCalendarEventsInput>, InterviewUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type ScholarshipUpdateOneWithoutCalendarEventsNestedInput = {
    create?: XOR<ScholarshipCreateWithoutCalendarEventsInput, ScholarshipUncheckedCreateWithoutCalendarEventsInput>
    connectOrCreate?: ScholarshipCreateOrConnectWithoutCalendarEventsInput
    upsert?: ScholarshipUpsertWithoutCalendarEventsInput
    disconnect?: ScholarshipWhereInput | boolean
    delete?: ScholarshipWhereInput | boolean
    connect?: ScholarshipWhereUniqueInput
    update?: XOR<XOR<ScholarshipUpdateToOneWithWhereWithoutCalendarEventsInput, ScholarshipUpdateWithoutCalendarEventsInput>, ScholarshipUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type EventReminderUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventReminderCreateWithoutEventInput, EventReminderUncheckedCreateWithoutEventInput> | EventReminderCreateWithoutEventInput[] | EventReminderUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutEventInput | EventReminderCreateOrConnectWithoutEventInput[]
    upsert?: EventReminderUpsertWithWhereUniqueWithoutEventInput | EventReminderUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventReminderCreateManyEventInputEnvelope
    set?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    disconnect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    delete?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    update?: EventReminderUpdateWithWhereUniqueWithoutEventInput | EventReminderUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventReminderUpdateManyWithWhereWithoutEventInput | EventReminderUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventReminderScalarWhereInput | EventReminderScalarWhereInput[]
  }

  export type EventReminderUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventReminderCreateWithoutEventInput, EventReminderUncheckedCreateWithoutEventInput> | EventReminderCreateWithoutEventInput[] | EventReminderUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventReminderCreateOrConnectWithoutEventInput | EventReminderCreateOrConnectWithoutEventInput[]
    upsert?: EventReminderUpsertWithWhereUniqueWithoutEventInput | EventReminderUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventReminderCreateManyEventInputEnvelope
    set?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    disconnect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    delete?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    connect?: EventReminderWhereUniqueInput | EventReminderWhereUniqueInput[]
    update?: EventReminderUpdateWithWhereUniqueWithoutEventInput | EventReminderUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventReminderUpdateManyWithWhereWithoutEventInput | EventReminderUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventReminderScalarWhereInput | EventReminderScalarWhereInput[]
  }

  export type CalendarEventCreateNestedOneWithoutRemindersInput = {
    create?: XOR<CalendarEventCreateWithoutRemindersInput, CalendarEventUncheckedCreateWithoutRemindersInput>
    connectOrCreate?: CalendarEventCreateOrConnectWithoutRemindersInput
    connect?: CalendarEventWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEventRemindersInput = {
    create?: XOR<UserCreateWithoutEventRemindersInput, UserUncheckedCreateWithoutEventRemindersInput>
    connectOrCreate?: UserCreateOrConnectWithoutEventRemindersInput
    connect?: UserWhereUniqueInput
  }

  export type CalendarEventUpdateOneRequiredWithoutRemindersNestedInput = {
    create?: XOR<CalendarEventCreateWithoutRemindersInput, CalendarEventUncheckedCreateWithoutRemindersInput>
    connectOrCreate?: CalendarEventCreateOrConnectWithoutRemindersInput
    upsert?: CalendarEventUpsertWithoutRemindersInput
    connect?: CalendarEventWhereUniqueInput
    update?: XOR<XOR<CalendarEventUpdateToOneWithWhereWithoutRemindersInput, CalendarEventUpdateWithoutRemindersInput>, CalendarEventUncheckedUpdateWithoutRemindersInput>
  }

  export type UserUpdateOneRequiredWithoutEventRemindersNestedInput = {
    create?: XOR<UserCreateWithoutEventRemindersInput, UserUncheckedCreateWithoutEventRemindersInput>
    connectOrCreate?: UserCreateOrConnectWithoutEventRemindersInput
    upsert?: UserUpsertWithoutEventRemindersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEventRemindersInput, UserUpdateWithoutEventRemindersInput>, UserUncheckedUpdateWithoutEventRemindersInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type UserProfileCreateWithoutUserInput = {
    id?: string
    countries?: UserProfileCreatecountriesInput | string[]
    courses?: UserProfileCreatecoursesInput | string[]
    studyLevel?: string | null
    gpa?: string | null
    testScores?: string | null
    workExperience?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserProfileUncheckedCreateWithoutUserInput = {
    id?: string
    countries?: UserProfileCreatecountriesInput | string[]
    courses?: UserProfileCreatecoursesInput | string[]
    studyLevel?: string | null
    gpa?: string | null
    testScores?: string | null
    workExperience?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserProfileCreateOrConnectWithoutUserInput = {
    where: UserProfileWhereUniqueInput
    create: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
  }

  export type SubscriptionCreateWithoutUserInput = {
    id?: string
    plan: string
    status: string
    billingCycle?: string | null
    trialStartDate?: Date | string | null
    trialEndDate?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionUncheckedCreateWithoutUserInput = {
    id?: string
    plan: string
    status: string
    billingCycle?: string | null
    trialStartDate?: Date | string | null
    trialEndDate?: Date | string | null
    currentPeriodStart?: Date | string | null
    currentPeriodEnd?: Date | string | null
    stripeCustomerId?: string | null
    stripeSubscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionCreateOrConnectWithoutUserInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
  }

  export type ApplicationCreateWithoutUserInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutUserInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutUserInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput>
  }

  export type ApplicationCreateManyUserInputEnvelope = {
    data: ApplicationCreateManyUserInput | ApplicationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ScholarshipApplicationCreateWithoutUserInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    scholarship: ScholarshipCreateNestedOneWithoutApplicationsInput
    application?: ApplicationCreateNestedOneWithoutScholarshipApplicationsInput
  }

  export type ScholarshipApplicationUncheckedCreateWithoutUserInput = {
    id?: string
    scholarshipId: string
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationCreateOrConnectWithoutUserInput = {
    where: ScholarshipApplicationWhereUniqueInput
    create: XOR<ScholarshipApplicationCreateWithoutUserInput, ScholarshipApplicationUncheckedCreateWithoutUserInput>
  }

  export type ScholarshipApplicationCreateManyUserInputEnvelope = {
    data: ScholarshipApplicationCreateManyUserInput | ScholarshipApplicationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FinancialAidApplicationCreateWithoutUserInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    financialAid: FinancialAidCreateNestedOneWithoutApplicationsInput
    application?: ApplicationCreateNestedOneWithoutFinancialAidApplicationsInput
  }

  export type FinancialAidApplicationUncheckedCreateWithoutUserInput = {
    id?: string
    financialAidId: string
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationCreateOrConnectWithoutUserInput = {
    where: FinancialAidApplicationWhereUniqueInput
    create: XOR<FinancialAidApplicationCreateWithoutUserInput, FinancialAidApplicationUncheckedCreateWithoutUserInput>
  }

  export type FinancialAidApplicationCreateManyUserInputEnvelope = {
    data: FinancialAidApplicationCreateManyUserInput | FinancialAidApplicationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EssaySubmissionCreateWithoutUserInput = {
    id?: string
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    essayPrompt: EssayPromptCreateNestedOneWithoutSubmissionsInput
    application?: ApplicationCreateNestedOneWithoutEssaySubmissionsInput
  }

  export type EssaySubmissionUncheckedCreateWithoutUserInput = {
    id?: string
    essayPromptId: string
    applicationId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssaySubmissionCreateOrConnectWithoutUserInput = {
    where: EssaySubmissionWhereUniqueInput
    create: XOR<EssaySubmissionCreateWithoutUserInput, EssaySubmissionUncheckedCreateWithoutUserInput>
  }

  export type EssaySubmissionCreateManyUserInputEnvelope = {
    data: EssaySubmissionCreateManyUserInput | EssaySubmissionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UniversityCreateWithoutSavedByUsersInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutSavedByUsersInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutSavedByUsersInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutSavedByUsersInput, UniversityUncheckedCreateWithoutSavedByUsersInput>
  }

  export type CalendarEventCreateWithoutUserInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutUserInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutUserInput, CalendarEventUncheckedCreateWithoutUserInput>
  }

  export type CalendarEventCreateManyUserInputEnvelope = {
    data: CalendarEventCreateManyUserInput | CalendarEventCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EventReminderCreateWithoutUserInput = {
    id?: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    event: CalendarEventCreateNestedOneWithoutRemindersInput
  }

  export type EventReminderUncheckedCreateWithoutUserInput = {
    id?: string
    eventId: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EventReminderCreateOrConnectWithoutUserInput = {
    where: EventReminderWhereUniqueInput
    create: XOR<EventReminderCreateWithoutUserInput, EventReminderUncheckedCreateWithoutUserInput>
  }

  export type EventReminderCreateManyUserInputEnvelope = {
    data: EventReminderCreateManyUserInput | EventReminderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EssayCreateWithoutUserInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    application?: ApplicationCreateNestedOneWithoutEssaysInput
    program: ProgramCreateNestedOneWithoutEssaysInput
    essayPrompt: EssayPromptCreateNestedOneWithoutEssaysInput
    versions?: EssayVersionCreateNestedManyWithoutEssayInput
    aiResults?: AIResultCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateWithoutUserInput = {
    id?: string
    applicationId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    versions?: EssayVersionUncheckedCreateNestedManyWithoutEssayInput
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayCreateOrConnectWithoutUserInput = {
    where: EssayWhereUniqueInput
    create: XOR<EssayCreateWithoutUserInput, EssayUncheckedCreateWithoutUserInput>
  }

  export type EssayCreateManyUserInputEnvelope = {
    data: EssayCreateManyUserInput | EssayCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EssayCompletionLogCreateWithoutUserInput = {
    id?: string
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
    essay: EssayCreateNestedOneWithoutEssayCompletionLogInput
  }

  export type EssayCompletionLogUncheckedCreateWithoutUserInput = {
    id?: string
    essayId: string
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
  }

  export type EssayCompletionLogCreateOrConnectWithoutUserInput = {
    where: EssayCompletionLogWhereUniqueInput
    create: XOR<EssayCompletionLogCreateWithoutUserInput, EssayCompletionLogUncheckedCreateWithoutUserInput>
  }

  export type EssayCompletionLogCreateManyUserInputEnvelope = {
    data: EssayCompletionLogCreateManyUserInput | EssayCompletionLogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserProfileUpsertWithoutUserInput = {
    update: XOR<UserProfileUpdateWithoutUserInput, UserProfileUncheckedUpdateWithoutUserInput>
    create: XOR<UserProfileCreateWithoutUserInput, UserProfileUncheckedCreateWithoutUserInput>
    where?: UserProfileWhereInput
  }

  export type UserProfileUpdateToOneWithWhereWithoutUserInput = {
    where?: UserProfileWhereInput
    data: XOR<UserProfileUpdateWithoutUserInput, UserProfileUncheckedUpdateWithoutUserInput>
  }

  export type UserProfileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    countries?: UserProfileUpdatecountriesInput | string[]
    courses?: UserProfileUpdatecoursesInput | string[]
    studyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableStringFieldUpdateOperationsInput | string | null
    testScores?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserProfileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    countries?: UserProfileUpdatecountriesInput | string[]
    courses?: UserProfileUpdatecoursesInput | string[]
    studyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    gpa?: NullableStringFieldUpdateOperationsInput | string | null
    testScores?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUpsertWithoutUserInput = {
    update: XOR<SubscriptionUpdateWithoutUserInput, SubscriptionUncheckedUpdateWithoutUserInput>
    create: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
    where?: SubscriptionWhereInput
  }

  export type SubscriptionUpdateToOneWithWhereWithoutUserInput = {
    where?: SubscriptionWhereInput
    data: XOR<SubscriptionUpdateWithoutUserInput, SubscriptionUncheckedUpdateWithoutUserInput>
  }

  export type SubscriptionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    billingCycle?: NullableStringFieldUpdateOperationsInput | string | null
    trialStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    plan?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    billingCycle?: NullableStringFieldUpdateOperationsInput | string | null
    trialStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trialEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentPeriodEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    stripeCustomerId?: NullableStringFieldUpdateOperationsInput | string | null
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUpsertWithWhereUniqueWithoutUserInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutUserInput, ApplicationUncheckedUpdateWithoutUserInput>
    create: XOR<ApplicationCreateWithoutUserInput, ApplicationUncheckedCreateWithoutUserInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutUserInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutUserInput, ApplicationUncheckedUpdateWithoutUserInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutUserInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutUserInput>
  }

  export type ApplicationScalarWhereInput = {
    AND?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    OR?: ApplicationScalarWhereInput[]
    NOT?: ApplicationScalarWhereInput | ApplicationScalarWhereInput[]
    id?: StringFilter<"Application"> | string
    admissionId?: StringFilter<"Application"> | string
    universityId?: StringFilter<"Application"> | string
    programId?: StringFilter<"Application"> | string
    intakeId?: StringNullableFilter<"Application"> | string | null
    userId?: StringNullableFilter<"Application"> | string | null
    firstName?: StringFilter<"Application"> | string
    lastName?: StringFilter<"Application"> | string
    email?: StringFilter<"Application"> | string
    phone?: StringNullableFilter<"Application"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"Application"> | Date | string | null
    nationality?: StringNullableFilter<"Application"> | string | null
    currentGpa?: FloatNullableFilter<"Application"> | number | null
    gmatScore?: IntNullableFilter<"Application"> | number | null
    greScore?: IntNullableFilter<"Application"> | number | null
    ieltsScore?: FloatNullableFilter<"Application"> | number | null
    toeflScore?: IntNullableFilter<"Application"> | number | null
    pteScore?: IntNullableFilter<"Application"> | number | null
    duolingoScore?: IntNullableFilter<"Application"> | number | null
    workExperienceMonths?: IntNullableFilter<"Application"> | number | null
    workExperienceDetails?: StringNullableFilter<"Application"> | string | null
    applicationStatus?: StringFilter<"Application"> | string
    currentStage?: StringFilter<"Application"> | string
    stageUpdatedAt?: DateTimeFilter<"Application"> | Date | string
    completionPercentage?: FloatFilter<"Application"> | number
    nextDeadlineId?: StringNullableFilter<"Application"> | string | null
    completedDeadlines?: StringNullableFilter<"Application"> | string | null
    missedDeadlines?: StringNullableFilter<"Application"> | string | null
    submissionDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    lastActivityAt?: DateTimeFilter<"Application"> | Date | string
    applicationFeesPaid?: BoolFilter<"Application"> | boolean
    applicationFeesAmount?: FloatNullableFilter<"Application"> | number | null
    documentsUploaded?: StringNullableFilter<"Application"> | string | null
    documentsVerified?: BoolFilter<"Application"> | boolean
    lastContactDate?: DateTimeNullableFilter<"Application"> | Date | string | null
    contactNotes?: StringNullableFilter<"Application"> | string | null
    createdAt?: DateTimeFilter<"Application"> | Date | string
    updatedAt?: DateTimeFilter<"Application"> | Date | string
  }

  export type ScholarshipApplicationUpsertWithWhereUniqueWithoutUserInput = {
    where: ScholarshipApplicationWhereUniqueInput
    update: XOR<ScholarshipApplicationUpdateWithoutUserInput, ScholarshipApplicationUncheckedUpdateWithoutUserInput>
    create: XOR<ScholarshipApplicationCreateWithoutUserInput, ScholarshipApplicationUncheckedCreateWithoutUserInput>
  }

  export type ScholarshipApplicationUpdateWithWhereUniqueWithoutUserInput = {
    where: ScholarshipApplicationWhereUniqueInput
    data: XOR<ScholarshipApplicationUpdateWithoutUserInput, ScholarshipApplicationUncheckedUpdateWithoutUserInput>
  }

  export type ScholarshipApplicationUpdateManyWithWhereWithoutUserInput = {
    where: ScholarshipApplicationScalarWhereInput
    data: XOR<ScholarshipApplicationUpdateManyMutationInput, ScholarshipApplicationUncheckedUpdateManyWithoutUserInput>
  }

  export type ScholarshipApplicationScalarWhereInput = {
    AND?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
    OR?: ScholarshipApplicationScalarWhereInput[]
    NOT?: ScholarshipApplicationScalarWhereInput | ScholarshipApplicationScalarWhereInput[]
    id?: StringFilter<"ScholarshipApplication"> | string
    scholarshipId?: StringFilter<"ScholarshipApplication"> | string
    userId?: StringNullableFilter<"ScholarshipApplication"> | string | null
    applicationId?: StringNullableFilter<"ScholarshipApplication"> | string | null
    firstName?: StringFilter<"ScholarshipApplication"> | string
    lastName?: StringFilter<"ScholarshipApplication"> | string
    email?: StringFilter<"ScholarshipApplication"> | string
    phone?: StringNullableFilter<"ScholarshipApplication"> | string | null
    currentGpa?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    testScore?: IntNullableFilter<"ScholarshipApplication"> | number | null
    testType?: StringNullableFilter<"ScholarshipApplication"> | string | null
    familyIncome?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    financialNeed?: StringNullableFilter<"ScholarshipApplication"> | string | null
    applicationStatus?: StringFilter<"ScholarshipApplication"> | string
    submissionDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"ScholarshipApplication"> | Date | string | null
    awardAmount?: FloatNullableFilter<"ScholarshipApplication"> | number | null
    documentsUploaded?: StringNullableFilter<"ScholarshipApplication"> | string | null
    createdAt?: DateTimeFilter<"ScholarshipApplication"> | Date | string
    updatedAt?: DateTimeFilter<"ScholarshipApplication"> | Date | string
  }

  export type FinancialAidApplicationUpsertWithWhereUniqueWithoutUserInput = {
    where: FinancialAidApplicationWhereUniqueInput
    update: XOR<FinancialAidApplicationUpdateWithoutUserInput, FinancialAidApplicationUncheckedUpdateWithoutUserInput>
    create: XOR<FinancialAidApplicationCreateWithoutUserInput, FinancialAidApplicationUncheckedCreateWithoutUserInput>
  }

  export type FinancialAidApplicationUpdateWithWhereUniqueWithoutUserInput = {
    where: FinancialAidApplicationWhereUniqueInput
    data: XOR<FinancialAidApplicationUpdateWithoutUserInput, FinancialAidApplicationUncheckedUpdateWithoutUserInput>
  }

  export type FinancialAidApplicationUpdateManyWithWhereWithoutUserInput = {
    where: FinancialAidApplicationScalarWhereInput
    data: XOR<FinancialAidApplicationUpdateManyMutationInput, FinancialAidApplicationUncheckedUpdateManyWithoutUserInput>
  }

  export type FinancialAidApplicationScalarWhereInput = {
    AND?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
    OR?: FinancialAidApplicationScalarWhereInput[]
    NOT?: FinancialAidApplicationScalarWhereInput | FinancialAidApplicationScalarWhereInput[]
    id?: StringFilter<"FinancialAidApplication"> | string
    financialAidId?: StringFilter<"FinancialAidApplication"> | string
    userId?: StringNullableFilter<"FinancialAidApplication"> | string | null
    applicationId?: StringNullableFilter<"FinancialAidApplication"> | string | null
    firstName?: StringFilter<"FinancialAidApplication"> | string
    lastName?: StringFilter<"FinancialAidApplication"> | string
    email?: StringFilter<"FinancialAidApplication"> | string
    phone?: StringNullableFilter<"FinancialAidApplication"> | string | null
    familyIncome?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    assets?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    liabilities?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    dependents?: IntNullableFilter<"FinancialAidApplication"> | number | null
    applicationStatus?: StringFilter<"FinancialAidApplication"> | string
    submissionDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    reviewDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    decisionDate?: DateTimeNullableFilter<"FinancialAidApplication"> | Date | string | null
    approvedAmount?: FloatNullableFilter<"FinancialAidApplication"> | number | null
    documentsUploaded?: StringNullableFilter<"FinancialAidApplication"> | string | null
    createdAt?: DateTimeFilter<"FinancialAidApplication"> | Date | string
    updatedAt?: DateTimeFilter<"FinancialAidApplication"> | Date | string
  }

  export type EssaySubmissionUpsertWithWhereUniqueWithoutUserInput = {
    where: EssaySubmissionWhereUniqueInput
    update: XOR<EssaySubmissionUpdateWithoutUserInput, EssaySubmissionUncheckedUpdateWithoutUserInput>
    create: XOR<EssaySubmissionCreateWithoutUserInput, EssaySubmissionUncheckedCreateWithoutUserInput>
  }

  export type EssaySubmissionUpdateWithWhereUniqueWithoutUserInput = {
    where: EssaySubmissionWhereUniqueInput
    data: XOR<EssaySubmissionUpdateWithoutUserInput, EssaySubmissionUncheckedUpdateWithoutUserInput>
  }

  export type EssaySubmissionUpdateManyWithWhereWithoutUserInput = {
    where: EssaySubmissionScalarWhereInput
    data: XOR<EssaySubmissionUpdateManyMutationInput, EssaySubmissionUncheckedUpdateManyWithoutUserInput>
  }

  export type EssaySubmissionScalarWhereInput = {
    AND?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
    OR?: EssaySubmissionScalarWhereInput[]
    NOT?: EssaySubmissionScalarWhereInput | EssaySubmissionScalarWhereInput[]
    id?: StringFilter<"EssaySubmission"> | string
    essayPromptId?: StringFilter<"EssaySubmission"> | string
    userId?: StringNullableFilter<"EssaySubmission"> | string | null
    applicationId?: StringNullableFilter<"EssaySubmission"> | string | null
    title?: StringNullableFilter<"EssaySubmission"> | string | null
    content?: StringFilter<"EssaySubmission"> | string
    wordCount?: IntFilter<"EssaySubmission"> | number
    status?: StringFilter<"EssaySubmission"> | string
    submissionDate?: DateTimeNullableFilter<"EssaySubmission"> | Date | string | null
    lastEditedAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    isUsingTemplate?: BoolFilter<"EssaySubmission"> | boolean
    templateVersion?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewStatus?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewerId?: StringNullableFilter<"EssaySubmission"> | string | null
    reviewerComment?: StringNullableFilter<"EssaySubmission"> | string | null
    internalRating?: FloatNullableFilter<"EssaySubmission"> | number | null
    createdAt?: DateTimeFilter<"EssaySubmission"> | Date | string
    updatedAt?: DateTimeFilter<"EssaySubmission"> | Date | string
  }

  export type UniversityUpsertWithWhereUniqueWithoutSavedByUsersInput = {
    where: UniversityWhereUniqueInput
    update: XOR<UniversityUpdateWithoutSavedByUsersInput, UniversityUncheckedUpdateWithoutSavedByUsersInput>
    create: XOR<UniversityCreateWithoutSavedByUsersInput, UniversityUncheckedCreateWithoutSavedByUsersInput>
  }

  export type UniversityUpdateWithWhereUniqueWithoutSavedByUsersInput = {
    where: UniversityWhereUniqueInput
    data: XOR<UniversityUpdateWithoutSavedByUsersInput, UniversityUncheckedUpdateWithoutSavedByUsersInput>
  }

  export type UniversityUpdateManyWithWhereWithoutSavedByUsersInput = {
    where: UniversityScalarWhereInput
    data: XOR<UniversityUpdateManyMutationInput, UniversityUncheckedUpdateManyWithoutSavedByUsersInput>
  }

  export type UniversityScalarWhereInput = {
    AND?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
    OR?: UniversityScalarWhereInput[]
    NOT?: UniversityScalarWhereInput | UniversityScalarWhereInput[]
    id?: StringFilter<"University"> | string
    universityName?: StringFilter<"University"> | string
    slug?: StringFilter<"University"> | string
    city?: StringFilter<"University"> | string
    state?: StringNullableFilter<"University"> | string | null
    country?: StringFilter<"University"> | string
    fullAddress?: StringNullableFilter<"University"> | string | null
    shortDescription?: StringNullableFilter<"University"> | string | null
    overview?: StringNullableFilter<"University"> | string | null
    history?: StringNullableFilter<"University"> | string | null
    missionStatement?: StringNullableFilter<"University"> | string | null
    visionStatement?: StringNullableFilter<"University"> | string | null
    accreditationDetails?: StringNullableFilter<"University"> | string | null
    whyChooseHighlights?: StringNullableListFilter<"University">
    careerOutcomes?: StringNullableFilter<"University"> | string | null
    ftGlobalRanking?: IntNullableFilter<"University"> | number | null
    ftRegionalRanking?: IntNullableFilter<"University"> | number | null
    ftRankingYear?: IntNullableFilter<"University"> | number | null
    usNewsRanking?: IntNullableFilter<"University"> | number | null
    qsRanking?: IntNullableFilter<"University"> | number | null
    timesRanking?: IntNullableFilter<"University"> | number | null
    acceptanceRate?: FloatNullableFilter<"University"> | number | null
    gmatAverageScore?: IntNullableFilter<"University"> | number | null
    gmatScoreMin?: IntNullableFilter<"University"> | number | null
    gmatScoreMax?: IntNullableFilter<"University"> | number | null
    minimumGpa?: FloatNullableFilter<"University"> | number | null
    languageTestRequirements?: StringNullableFilter<"University"> | string | null
    tuitionFees?: FloatNullableFilter<"University"> | number | null
    additionalFees?: FloatNullableFilter<"University"> | number | null
    totalCost?: FloatNullableFilter<"University"> | number | null
    currency?: StringFilter<"University"> | string
    scholarshipInfo?: StringNullableFilter<"University"> | string | null
    financialAidDetails?: StringNullableFilter<"University"> | string | null
    admissionsOfficeContact?: StringNullableFilter<"University"> | string | null
    internationalOfficeContact?: StringNullableFilter<"University"> | string | null
    generalInquiriesContact?: StringNullableFilter<"University"> | string | null
    websiteUrl?: StringNullableFilter<"University"> | string | null
    metaTitle?: StringNullableFilter<"University"> | string | null
    metaDescription?: StringNullableFilter<"University"> | string | null
    metaKeywords?: StringNullableFilter<"University"> | string | null
    canonicalUrl?: StringNullableFilter<"University"> | string | null
    isActive?: BoolFilter<"University"> | boolean
    isFeatured?: BoolFilter<"University"> | boolean
    createdAt?: DateTimeFilter<"University"> | Date | string
    updatedAt?: DateTimeFilter<"University"> | Date | string
    averageDeadlines?: StringNullableFilter<"University"> | string | null
    studentsPerYear?: IntNullableFilter<"University"> | number | null
    brochureUrl?: StringNullableFilter<"University"> | string | null
    additionalDocumentUrls?: StringNullableListFilter<"University">
    averageProgramLengthMonths?: IntNullableFilter<"University"> | number | null
    intakes?: StringNullableFilter<"University"> | string | null
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutUserInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutUserInput, CalendarEventUncheckedUpdateWithoutUserInput>
    create: XOR<CalendarEventCreateWithoutUserInput, CalendarEventUncheckedCreateWithoutUserInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutUserInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutUserInput, CalendarEventUncheckedUpdateWithoutUserInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutUserInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutUserInput>
  }

  export type CalendarEventScalarWhereInput = {
    AND?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
    OR?: CalendarEventScalarWhereInput[]
    NOT?: CalendarEventScalarWhereInput | CalendarEventScalarWhereInput[]
    id?: StringFilter<"CalendarEvent"> | string
    userId?: StringNullableFilter<"CalendarEvent"> | string | null
    title?: StringFilter<"CalendarEvent"> | string
    description?: StringNullableFilter<"CalendarEvent"> | string | null
    location?: StringNullableFilter<"CalendarEvent"> | string | null
    startDate?: DateTimeFilter<"CalendarEvent"> | Date | string
    endDate?: DateTimeFilter<"CalendarEvent"> | Date | string
    timezone?: StringFilter<"CalendarEvent"> | string
    isAllDay?: BoolFilter<"CalendarEvent"> | boolean
    eventType?: StringFilter<"CalendarEvent"> | string
    eventStatus?: StringFilter<"CalendarEvent"> | string
    priority?: StringFilter<"CalendarEvent"> | string
    universityId?: StringNullableFilter<"CalendarEvent"> | string | null
    programId?: StringNullableFilter<"CalendarEvent"> | string | null
    applicationId?: StringNullableFilter<"CalendarEvent"> | string | null
    admissionId?: StringNullableFilter<"CalendarEvent"> | string | null
    intakeId?: StringNullableFilter<"CalendarEvent"> | string | null
    admissionDeadlineId?: StringNullableFilter<"CalendarEvent"> | string | null
    interviewId?: StringNullableFilter<"CalendarEvent"> | string | null
    scholarshipId?: StringNullableFilter<"CalendarEvent"> | string | null
    isRecurring?: BoolFilter<"CalendarEvent"> | boolean
    recurringPattern?: StringNullableFilter<"CalendarEvent"> | string | null
    parentEventId?: StringNullableFilter<"CalendarEvent"> | string | null
    hasReminders?: BoolFilter<"CalendarEvent"> | boolean
    isSystemGenerated?: BoolFilter<"CalendarEvent"> | boolean
    color?: StringNullableFilter<"CalendarEvent"> | string | null
    isVisible?: BoolFilter<"CalendarEvent"> | boolean
    completionStatus?: StringFilter<"CalendarEvent"> | string
    completedAt?: DateTimeNullableFilter<"CalendarEvent"> | Date | string | null
    completionNotes?: StringNullableFilter<"CalendarEvent"> | string | null
    createdAt?: DateTimeFilter<"CalendarEvent"> | Date | string
    updatedAt?: DateTimeFilter<"CalendarEvent"> | Date | string
    lastModifiedBy?: StringNullableFilter<"CalendarEvent"> | string | null
  }

  export type EventReminderUpsertWithWhereUniqueWithoutUserInput = {
    where: EventReminderWhereUniqueInput
    update: XOR<EventReminderUpdateWithoutUserInput, EventReminderUncheckedUpdateWithoutUserInput>
    create: XOR<EventReminderCreateWithoutUserInput, EventReminderUncheckedCreateWithoutUserInput>
  }

  export type EventReminderUpdateWithWhereUniqueWithoutUserInput = {
    where: EventReminderWhereUniqueInput
    data: XOR<EventReminderUpdateWithoutUserInput, EventReminderUncheckedUpdateWithoutUserInput>
  }

  export type EventReminderUpdateManyWithWhereWithoutUserInput = {
    where: EventReminderScalarWhereInput
    data: XOR<EventReminderUpdateManyMutationInput, EventReminderUncheckedUpdateManyWithoutUserInput>
  }

  export type EventReminderScalarWhereInput = {
    AND?: EventReminderScalarWhereInput | EventReminderScalarWhereInput[]
    OR?: EventReminderScalarWhereInput[]
    NOT?: EventReminderScalarWhereInput | EventReminderScalarWhereInput[]
    id?: StringFilter<"EventReminder"> | string
    eventId?: StringFilter<"EventReminder"> | string
    userId?: StringFilter<"EventReminder"> | string
    reminderType?: StringFilter<"EventReminder"> | string
    reminderTime?: IntFilter<"EventReminder"> | number
    reminderMessage?: StringNullableFilter<"EventReminder"> | string | null
    scheduledFor?: DateTimeFilter<"EventReminder"> | Date | string
    isActive?: BoolFilter<"EventReminder"> | boolean
    isSent?: BoolFilter<"EventReminder"> | boolean
    sentAt?: DateTimeNullableFilter<"EventReminder"> | Date | string | null
    failureReason?: StringNullableFilter<"EventReminder"> | string | null
    retryCount?: IntFilter<"EventReminder"> | number
    createdAt?: DateTimeFilter<"EventReminder"> | Date | string
    updatedAt?: DateTimeFilter<"EventReminder"> | Date | string
  }

  export type EssayUpsertWithWhereUniqueWithoutUserInput = {
    where: EssayWhereUniqueInput
    update: XOR<EssayUpdateWithoutUserInput, EssayUncheckedUpdateWithoutUserInput>
    create: XOR<EssayCreateWithoutUserInput, EssayUncheckedCreateWithoutUserInput>
  }

  export type EssayUpdateWithWhereUniqueWithoutUserInput = {
    where: EssayWhereUniqueInput
    data: XOR<EssayUpdateWithoutUserInput, EssayUncheckedUpdateWithoutUserInput>
  }

  export type EssayUpdateManyWithWhereWithoutUserInput = {
    where: EssayScalarWhereInput
    data: XOR<EssayUpdateManyMutationInput, EssayUncheckedUpdateManyWithoutUserInput>
  }

  export type EssayScalarWhereInput = {
    AND?: EssayScalarWhereInput | EssayScalarWhereInput[]
    OR?: EssayScalarWhereInput[]
    NOT?: EssayScalarWhereInput | EssayScalarWhereInput[]
    id?: StringFilter<"Essay"> | string
    userId?: StringNullableFilter<"Essay"> | string | null
    applicationId?: StringNullableFilter<"Essay"> | string | null
    programId?: StringFilter<"Essay"> | string
    essayPromptId?: StringFilter<"Essay"> | string
    title?: StringFilter<"Essay"> | string
    content?: StringFilter<"Essay"> | string
    wordCount?: IntFilter<"Essay"> | number
    wordLimit?: IntFilter<"Essay"> | number
    status?: StringFilter<"Essay"> | string
    priority?: StringFilter<"Essay"> | string
    isCompleted?: BoolFilter<"Essay"> | boolean
    completedAt?: DateTimeNullableFilter<"Essay"> | Date | string | null
    completionPercentage?: FloatFilter<"Essay"> | number
    lastModified?: DateTimeFilter<"Essay"> | Date | string
    createdAt?: DateTimeFilter<"Essay"> | Date | string
    updatedAt?: DateTimeFilter<"Essay"> | Date | string
    lastAutoSaved?: DateTimeFilter<"Essay"> | Date | string
    autoSaveEnabled?: BoolFilter<"Essay"> | boolean
  }

  export type EssayCompletionLogUpsertWithWhereUniqueWithoutUserInput = {
    where: EssayCompletionLogWhereUniqueInput
    update: XOR<EssayCompletionLogUpdateWithoutUserInput, EssayCompletionLogUncheckedUpdateWithoutUserInput>
    create: XOR<EssayCompletionLogCreateWithoutUserInput, EssayCompletionLogUncheckedCreateWithoutUserInput>
  }

  export type EssayCompletionLogUpdateWithWhereUniqueWithoutUserInput = {
    where: EssayCompletionLogWhereUniqueInput
    data: XOR<EssayCompletionLogUpdateWithoutUserInput, EssayCompletionLogUncheckedUpdateWithoutUserInput>
  }

  export type EssayCompletionLogUpdateManyWithWhereWithoutUserInput = {
    where: EssayCompletionLogScalarWhereInput
    data: XOR<EssayCompletionLogUpdateManyMutationInput, EssayCompletionLogUncheckedUpdateManyWithoutUserInput>
  }

  export type EssayCompletionLogScalarWhereInput = {
    AND?: EssayCompletionLogScalarWhereInput | EssayCompletionLogScalarWhereInput[]
    OR?: EssayCompletionLogScalarWhereInput[]
    NOT?: EssayCompletionLogScalarWhereInput | EssayCompletionLogScalarWhereInput[]
    id?: StringFilter<"EssayCompletionLog"> | string
    essayId?: StringFilter<"EssayCompletionLog"> | string
    userId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    completedAt?: DateTimeFilter<"EssayCompletionLog"> | Date | string
    wordCountAtCompletion?: IntFilter<"EssayCompletionLog"> | number
    wordLimit?: IntFilter<"EssayCompletionLog"> | number
    completionMethod?: StringFilter<"EssayCompletionLog"> | string
    previousStatus?: StringNullableFilter<"EssayCompletionLog"> | string | null
    programId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    universityId?: StringNullableFilter<"EssayCompletionLog"> | string | null
    essayPromptTitle?: StringNullableFilter<"EssayCompletionLog"> | string | null
    createdAt?: DateTimeFilter<"EssayCompletionLog"> | Date | string
  }

  export type UserCreateWithoutProfileInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutProfileInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutProfileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
  }

  export type UserUpsertWithoutProfileInput = {
    update: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
    create: XOR<UserCreateWithoutProfileInput, UserUncheckedCreateWithoutProfileInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfileInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfileInput, UserUncheckedUpdateWithoutProfileInput>
  }

  export type UserUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSubscriptionInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubscriptionInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubscriptionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubscriptionInput, UserUncheckedCreateWithoutSubscriptionInput>
  }

  export type UserUpsertWithoutSubscriptionInput = {
    update: XOR<UserUpdateWithoutSubscriptionInput, UserUncheckedUpdateWithoutSubscriptionInput>
    create: XOR<UserCreateWithoutSubscriptionInput, UserUncheckedCreateWithoutSubscriptionInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubscriptionInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubscriptionInput, UserUncheckedUpdateWithoutSubscriptionInput>
  }

  export type UserUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubscriptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UniversityImageCreateWithoutUniversityInput = {
    id?: string
    imageUrl: string
    imageType?: string | null
    imageTitle?: string | null
    imageAltText: string
    imageCaption?: string | null
    fileSize?: number | null
    width?: number | null
    height?: number | null
    isPrimary?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type UniversityImageUncheckedCreateWithoutUniversityInput = {
    id?: string
    imageUrl: string
    imageType?: string | null
    imageTitle?: string | null
    imageAltText: string
    imageCaption?: string | null
    fileSize?: number | null
    width?: number | null
    height?: number | null
    isPrimary?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type UniversityImageCreateOrConnectWithoutUniversityInput = {
    where: UniversityImageWhereUniqueInput
    create: XOR<UniversityImageCreateWithoutUniversityInput, UniversityImageUncheckedCreateWithoutUniversityInput>
  }

  export type UniversityImageCreateManyUniversityInputEnvelope = {
    data: UniversityImageCreateManyUniversityInput | UniversityImageCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type ProgramCreateWithoutUniversityInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutUniversityInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutUniversityInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutUniversityInput, ProgramUncheckedCreateWithoutUniversityInput>
  }

  export type ProgramCreateManyUniversityInputEnvelope = {
    data: ProgramCreateManyUniversityInput | ProgramCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type DepartmentCreateWithoutUniversityInput = {
    id?: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
    programs?: ProgramDepartmentCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentUncheckedCreateWithoutUniversityInput = {
    id?: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
    programs?: ProgramDepartmentUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type DepartmentCreateOrConnectWithoutUniversityInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutUniversityInput, DepartmentUncheckedCreateWithoutUniversityInput>
  }

  export type DepartmentCreateManyUniversityInputEnvelope = {
    data: DepartmentCreateManyUniversityInput | DepartmentCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type AdmissionCreateWithoutUniversityInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    program: ProgramCreateNestedOneWithoutAdmissionsInput
    intakes?: IntakeCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateWithoutUniversityInput = {
    id?: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    intakes?: IntakeUncheckedCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionCreateOrConnectWithoutUniversityInput = {
    where: AdmissionWhereUniqueInput
    create: XOR<AdmissionCreateWithoutUniversityInput, AdmissionUncheckedCreateWithoutUniversityInput>
  }

  export type AdmissionCreateManyUniversityInputEnvelope = {
    data: AdmissionCreateManyUniversityInput | AdmissionCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationCreateWithoutUniversityInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutUniversityInput = {
    id?: string
    admissionId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutUniversityInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutUniversityInput, ApplicationUncheckedCreateWithoutUniversityInput>
  }

  export type ApplicationCreateManyUniversityInputEnvelope = {
    data: ApplicationCreateManyUniversityInput | ApplicationCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type TuitionBreakdownCreateWithoutUniversityInput = {
    id?: string
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    program?: ProgramCreateNestedOneWithoutTuitionBreakdownsInput
    paymentSchedule?: PaymentScheduleCreateNestedManyWithoutTuitionBreakdownInput
  }

  export type TuitionBreakdownUncheckedCreateWithoutUniversityInput = {
    id?: string
    programId?: string | null
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentSchedule?: PaymentScheduleUncheckedCreateNestedManyWithoutTuitionBreakdownInput
  }

  export type TuitionBreakdownCreateOrConnectWithoutUniversityInput = {
    where: TuitionBreakdownWhereUniqueInput
    create: XOR<TuitionBreakdownCreateWithoutUniversityInput, TuitionBreakdownUncheckedCreateWithoutUniversityInput>
  }

  export type TuitionBreakdownCreateManyUniversityInputEnvelope = {
    data: TuitionBreakdownCreateManyUniversityInput | TuitionBreakdownCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type ScholarshipCreateWithoutUniversityInput = {
    id?: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    program?: ProgramCreateNestedOneWithoutScholarshipsInput
    documents?: ScholarshipDocumentCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipUncheckedCreateWithoutUniversityInput = {
    id?: string
    programId?: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ScholarshipDocumentUncheckedCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipCreateOrConnectWithoutUniversityInput = {
    where: ScholarshipWhereUniqueInput
    create: XOR<ScholarshipCreateWithoutUniversityInput, ScholarshipUncheckedCreateWithoutUniversityInput>
  }

  export type ScholarshipCreateManyUniversityInputEnvelope = {
    data: ScholarshipCreateManyUniversityInput | ScholarshipCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type FeeStructureCreateWithoutUniversityInput = {
    id?: string
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    program?: ProgramCreateNestedOneWithoutFeeStructuresInput
  }

  export type FeeStructureUncheckedCreateWithoutUniversityInput = {
    id?: string
    programId?: string | null
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FeeStructureCreateOrConnectWithoutUniversityInput = {
    where: FeeStructureWhereUniqueInput
    create: XOR<FeeStructureCreateWithoutUniversityInput, FeeStructureUncheckedCreateWithoutUniversityInput>
  }

  export type FeeStructureCreateManyUniversityInputEnvelope = {
    data: FeeStructureCreateManyUniversityInput | FeeStructureCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type FinancialAidCreateWithoutUniversityInput = {
    id?: string
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    program?: ProgramCreateNestedOneWithoutFinancialAidsInput
    applications?: FinancialAidApplicationCreateNestedManyWithoutFinancialAidInput
  }

  export type FinancialAidUncheckedCreateWithoutUniversityInput = {
    id?: string
    programId?: string | null
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutFinancialAidInput
  }

  export type FinancialAidCreateOrConnectWithoutUniversityInput = {
    where: FinancialAidWhereUniqueInput
    create: XOR<FinancialAidCreateWithoutUniversityInput, FinancialAidUncheckedCreateWithoutUniversityInput>
  }

  export type FinancialAidCreateManyUniversityInputEnvelope = {
    data: FinancialAidCreateManyUniversityInput | FinancialAidCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutSavedUniversitiesInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSavedUniversitiesInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSavedUniversitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSavedUniversitiesInput, UserUncheckedCreateWithoutSavedUniversitiesInput>
  }

  export type CalendarEventCreateWithoutUniversityInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutUniversityInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutUniversityInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutUniversityInput, CalendarEventUncheckedCreateWithoutUniversityInput>
  }

  export type CalendarEventCreateManyUniversityInputEnvelope = {
    data: CalendarEventCreateManyUniversityInput | CalendarEventCreateManyUniversityInput[]
    skipDuplicates?: boolean
  }

  export type UniversityImageUpsertWithWhereUniqueWithoutUniversityInput = {
    where: UniversityImageWhereUniqueInput
    update: XOR<UniversityImageUpdateWithoutUniversityInput, UniversityImageUncheckedUpdateWithoutUniversityInput>
    create: XOR<UniversityImageCreateWithoutUniversityInput, UniversityImageUncheckedCreateWithoutUniversityInput>
  }

  export type UniversityImageUpdateWithWhereUniqueWithoutUniversityInput = {
    where: UniversityImageWhereUniqueInput
    data: XOR<UniversityImageUpdateWithoutUniversityInput, UniversityImageUncheckedUpdateWithoutUniversityInput>
  }

  export type UniversityImageUpdateManyWithWhereWithoutUniversityInput = {
    where: UniversityImageScalarWhereInput
    data: XOR<UniversityImageUpdateManyMutationInput, UniversityImageUncheckedUpdateManyWithoutUniversityInput>
  }

  export type UniversityImageScalarWhereInput = {
    AND?: UniversityImageScalarWhereInput | UniversityImageScalarWhereInput[]
    OR?: UniversityImageScalarWhereInput[]
    NOT?: UniversityImageScalarWhereInput | UniversityImageScalarWhereInput[]
    id?: StringFilter<"UniversityImage"> | string
    universityId?: StringFilter<"UniversityImage"> | string
    imageUrl?: StringFilter<"UniversityImage"> | string
    imageType?: StringNullableFilter<"UniversityImage"> | string | null
    imageTitle?: StringNullableFilter<"UniversityImage"> | string | null
    imageAltText?: StringFilter<"UniversityImage"> | string
    imageCaption?: StringNullableFilter<"UniversityImage"> | string | null
    fileSize?: IntNullableFilter<"UniversityImage"> | number | null
    width?: IntNullableFilter<"UniversityImage"> | number | null
    height?: IntNullableFilter<"UniversityImage"> | number | null
    isPrimary?: BoolFilter<"UniversityImage"> | boolean
    displayOrder?: IntFilter<"UniversityImage"> | number
    createdAt?: DateTimeFilter<"UniversityImage"> | Date | string
  }

  export type ProgramUpsertWithWhereUniqueWithoutUniversityInput = {
    where: ProgramWhereUniqueInput
    update: XOR<ProgramUpdateWithoutUniversityInput, ProgramUncheckedUpdateWithoutUniversityInput>
    create: XOR<ProgramCreateWithoutUniversityInput, ProgramUncheckedCreateWithoutUniversityInput>
  }

  export type ProgramUpdateWithWhereUniqueWithoutUniversityInput = {
    where: ProgramWhereUniqueInput
    data: XOR<ProgramUpdateWithoutUniversityInput, ProgramUncheckedUpdateWithoutUniversityInput>
  }

  export type ProgramUpdateManyWithWhereWithoutUniversityInput = {
    where: ProgramScalarWhereInput
    data: XOR<ProgramUpdateManyMutationInput, ProgramUncheckedUpdateManyWithoutUniversityInput>
  }

  export type ProgramScalarWhereInput = {
    AND?: ProgramScalarWhereInput | ProgramScalarWhereInput[]
    OR?: ProgramScalarWhereInput[]
    NOT?: ProgramScalarWhereInput | ProgramScalarWhereInput[]
    id?: StringFilter<"Program"> | string
    universityId?: StringFilter<"Program"> | string
    programName?: StringFilter<"Program"> | string
    programSlug?: StringFilter<"Program"> | string
    degreeType?: StringNullableFilter<"Program"> | string | null
    programLength?: IntNullableFilter<"Program"> | number | null
    specializations?: StringNullableFilter<"Program"> | string | null
    programDescription?: StringNullableFilter<"Program"> | string | null
    curriculumOverview?: StringNullableFilter<"Program"> | string | null
    admissionRequirements?: StringNullableFilter<"Program"> | string | null
    averageEntranceScore?: FloatNullableFilter<"Program"> | number | null
    programTuitionFees?: FloatNullableFilter<"Program"> | number | null
    programAdditionalFees?: FloatNullableFilter<"Program"> | number | null
    programMetaTitle?: StringNullableFilter<"Program"> | string | null
    programMetaDescription?: StringNullableFilter<"Program"> | string | null
    isActive?: BoolFilter<"Program"> | boolean
    createdAt?: DateTimeFilter<"Program"> | Date | string
    updatedAt?: DateTimeFilter<"Program"> | Date | string
  }

  export type DepartmentUpsertWithWhereUniqueWithoutUniversityInput = {
    where: DepartmentWhereUniqueInput
    update: XOR<DepartmentUpdateWithoutUniversityInput, DepartmentUncheckedUpdateWithoutUniversityInput>
    create: XOR<DepartmentCreateWithoutUniversityInput, DepartmentUncheckedCreateWithoutUniversityInput>
  }

  export type DepartmentUpdateWithWhereUniqueWithoutUniversityInput = {
    where: DepartmentWhereUniqueInput
    data: XOR<DepartmentUpdateWithoutUniversityInput, DepartmentUncheckedUpdateWithoutUniversityInput>
  }

  export type DepartmentUpdateManyWithWhereWithoutUniversityInput = {
    where: DepartmentScalarWhereInput
    data: XOR<DepartmentUpdateManyMutationInput, DepartmentUncheckedUpdateManyWithoutUniversityInput>
  }

  export type DepartmentScalarWhereInput = {
    AND?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
    OR?: DepartmentScalarWhereInput[]
    NOT?: DepartmentScalarWhereInput | DepartmentScalarWhereInput[]
    id?: StringFilter<"Department"> | string
    universityId?: StringFilter<"Department"> | string
    name?: StringFilter<"Department"> | string
    slug?: StringFilter<"Department"> | string
    createdAt?: DateTimeFilter<"Department"> | Date | string
    updatedAt?: DateTimeFilter<"Department"> | Date | string
  }

  export type AdmissionUpsertWithWhereUniqueWithoutUniversityInput = {
    where: AdmissionWhereUniqueInput
    update: XOR<AdmissionUpdateWithoutUniversityInput, AdmissionUncheckedUpdateWithoutUniversityInput>
    create: XOR<AdmissionCreateWithoutUniversityInput, AdmissionUncheckedCreateWithoutUniversityInput>
  }

  export type AdmissionUpdateWithWhereUniqueWithoutUniversityInput = {
    where: AdmissionWhereUniqueInput
    data: XOR<AdmissionUpdateWithoutUniversityInput, AdmissionUncheckedUpdateWithoutUniversityInput>
  }

  export type AdmissionUpdateManyWithWhereWithoutUniversityInput = {
    where: AdmissionScalarWhereInput
    data: XOR<AdmissionUpdateManyMutationInput, AdmissionUncheckedUpdateManyWithoutUniversityInput>
  }

  export type AdmissionScalarWhereInput = {
    AND?: AdmissionScalarWhereInput | AdmissionScalarWhereInput[]
    OR?: AdmissionScalarWhereInput[]
    NOT?: AdmissionScalarWhereInput | AdmissionScalarWhereInput[]
    id?: StringFilter<"Admission"> | string
    universityId?: StringFilter<"Admission"> | string
    programId?: StringFilter<"Admission"> | string
    minimumGpa?: FloatNullableFilter<"Admission"> | number | null
    maximumGpa?: FloatNullableFilter<"Admission"> | number | null
    gmatMinScore?: IntNullableFilter<"Admission"> | number | null
    gmatMaxScore?: IntNullableFilter<"Admission"> | number | null
    gmatAverageScore?: IntNullableFilter<"Admission"> | number | null
    greMinScore?: IntNullableFilter<"Admission"> | number | null
    greMaxScore?: IntNullableFilter<"Admission"> | number | null
    greAverageScore?: IntNullableFilter<"Admission"> | number | null
    ieltsMinScore?: FloatNullableFilter<"Admission"> | number | null
    toeflMinScore?: IntNullableFilter<"Admission"> | number | null
    pteMinScore?: IntNullableFilter<"Admission"> | number | null
    duolingoMinScore?: IntNullableFilter<"Admission"> | number | null
    languageExemptions?: StringNullableFilter<"Admission"> | string | null
    workExperienceRequired?: BoolFilter<"Admission"> | boolean
    minWorkExperience?: IntNullableFilter<"Admission"> | number | null
    maxWorkExperience?: IntNullableFilter<"Admission"> | number | null
    preferredIndustries?: StringNullableFilter<"Admission"> | string | null
    applicationFee?: FloatNullableFilter<"Admission"> | number | null
    currency?: StringFilter<"Admission"> | string
    documentsRequired?: StringNullableFilter<"Admission"> | string | null
    additionalRequirements?: StringNullableFilter<"Admission"> | string | null
    acceptanceRate?: FloatNullableFilter<"Admission"> | number | null
    totalApplications?: IntNullableFilter<"Admission"> | number | null
    totalAccepted?: IntNullableFilter<"Admission"> | number | null
    statisticsYear?: IntNullableFilter<"Admission"> | number | null
    isActive?: BoolFilter<"Admission"> | boolean
    admissionStatus?: StringFilter<"Admission"> | string
    createdAt?: DateTimeFilter<"Admission"> | Date | string
    updatedAt?: DateTimeFilter<"Admission"> | Date | string
  }

  export type ApplicationUpsertWithWhereUniqueWithoutUniversityInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutUniversityInput, ApplicationUncheckedUpdateWithoutUniversityInput>
    create: XOR<ApplicationCreateWithoutUniversityInput, ApplicationUncheckedCreateWithoutUniversityInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutUniversityInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutUniversityInput, ApplicationUncheckedUpdateWithoutUniversityInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutUniversityInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutUniversityInput>
  }

  export type TuitionBreakdownUpsertWithWhereUniqueWithoutUniversityInput = {
    where: TuitionBreakdownWhereUniqueInput
    update: XOR<TuitionBreakdownUpdateWithoutUniversityInput, TuitionBreakdownUncheckedUpdateWithoutUniversityInput>
    create: XOR<TuitionBreakdownCreateWithoutUniversityInput, TuitionBreakdownUncheckedCreateWithoutUniversityInput>
  }

  export type TuitionBreakdownUpdateWithWhereUniqueWithoutUniversityInput = {
    where: TuitionBreakdownWhereUniqueInput
    data: XOR<TuitionBreakdownUpdateWithoutUniversityInput, TuitionBreakdownUncheckedUpdateWithoutUniversityInput>
  }

  export type TuitionBreakdownUpdateManyWithWhereWithoutUniversityInput = {
    where: TuitionBreakdownScalarWhereInput
    data: XOR<TuitionBreakdownUpdateManyMutationInput, TuitionBreakdownUncheckedUpdateManyWithoutUniversityInput>
  }

  export type TuitionBreakdownScalarWhereInput = {
    AND?: TuitionBreakdownScalarWhereInput | TuitionBreakdownScalarWhereInput[]
    OR?: TuitionBreakdownScalarWhereInput[]
    NOT?: TuitionBreakdownScalarWhereInput | TuitionBreakdownScalarWhereInput[]
    id?: StringFilter<"TuitionBreakdown"> | string
    universityId?: StringFilter<"TuitionBreakdown"> | string
    programId?: StringNullableFilter<"TuitionBreakdown"> | string | null
    academicYear?: StringFilter<"TuitionBreakdown"> | string
    yearNumber?: IntFilter<"TuitionBreakdown"> | number
    baseTuition?: FloatFilter<"TuitionBreakdown"> | number
    labFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    libraryFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    technologyFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    activityFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    healthInsurance?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    dormitoryFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    mealPlanFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    applicationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    registrationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    examFees?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    graduationFee?: FloatNullableFilter<"TuitionBreakdown"> | number | null
    totalTuition?: FloatFilter<"TuitionBreakdown"> | number
    totalAdditionalFees?: FloatFilter<"TuitionBreakdown"> | number
    grandTotal?: FloatFilter<"TuitionBreakdown"> | number
    currency?: StringFilter<"TuitionBreakdown"> | string
    currencySymbol?: StringFilter<"TuitionBreakdown"> | string
    paymentTerms?: StringNullableFilter<"TuitionBreakdown"> | string | null
    installmentCount?: IntNullableFilter<"TuitionBreakdown"> | number | null
    isActive?: BoolFilter<"TuitionBreakdown"> | boolean
    effectiveDate?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    expiryDate?: DateTimeNullableFilter<"TuitionBreakdown"> | Date | string | null
    createdAt?: DateTimeFilter<"TuitionBreakdown"> | Date | string
    updatedAt?: DateTimeFilter<"TuitionBreakdown"> | Date | string
  }

  export type ScholarshipUpsertWithWhereUniqueWithoutUniversityInput = {
    where: ScholarshipWhereUniqueInput
    update: XOR<ScholarshipUpdateWithoutUniversityInput, ScholarshipUncheckedUpdateWithoutUniversityInput>
    create: XOR<ScholarshipCreateWithoutUniversityInput, ScholarshipUncheckedCreateWithoutUniversityInput>
  }

  export type ScholarshipUpdateWithWhereUniqueWithoutUniversityInput = {
    where: ScholarshipWhereUniqueInput
    data: XOR<ScholarshipUpdateWithoutUniversityInput, ScholarshipUncheckedUpdateWithoutUniversityInput>
  }

  export type ScholarshipUpdateManyWithWhereWithoutUniversityInput = {
    where: ScholarshipScalarWhereInput
    data: XOR<ScholarshipUpdateManyMutationInput, ScholarshipUncheckedUpdateManyWithoutUniversityInput>
  }

  export type ScholarshipScalarWhereInput = {
    AND?: ScholarshipScalarWhereInput | ScholarshipScalarWhereInput[]
    OR?: ScholarshipScalarWhereInput[]
    NOT?: ScholarshipScalarWhereInput | ScholarshipScalarWhereInput[]
    id?: StringFilter<"Scholarship"> | string
    universityId?: StringFilter<"Scholarship"> | string
    programId?: StringNullableFilter<"Scholarship"> | string | null
    scholarshipName?: StringFilter<"Scholarship"> | string
    scholarshipSlug?: StringFilter<"Scholarship"> | string
    scholarshipType?: StringFilter<"Scholarship"> | string
    description?: StringNullableFilter<"Scholarship"> | string | null
    eligibilityCriteria?: StringNullableFilter<"Scholarship"> | string | null
    amount?: FloatNullableFilter<"Scholarship"> | number | null
    percentage?: FloatNullableFilter<"Scholarship"> | number | null
    maxAmount?: FloatNullableFilter<"Scholarship"> | number | null
    currency?: StringFilter<"Scholarship"> | string
    coverageTuition?: BoolFilter<"Scholarship"> | boolean
    coverageFees?: BoolFilter<"Scholarship"> | boolean
    coverageLiving?: BoolFilter<"Scholarship"> | boolean
    coverageBooks?: BoolFilter<"Scholarship"> | boolean
    applicationRequired?: BoolFilter<"Scholarship"> | boolean
    applicationDeadline?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    documentsRequired?: StringNullableFilter<"Scholarship"> | string | null
    totalAvailable?: IntNullableFilter<"Scholarship"> | number | null
    currentlyAwarded?: IntNullableFilter<"Scholarship"> | number | null
    minimumGpa?: FloatNullableFilter<"Scholarship"> | number | null
    minimumTestScore?: IntNullableFilter<"Scholarship"> | number | null
    testType?: StringNullableFilter<"Scholarship"> | string | null
    citizenshipRequired?: StringNullableFilter<"Scholarship"> | string | null
    isActive?: BoolFilter<"Scholarship"> | boolean
    applicationOpenDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    awardDate?: DateTimeNullableFilter<"Scholarship"> | Date | string | null
    createdAt?: DateTimeFilter<"Scholarship"> | Date | string
    updatedAt?: DateTimeFilter<"Scholarship"> | Date | string
  }

  export type FeeStructureUpsertWithWhereUniqueWithoutUniversityInput = {
    where: FeeStructureWhereUniqueInput
    update: XOR<FeeStructureUpdateWithoutUniversityInput, FeeStructureUncheckedUpdateWithoutUniversityInput>
    create: XOR<FeeStructureCreateWithoutUniversityInput, FeeStructureUncheckedCreateWithoutUniversityInput>
  }

  export type FeeStructureUpdateWithWhereUniqueWithoutUniversityInput = {
    where: FeeStructureWhereUniqueInput
    data: XOR<FeeStructureUpdateWithoutUniversityInput, FeeStructureUncheckedUpdateWithoutUniversityInput>
  }

  export type FeeStructureUpdateManyWithWhereWithoutUniversityInput = {
    where: FeeStructureScalarWhereInput
    data: XOR<FeeStructureUpdateManyMutationInput, FeeStructureUncheckedUpdateManyWithoutUniversityInput>
  }

  export type FeeStructureScalarWhereInput = {
    AND?: FeeStructureScalarWhereInput | FeeStructureScalarWhereInput[]
    OR?: FeeStructureScalarWhereInput[]
    NOT?: FeeStructureScalarWhereInput | FeeStructureScalarWhereInput[]
    id?: StringFilter<"FeeStructure"> | string
    universityId?: StringFilter<"FeeStructure"> | string
    programId?: StringNullableFilter<"FeeStructure"> | string | null
    structureName?: StringFilter<"FeeStructure"> | string
    structureType?: StringFilter<"FeeStructure"> | string
    academicYear?: StringFilter<"FeeStructure"> | string
    tuitionFee?: FloatFilter<"FeeStructure"> | number
    admissionFee?: FloatNullableFilter<"FeeStructure"> | number | null
    registrationFee?: FloatNullableFilter<"FeeStructure"> | number | null
    examFee?: FloatNullableFilter<"FeeStructure"> | number | null
    libraryFee?: FloatNullableFilter<"FeeStructure"> | number | null
    labFee?: FloatNullableFilter<"FeeStructure"> | number | null
    hostelFee?: FloatNullableFilter<"FeeStructure"> | number | null
    messFee?: FloatNullableFilter<"FeeStructure"> | number | null
    transportFee?: FloatNullableFilter<"FeeStructure"> | number | null
    sportsFee?: FloatNullableFilter<"FeeStructure"> | number | null
    medicalFee?: FloatNullableFilter<"FeeStructure"> | number | null
    healthInsurance?: FloatNullableFilter<"FeeStructure"> | number | null
    accidentInsurance?: FloatNullableFilter<"FeeStructure"> | number | null
    studentActivityFee?: FloatNullableFilter<"FeeStructure"> | number | null
    technologyFee?: FloatNullableFilter<"FeeStructure"> | number | null
    securityDeposit?: FloatNullableFilter<"FeeStructure"> | number | null
    cautionMoney?: FloatNullableFilter<"FeeStructure"> | number | null
    isDepositRefundable?: BoolFilter<"FeeStructure"> | boolean
    totalMandatoryFees?: FloatFilter<"FeeStructure"> | number
    totalOptionalFees?: FloatFilter<"FeeStructure"> | number
    grandTotal?: FloatFilter<"FeeStructure"> | number
    currency?: StringFilter<"FeeStructure"> | string
    currencySymbol?: StringFilter<"FeeStructure"> | string
    paymentTerms?: StringNullableFilter<"FeeStructure"> | string | null
    installmentCount?: IntNullableFilter<"FeeStructure"> | number | null
    isActive?: BoolFilter<"FeeStructure"> | boolean
    effectiveDate?: DateTimeFilter<"FeeStructure"> | Date | string
    expiryDate?: DateTimeNullableFilter<"FeeStructure"> | Date | string | null
    createdAt?: DateTimeFilter<"FeeStructure"> | Date | string
    updatedAt?: DateTimeFilter<"FeeStructure"> | Date | string
  }

  export type FinancialAidUpsertWithWhereUniqueWithoutUniversityInput = {
    where: FinancialAidWhereUniqueInput
    update: XOR<FinancialAidUpdateWithoutUniversityInput, FinancialAidUncheckedUpdateWithoutUniversityInput>
    create: XOR<FinancialAidCreateWithoutUniversityInput, FinancialAidUncheckedCreateWithoutUniversityInput>
  }

  export type FinancialAidUpdateWithWhereUniqueWithoutUniversityInput = {
    where: FinancialAidWhereUniqueInput
    data: XOR<FinancialAidUpdateWithoutUniversityInput, FinancialAidUncheckedUpdateWithoutUniversityInput>
  }

  export type FinancialAidUpdateManyWithWhereWithoutUniversityInput = {
    where: FinancialAidScalarWhereInput
    data: XOR<FinancialAidUpdateManyMutationInput, FinancialAidUncheckedUpdateManyWithoutUniversityInput>
  }

  export type FinancialAidScalarWhereInput = {
    AND?: FinancialAidScalarWhereInput | FinancialAidScalarWhereInput[]
    OR?: FinancialAidScalarWhereInput[]
    NOT?: FinancialAidScalarWhereInput | FinancialAidScalarWhereInput[]
    id?: StringFilter<"FinancialAid"> | string
    universityId?: StringFilter<"FinancialAid"> | string
    programId?: StringNullableFilter<"FinancialAid"> | string | null
    aidName?: StringFilter<"FinancialAid"> | string
    aidType?: StringFilter<"FinancialAid"> | string
    description?: StringNullableFilter<"FinancialAid"> | string | null
    amount?: FloatNullableFilter<"FinancialAid"> | number | null
    percentage?: FloatNullableFilter<"FinancialAid"> | number | null
    maxAmount?: FloatNullableFilter<"FinancialAid"> | number | null
    currency?: StringFilter<"FinancialAid"> | string
    interestRate?: FloatNullableFilter<"FinancialAid"> | number | null
    repaymentPeriod?: IntNullableFilter<"FinancialAid"> | number | null
    gracePeriod?: IntNullableFilter<"FinancialAid"> | number | null
    eligibilityCriteria?: StringNullableFilter<"FinancialAid"> | string | null
    minimumGpa?: FloatNullableFilter<"FinancialAid"> | number | null
    maximumFamilyIncome?: FloatNullableFilter<"FinancialAid"> | number | null
    citizenshipRequired?: StringNullableFilter<"FinancialAid"> | string | null
    applicationRequired?: BoolFilter<"FinancialAid"> | boolean
    applicationDeadline?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    documentsRequired?: StringNullableFilter<"FinancialAid"> | string | null
    isActive?: BoolFilter<"FinancialAid"> | boolean
    applicationOpenDate?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"FinancialAid"> | Date | string | null
    createdAt?: DateTimeFilter<"FinancialAid"> | Date | string
    updatedAt?: DateTimeFilter<"FinancialAid"> | Date | string
  }

  export type UserUpsertWithWhereUniqueWithoutSavedUniversitiesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutSavedUniversitiesInput, UserUncheckedUpdateWithoutSavedUniversitiesInput>
    create: XOR<UserCreateWithoutSavedUniversitiesInput, UserUncheckedCreateWithoutSavedUniversitiesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutSavedUniversitiesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutSavedUniversitiesInput, UserUncheckedUpdateWithoutSavedUniversitiesInput>
  }

  export type UserUpdateManyWithWhereWithoutSavedUniversitiesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutSavedUniversitiesInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    image?: StringNullableFilter<"User"> | string | null
    password?: StringNullableFilter<"User"> | string | null
    provider?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutUniversityInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutUniversityInput, CalendarEventUncheckedUpdateWithoutUniversityInput>
    create: XOR<CalendarEventCreateWithoutUniversityInput, CalendarEventUncheckedCreateWithoutUniversityInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutUniversityInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutUniversityInput, CalendarEventUncheckedUpdateWithoutUniversityInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutUniversityInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutUniversityInput>
  }

  export type UniversityCreateWithoutImagesInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutImagesInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutImagesInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutImagesInput, UniversityUncheckedCreateWithoutImagesInput>
  }

  export type UniversityUpsertWithoutImagesInput = {
    update: XOR<UniversityUpdateWithoutImagesInput, UniversityUncheckedUpdateWithoutImagesInput>
    create: XOR<UniversityCreateWithoutImagesInput, UniversityUncheckedCreateWithoutImagesInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutImagesInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutImagesInput, UniversityUncheckedUpdateWithoutImagesInput>
  }

  export type UniversityUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramCreateWithoutDepartmentsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutDepartmentsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutDepartmentsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutDepartmentsInput, ProgramUncheckedCreateWithoutDepartmentsInput>
  }

  export type DepartmentCreateWithoutProgramsInput = {
    id?: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutDepartmentsInput
  }

  export type DepartmentUncheckedCreateWithoutProgramsInput = {
    id?: string
    universityId: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartmentCreateOrConnectWithoutProgramsInput = {
    where: DepartmentWhereUniqueInput
    create: XOR<DepartmentCreateWithoutProgramsInput, DepartmentUncheckedCreateWithoutProgramsInput>
  }

  export type ProgramUpsertWithoutDepartmentsInput = {
    update: XOR<ProgramUpdateWithoutDepartmentsInput, ProgramUncheckedUpdateWithoutDepartmentsInput>
    create: XOR<ProgramCreateWithoutDepartmentsInput, ProgramUncheckedCreateWithoutDepartmentsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutDepartmentsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutDepartmentsInput, ProgramUncheckedUpdateWithoutDepartmentsInput>
  }

  export type ProgramUpdateWithoutDepartmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutDepartmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type DepartmentUpsertWithoutProgramsInput = {
    update: XOR<DepartmentUpdateWithoutProgramsInput, DepartmentUncheckedUpdateWithoutProgramsInput>
    create: XOR<DepartmentCreateWithoutProgramsInput, DepartmentUncheckedCreateWithoutProgramsInput>
    where?: DepartmentWhereInput
  }

  export type DepartmentUpdateToOneWithWhereWithoutProgramsInput = {
    where?: DepartmentWhereInput
    data: XOR<DepartmentUpdateWithoutProgramsInput, DepartmentUncheckedUpdateWithoutProgramsInput>
  }

  export type DepartmentUpdateWithoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutDepartmentsNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityCreateWithoutDepartmentsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutDepartmentsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutDepartmentsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutDepartmentsInput, UniversityUncheckedCreateWithoutDepartmentsInput>
  }

  export type ProgramDepartmentCreateWithoutDepartmentInput = {
    id?: string
    createdAt?: Date | string
    program: ProgramCreateNestedOneWithoutDepartmentsInput
  }

  export type ProgramDepartmentUncheckedCreateWithoutDepartmentInput = {
    id?: string
    programId: string
    createdAt?: Date | string
  }

  export type ProgramDepartmentCreateOrConnectWithoutDepartmentInput = {
    where: ProgramDepartmentWhereUniqueInput
    create: XOR<ProgramDepartmentCreateWithoutDepartmentInput, ProgramDepartmentUncheckedCreateWithoutDepartmentInput>
  }

  export type ProgramDepartmentCreateManyDepartmentInputEnvelope = {
    data: ProgramDepartmentCreateManyDepartmentInput | ProgramDepartmentCreateManyDepartmentInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutDepartmentsInput = {
    update: XOR<UniversityUpdateWithoutDepartmentsInput, UniversityUncheckedUpdateWithoutDepartmentsInput>
    create: XOR<UniversityCreateWithoutDepartmentsInput, UniversityUncheckedCreateWithoutDepartmentsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutDepartmentsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutDepartmentsInput, UniversityUncheckedUpdateWithoutDepartmentsInput>
  }

  export type UniversityUpdateWithoutDepartmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutDepartmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramDepartmentUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: ProgramDepartmentWhereUniqueInput
    update: XOR<ProgramDepartmentUpdateWithoutDepartmentInput, ProgramDepartmentUncheckedUpdateWithoutDepartmentInput>
    create: XOR<ProgramDepartmentCreateWithoutDepartmentInput, ProgramDepartmentUncheckedCreateWithoutDepartmentInput>
  }

  export type ProgramDepartmentUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: ProgramDepartmentWhereUniqueInput
    data: XOR<ProgramDepartmentUpdateWithoutDepartmentInput, ProgramDepartmentUncheckedUpdateWithoutDepartmentInput>
  }

  export type ProgramDepartmentUpdateManyWithWhereWithoutDepartmentInput = {
    where: ProgramDepartmentScalarWhereInput
    data: XOR<ProgramDepartmentUpdateManyMutationInput, ProgramDepartmentUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type ProgramDepartmentScalarWhereInput = {
    AND?: ProgramDepartmentScalarWhereInput | ProgramDepartmentScalarWhereInput[]
    OR?: ProgramDepartmentScalarWhereInput[]
    NOT?: ProgramDepartmentScalarWhereInput | ProgramDepartmentScalarWhereInput[]
    id?: StringFilter<"ProgramDepartment"> | string
    programId?: StringFilter<"ProgramDepartment"> | string
    departmentId?: StringFilter<"ProgramDepartment"> | string
    createdAt?: DateTimeFilter<"ProgramDepartment"> | Date | string
  }

  export type UniversityCreateWithoutProgramsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutProgramsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutProgramsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutProgramsInput, UniversityUncheckedCreateWithoutProgramsInput>
  }

  export type ProgramDepartmentCreateWithoutProgramInput = {
    id?: string
    createdAt?: Date | string
    department: DepartmentCreateNestedOneWithoutProgramsInput
  }

  export type ProgramDepartmentUncheckedCreateWithoutProgramInput = {
    id?: string
    departmentId: string
    createdAt?: Date | string
  }

  export type ProgramDepartmentCreateOrConnectWithoutProgramInput = {
    where: ProgramDepartmentWhereUniqueInput
    create: XOR<ProgramDepartmentCreateWithoutProgramInput, ProgramDepartmentUncheckedCreateWithoutProgramInput>
  }

  export type ProgramDepartmentCreateManyProgramInputEnvelope = {
    data: ProgramDepartmentCreateManyProgramInput | ProgramDepartmentCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type SyllabusCreateWithoutProgramInput = {
    id?: string
    fileUrl: string
    uploadedAt?: Date | string
  }

  export type SyllabusUncheckedCreateWithoutProgramInput = {
    id?: string
    fileUrl: string
    uploadedAt?: Date | string
  }

  export type SyllabusCreateOrConnectWithoutProgramInput = {
    where: SyllabusWhereUniqueInput
    create: XOR<SyllabusCreateWithoutProgramInput, SyllabusUncheckedCreateWithoutProgramInput>
  }

  export type ProgramRankingCreateWithoutProgramInput = {
    id?: string
    year: number
    rank: number
    source?: string | null
    createdAt?: Date | string
  }

  export type ProgramRankingUncheckedCreateWithoutProgramInput = {
    id?: string
    year: number
    rank: number
    source?: string | null
    createdAt?: Date | string
  }

  export type ProgramRankingCreateOrConnectWithoutProgramInput = {
    where: ProgramRankingWhereUniqueInput
    create: XOR<ProgramRankingCreateWithoutProgramInput, ProgramRankingUncheckedCreateWithoutProgramInput>
  }

  export type ProgramRankingCreateManyProgramInputEnvelope = {
    data: ProgramRankingCreateManyProgramInput | ProgramRankingCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type ExternalLinkCreateWithoutProgramInput = {
    id?: string
    title: string
    url: string
    createdAt?: Date | string
  }

  export type ExternalLinkUncheckedCreateWithoutProgramInput = {
    id?: string
    title: string
    url: string
    createdAt?: Date | string
  }

  export type ExternalLinkCreateOrConnectWithoutProgramInput = {
    where: ExternalLinkWhereUniqueInput
    create: XOR<ExternalLinkCreateWithoutProgramInput, ExternalLinkUncheckedCreateWithoutProgramInput>
  }

  export type ExternalLinkCreateManyProgramInputEnvelope = {
    data: ExternalLinkCreateManyProgramInput | ExternalLinkCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type AdmissionCreateWithoutProgramInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutAdmissionsInput
    intakes?: IntakeCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateWithoutProgramInput = {
    id?: string
    universityId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    intakes?: IntakeUncheckedCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionCreateOrConnectWithoutProgramInput = {
    where: AdmissionWhereUniqueInput
    create: XOR<AdmissionCreateWithoutProgramInput, AdmissionUncheckedCreateWithoutProgramInput>
  }

  export type AdmissionCreateManyProgramInputEnvelope = {
    data: AdmissionCreateManyProgramInput | AdmissionCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationCreateWithoutProgramInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutProgramInput = {
    id?: string
    admissionId: string
    universityId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutProgramInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutProgramInput, ApplicationUncheckedCreateWithoutProgramInput>
  }

  export type ApplicationCreateManyProgramInputEnvelope = {
    data: ApplicationCreateManyProgramInput | ApplicationCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type TuitionBreakdownCreateWithoutProgramInput = {
    id?: string
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutTuitionBreakdownsInput
    paymentSchedule?: PaymentScheduleCreateNestedManyWithoutTuitionBreakdownInput
  }

  export type TuitionBreakdownUncheckedCreateWithoutProgramInput = {
    id?: string
    universityId: string
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentSchedule?: PaymentScheduleUncheckedCreateNestedManyWithoutTuitionBreakdownInput
  }

  export type TuitionBreakdownCreateOrConnectWithoutProgramInput = {
    where: TuitionBreakdownWhereUniqueInput
    create: XOR<TuitionBreakdownCreateWithoutProgramInput, TuitionBreakdownUncheckedCreateWithoutProgramInput>
  }

  export type TuitionBreakdownCreateManyProgramInputEnvelope = {
    data: TuitionBreakdownCreateManyProgramInput | TuitionBreakdownCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type ScholarshipCreateWithoutProgramInput = {
    id?: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutScholarshipsInput
    documents?: ScholarshipDocumentCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipUncheckedCreateWithoutProgramInput = {
    id?: string
    universityId: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ScholarshipDocumentUncheckedCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipCreateOrConnectWithoutProgramInput = {
    where: ScholarshipWhereUniqueInput
    create: XOR<ScholarshipCreateWithoutProgramInput, ScholarshipUncheckedCreateWithoutProgramInput>
  }

  export type ScholarshipCreateManyProgramInputEnvelope = {
    data: ScholarshipCreateManyProgramInput | ScholarshipCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type FeeStructureCreateWithoutProgramInput = {
    id?: string
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutFeeStructuresInput
  }

  export type FeeStructureUncheckedCreateWithoutProgramInput = {
    id?: string
    universityId: string
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FeeStructureCreateOrConnectWithoutProgramInput = {
    where: FeeStructureWhereUniqueInput
    create: XOR<FeeStructureCreateWithoutProgramInput, FeeStructureUncheckedCreateWithoutProgramInput>
  }

  export type FeeStructureCreateManyProgramInputEnvelope = {
    data: FeeStructureCreateManyProgramInput | FeeStructureCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type FinancialAidCreateWithoutProgramInput = {
    id?: string
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutFinancialAidsInput
    applications?: FinancialAidApplicationCreateNestedManyWithoutFinancialAidInput
  }

  export type FinancialAidUncheckedCreateWithoutProgramInput = {
    id?: string
    universityId: string
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutFinancialAidInput
  }

  export type FinancialAidCreateOrConnectWithoutProgramInput = {
    where: FinancialAidWhereUniqueInput
    create: XOR<FinancialAidCreateWithoutProgramInput, FinancialAidUncheckedCreateWithoutProgramInput>
  }

  export type FinancialAidCreateManyProgramInputEnvelope = {
    data: FinancialAidCreateManyProgramInput | FinancialAidCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type EssayPromptCreateWithoutProgramInput = {
    id?: string
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    admission?: AdmissionCreateNestedOneWithoutEssayPromptsInput
    intake?: IntakeCreateNestedOneWithoutEssayPromptsInput
    submissions?: EssaySubmissionCreateNestedManyWithoutEssayPromptInput
    essays?: EssayCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptUncheckedCreateWithoutProgramInput = {
    id?: string
    admissionId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissions?: EssaySubmissionUncheckedCreateNestedManyWithoutEssayPromptInput
    essays?: EssayUncheckedCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptCreateOrConnectWithoutProgramInput = {
    where: EssayPromptWhereUniqueInput
    create: XOR<EssayPromptCreateWithoutProgramInput, EssayPromptUncheckedCreateWithoutProgramInput>
  }

  export type EssayPromptCreateManyProgramInputEnvelope = {
    data: EssayPromptCreateManyProgramInput | EssayPromptCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type CalendarEventCreateWithoutProgramInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutProgramInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutProgramInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutProgramInput, CalendarEventUncheckedCreateWithoutProgramInput>
  }

  export type CalendarEventCreateManyProgramInputEnvelope = {
    data: CalendarEventCreateManyProgramInput | CalendarEventCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type EssayCreateWithoutProgramInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    user?: UserCreateNestedOneWithoutEssaysInput
    application?: ApplicationCreateNestedOneWithoutEssaysInput
    essayPrompt: EssayPromptCreateNestedOneWithoutEssaysInput
    versions?: EssayVersionCreateNestedManyWithoutEssayInput
    aiResults?: AIResultCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateWithoutProgramInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    versions?: EssayVersionUncheckedCreateNestedManyWithoutEssayInput
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayCreateOrConnectWithoutProgramInput = {
    where: EssayWhereUniqueInput
    create: XOR<EssayCreateWithoutProgramInput, EssayUncheckedCreateWithoutProgramInput>
  }

  export type EssayCreateManyProgramInputEnvelope = {
    data: EssayCreateManyProgramInput | EssayCreateManyProgramInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutProgramsInput = {
    update: XOR<UniversityUpdateWithoutProgramsInput, UniversityUncheckedUpdateWithoutProgramsInput>
    create: XOR<UniversityCreateWithoutProgramsInput, UniversityUncheckedCreateWithoutProgramsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutProgramsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutProgramsInput, UniversityUncheckedUpdateWithoutProgramsInput>
  }

  export type UniversityUpdateWithoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutProgramsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramDepartmentUpsertWithWhereUniqueWithoutProgramInput = {
    where: ProgramDepartmentWhereUniqueInput
    update: XOR<ProgramDepartmentUpdateWithoutProgramInput, ProgramDepartmentUncheckedUpdateWithoutProgramInput>
    create: XOR<ProgramDepartmentCreateWithoutProgramInput, ProgramDepartmentUncheckedCreateWithoutProgramInput>
  }

  export type ProgramDepartmentUpdateWithWhereUniqueWithoutProgramInput = {
    where: ProgramDepartmentWhereUniqueInput
    data: XOR<ProgramDepartmentUpdateWithoutProgramInput, ProgramDepartmentUncheckedUpdateWithoutProgramInput>
  }

  export type ProgramDepartmentUpdateManyWithWhereWithoutProgramInput = {
    where: ProgramDepartmentScalarWhereInput
    data: XOR<ProgramDepartmentUpdateManyMutationInput, ProgramDepartmentUncheckedUpdateManyWithoutProgramInput>
  }

  export type SyllabusUpsertWithoutProgramInput = {
    update: XOR<SyllabusUpdateWithoutProgramInput, SyllabusUncheckedUpdateWithoutProgramInput>
    create: XOR<SyllabusCreateWithoutProgramInput, SyllabusUncheckedCreateWithoutProgramInput>
    where?: SyllabusWhereInput
  }

  export type SyllabusUpdateToOneWithWhereWithoutProgramInput = {
    where?: SyllabusWhereInput
    data: XOR<SyllabusUpdateWithoutProgramInput, SyllabusUncheckedUpdateWithoutProgramInput>
  }

  export type SyllabusUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SyllabusUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramRankingUpsertWithWhereUniqueWithoutProgramInput = {
    where: ProgramRankingWhereUniqueInput
    update: XOR<ProgramRankingUpdateWithoutProgramInput, ProgramRankingUncheckedUpdateWithoutProgramInput>
    create: XOR<ProgramRankingCreateWithoutProgramInput, ProgramRankingUncheckedCreateWithoutProgramInput>
  }

  export type ProgramRankingUpdateWithWhereUniqueWithoutProgramInput = {
    where: ProgramRankingWhereUniqueInput
    data: XOR<ProgramRankingUpdateWithoutProgramInput, ProgramRankingUncheckedUpdateWithoutProgramInput>
  }

  export type ProgramRankingUpdateManyWithWhereWithoutProgramInput = {
    where: ProgramRankingScalarWhereInput
    data: XOR<ProgramRankingUpdateManyMutationInput, ProgramRankingUncheckedUpdateManyWithoutProgramInput>
  }

  export type ProgramRankingScalarWhereInput = {
    AND?: ProgramRankingScalarWhereInput | ProgramRankingScalarWhereInput[]
    OR?: ProgramRankingScalarWhereInput[]
    NOT?: ProgramRankingScalarWhereInput | ProgramRankingScalarWhereInput[]
    id?: StringFilter<"ProgramRanking"> | string
    programId?: StringFilter<"ProgramRanking"> | string
    year?: IntFilter<"ProgramRanking"> | number
    rank?: IntFilter<"ProgramRanking"> | number
    source?: StringNullableFilter<"ProgramRanking"> | string | null
    createdAt?: DateTimeFilter<"ProgramRanking"> | Date | string
  }

  export type ExternalLinkUpsertWithWhereUniqueWithoutProgramInput = {
    where: ExternalLinkWhereUniqueInput
    update: XOR<ExternalLinkUpdateWithoutProgramInput, ExternalLinkUncheckedUpdateWithoutProgramInput>
    create: XOR<ExternalLinkCreateWithoutProgramInput, ExternalLinkUncheckedCreateWithoutProgramInput>
  }

  export type ExternalLinkUpdateWithWhereUniqueWithoutProgramInput = {
    where: ExternalLinkWhereUniqueInput
    data: XOR<ExternalLinkUpdateWithoutProgramInput, ExternalLinkUncheckedUpdateWithoutProgramInput>
  }

  export type ExternalLinkUpdateManyWithWhereWithoutProgramInput = {
    where: ExternalLinkScalarWhereInput
    data: XOR<ExternalLinkUpdateManyMutationInput, ExternalLinkUncheckedUpdateManyWithoutProgramInput>
  }

  export type ExternalLinkScalarWhereInput = {
    AND?: ExternalLinkScalarWhereInput | ExternalLinkScalarWhereInput[]
    OR?: ExternalLinkScalarWhereInput[]
    NOT?: ExternalLinkScalarWhereInput | ExternalLinkScalarWhereInput[]
    id?: StringFilter<"ExternalLink"> | string
    programId?: StringFilter<"ExternalLink"> | string
    title?: StringFilter<"ExternalLink"> | string
    url?: StringFilter<"ExternalLink"> | string
    createdAt?: DateTimeFilter<"ExternalLink"> | Date | string
  }

  export type AdmissionUpsertWithWhereUniqueWithoutProgramInput = {
    where: AdmissionWhereUniqueInput
    update: XOR<AdmissionUpdateWithoutProgramInput, AdmissionUncheckedUpdateWithoutProgramInput>
    create: XOR<AdmissionCreateWithoutProgramInput, AdmissionUncheckedCreateWithoutProgramInput>
  }

  export type AdmissionUpdateWithWhereUniqueWithoutProgramInput = {
    where: AdmissionWhereUniqueInput
    data: XOR<AdmissionUpdateWithoutProgramInput, AdmissionUncheckedUpdateWithoutProgramInput>
  }

  export type AdmissionUpdateManyWithWhereWithoutProgramInput = {
    where: AdmissionScalarWhereInput
    data: XOR<AdmissionUpdateManyMutationInput, AdmissionUncheckedUpdateManyWithoutProgramInput>
  }

  export type ApplicationUpsertWithWhereUniqueWithoutProgramInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutProgramInput, ApplicationUncheckedUpdateWithoutProgramInput>
    create: XOR<ApplicationCreateWithoutProgramInput, ApplicationUncheckedCreateWithoutProgramInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutProgramInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutProgramInput, ApplicationUncheckedUpdateWithoutProgramInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutProgramInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutProgramInput>
  }

  export type TuitionBreakdownUpsertWithWhereUniqueWithoutProgramInput = {
    where: TuitionBreakdownWhereUniqueInput
    update: XOR<TuitionBreakdownUpdateWithoutProgramInput, TuitionBreakdownUncheckedUpdateWithoutProgramInput>
    create: XOR<TuitionBreakdownCreateWithoutProgramInput, TuitionBreakdownUncheckedCreateWithoutProgramInput>
  }

  export type TuitionBreakdownUpdateWithWhereUniqueWithoutProgramInput = {
    where: TuitionBreakdownWhereUniqueInput
    data: XOR<TuitionBreakdownUpdateWithoutProgramInput, TuitionBreakdownUncheckedUpdateWithoutProgramInput>
  }

  export type TuitionBreakdownUpdateManyWithWhereWithoutProgramInput = {
    where: TuitionBreakdownScalarWhereInput
    data: XOR<TuitionBreakdownUpdateManyMutationInput, TuitionBreakdownUncheckedUpdateManyWithoutProgramInput>
  }

  export type ScholarshipUpsertWithWhereUniqueWithoutProgramInput = {
    where: ScholarshipWhereUniqueInput
    update: XOR<ScholarshipUpdateWithoutProgramInput, ScholarshipUncheckedUpdateWithoutProgramInput>
    create: XOR<ScholarshipCreateWithoutProgramInput, ScholarshipUncheckedCreateWithoutProgramInput>
  }

  export type ScholarshipUpdateWithWhereUniqueWithoutProgramInput = {
    where: ScholarshipWhereUniqueInput
    data: XOR<ScholarshipUpdateWithoutProgramInput, ScholarshipUncheckedUpdateWithoutProgramInput>
  }

  export type ScholarshipUpdateManyWithWhereWithoutProgramInput = {
    where: ScholarshipScalarWhereInput
    data: XOR<ScholarshipUpdateManyMutationInput, ScholarshipUncheckedUpdateManyWithoutProgramInput>
  }

  export type FeeStructureUpsertWithWhereUniqueWithoutProgramInput = {
    where: FeeStructureWhereUniqueInput
    update: XOR<FeeStructureUpdateWithoutProgramInput, FeeStructureUncheckedUpdateWithoutProgramInput>
    create: XOR<FeeStructureCreateWithoutProgramInput, FeeStructureUncheckedCreateWithoutProgramInput>
  }

  export type FeeStructureUpdateWithWhereUniqueWithoutProgramInput = {
    where: FeeStructureWhereUniqueInput
    data: XOR<FeeStructureUpdateWithoutProgramInput, FeeStructureUncheckedUpdateWithoutProgramInput>
  }

  export type FeeStructureUpdateManyWithWhereWithoutProgramInput = {
    where: FeeStructureScalarWhereInput
    data: XOR<FeeStructureUpdateManyMutationInput, FeeStructureUncheckedUpdateManyWithoutProgramInput>
  }

  export type FinancialAidUpsertWithWhereUniqueWithoutProgramInput = {
    where: FinancialAidWhereUniqueInput
    update: XOR<FinancialAidUpdateWithoutProgramInput, FinancialAidUncheckedUpdateWithoutProgramInput>
    create: XOR<FinancialAidCreateWithoutProgramInput, FinancialAidUncheckedCreateWithoutProgramInput>
  }

  export type FinancialAidUpdateWithWhereUniqueWithoutProgramInput = {
    where: FinancialAidWhereUniqueInput
    data: XOR<FinancialAidUpdateWithoutProgramInput, FinancialAidUncheckedUpdateWithoutProgramInput>
  }

  export type FinancialAidUpdateManyWithWhereWithoutProgramInput = {
    where: FinancialAidScalarWhereInput
    data: XOR<FinancialAidUpdateManyMutationInput, FinancialAidUncheckedUpdateManyWithoutProgramInput>
  }

  export type EssayPromptUpsertWithWhereUniqueWithoutProgramInput = {
    where: EssayPromptWhereUniqueInput
    update: XOR<EssayPromptUpdateWithoutProgramInput, EssayPromptUncheckedUpdateWithoutProgramInput>
    create: XOR<EssayPromptCreateWithoutProgramInput, EssayPromptUncheckedCreateWithoutProgramInput>
  }

  export type EssayPromptUpdateWithWhereUniqueWithoutProgramInput = {
    where: EssayPromptWhereUniqueInput
    data: XOR<EssayPromptUpdateWithoutProgramInput, EssayPromptUncheckedUpdateWithoutProgramInput>
  }

  export type EssayPromptUpdateManyWithWhereWithoutProgramInput = {
    where: EssayPromptScalarWhereInput
    data: XOR<EssayPromptUpdateManyMutationInput, EssayPromptUncheckedUpdateManyWithoutProgramInput>
  }

  export type EssayPromptScalarWhereInput = {
    AND?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
    OR?: EssayPromptScalarWhereInput[]
    NOT?: EssayPromptScalarWhereInput | EssayPromptScalarWhereInput[]
    id?: StringFilter<"EssayPrompt"> | string
    admissionId?: StringNullableFilter<"EssayPrompt"> | string | null
    programId?: StringNullableFilter<"EssayPrompt"> | string | null
    intakeId?: StringNullableFilter<"EssayPrompt"> | string | null
    promptTitle?: StringFilter<"EssayPrompt"> | string
    promptText?: StringFilter<"EssayPrompt"> | string
    wordLimit?: IntFilter<"EssayPrompt"> | number
    minWordCount?: IntFilter<"EssayPrompt"> | number
    isMandatory?: BoolFilter<"EssayPrompt"> | boolean
    isActive?: BoolFilter<"EssayPrompt"> | boolean
    createdAt?: DateTimeFilter<"EssayPrompt"> | Date | string
    updatedAt?: DateTimeFilter<"EssayPrompt"> | Date | string
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutProgramInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutProgramInput, CalendarEventUncheckedUpdateWithoutProgramInput>
    create: XOR<CalendarEventCreateWithoutProgramInput, CalendarEventUncheckedCreateWithoutProgramInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutProgramInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutProgramInput, CalendarEventUncheckedUpdateWithoutProgramInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutProgramInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutProgramInput>
  }

  export type EssayUpsertWithWhereUniqueWithoutProgramInput = {
    where: EssayWhereUniqueInput
    update: XOR<EssayUpdateWithoutProgramInput, EssayUncheckedUpdateWithoutProgramInput>
    create: XOR<EssayCreateWithoutProgramInput, EssayUncheckedCreateWithoutProgramInput>
  }

  export type EssayUpdateWithWhereUniqueWithoutProgramInput = {
    where: EssayWhereUniqueInput
    data: XOR<EssayUpdateWithoutProgramInput, EssayUncheckedUpdateWithoutProgramInput>
  }

  export type EssayUpdateManyWithWhereWithoutProgramInput = {
    where: EssayScalarWhereInput
    data: XOR<EssayUpdateManyMutationInput, EssayUncheckedUpdateManyWithoutProgramInput>
  }

  export type ProgramCreateWithoutSyllabusInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutSyllabusInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutSyllabusInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutSyllabusInput, ProgramUncheckedCreateWithoutSyllabusInput>
  }

  export type ProgramUpsertWithoutSyllabusInput = {
    update: XOR<ProgramUpdateWithoutSyllabusInput, ProgramUncheckedUpdateWithoutSyllabusInput>
    create: XOR<ProgramCreateWithoutSyllabusInput, ProgramUncheckedCreateWithoutSyllabusInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutSyllabusInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutSyllabusInput, ProgramUncheckedUpdateWithoutSyllabusInput>
  }

  export type ProgramUpdateWithoutSyllabusInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutSyllabusInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type ProgramCreateWithoutRankingsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutRankingsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutRankingsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutRankingsInput, ProgramUncheckedCreateWithoutRankingsInput>
  }

  export type ProgramUpsertWithoutRankingsInput = {
    update: XOR<ProgramUpdateWithoutRankingsInput, ProgramUncheckedUpdateWithoutRankingsInput>
    create: XOR<ProgramCreateWithoutRankingsInput, ProgramUncheckedCreateWithoutRankingsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutRankingsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutRankingsInput, ProgramUncheckedUpdateWithoutRankingsInput>
  }

  export type ProgramUpdateWithoutRankingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutRankingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type ProgramCreateWithoutExternalLinksInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutExternalLinksInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutExternalLinksInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutExternalLinksInput, ProgramUncheckedCreateWithoutExternalLinksInput>
  }

  export type ProgramUpsertWithoutExternalLinksInput = {
    update: XOR<ProgramUpdateWithoutExternalLinksInput, ProgramUncheckedUpdateWithoutExternalLinksInput>
    create: XOR<ProgramCreateWithoutExternalLinksInput, ProgramUncheckedCreateWithoutExternalLinksInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutExternalLinksInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutExternalLinksInput, ProgramUncheckedUpdateWithoutExternalLinksInput>
  }

  export type ProgramUpdateWithoutExternalLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutExternalLinksInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type UniversityCreateWithoutAdmissionsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutAdmissionsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutAdmissionsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutAdmissionsInput, UniversityUncheckedCreateWithoutAdmissionsInput>
  }

  export type ProgramCreateWithoutAdmissionsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutAdmissionsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutAdmissionsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutAdmissionsInput, ProgramUncheckedCreateWithoutAdmissionsInput>
  }

  export type IntakeCreateWithoutAdmissionInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutIntakeInput
    applications?: ApplicationCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutIntakeInput
  }

  export type IntakeUncheckedCreateWithoutAdmissionInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutIntakeInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutIntakeInput
  }

  export type IntakeCreateOrConnectWithoutAdmissionInput = {
    where: IntakeWhereUniqueInput
    create: XOR<IntakeCreateWithoutAdmissionInput, IntakeUncheckedCreateWithoutAdmissionInput>
  }

  export type IntakeCreateManyAdmissionInputEnvelope = {
    data: IntakeCreateManyAdmissionInput | IntakeCreateManyAdmissionInput[]
    skipDuplicates?: boolean
  }

  export type AdmissionDeadlineCreateWithoutAdmissionInput = {
    id?: string
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    intake?: IntakeCreateNestedOneWithoutDeadlinesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionDeadlineInput
  }

  export type AdmissionDeadlineUncheckedCreateWithoutAdmissionInput = {
    id?: string
    intakeId?: string | null
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionDeadlineInput
  }

  export type AdmissionDeadlineCreateOrConnectWithoutAdmissionInput = {
    where: AdmissionDeadlineWhereUniqueInput
    create: XOR<AdmissionDeadlineCreateWithoutAdmissionInput, AdmissionDeadlineUncheckedCreateWithoutAdmissionInput>
  }

  export type AdmissionDeadlineCreateManyAdmissionInputEnvelope = {
    data: AdmissionDeadlineCreateManyAdmissionInput | AdmissionDeadlineCreateManyAdmissionInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationCreateWithoutAdmissionInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutAdmissionInput = {
    id?: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutAdmissionInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutAdmissionInput, ApplicationUncheckedCreateWithoutAdmissionInput>
  }

  export type ApplicationCreateManyAdmissionInputEnvelope = {
    data: ApplicationCreateManyAdmissionInput | ApplicationCreateManyAdmissionInput[]
    skipDuplicates?: boolean
  }

  export type EssayPromptCreateWithoutAdmissionInput = {
    id?: string
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    program?: ProgramCreateNestedOneWithoutEssayPromptsInput
    intake?: IntakeCreateNestedOneWithoutEssayPromptsInput
    submissions?: EssaySubmissionCreateNestedManyWithoutEssayPromptInput
    essays?: EssayCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptUncheckedCreateWithoutAdmissionInput = {
    id?: string
    programId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissions?: EssaySubmissionUncheckedCreateNestedManyWithoutEssayPromptInput
    essays?: EssayUncheckedCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptCreateOrConnectWithoutAdmissionInput = {
    where: EssayPromptWhereUniqueInput
    create: XOR<EssayPromptCreateWithoutAdmissionInput, EssayPromptUncheckedCreateWithoutAdmissionInput>
  }

  export type EssayPromptCreateManyAdmissionInputEnvelope = {
    data: EssayPromptCreateManyAdmissionInput | EssayPromptCreateManyAdmissionInput[]
    skipDuplicates?: boolean
  }

  export type CalendarEventCreateWithoutAdmissionInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutAdmissionInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutAdmissionInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutAdmissionInput, CalendarEventUncheckedCreateWithoutAdmissionInput>
  }

  export type CalendarEventCreateManyAdmissionInputEnvelope = {
    data: CalendarEventCreateManyAdmissionInput | CalendarEventCreateManyAdmissionInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutAdmissionsInput = {
    update: XOR<UniversityUpdateWithoutAdmissionsInput, UniversityUncheckedUpdateWithoutAdmissionsInput>
    create: XOR<UniversityCreateWithoutAdmissionsInput, UniversityUncheckedCreateWithoutAdmissionsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutAdmissionsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutAdmissionsInput, UniversityUncheckedUpdateWithoutAdmissionsInput>
  }

  export type UniversityUpdateWithoutAdmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutAdmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramUpsertWithoutAdmissionsInput = {
    update: XOR<ProgramUpdateWithoutAdmissionsInput, ProgramUncheckedUpdateWithoutAdmissionsInput>
    create: XOR<ProgramCreateWithoutAdmissionsInput, ProgramUncheckedCreateWithoutAdmissionsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutAdmissionsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutAdmissionsInput, ProgramUncheckedUpdateWithoutAdmissionsInput>
  }

  export type ProgramUpdateWithoutAdmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutAdmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type IntakeUpsertWithWhereUniqueWithoutAdmissionInput = {
    where: IntakeWhereUniqueInput
    update: XOR<IntakeUpdateWithoutAdmissionInput, IntakeUncheckedUpdateWithoutAdmissionInput>
    create: XOR<IntakeCreateWithoutAdmissionInput, IntakeUncheckedCreateWithoutAdmissionInput>
  }

  export type IntakeUpdateWithWhereUniqueWithoutAdmissionInput = {
    where: IntakeWhereUniqueInput
    data: XOR<IntakeUpdateWithoutAdmissionInput, IntakeUncheckedUpdateWithoutAdmissionInput>
  }

  export type IntakeUpdateManyWithWhereWithoutAdmissionInput = {
    where: IntakeScalarWhereInput
    data: XOR<IntakeUpdateManyMutationInput, IntakeUncheckedUpdateManyWithoutAdmissionInput>
  }

  export type IntakeScalarWhereInput = {
    AND?: IntakeScalarWhereInput | IntakeScalarWhereInput[]
    OR?: IntakeScalarWhereInput[]
    NOT?: IntakeScalarWhereInput | IntakeScalarWhereInput[]
    id?: StringFilter<"Intake"> | string
    admissionId?: StringFilter<"Intake"> | string
    intakeName?: StringFilter<"Intake"> | string
    intakeType?: StringFilter<"Intake"> | string
    intakeYear?: IntFilter<"Intake"> | number
    intakeMonth?: IntFilter<"Intake"> | number
    totalSeats?: IntNullableFilter<"Intake"> | number | null
    availableSeats?: IntNullableFilter<"Intake"> | number | null
    internationalSeats?: IntNullableFilter<"Intake"> | number | null
    domesticSeats?: IntNullableFilter<"Intake"> | number | null
    startDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    endDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    applicationOpenDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    applicationCloseDate?: DateTimeNullableFilter<"Intake"> | Date | string | null
    isActive?: BoolFilter<"Intake"> | boolean
    intakeStatus?: StringFilter<"Intake"> | string
    createdAt?: DateTimeFilter<"Intake"> | Date | string
    updatedAt?: DateTimeFilter<"Intake"> | Date | string
  }

  export type AdmissionDeadlineUpsertWithWhereUniqueWithoutAdmissionInput = {
    where: AdmissionDeadlineWhereUniqueInput
    update: XOR<AdmissionDeadlineUpdateWithoutAdmissionInput, AdmissionDeadlineUncheckedUpdateWithoutAdmissionInput>
    create: XOR<AdmissionDeadlineCreateWithoutAdmissionInput, AdmissionDeadlineUncheckedCreateWithoutAdmissionInput>
  }

  export type AdmissionDeadlineUpdateWithWhereUniqueWithoutAdmissionInput = {
    where: AdmissionDeadlineWhereUniqueInput
    data: XOR<AdmissionDeadlineUpdateWithoutAdmissionInput, AdmissionDeadlineUncheckedUpdateWithoutAdmissionInput>
  }

  export type AdmissionDeadlineUpdateManyWithWhereWithoutAdmissionInput = {
    where: AdmissionDeadlineScalarWhereInput
    data: XOR<AdmissionDeadlineUpdateManyMutationInput, AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionInput>
  }

  export type AdmissionDeadlineScalarWhereInput = {
    AND?: AdmissionDeadlineScalarWhereInput | AdmissionDeadlineScalarWhereInput[]
    OR?: AdmissionDeadlineScalarWhereInput[]
    NOT?: AdmissionDeadlineScalarWhereInput | AdmissionDeadlineScalarWhereInput[]
    id?: StringFilter<"AdmissionDeadline"> | string
    admissionId?: StringFilter<"AdmissionDeadline"> | string
    intakeId?: StringNullableFilter<"AdmissionDeadline"> | string | null
    deadlineType?: StringFilter<"AdmissionDeadline"> | string
    deadlineDate?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    deadlineTime?: StringNullableFilter<"AdmissionDeadline"> | string | null
    timezone?: StringFilter<"AdmissionDeadline"> | string
    title?: StringFilter<"AdmissionDeadline"> | string
    description?: StringNullableFilter<"AdmissionDeadline"> | string | null
    isExtended?: BoolFilter<"AdmissionDeadline"> | boolean
    originalDeadline?: DateTimeNullableFilter<"AdmissionDeadline"> | Date | string | null
    priority?: StringFilter<"AdmissionDeadline"> | string
    isActive?: BoolFilter<"AdmissionDeadline"> | boolean
    reminderSent?: BoolFilter<"AdmissionDeadline"> | boolean
    reminderDate?: DateTimeNullableFilter<"AdmissionDeadline"> | Date | string | null
    createdAt?: DateTimeFilter<"AdmissionDeadline"> | Date | string
    updatedAt?: DateTimeFilter<"AdmissionDeadline"> | Date | string
  }

  export type ApplicationUpsertWithWhereUniqueWithoutAdmissionInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutAdmissionInput, ApplicationUncheckedUpdateWithoutAdmissionInput>
    create: XOR<ApplicationCreateWithoutAdmissionInput, ApplicationUncheckedCreateWithoutAdmissionInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutAdmissionInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutAdmissionInput, ApplicationUncheckedUpdateWithoutAdmissionInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutAdmissionInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutAdmissionInput>
  }

  export type EssayPromptUpsertWithWhereUniqueWithoutAdmissionInput = {
    where: EssayPromptWhereUniqueInput
    update: XOR<EssayPromptUpdateWithoutAdmissionInput, EssayPromptUncheckedUpdateWithoutAdmissionInput>
    create: XOR<EssayPromptCreateWithoutAdmissionInput, EssayPromptUncheckedCreateWithoutAdmissionInput>
  }

  export type EssayPromptUpdateWithWhereUniqueWithoutAdmissionInput = {
    where: EssayPromptWhereUniqueInput
    data: XOR<EssayPromptUpdateWithoutAdmissionInput, EssayPromptUncheckedUpdateWithoutAdmissionInput>
  }

  export type EssayPromptUpdateManyWithWhereWithoutAdmissionInput = {
    where: EssayPromptScalarWhereInput
    data: XOR<EssayPromptUpdateManyMutationInput, EssayPromptUncheckedUpdateManyWithoutAdmissionInput>
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutAdmissionInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutAdmissionInput, CalendarEventUncheckedUpdateWithoutAdmissionInput>
    create: XOR<CalendarEventCreateWithoutAdmissionInput, CalendarEventUncheckedCreateWithoutAdmissionInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutAdmissionInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutAdmissionInput, CalendarEventUncheckedUpdateWithoutAdmissionInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutAdmissionInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutAdmissionInput>
  }

  export type AdmissionCreateWithoutIntakesInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutAdmissionsInput
    program: ProgramCreateNestedOneWithoutAdmissionsInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateWithoutIntakesInput = {
    id?: string
    universityId: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionCreateOrConnectWithoutIntakesInput = {
    where: AdmissionWhereUniqueInput
    create: XOR<AdmissionCreateWithoutIntakesInput, AdmissionUncheckedCreateWithoutIntakesInput>
  }

  export type AdmissionDeadlineCreateWithoutIntakeInput = {
    id?: string
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutDeadlinesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionDeadlineInput
  }

  export type AdmissionDeadlineUncheckedCreateWithoutIntakeInput = {
    id?: string
    admissionId: string
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionDeadlineInput
  }

  export type AdmissionDeadlineCreateOrConnectWithoutIntakeInput = {
    where: AdmissionDeadlineWhereUniqueInput
    create: XOR<AdmissionDeadlineCreateWithoutIntakeInput, AdmissionDeadlineUncheckedCreateWithoutIntakeInput>
  }

  export type AdmissionDeadlineCreateManyIntakeInputEnvelope = {
    data: AdmissionDeadlineCreateManyIntakeInput | AdmissionDeadlineCreateManyIntakeInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationCreateWithoutIntakeInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutIntakeInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutIntakeInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutIntakeInput, ApplicationUncheckedCreateWithoutIntakeInput>
  }

  export type ApplicationCreateManyIntakeInputEnvelope = {
    data: ApplicationCreateManyIntakeInput | ApplicationCreateManyIntakeInput[]
    skipDuplicates?: boolean
  }

  export type EssayPromptCreateWithoutIntakeInput = {
    id?: string
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    admission?: AdmissionCreateNestedOneWithoutEssayPromptsInput
    program?: ProgramCreateNestedOneWithoutEssayPromptsInput
    submissions?: EssaySubmissionCreateNestedManyWithoutEssayPromptInput
    essays?: EssayCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptUncheckedCreateWithoutIntakeInput = {
    id?: string
    admissionId?: string | null
    programId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissions?: EssaySubmissionUncheckedCreateNestedManyWithoutEssayPromptInput
    essays?: EssayUncheckedCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptCreateOrConnectWithoutIntakeInput = {
    where: EssayPromptWhereUniqueInput
    create: XOR<EssayPromptCreateWithoutIntakeInput, EssayPromptUncheckedCreateWithoutIntakeInput>
  }

  export type EssayPromptCreateManyIntakeInputEnvelope = {
    data: EssayPromptCreateManyIntakeInput | EssayPromptCreateManyIntakeInput[]
    skipDuplicates?: boolean
  }

  export type CalendarEventCreateWithoutIntakeInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutIntakeInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutIntakeInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutIntakeInput, CalendarEventUncheckedCreateWithoutIntakeInput>
  }

  export type CalendarEventCreateManyIntakeInputEnvelope = {
    data: CalendarEventCreateManyIntakeInput | CalendarEventCreateManyIntakeInput[]
    skipDuplicates?: boolean
  }

  export type AdmissionUpsertWithoutIntakesInput = {
    update: XOR<AdmissionUpdateWithoutIntakesInput, AdmissionUncheckedUpdateWithoutIntakesInput>
    create: XOR<AdmissionCreateWithoutIntakesInput, AdmissionUncheckedCreateWithoutIntakesInput>
    where?: AdmissionWhereInput
  }

  export type AdmissionUpdateToOneWithWhereWithoutIntakesInput = {
    where?: AdmissionWhereInput
    data: XOR<AdmissionUpdateWithoutIntakesInput, AdmissionUncheckedUpdateWithoutIntakesInput>
  }

  export type AdmissionUpdateWithoutIntakesInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutAdmissionsNestedInput
    program?: ProgramUpdateOneRequiredWithoutAdmissionsNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateWithoutIntakesInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionDeadlineUpsertWithWhereUniqueWithoutIntakeInput = {
    where: AdmissionDeadlineWhereUniqueInput
    update: XOR<AdmissionDeadlineUpdateWithoutIntakeInput, AdmissionDeadlineUncheckedUpdateWithoutIntakeInput>
    create: XOR<AdmissionDeadlineCreateWithoutIntakeInput, AdmissionDeadlineUncheckedCreateWithoutIntakeInput>
  }

  export type AdmissionDeadlineUpdateWithWhereUniqueWithoutIntakeInput = {
    where: AdmissionDeadlineWhereUniqueInput
    data: XOR<AdmissionDeadlineUpdateWithoutIntakeInput, AdmissionDeadlineUncheckedUpdateWithoutIntakeInput>
  }

  export type AdmissionDeadlineUpdateManyWithWhereWithoutIntakeInput = {
    where: AdmissionDeadlineScalarWhereInput
    data: XOR<AdmissionDeadlineUpdateManyMutationInput, AdmissionDeadlineUncheckedUpdateManyWithoutIntakeInput>
  }

  export type ApplicationUpsertWithWhereUniqueWithoutIntakeInput = {
    where: ApplicationWhereUniqueInput
    update: XOR<ApplicationUpdateWithoutIntakeInput, ApplicationUncheckedUpdateWithoutIntakeInput>
    create: XOR<ApplicationCreateWithoutIntakeInput, ApplicationUncheckedCreateWithoutIntakeInput>
  }

  export type ApplicationUpdateWithWhereUniqueWithoutIntakeInput = {
    where: ApplicationWhereUniqueInput
    data: XOR<ApplicationUpdateWithoutIntakeInput, ApplicationUncheckedUpdateWithoutIntakeInput>
  }

  export type ApplicationUpdateManyWithWhereWithoutIntakeInput = {
    where: ApplicationScalarWhereInput
    data: XOR<ApplicationUpdateManyMutationInput, ApplicationUncheckedUpdateManyWithoutIntakeInput>
  }

  export type EssayPromptUpsertWithWhereUniqueWithoutIntakeInput = {
    where: EssayPromptWhereUniqueInput
    update: XOR<EssayPromptUpdateWithoutIntakeInput, EssayPromptUncheckedUpdateWithoutIntakeInput>
    create: XOR<EssayPromptCreateWithoutIntakeInput, EssayPromptUncheckedCreateWithoutIntakeInput>
  }

  export type EssayPromptUpdateWithWhereUniqueWithoutIntakeInput = {
    where: EssayPromptWhereUniqueInput
    data: XOR<EssayPromptUpdateWithoutIntakeInput, EssayPromptUncheckedUpdateWithoutIntakeInput>
  }

  export type EssayPromptUpdateManyWithWhereWithoutIntakeInput = {
    where: EssayPromptScalarWhereInput
    data: XOR<EssayPromptUpdateManyMutationInput, EssayPromptUncheckedUpdateManyWithoutIntakeInput>
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutIntakeInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutIntakeInput, CalendarEventUncheckedUpdateWithoutIntakeInput>
    create: XOR<CalendarEventCreateWithoutIntakeInput, CalendarEventUncheckedCreateWithoutIntakeInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutIntakeInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutIntakeInput, CalendarEventUncheckedUpdateWithoutIntakeInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutIntakeInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutIntakeInput>
  }

  export type AdmissionCreateWithoutDeadlinesInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutAdmissionsInput
    program: ProgramCreateNestedOneWithoutAdmissionsInput
    intakes?: IntakeCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateWithoutDeadlinesInput = {
    id?: string
    universityId: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    intakes?: IntakeUncheckedCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionCreateOrConnectWithoutDeadlinesInput = {
    where: AdmissionWhereUniqueInput
    create: XOR<AdmissionCreateWithoutDeadlinesInput, AdmissionUncheckedCreateWithoutDeadlinesInput>
  }

  export type IntakeCreateWithoutDeadlinesInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutIntakesInput
    applications?: ApplicationCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutIntakeInput
  }

  export type IntakeUncheckedCreateWithoutDeadlinesInput = {
    id?: string
    admissionId: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: ApplicationUncheckedCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutIntakeInput
  }

  export type IntakeCreateOrConnectWithoutDeadlinesInput = {
    where: IntakeWhereUniqueInput
    create: XOR<IntakeCreateWithoutDeadlinesInput, IntakeUncheckedCreateWithoutDeadlinesInput>
  }

  export type CalendarEventCreateWithoutAdmissionDeadlineInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutAdmissionDeadlineInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutAdmissionDeadlineInput, CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput>
  }

  export type CalendarEventCreateManyAdmissionDeadlineInputEnvelope = {
    data: CalendarEventCreateManyAdmissionDeadlineInput | CalendarEventCreateManyAdmissionDeadlineInput[]
    skipDuplicates?: boolean
  }

  export type AdmissionUpsertWithoutDeadlinesInput = {
    update: XOR<AdmissionUpdateWithoutDeadlinesInput, AdmissionUncheckedUpdateWithoutDeadlinesInput>
    create: XOR<AdmissionCreateWithoutDeadlinesInput, AdmissionUncheckedCreateWithoutDeadlinesInput>
    where?: AdmissionWhereInput
  }

  export type AdmissionUpdateToOneWithWhereWithoutDeadlinesInput = {
    where?: AdmissionWhereInput
    data: XOR<AdmissionUpdateWithoutDeadlinesInput, AdmissionUncheckedUpdateWithoutDeadlinesInput>
  }

  export type AdmissionUpdateWithoutDeadlinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutAdmissionsNestedInput
    program?: ProgramUpdateOneRequiredWithoutAdmissionsNestedInput
    intakes?: IntakeUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateWithoutDeadlinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intakes?: IntakeUncheckedUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type IntakeUpsertWithoutDeadlinesInput = {
    update: XOR<IntakeUpdateWithoutDeadlinesInput, IntakeUncheckedUpdateWithoutDeadlinesInput>
    create: XOR<IntakeCreateWithoutDeadlinesInput, IntakeUncheckedCreateWithoutDeadlinesInput>
    where?: IntakeWhereInput
  }

  export type IntakeUpdateToOneWithWhereWithoutDeadlinesInput = {
    where?: IntakeWhereInput
    data: XOR<IntakeUpdateWithoutDeadlinesInput, IntakeUncheckedUpdateWithoutDeadlinesInput>
  }

  export type IntakeUpdateWithoutDeadlinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutIntakesNestedInput
    applications?: ApplicationUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeUncheckedUpdateWithoutDeadlinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: ApplicationUncheckedUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutIntakeNestedInput
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutAdmissionDeadlineInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutAdmissionDeadlineInput, CalendarEventUncheckedUpdateWithoutAdmissionDeadlineInput>
    create: XOR<CalendarEventCreateWithoutAdmissionDeadlineInput, CalendarEventUncheckedCreateWithoutAdmissionDeadlineInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutAdmissionDeadlineInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutAdmissionDeadlineInput, CalendarEventUncheckedUpdateWithoutAdmissionDeadlineInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutAdmissionDeadlineInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutAdmissionDeadlineInput>
  }

  export type AdmissionCreateWithoutApplicationsInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutAdmissionsInput
    program: ProgramCreateNestedOneWithoutAdmissionsInput
    intakes?: IntakeCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateWithoutApplicationsInput = {
    id?: string
    universityId: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    intakes?: IntakeUncheckedCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionCreateOrConnectWithoutApplicationsInput = {
    where: AdmissionWhereUniqueInput
    create: XOR<AdmissionCreateWithoutApplicationsInput, AdmissionUncheckedCreateWithoutApplicationsInput>
  }

  export type UniversityCreateWithoutApplicationsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutApplicationsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutApplicationsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutApplicationsInput, UniversityUncheckedCreateWithoutApplicationsInput>
  }

  export type ProgramCreateWithoutApplicationsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutApplicationsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutApplicationsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutApplicationsInput, ProgramUncheckedCreateWithoutApplicationsInput>
  }

  export type IntakeCreateWithoutApplicationsInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutIntakesInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutIntakeInput
  }

  export type IntakeUncheckedCreateWithoutApplicationsInput = {
    id?: string
    admissionId: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutIntakeInput
  }

  export type IntakeCreateOrConnectWithoutApplicationsInput = {
    where: IntakeWhereUniqueInput
    create: XOR<IntakeCreateWithoutApplicationsInput, IntakeUncheckedCreateWithoutApplicationsInput>
  }

  export type UserCreateWithoutApplicationsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutApplicationsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutApplicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApplicationsInput, UserUncheckedCreateWithoutApplicationsInput>
  }

  export type ApplicationDocumentCreateWithoutApplicationInput = {
    id?: string
    documentType: string
    documentCategory: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    submissionDeadline?: Date | string | null
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    documentStatus?: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationDocumentUncheckedCreateWithoutApplicationInput = {
    id?: string
    documentType: string
    documentCategory: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    submissionDeadline?: Date | string | null
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    documentStatus?: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationDocumentCreateOrConnectWithoutApplicationInput = {
    where: ApplicationDocumentWhereUniqueInput
    create: XOR<ApplicationDocumentCreateWithoutApplicationInput, ApplicationDocumentUncheckedCreateWithoutApplicationInput>
  }

  export type ApplicationDocumentCreateManyApplicationInputEnvelope = {
    data: ApplicationDocumentCreateManyApplicationInput | ApplicationDocumentCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationProgressCreateWithoutApplicationInput = {
    id?: string
    stageName: string
    stageStatus: string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    notes?: string | null
    completedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationProgressUncheckedCreateWithoutApplicationInput = {
    id?: string
    stageName: string
    stageStatus: string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    notes?: string | null
    completedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationProgressCreateOrConnectWithoutApplicationInput = {
    where: ApplicationProgressWhereUniqueInput
    create: XOR<ApplicationProgressCreateWithoutApplicationInput, ApplicationProgressUncheckedCreateWithoutApplicationInput>
  }

  export type ApplicationProgressCreateManyApplicationInputEnvelope = {
    data: ApplicationProgressCreateManyApplicationInput | ApplicationProgressCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type InterviewCreateWithoutApplicationInput = {
    id?: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    calendarEvents?: CalendarEventCreateNestedManyWithoutInterviewInput
  }

  export type InterviewUncheckedCreateWithoutApplicationInput = {
    id?: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutInterviewInput
  }

  export type InterviewCreateOrConnectWithoutApplicationInput = {
    where: InterviewWhereUniqueInput
    create: XOR<InterviewCreateWithoutApplicationInput, InterviewUncheckedCreateWithoutApplicationInput>
  }

  export type InterviewCreateManyApplicationInputEnvelope = {
    data: InterviewCreateManyApplicationInput | InterviewCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type ScholarshipApplicationCreateWithoutApplicationInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    scholarship: ScholarshipCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutScholarshipApplicationsInput
  }

  export type ScholarshipApplicationUncheckedCreateWithoutApplicationInput = {
    id?: string
    scholarshipId: string
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationCreateOrConnectWithoutApplicationInput = {
    where: ScholarshipApplicationWhereUniqueInput
    create: XOR<ScholarshipApplicationCreateWithoutApplicationInput, ScholarshipApplicationUncheckedCreateWithoutApplicationInput>
  }

  export type ScholarshipApplicationCreateManyApplicationInputEnvelope = {
    data: ScholarshipApplicationCreateManyApplicationInput | ScholarshipApplicationCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type FinancialAidApplicationCreateWithoutApplicationInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    financialAid: FinancialAidCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutFinancialAidApplicationsInput
  }

  export type FinancialAidApplicationUncheckedCreateWithoutApplicationInput = {
    id?: string
    financialAidId: string
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationCreateOrConnectWithoutApplicationInput = {
    where: FinancialAidApplicationWhereUniqueInput
    create: XOR<FinancialAidApplicationCreateWithoutApplicationInput, FinancialAidApplicationUncheckedCreateWithoutApplicationInput>
  }

  export type FinancialAidApplicationCreateManyApplicationInputEnvelope = {
    data: FinancialAidApplicationCreateManyApplicationInput | FinancialAidApplicationCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type EssaySubmissionCreateWithoutApplicationInput = {
    id?: string
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    essayPrompt: EssayPromptCreateNestedOneWithoutSubmissionsInput
    user?: UserCreateNestedOneWithoutEssaySubmissionsInput
  }

  export type EssaySubmissionUncheckedCreateWithoutApplicationInput = {
    id?: string
    essayPromptId: string
    userId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssaySubmissionCreateOrConnectWithoutApplicationInput = {
    where: EssaySubmissionWhereUniqueInput
    create: XOR<EssaySubmissionCreateWithoutApplicationInput, EssaySubmissionUncheckedCreateWithoutApplicationInput>
  }

  export type EssaySubmissionCreateManyApplicationInputEnvelope = {
    data: EssaySubmissionCreateManyApplicationInput | EssaySubmissionCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type CalendarEventCreateWithoutApplicationInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutApplicationInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutApplicationInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutApplicationInput, CalendarEventUncheckedCreateWithoutApplicationInput>
  }

  export type CalendarEventCreateManyApplicationInputEnvelope = {
    data: CalendarEventCreateManyApplicationInput | CalendarEventCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type EssayCreateWithoutApplicationInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    user?: UserCreateNestedOneWithoutEssaysInput
    program: ProgramCreateNestedOneWithoutEssaysInput
    essayPrompt: EssayPromptCreateNestedOneWithoutEssaysInput
    versions?: EssayVersionCreateNestedManyWithoutEssayInput
    aiResults?: AIResultCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateWithoutApplicationInput = {
    id?: string
    userId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    versions?: EssayVersionUncheckedCreateNestedManyWithoutEssayInput
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayCreateOrConnectWithoutApplicationInput = {
    where: EssayWhereUniqueInput
    create: XOR<EssayCreateWithoutApplicationInput, EssayUncheckedCreateWithoutApplicationInput>
  }

  export type EssayCreateManyApplicationInputEnvelope = {
    data: EssayCreateManyApplicationInput | EssayCreateManyApplicationInput[]
    skipDuplicates?: boolean
  }

  export type AdmissionUpsertWithoutApplicationsInput = {
    update: XOR<AdmissionUpdateWithoutApplicationsInput, AdmissionUncheckedUpdateWithoutApplicationsInput>
    create: XOR<AdmissionCreateWithoutApplicationsInput, AdmissionUncheckedCreateWithoutApplicationsInput>
    where?: AdmissionWhereInput
  }

  export type AdmissionUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: AdmissionWhereInput
    data: XOR<AdmissionUpdateWithoutApplicationsInput, AdmissionUncheckedUpdateWithoutApplicationsInput>
  }

  export type AdmissionUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutAdmissionsNestedInput
    program?: ProgramUpdateOneRequiredWithoutAdmissionsNestedInput
    intakes?: IntakeUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intakes?: IntakeUncheckedUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type UniversityUpsertWithoutApplicationsInput = {
    update: XOR<UniversityUpdateWithoutApplicationsInput, UniversityUncheckedUpdateWithoutApplicationsInput>
    create: XOR<UniversityCreateWithoutApplicationsInput, UniversityUncheckedCreateWithoutApplicationsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutApplicationsInput, UniversityUncheckedUpdateWithoutApplicationsInput>
  }

  export type UniversityUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramUpsertWithoutApplicationsInput = {
    update: XOR<ProgramUpdateWithoutApplicationsInput, ProgramUncheckedUpdateWithoutApplicationsInput>
    create: XOR<ProgramCreateWithoutApplicationsInput, ProgramUncheckedCreateWithoutApplicationsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutApplicationsInput, ProgramUncheckedUpdateWithoutApplicationsInput>
  }

  export type ProgramUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type IntakeUpsertWithoutApplicationsInput = {
    update: XOR<IntakeUpdateWithoutApplicationsInput, IntakeUncheckedUpdateWithoutApplicationsInput>
    create: XOR<IntakeCreateWithoutApplicationsInput, IntakeUncheckedCreateWithoutApplicationsInput>
    where?: IntakeWhereInput
  }

  export type IntakeUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: IntakeWhereInput
    data: XOR<IntakeUpdateWithoutApplicationsInput, IntakeUncheckedUpdateWithoutApplicationsInput>
  }

  export type IntakeUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutIntakesNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutIntakeNestedInput
  }

  export type UserUpsertWithoutApplicationsInput = {
    update: XOR<UserUpdateWithoutApplicationsInput, UserUncheckedUpdateWithoutApplicationsInput>
    create: XOR<UserCreateWithoutApplicationsInput, UserUncheckedCreateWithoutApplicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutApplicationsInput, UserUncheckedUpdateWithoutApplicationsInput>
  }

  export type UserUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ApplicationDocumentUpsertWithWhereUniqueWithoutApplicationInput = {
    where: ApplicationDocumentWhereUniqueInput
    update: XOR<ApplicationDocumentUpdateWithoutApplicationInput, ApplicationDocumentUncheckedUpdateWithoutApplicationInput>
    create: XOR<ApplicationDocumentCreateWithoutApplicationInput, ApplicationDocumentUncheckedCreateWithoutApplicationInput>
  }

  export type ApplicationDocumentUpdateWithWhereUniqueWithoutApplicationInput = {
    where: ApplicationDocumentWhereUniqueInput
    data: XOR<ApplicationDocumentUpdateWithoutApplicationInput, ApplicationDocumentUncheckedUpdateWithoutApplicationInput>
  }

  export type ApplicationDocumentUpdateManyWithWhereWithoutApplicationInput = {
    where: ApplicationDocumentScalarWhereInput
    data: XOR<ApplicationDocumentUpdateManyMutationInput, ApplicationDocumentUncheckedUpdateManyWithoutApplicationInput>
  }

  export type ApplicationDocumentScalarWhereInput = {
    AND?: ApplicationDocumentScalarWhereInput | ApplicationDocumentScalarWhereInput[]
    OR?: ApplicationDocumentScalarWhereInput[]
    NOT?: ApplicationDocumentScalarWhereInput | ApplicationDocumentScalarWhereInput[]
    id?: StringFilter<"ApplicationDocument"> | string
    applicationId?: StringFilter<"ApplicationDocument"> | string
    documentType?: StringFilter<"ApplicationDocument"> | string
    documentCategory?: StringFilter<"ApplicationDocument"> | string
    documentTitle?: StringFilter<"ApplicationDocument"> | string
    fileName?: StringFilter<"ApplicationDocument"> | string
    fileUrl?: StringFilter<"ApplicationDocument"> | string
    fileSize?: IntNullableFilter<"ApplicationDocument"> | number | null
    mimeType?: StringNullableFilter<"ApplicationDocument"> | string | null
    isRequired?: BoolFilter<"ApplicationDocument"> | boolean
    submissionDeadline?: DateTimeNullableFilter<"ApplicationDocument"> | Date | string | null
    reminderSent?: BoolFilter<"ApplicationDocument"> | boolean
    isVerified?: BoolFilter<"ApplicationDocument"> | boolean
    verifiedBy?: StringNullableFilter<"ApplicationDocument"> | string | null
    verifiedAt?: DateTimeNullableFilter<"ApplicationDocument"> | Date | string | null
    verificationNotes?: StringNullableFilter<"ApplicationDocument"> | string | null
    documentStatus?: StringFilter<"ApplicationDocument"> | string
    uploadedAt?: DateTimeFilter<"ApplicationDocument"> | Date | string
    updatedAt?: DateTimeFilter<"ApplicationDocument"> | Date | string
  }

  export type ApplicationProgressUpsertWithWhereUniqueWithoutApplicationInput = {
    where: ApplicationProgressWhereUniqueInput
    update: XOR<ApplicationProgressUpdateWithoutApplicationInput, ApplicationProgressUncheckedUpdateWithoutApplicationInput>
    create: XOR<ApplicationProgressCreateWithoutApplicationInput, ApplicationProgressUncheckedCreateWithoutApplicationInput>
  }

  export type ApplicationProgressUpdateWithWhereUniqueWithoutApplicationInput = {
    where: ApplicationProgressWhereUniqueInput
    data: XOR<ApplicationProgressUpdateWithoutApplicationInput, ApplicationProgressUncheckedUpdateWithoutApplicationInput>
  }

  export type ApplicationProgressUpdateManyWithWhereWithoutApplicationInput = {
    where: ApplicationProgressScalarWhereInput
    data: XOR<ApplicationProgressUpdateManyMutationInput, ApplicationProgressUncheckedUpdateManyWithoutApplicationInput>
  }

  export type ApplicationProgressScalarWhereInput = {
    AND?: ApplicationProgressScalarWhereInput | ApplicationProgressScalarWhereInput[]
    OR?: ApplicationProgressScalarWhereInput[]
    NOT?: ApplicationProgressScalarWhereInput | ApplicationProgressScalarWhereInput[]
    id?: StringFilter<"ApplicationProgress"> | string
    applicationId?: StringFilter<"ApplicationProgress"> | string
    stageName?: StringFilter<"ApplicationProgress"> | string
    stageStatus?: StringFilter<"ApplicationProgress"> | string
    startedAt?: DateTimeNullableFilter<"ApplicationProgress"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"ApplicationProgress"> | Date | string | null
    notes?: StringNullableFilter<"ApplicationProgress"> | string | null
    completedBy?: StringNullableFilter<"ApplicationProgress"> | string | null
    createdAt?: DateTimeFilter<"ApplicationProgress"> | Date | string
    updatedAt?: DateTimeFilter<"ApplicationProgress"> | Date | string
  }

  export type InterviewUpsertWithWhereUniqueWithoutApplicationInput = {
    where: InterviewWhereUniqueInput
    update: XOR<InterviewUpdateWithoutApplicationInput, InterviewUncheckedUpdateWithoutApplicationInput>
    create: XOR<InterviewCreateWithoutApplicationInput, InterviewUncheckedCreateWithoutApplicationInput>
  }

  export type InterviewUpdateWithWhereUniqueWithoutApplicationInput = {
    where: InterviewWhereUniqueInput
    data: XOR<InterviewUpdateWithoutApplicationInput, InterviewUncheckedUpdateWithoutApplicationInput>
  }

  export type InterviewUpdateManyWithWhereWithoutApplicationInput = {
    where: InterviewScalarWhereInput
    data: XOR<InterviewUpdateManyMutationInput, InterviewUncheckedUpdateManyWithoutApplicationInput>
  }

  export type InterviewScalarWhereInput = {
    AND?: InterviewScalarWhereInput | InterviewScalarWhereInput[]
    OR?: InterviewScalarWhereInput[]
    NOT?: InterviewScalarWhereInput | InterviewScalarWhereInput[]
    id?: StringFilter<"Interview"> | string
    applicationId?: StringFilter<"Interview"> | string
    interviewType?: StringFilter<"Interview"> | string
    scheduledDate?: DateTimeNullableFilter<"Interview"> | Date | string | null
    scheduledTime?: StringNullableFilter<"Interview"> | string | null
    timezone?: StringFilter<"Interview"> | string
    duration?: IntNullableFilter<"Interview"> | number | null
    interviewerName?: StringNullableFilter<"Interview"> | string | null
    interviewerEmail?: StringNullableFilter<"Interview"> | string | null
    meetingLink?: StringNullableFilter<"Interview"> | string | null
    meetingPassword?: StringNullableFilter<"Interview"> | string | null
    location?: StringNullableFilter<"Interview"> | string | null
    interviewStatus?: StringFilter<"Interview"> | string
    interviewScore?: FloatNullableFilter<"Interview"> | number | null
    interviewFeedback?: StringNullableFilter<"Interview"> | string | null
    reminderSent?: BoolFilter<"Interview"> | boolean
    confirmationReceived?: BoolFilter<"Interview"> | boolean
    createdAt?: DateTimeFilter<"Interview"> | Date | string
    updatedAt?: DateTimeFilter<"Interview"> | Date | string
  }

  export type ScholarshipApplicationUpsertWithWhereUniqueWithoutApplicationInput = {
    where: ScholarshipApplicationWhereUniqueInput
    update: XOR<ScholarshipApplicationUpdateWithoutApplicationInput, ScholarshipApplicationUncheckedUpdateWithoutApplicationInput>
    create: XOR<ScholarshipApplicationCreateWithoutApplicationInput, ScholarshipApplicationUncheckedCreateWithoutApplicationInput>
  }

  export type ScholarshipApplicationUpdateWithWhereUniqueWithoutApplicationInput = {
    where: ScholarshipApplicationWhereUniqueInput
    data: XOR<ScholarshipApplicationUpdateWithoutApplicationInput, ScholarshipApplicationUncheckedUpdateWithoutApplicationInput>
  }

  export type ScholarshipApplicationUpdateManyWithWhereWithoutApplicationInput = {
    where: ScholarshipApplicationScalarWhereInput
    data: XOR<ScholarshipApplicationUpdateManyMutationInput, ScholarshipApplicationUncheckedUpdateManyWithoutApplicationInput>
  }

  export type FinancialAidApplicationUpsertWithWhereUniqueWithoutApplicationInput = {
    where: FinancialAidApplicationWhereUniqueInput
    update: XOR<FinancialAidApplicationUpdateWithoutApplicationInput, FinancialAidApplicationUncheckedUpdateWithoutApplicationInput>
    create: XOR<FinancialAidApplicationCreateWithoutApplicationInput, FinancialAidApplicationUncheckedCreateWithoutApplicationInput>
  }

  export type FinancialAidApplicationUpdateWithWhereUniqueWithoutApplicationInput = {
    where: FinancialAidApplicationWhereUniqueInput
    data: XOR<FinancialAidApplicationUpdateWithoutApplicationInput, FinancialAidApplicationUncheckedUpdateWithoutApplicationInput>
  }

  export type FinancialAidApplicationUpdateManyWithWhereWithoutApplicationInput = {
    where: FinancialAidApplicationScalarWhereInput
    data: XOR<FinancialAidApplicationUpdateManyMutationInput, FinancialAidApplicationUncheckedUpdateManyWithoutApplicationInput>
  }

  export type EssaySubmissionUpsertWithWhereUniqueWithoutApplicationInput = {
    where: EssaySubmissionWhereUniqueInput
    update: XOR<EssaySubmissionUpdateWithoutApplicationInput, EssaySubmissionUncheckedUpdateWithoutApplicationInput>
    create: XOR<EssaySubmissionCreateWithoutApplicationInput, EssaySubmissionUncheckedCreateWithoutApplicationInput>
  }

  export type EssaySubmissionUpdateWithWhereUniqueWithoutApplicationInput = {
    where: EssaySubmissionWhereUniqueInput
    data: XOR<EssaySubmissionUpdateWithoutApplicationInput, EssaySubmissionUncheckedUpdateWithoutApplicationInput>
  }

  export type EssaySubmissionUpdateManyWithWhereWithoutApplicationInput = {
    where: EssaySubmissionScalarWhereInput
    data: XOR<EssaySubmissionUpdateManyMutationInput, EssaySubmissionUncheckedUpdateManyWithoutApplicationInput>
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutApplicationInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutApplicationInput, CalendarEventUncheckedUpdateWithoutApplicationInput>
    create: XOR<CalendarEventCreateWithoutApplicationInput, CalendarEventUncheckedCreateWithoutApplicationInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutApplicationInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutApplicationInput, CalendarEventUncheckedUpdateWithoutApplicationInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutApplicationInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutApplicationInput>
  }

  export type EssayUpsertWithWhereUniqueWithoutApplicationInput = {
    where: EssayWhereUniqueInput
    update: XOR<EssayUpdateWithoutApplicationInput, EssayUncheckedUpdateWithoutApplicationInput>
    create: XOR<EssayCreateWithoutApplicationInput, EssayUncheckedCreateWithoutApplicationInput>
  }

  export type EssayUpdateWithWhereUniqueWithoutApplicationInput = {
    where: EssayWhereUniqueInput
    data: XOR<EssayUpdateWithoutApplicationInput, EssayUncheckedUpdateWithoutApplicationInput>
  }

  export type EssayUpdateManyWithWhereWithoutApplicationInput = {
    where: EssayScalarWhereInput
    data: XOR<EssayUpdateManyMutationInput, EssayUncheckedUpdateManyWithoutApplicationInput>
  }

  export type ApplicationCreateWithoutApplicationProgressInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutApplicationProgressInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutApplicationProgressInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutApplicationProgressInput, ApplicationUncheckedCreateWithoutApplicationProgressInput>
  }

  export type ApplicationUpsertWithoutApplicationProgressInput = {
    update: XOR<ApplicationUpdateWithoutApplicationProgressInput, ApplicationUncheckedUpdateWithoutApplicationProgressInput>
    create: XOR<ApplicationCreateWithoutApplicationProgressInput, ApplicationUncheckedCreateWithoutApplicationProgressInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutApplicationProgressInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutApplicationProgressInput, ApplicationUncheckedUpdateWithoutApplicationProgressInput>
  }

  export type ApplicationUpdateWithoutApplicationProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutApplicationProgressInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationCreateWithoutDocumentsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutDocumentsInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutDocumentsInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutDocumentsInput, ApplicationUncheckedCreateWithoutDocumentsInput>
  }

  export type ApplicationUpsertWithoutDocumentsInput = {
    update: XOR<ApplicationUpdateWithoutDocumentsInput, ApplicationUncheckedUpdateWithoutDocumentsInput>
    create: XOR<ApplicationCreateWithoutDocumentsInput, ApplicationUncheckedCreateWithoutDocumentsInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutDocumentsInput, ApplicationUncheckedUpdateWithoutDocumentsInput>
  }

  export type ApplicationUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationCreateWithoutInterviewsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutInterviewsInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutInterviewsInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutInterviewsInput, ApplicationUncheckedCreateWithoutInterviewsInput>
  }

  export type CalendarEventCreateWithoutInterviewInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutInterviewInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutInterviewInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutInterviewInput, CalendarEventUncheckedCreateWithoutInterviewInput>
  }

  export type CalendarEventCreateManyInterviewInputEnvelope = {
    data: CalendarEventCreateManyInterviewInput | CalendarEventCreateManyInterviewInput[]
    skipDuplicates?: boolean
  }

  export type ApplicationUpsertWithoutInterviewsInput = {
    update: XOR<ApplicationUpdateWithoutInterviewsInput, ApplicationUncheckedUpdateWithoutInterviewsInput>
    create: XOR<ApplicationCreateWithoutInterviewsInput, ApplicationUncheckedCreateWithoutInterviewsInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutInterviewsInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutInterviewsInput, ApplicationUncheckedUpdateWithoutInterviewsInput>
  }

  export type ApplicationUpdateWithoutInterviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutInterviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutInterviewInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutInterviewInput, CalendarEventUncheckedUpdateWithoutInterviewInput>
    create: XOR<CalendarEventCreateWithoutInterviewInput, CalendarEventUncheckedCreateWithoutInterviewInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutInterviewInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutInterviewInput, CalendarEventUncheckedUpdateWithoutInterviewInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutInterviewInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutInterviewInput>
  }

  export type UniversityCreateWithoutTuitionBreakdownsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutTuitionBreakdownsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutTuitionBreakdownsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutTuitionBreakdownsInput, UniversityUncheckedCreateWithoutTuitionBreakdownsInput>
  }

  export type ProgramCreateWithoutTuitionBreakdownsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutTuitionBreakdownsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutTuitionBreakdownsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutTuitionBreakdownsInput, ProgramUncheckedCreateWithoutTuitionBreakdownsInput>
  }

  export type PaymentScheduleCreateWithoutTuitionBreakdownInput = {
    id?: string
    installmentNumber: number
    dueDate: Date | string
    amount: number
    description?: string | null
    lateFee?: number | null
    gracePeroidDays?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput = {
    id?: string
    installmentNumber: number
    dueDate: Date | string
    amount: number
    description?: string | null
    lateFee?: number | null
    gracePeroidDays?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentScheduleCreateOrConnectWithoutTuitionBreakdownInput = {
    where: PaymentScheduleWhereUniqueInput
    create: XOR<PaymentScheduleCreateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput>
  }

  export type PaymentScheduleCreateManyTuitionBreakdownInputEnvelope = {
    data: PaymentScheduleCreateManyTuitionBreakdownInput | PaymentScheduleCreateManyTuitionBreakdownInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutTuitionBreakdownsInput = {
    update: XOR<UniversityUpdateWithoutTuitionBreakdownsInput, UniversityUncheckedUpdateWithoutTuitionBreakdownsInput>
    create: XOR<UniversityCreateWithoutTuitionBreakdownsInput, UniversityUncheckedCreateWithoutTuitionBreakdownsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutTuitionBreakdownsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutTuitionBreakdownsInput, UniversityUncheckedUpdateWithoutTuitionBreakdownsInput>
  }

  export type UniversityUpdateWithoutTuitionBreakdownsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutTuitionBreakdownsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramUpsertWithoutTuitionBreakdownsInput = {
    update: XOR<ProgramUpdateWithoutTuitionBreakdownsInput, ProgramUncheckedUpdateWithoutTuitionBreakdownsInput>
    create: XOR<ProgramCreateWithoutTuitionBreakdownsInput, ProgramUncheckedCreateWithoutTuitionBreakdownsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutTuitionBreakdownsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutTuitionBreakdownsInput, ProgramUncheckedUpdateWithoutTuitionBreakdownsInput>
  }

  export type ProgramUpdateWithoutTuitionBreakdownsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutTuitionBreakdownsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type PaymentScheduleUpsertWithWhereUniqueWithoutTuitionBreakdownInput = {
    where: PaymentScheduleWhereUniqueInput
    update: XOR<PaymentScheduleUpdateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedUpdateWithoutTuitionBreakdownInput>
    create: XOR<PaymentScheduleCreateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedCreateWithoutTuitionBreakdownInput>
  }

  export type PaymentScheduleUpdateWithWhereUniqueWithoutTuitionBreakdownInput = {
    where: PaymentScheduleWhereUniqueInput
    data: XOR<PaymentScheduleUpdateWithoutTuitionBreakdownInput, PaymentScheduleUncheckedUpdateWithoutTuitionBreakdownInput>
  }

  export type PaymentScheduleUpdateManyWithWhereWithoutTuitionBreakdownInput = {
    where: PaymentScheduleScalarWhereInput
    data: XOR<PaymentScheduleUpdateManyMutationInput, PaymentScheduleUncheckedUpdateManyWithoutTuitionBreakdownInput>
  }

  export type PaymentScheduleScalarWhereInput = {
    AND?: PaymentScheduleScalarWhereInput | PaymentScheduleScalarWhereInput[]
    OR?: PaymentScheduleScalarWhereInput[]
    NOT?: PaymentScheduleScalarWhereInput | PaymentScheduleScalarWhereInput[]
    id?: StringFilter<"PaymentSchedule"> | string
    tuitionBreakdownId?: StringFilter<"PaymentSchedule"> | string
    installmentNumber?: IntFilter<"PaymentSchedule"> | number
    dueDate?: DateTimeFilter<"PaymentSchedule"> | Date | string
    amount?: FloatFilter<"PaymentSchedule"> | number
    description?: StringNullableFilter<"PaymentSchedule"> | string | null
    lateFee?: FloatNullableFilter<"PaymentSchedule"> | number | null
    gracePeroidDays?: IntNullableFilter<"PaymentSchedule"> | number | null
    isActive?: BoolFilter<"PaymentSchedule"> | boolean
    createdAt?: DateTimeFilter<"PaymentSchedule"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentSchedule"> | Date | string
  }

  export type TuitionBreakdownCreateWithoutPaymentScheduleInput = {
    id?: string
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutTuitionBreakdownsInput
    program?: ProgramCreateNestedOneWithoutTuitionBreakdownsInput
  }

  export type TuitionBreakdownUncheckedCreateWithoutPaymentScheduleInput = {
    id?: string
    universityId: string
    programId?: string | null
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TuitionBreakdownCreateOrConnectWithoutPaymentScheduleInput = {
    where: TuitionBreakdownWhereUniqueInput
    create: XOR<TuitionBreakdownCreateWithoutPaymentScheduleInput, TuitionBreakdownUncheckedCreateWithoutPaymentScheduleInput>
  }

  export type TuitionBreakdownUpsertWithoutPaymentScheduleInput = {
    update: XOR<TuitionBreakdownUpdateWithoutPaymentScheduleInput, TuitionBreakdownUncheckedUpdateWithoutPaymentScheduleInput>
    create: XOR<TuitionBreakdownCreateWithoutPaymentScheduleInput, TuitionBreakdownUncheckedCreateWithoutPaymentScheduleInput>
    where?: TuitionBreakdownWhereInput
  }

  export type TuitionBreakdownUpdateToOneWithWhereWithoutPaymentScheduleInput = {
    where?: TuitionBreakdownWhereInput
    data: XOR<TuitionBreakdownUpdateWithoutPaymentScheduleInput, TuitionBreakdownUncheckedUpdateWithoutPaymentScheduleInput>
  }

  export type TuitionBreakdownUpdateWithoutPaymentScheduleInput = {
    id?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutTuitionBreakdownsNestedInput
    program?: ProgramUpdateOneWithoutTuitionBreakdownsNestedInput
  }

  export type TuitionBreakdownUncheckedUpdateWithoutPaymentScheduleInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityCreateWithoutScholarshipsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutScholarshipsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutScholarshipsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutScholarshipsInput, UniversityUncheckedCreateWithoutScholarshipsInput>
  }

  export type ProgramCreateWithoutScholarshipsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutScholarshipsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutScholarshipsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutScholarshipsInput, ProgramUncheckedCreateWithoutScholarshipsInput>
  }

  export type ScholarshipDocumentCreateWithoutScholarshipInput = {
    id?: string
    documentType: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    displayOrder?: number
    isPublic?: boolean
    downloadCount?: number
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipDocumentUncheckedCreateWithoutScholarshipInput = {
    id?: string
    documentType: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    displayOrder?: number
    isPublic?: boolean
    downloadCount?: number
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipDocumentCreateOrConnectWithoutScholarshipInput = {
    where: ScholarshipDocumentWhereUniqueInput
    create: XOR<ScholarshipDocumentCreateWithoutScholarshipInput, ScholarshipDocumentUncheckedCreateWithoutScholarshipInput>
  }

  export type ScholarshipDocumentCreateManyScholarshipInputEnvelope = {
    data: ScholarshipDocumentCreateManyScholarshipInput | ScholarshipDocumentCreateManyScholarshipInput[]
    skipDuplicates?: boolean
  }

  export type ScholarshipApplicationCreateWithoutScholarshipInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutScholarshipApplicationsInput
    application?: ApplicationCreateNestedOneWithoutScholarshipApplicationsInput
  }

  export type ScholarshipApplicationUncheckedCreateWithoutScholarshipInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationCreateOrConnectWithoutScholarshipInput = {
    where: ScholarshipApplicationWhereUniqueInput
    create: XOR<ScholarshipApplicationCreateWithoutScholarshipInput, ScholarshipApplicationUncheckedCreateWithoutScholarshipInput>
  }

  export type ScholarshipApplicationCreateManyScholarshipInputEnvelope = {
    data: ScholarshipApplicationCreateManyScholarshipInput | ScholarshipApplicationCreateManyScholarshipInput[]
    skipDuplicates?: boolean
  }

  export type CalendarEventCreateWithoutScholarshipInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    reminders?: EventReminderCreateNestedManyWithoutEventInput
  }

  export type CalendarEventUncheckedCreateWithoutScholarshipInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    reminders?: EventReminderUncheckedCreateNestedManyWithoutEventInput
  }

  export type CalendarEventCreateOrConnectWithoutScholarshipInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutScholarshipInput, CalendarEventUncheckedCreateWithoutScholarshipInput>
  }

  export type CalendarEventCreateManyScholarshipInputEnvelope = {
    data: CalendarEventCreateManyScholarshipInput | CalendarEventCreateManyScholarshipInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutScholarshipsInput = {
    update: XOR<UniversityUpdateWithoutScholarshipsInput, UniversityUncheckedUpdateWithoutScholarshipsInput>
    create: XOR<UniversityCreateWithoutScholarshipsInput, UniversityUncheckedCreateWithoutScholarshipsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutScholarshipsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutScholarshipsInput, UniversityUncheckedUpdateWithoutScholarshipsInput>
  }

  export type UniversityUpdateWithoutScholarshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutScholarshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramUpsertWithoutScholarshipsInput = {
    update: XOR<ProgramUpdateWithoutScholarshipsInput, ProgramUncheckedUpdateWithoutScholarshipsInput>
    create: XOR<ProgramCreateWithoutScholarshipsInput, ProgramUncheckedCreateWithoutScholarshipsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutScholarshipsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutScholarshipsInput, ProgramUncheckedUpdateWithoutScholarshipsInput>
  }

  export type ProgramUpdateWithoutScholarshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutScholarshipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type ScholarshipDocumentUpsertWithWhereUniqueWithoutScholarshipInput = {
    where: ScholarshipDocumentWhereUniqueInput
    update: XOR<ScholarshipDocumentUpdateWithoutScholarshipInput, ScholarshipDocumentUncheckedUpdateWithoutScholarshipInput>
    create: XOR<ScholarshipDocumentCreateWithoutScholarshipInput, ScholarshipDocumentUncheckedCreateWithoutScholarshipInput>
  }

  export type ScholarshipDocumentUpdateWithWhereUniqueWithoutScholarshipInput = {
    where: ScholarshipDocumentWhereUniqueInput
    data: XOR<ScholarshipDocumentUpdateWithoutScholarshipInput, ScholarshipDocumentUncheckedUpdateWithoutScholarshipInput>
  }

  export type ScholarshipDocumentUpdateManyWithWhereWithoutScholarshipInput = {
    where: ScholarshipDocumentScalarWhereInput
    data: XOR<ScholarshipDocumentUpdateManyMutationInput, ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipInput>
  }

  export type ScholarshipDocumentScalarWhereInput = {
    AND?: ScholarshipDocumentScalarWhereInput | ScholarshipDocumentScalarWhereInput[]
    OR?: ScholarshipDocumentScalarWhereInput[]
    NOT?: ScholarshipDocumentScalarWhereInput | ScholarshipDocumentScalarWhereInput[]
    id?: StringFilter<"ScholarshipDocument"> | string
    scholarshipId?: StringFilter<"ScholarshipDocument"> | string
    documentType?: StringFilter<"ScholarshipDocument"> | string
    documentTitle?: StringFilter<"ScholarshipDocument"> | string
    fileName?: StringFilter<"ScholarshipDocument"> | string
    fileUrl?: StringFilter<"ScholarshipDocument"> | string
    fileSize?: IntNullableFilter<"ScholarshipDocument"> | number | null
    mimeType?: StringNullableFilter<"ScholarshipDocument"> | string | null
    isRequired?: BoolFilter<"ScholarshipDocument"> | boolean
    displayOrder?: IntFilter<"ScholarshipDocument"> | number
    isPublic?: BoolFilter<"ScholarshipDocument"> | boolean
    downloadCount?: IntFilter<"ScholarshipDocument"> | number
    uploadedAt?: DateTimeFilter<"ScholarshipDocument"> | Date | string
    updatedAt?: DateTimeFilter<"ScholarshipDocument"> | Date | string
  }

  export type ScholarshipApplicationUpsertWithWhereUniqueWithoutScholarshipInput = {
    where: ScholarshipApplicationWhereUniqueInput
    update: XOR<ScholarshipApplicationUpdateWithoutScholarshipInput, ScholarshipApplicationUncheckedUpdateWithoutScholarshipInput>
    create: XOR<ScholarshipApplicationCreateWithoutScholarshipInput, ScholarshipApplicationUncheckedCreateWithoutScholarshipInput>
  }

  export type ScholarshipApplicationUpdateWithWhereUniqueWithoutScholarshipInput = {
    where: ScholarshipApplicationWhereUniqueInput
    data: XOR<ScholarshipApplicationUpdateWithoutScholarshipInput, ScholarshipApplicationUncheckedUpdateWithoutScholarshipInput>
  }

  export type ScholarshipApplicationUpdateManyWithWhereWithoutScholarshipInput = {
    where: ScholarshipApplicationScalarWhereInput
    data: XOR<ScholarshipApplicationUpdateManyMutationInput, ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipInput>
  }

  export type CalendarEventUpsertWithWhereUniqueWithoutScholarshipInput = {
    where: CalendarEventWhereUniqueInput
    update: XOR<CalendarEventUpdateWithoutScholarshipInput, CalendarEventUncheckedUpdateWithoutScholarshipInput>
    create: XOR<CalendarEventCreateWithoutScholarshipInput, CalendarEventUncheckedCreateWithoutScholarshipInput>
  }

  export type CalendarEventUpdateWithWhereUniqueWithoutScholarshipInput = {
    where: CalendarEventWhereUniqueInput
    data: XOR<CalendarEventUpdateWithoutScholarshipInput, CalendarEventUncheckedUpdateWithoutScholarshipInput>
  }

  export type CalendarEventUpdateManyWithWhereWithoutScholarshipInput = {
    where: CalendarEventScalarWhereInput
    data: XOR<CalendarEventUpdateManyMutationInput, CalendarEventUncheckedUpdateManyWithoutScholarshipInput>
  }

  export type ScholarshipCreateWithoutDocumentsInput = {
    id?: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutScholarshipsInput
    program?: ProgramCreateNestedOneWithoutScholarshipsInput
    applications?: ScholarshipApplicationCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipUncheckedCreateWithoutDocumentsInput = {
    id?: string
    universityId: string
    programId?: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    applications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipCreateOrConnectWithoutDocumentsInput = {
    where: ScholarshipWhereUniqueInput
    create: XOR<ScholarshipCreateWithoutDocumentsInput, ScholarshipUncheckedCreateWithoutDocumentsInput>
  }

  export type ScholarshipUpsertWithoutDocumentsInput = {
    update: XOR<ScholarshipUpdateWithoutDocumentsInput, ScholarshipUncheckedUpdateWithoutDocumentsInput>
    create: XOR<ScholarshipCreateWithoutDocumentsInput, ScholarshipUncheckedCreateWithoutDocumentsInput>
    where?: ScholarshipWhereInput
  }

  export type ScholarshipUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: ScholarshipWhereInput
    data: XOR<ScholarshipUpdateWithoutDocumentsInput, ScholarshipUncheckedUpdateWithoutDocumentsInput>
  }

  export type ScholarshipUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutScholarshipsNestedInput
    program?: ProgramUpdateOneWithoutScholarshipsNestedInput
    applications?: ScholarshipApplicationUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipCreateWithoutApplicationsInput = {
    id?: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutScholarshipsInput
    program?: ProgramCreateNestedOneWithoutScholarshipsInput
    documents?: ScholarshipDocumentCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipUncheckedCreateWithoutApplicationsInput = {
    id?: string
    universityId: string
    programId?: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ScholarshipDocumentUncheckedCreateNestedManyWithoutScholarshipInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipCreateOrConnectWithoutApplicationsInput = {
    where: ScholarshipWhereUniqueInput
    create: XOR<ScholarshipCreateWithoutApplicationsInput, ScholarshipUncheckedCreateWithoutApplicationsInput>
  }

  export type UserCreateWithoutScholarshipApplicationsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutScholarshipApplicationsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutScholarshipApplicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutScholarshipApplicationsInput, UserUncheckedCreateWithoutScholarshipApplicationsInput>
  }

  export type ApplicationCreateWithoutScholarshipApplicationsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutScholarshipApplicationsInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutScholarshipApplicationsInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutScholarshipApplicationsInput, ApplicationUncheckedCreateWithoutScholarshipApplicationsInput>
  }

  export type ScholarshipUpsertWithoutApplicationsInput = {
    update: XOR<ScholarshipUpdateWithoutApplicationsInput, ScholarshipUncheckedUpdateWithoutApplicationsInput>
    create: XOR<ScholarshipCreateWithoutApplicationsInput, ScholarshipUncheckedCreateWithoutApplicationsInput>
    where?: ScholarshipWhereInput
  }

  export type ScholarshipUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: ScholarshipWhereInput
    data: XOR<ScholarshipUpdateWithoutApplicationsInput, ScholarshipUncheckedUpdateWithoutApplicationsInput>
  }

  export type ScholarshipUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutScholarshipsNestedInput
    program?: ProgramUpdateOneWithoutScholarshipsNestedInput
    documents?: ScholarshipDocumentUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutScholarshipNestedInput
  }

  export type UserUpsertWithoutScholarshipApplicationsInput = {
    update: XOR<UserUpdateWithoutScholarshipApplicationsInput, UserUncheckedUpdateWithoutScholarshipApplicationsInput>
    create: XOR<UserCreateWithoutScholarshipApplicationsInput, UserUncheckedCreateWithoutScholarshipApplicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutScholarshipApplicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutScholarshipApplicationsInput, UserUncheckedUpdateWithoutScholarshipApplicationsInput>
  }

  export type UserUpdateWithoutScholarshipApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutScholarshipApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ApplicationUpsertWithoutScholarshipApplicationsInput = {
    update: XOR<ApplicationUpdateWithoutScholarshipApplicationsInput, ApplicationUncheckedUpdateWithoutScholarshipApplicationsInput>
    create: XOR<ApplicationCreateWithoutScholarshipApplicationsInput, ApplicationUncheckedCreateWithoutScholarshipApplicationsInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutScholarshipApplicationsInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutScholarshipApplicationsInput, ApplicationUncheckedUpdateWithoutScholarshipApplicationsInput>
  }

  export type ApplicationUpdateWithoutScholarshipApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutScholarshipApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type UniversityCreateWithoutFeeStructuresInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutFeeStructuresInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutFeeStructuresInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutFeeStructuresInput, UniversityUncheckedCreateWithoutFeeStructuresInput>
  }

  export type ProgramCreateWithoutFeeStructuresInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutFeeStructuresInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutFeeStructuresInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutFeeStructuresInput, ProgramUncheckedCreateWithoutFeeStructuresInput>
  }

  export type UniversityUpsertWithoutFeeStructuresInput = {
    update: XOR<UniversityUpdateWithoutFeeStructuresInput, UniversityUncheckedUpdateWithoutFeeStructuresInput>
    create: XOR<UniversityCreateWithoutFeeStructuresInput, UniversityUncheckedCreateWithoutFeeStructuresInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutFeeStructuresInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutFeeStructuresInput, UniversityUncheckedUpdateWithoutFeeStructuresInput>
  }

  export type UniversityUpdateWithoutFeeStructuresInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutFeeStructuresInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramUpsertWithoutFeeStructuresInput = {
    update: XOR<ProgramUpdateWithoutFeeStructuresInput, ProgramUncheckedUpdateWithoutFeeStructuresInput>
    create: XOR<ProgramCreateWithoutFeeStructuresInput, ProgramUncheckedCreateWithoutFeeStructuresInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutFeeStructuresInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutFeeStructuresInput, ProgramUncheckedUpdateWithoutFeeStructuresInput>
  }

  export type ProgramUpdateWithoutFeeStructuresInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutFeeStructuresInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type UniversityCreateWithoutFinancialAidsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUniversityInput
  }

  export type UniversityUncheckedCreateWithoutFinancialAidsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUniversityInput
  }

  export type UniversityCreateOrConnectWithoutFinancialAidsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutFinancialAidsInput, UniversityUncheckedCreateWithoutFinancialAidsInput>
  }

  export type ProgramCreateWithoutFinancialAidsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutFinancialAidsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutFinancialAidsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutFinancialAidsInput, ProgramUncheckedCreateWithoutFinancialAidsInput>
  }

  export type FinancialAidApplicationCreateWithoutFinancialAidInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutFinancialAidApplicationsInput
    application?: ApplicationCreateNestedOneWithoutFinancialAidApplicationsInput
  }

  export type FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationCreateOrConnectWithoutFinancialAidInput = {
    where: FinancialAidApplicationWhereUniqueInput
    create: XOR<FinancialAidApplicationCreateWithoutFinancialAidInput, FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput>
  }

  export type FinancialAidApplicationCreateManyFinancialAidInputEnvelope = {
    data: FinancialAidApplicationCreateManyFinancialAidInput | FinancialAidApplicationCreateManyFinancialAidInput[]
    skipDuplicates?: boolean
  }

  export type UniversityUpsertWithoutFinancialAidsInput = {
    update: XOR<UniversityUpdateWithoutFinancialAidsInput, UniversityUncheckedUpdateWithoutFinancialAidsInput>
    create: XOR<UniversityCreateWithoutFinancialAidsInput, UniversityUncheckedCreateWithoutFinancialAidsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutFinancialAidsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutFinancialAidsInput, UniversityUncheckedUpdateWithoutFinancialAidsInput>
  }

  export type UniversityUpdateWithoutFinancialAidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutFinancialAidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type ProgramUpsertWithoutFinancialAidsInput = {
    update: XOR<ProgramUpdateWithoutFinancialAidsInput, ProgramUncheckedUpdateWithoutFinancialAidsInput>
    create: XOR<ProgramCreateWithoutFinancialAidsInput, ProgramUncheckedCreateWithoutFinancialAidsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutFinancialAidsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutFinancialAidsInput, ProgramUncheckedUpdateWithoutFinancialAidsInput>
  }

  export type ProgramUpdateWithoutFinancialAidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutFinancialAidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type FinancialAidApplicationUpsertWithWhereUniqueWithoutFinancialAidInput = {
    where: FinancialAidApplicationWhereUniqueInput
    update: XOR<FinancialAidApplicationUpdateWithoutFinancialAidInput, FinancialAidApplicationUncheckedUpdateWithoutFinancialAidInput>
    create: XOR<FinancialAidApplicationCreateWithoutFinancialAidInput, FinancialAidApplicationUncheckedCreateWithoutFinancialAidInput>
  }

  export type FinancialAidApplicationUpdateWithWhereUniqueWithoutFinancialAidInput = {
    where: FinancialAidApplicationWhereUniqueInput
    data: XOR<FinancialAidApplicationUpdateWithoutFinancialAidInput, FinancialAidApplicationUncheckedUpdateWithoutFinancialAidInput>
  }

  export type FinancialAidApplicationUpdateManyWithWhereWithoutFinancialAidInput = {
    where: FinancialAidApplicationScalarWhereInput
    data: XOR<FinancialAidApplicationUpdateManyMutationInput, FinancialAidApplicationUncheckedUpdateManyWithoutFinancialAidInput>
  }

  export type FinancialAidCreateWithoutApplicationsInput = {
    id?: string
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutFinancialAidsInput
    program?: ProgramCreateNestedOneWithoutFinancialAidsInput
  }

  export type FinancialAidUncheckedCreateWithoutApplicationsInput = {
    id?: string
    universityId: string
    programId?: string | null
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidCreateOrConnectWithoutApplicationsInput = {
    where: FinancialAidWhereUniqueInput
    create: XOR<FinancialAidCreateWithoutApplicationsInput, FinancialAidUncheckedCreateWithoutApplicationsInput>
  }

  export type UserCreateWithoutFinancialAidApplicationsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFinancialAidApplicationsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFinancialAidApplicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFinancialAidApplicationsInput, UserUncheckedCreateWithoutFinancialAidApplicationsInput>
  }

  export type ApplicationCreateWithoutFinancialAidApplicationsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutFinancialAidApplicationsInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutFinancialAidApplicationsInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutFinancialAidApplicationsInput, ApplicationUncheckedCreateWithoutFinancialAidApplicationsInput>
  }

  export type FinancialAidUpsertWithoutApplicationsInput = {
    update: XOR<FinancialAidUpdateWithoutApplicationsInput, FinancialAidUncheckedUpdateWithoutApplicationsInput>
    create: XOR<FinancialAidCreateWithoutApplicationsInput, FinancialAidUncheckedCreateWithoutApplicationsInput>
    where?: FinancialAidWhereInput
  }

  export type FinancialAidUpdateToOneWithWhereWithoutApplicationsInput = {
    where?: FinancialAidWhereInput
    data: XOR<FinancialAidUpdateWithoutApplicationsInput, FinancialAidUncheckedUpdateWithoutApplicationsInput>
  }

  export type FinancialAidUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutFinancialAidsNestedInput
    program?: ProgramUpdateOneWithoutFinancialAidsNestedInput
  }

  export type FinancialAidUncheckedUpdateWithoutApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutFinancialAidApplicationsInput = {
    update: XOR<UserUpdateWithoutFinancialAidApplicationsInput, UserUncheckedUpdateWithoutFinancialAidApplicationsInput>
    create: XOR<UserCreateWithoutFinancialAidApplicationsInput, UserUncheckedCreateWithoutFinancialAidApplicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFinancialAidApplicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFinancialAidApplicationsInput, UserUncheckedUpdateWithoutFinancialAidApplicationsInput>
  }

  export type UserUpdateWithoutFinancialAidApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFinancialAidApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ApplicationUpsertWithoutFinancialAidApplicationsInput = {
    update: XOR<ApplicationUpdateWithoutFinancialAidApplicationsInput, ApplicationUncheckedUpdateWithoutFinancialAidApplicationsInput>
    create: XOR<ApplicationCreateWithoutFinancialAidApplicationsInput, ApplicationUncheckedCreateWithoutFinancialAidApplicationsInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutFinancialAidApplicationsInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutFinancialAidApplicationsInput, ApplicationUncheckedUpdateWithoutFinancialAidApplicationsInput>
  }

  export type ApplicationUpdateWithoutFinancialAidApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutFinancialAidApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type RefreshTokenCreateWithoutAdminUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUncheckedCreateWithoutAdminUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutAdminUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutAdminUserInput, RefreshTokenUncheckedCreateWithoutAdminUserInput>
  }

  export type RefreshTokenCreateManyAdminUserInputEnvelope = {
    data: RefreshTokenCreateManyAdminUserInput | RefreshTokenCreateManyAdminUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutAdminUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutAdminUserInput, RefreshTokenUncheckedUpdateWithoutAdminUserInput>
    create: XOR<RefreshTokenCreateWithoutAdminUserInput, RefreshTokenUncheckedCreateWithoutAdminUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutAdminUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutAdminUserInput, RefreshTokenUncheckedUpdateWithoutAdminUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutAdminUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutAdminUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
  }

  export type Admin_UserCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    passwordHash: string
    firstName: string
    lastName: string
    role?: string
    status?: string
    is2FAEnabled?: boolean
    twoFactorSecret?: string | null
    phone?: string | null
    profileImageUrl?: string | null
    lastLogin?: Date | string | null
    lastLoginIP?: string | null
    failedLoginAttempts?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Admin_UserUncheckedCreateWithoutRefreshTokensInput = {
    id?: string
    email: string
    passwordHash: string
    firstName: string
    lastName: string
    role?: string
    status?: string
    is2FAEnabled?: boolean
    twoFactorSecret?: string | null
    phone?: string | null
    profileImageUrl?: string | null
    lastLogin?: Date | string | null
    lastLoginIP?: string | null
    failedLoginAttempts?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Admin_UserCreateOrConnectWithoutRefreshTokensInput = {
    where: Admin_UserWhereUniqueInput
    create: XOR<Admin_UserCreateWithoutRefreshTokensInput, Admin_UserUncheckedCreateWithoutRefreshTokensInput>
  }

  export type Admin_UserUpsertWithoutRefreshTokensInput = {
    update: XOR<Admin_UserUpdateWithoutRefreshTokensInput, Admin_UserUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<Admin_UserCreateWithoutRefreshTokensInput, Admin_UserUncheckedCreateWithoutRefreshTokensInput>
    where?: Admin_UserWhereInput
  }

  export type Admin_UserUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: Admin_UserWhereInput
    data: XOR<Admin_UserUpdateWithoutRefreshTokensInput, Admin_UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type Admin_UserUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    is2FAEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Admin_UserUncheckedUpdateWithoutRefreshTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    passwordHash?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    is2FAEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    profileImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionCreateWithoutEssayPromptsInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutAdmissionsInput
    program: ProgramCreateNestedOneWithoutAdmissionsInput
    intakes?: IntakeCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateWithoutEssayPromptsInput = {
    id?: string
    universityId: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    intakes?: IntakeUncheckedCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutAdmissionInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionCreateOrConnectWithoutEssayPromptsInput = {
    where: AdmissionWhereUniqueInput
    create: XOR<AdmissionCreateWithoutEssayPromptsInput, AdmissionUncheckedCreateWithoutEssayPromptsInput>
  }

  export type ProgramCreateWithoutEssayPromptsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutEssayPromptsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutEssayPromptsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutEssayPromptsInput, ProgramUncheckedCreateWithoutEssayPromptsInput>
  }

  export type IntakeCreateWithoutEssayPromptsInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutIntakesInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutIntakeInput
    applications?: ApplicationCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutIntakeInput
  }

  export type IntakeUncheckedCreateWithoutEssayPromptsInput = {
    id?: string
    admissionId: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutIntakeInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutIntakeInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutIntakeInput
  }

  export type IntakeCreateOrConnectWithoutEssayPromptsInput = {
    where: IntakeWhereUniqueInput
    create: XOR<IntakeCreateWithoutEssayPromptsInput, IntakeUncheckedCreateWithoutEssayPromptsInput>
  }

  export type EssaySubmissionCreateWithoutEssayPromptInput = {
    id?: string
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutEssaySubmissionsInput
    application?: ApplicationCreateNestedOneWithoutEssaySubmissionsInput
  }

  export type EssaySubmissionUncheckedCreateWithoutEssayPromptInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssaySubmissionCreateOrConnectWithoutEssayPromptInput = {
    where: EssaySubmissionWhereUniqueInput
    create: XOR<EssaySubmissionCreateWithoutEssayPromptInput, EssaySubmissionUncheckedCreateWithoutEssayPromptInput>
  }

  export type EssaySubmissionCreateManyEssayPromptInputEnvelope = {
    data: EssaySubmissionCreateManyEssayPromptInput | EssaySubmissionCreateManyEssayPromptInput[]
    skipDuplicates?: boolean
  }

  export type EssayCreateWithoutEssayPromptInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    user?: UserCreateNestedOneWithoutEssaysInput
    application?: ApplicationCreateNestedOneWithoutEssaysInput
    program: ProgramCreateNestedOneWithoutEssaysInput
    versions?: EssayVersionCreateNestedManyWithoutEssayInput
    aiResults?: AIResultCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateWithoutEssayPromptInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    programId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    versions?: EssayVersionUncheckedCreateNestedManyWithoutEssayInput
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayCreateOrConnectWithoutEssayPromptInput = {
    where: EssayWhereUniqueInput
    create: XOR<EssayCreateWithoutEssayPromptInput, EssayUncheckedCreateWithoutEssayPromptInput>
  }

  export type EssayCreateManyEssayPromptInputEnvelope = {
    data: EssayCreateManyEssayPromptInput | EssayCreateManyEssayPromptInput[]
    skipDuplicates?: boolean
  }

  export type AdmissionUpsertWithoutEssayPromptsInput = {
    update: XOR<AdmissionUpdateWithoutEssayPromptsInput, AdmissionUncheckedUpdateWithoutEssayPromptsInput>
    create: XOR<AdmissionCreateWithoutEssayPromptsInput, AdmissionUncheckedCreateWithoutEssayPromptsInput>
    where?: AdmissionWhereInput
  }

  export type AdmissionUpdateToOneWithWhereWithoutEssayPromptsInput = {
    where?: AdmissionWhereInput
    data: XOR<AdmissionUpdateWithoutEssayPromptsInput, AdmissionUncheckedUpdateWithoutEssayPromptsInput>
  }

  export type AdmissionUpdateWithoutEssayPromptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutAdmissionsNestedInput
    program?: ProgramUpdateOneRequiredWithoutAdmissionsNestedInput
    intakes?: IntakeUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateWithoutEssayPromptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intakes?: IntakeUncheckedUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type ProgramUpsertWithoutEssayPromptsInput = {
    update: XOR<ProgramUpdateWithoutEssayPromptsInput, ProgramUncheckedUpdateWithoutEssayPromptsInput>
    create: XOR<ProgramCreateWithoutEssayPromptsInput, ProgramUncheckedCreateWithoutEssayPromptsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutEssayPromptsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutEssayPromptsInput, ProgramUncheckedUpdateWithoutEssayPromptsInput>
  }

  export type ProgramUpdateWithoutEssayPromptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutEssayPromptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type IntakeUpsertWithoutEssayPromptsInput = {
    update: XOR<IntakeUpdateWithoutEssayPromptsInput, IntakeUncheckedUpdateWithoutEssayPromptsInput>
    create: XOR<IntakeCreateWithoutEssayPromptsInput, IntakeUncheckedCreateWithoutEssayPromptsInput>
    where?: IntakeWhereInput
  }

  export type IntakeUpdateToOneWithWhereWithoutEssayPromptsInput = {
    where?: IntakeWhereInput
    data: XOR<IntakeUpdateWithoutEssayPromptsInput, IntakeUncheckedUpdateWithoutEssayPromptsInput>
  }

  export type IntakeUpdateWithoutEssayPromptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutIntakesNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeUncheckedUpdateWithoutEssayPromptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutIntakeNestedInput
  }

  export type EssaySubmissionUpsertWithWhereUniqueWithoutEssayPromptInput = {
    where: EssaySubmissionWhereUniqueInput
    update: XOR<EssaySubmissionUpdateWithoutEssayPromptInput, EssaySubmissionUncheckedUpdateWithoutEssayPromptInput>
    create: XOR<EssaySubmissionCreateWithoutEssayPromptInput, EssaySubmissionUncheckedCreateWithoutEssayPromptInput>
  }

  export type EssaySubmissionUpdateWithWhereUniqueWithoutEssayPromptInput = {
    where: EssaySubmissionWhereUniqueInput
    data: XOR<EssaySubmissionUpdateWithoutEssayPromptInput, EssaySubmissionUncheckedUpdateWithoutEssayPromptInput>
  }

  export type EssaySubmissionUpdateManyWithWhereWithoutEssayPromptInput = {
    where: EssaySubmissionScalarWhereInput
    data: XOR<EssaySubmissionUpdateManyMutationInput, EssaySubmissionUncheckedUpdateManyWithoutEssayPromptInput>
  }

  export type EssayUpsertWithWhereUniqueWithoutEssayPromptInput = {
    where: EssayWhereUniqueInput
    update: XOR<EssayUpdateWithoutEssayPromptInput, EssayUncheckedUpdateWithoutEssayPromptInput>
    create: XOR<EssayCreateWithoutEssayPromptInput, EssayUncheckedCreateWithoutEssayPromptInput>
  }

  export type EssayUpdateWithWhereUniqueWithoutEssayPromptInput = {
    where: EssayWhereUniqueInput
    data: XOR<EssayUpdateWithoutEssayPromptInput, EssayUncheckedUpdateWithoutEssayPromptInput>
  }

  export type EssayUpdateManyWithWhereWithoutEssayPromptInput = {
    where: EssayScalarWhereInput
    data: XOR<EssayUpdateManyMutationInput, EssayUncheckedUpdateManyWithoutEssayPromptInput>
  }

  export type EssayPromptCreateWithoutSubmissionsInput = {
    id?: string
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    admission?: AdmissionCreateNestedOneWithoutEssayPromptsInput
    program?: ProgramCreateNestedOneWithoutEssayPromptsInput
    intake?: IntakeCreateNestedOneWithoutEssayPromptsInput
    essays?: EssayCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptUncheckedCreateWithoutSubmissionsInput = {
    id?: string
    admissionId?: string | null
    programId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    essays?: EssayUncheckedCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptCreateOrConnectWithoutSubmissionsInput = {
    where: EssayPromptWhereUniqueInput
    create: XOR<EssayPromptCreateWithoutSubmissionsInput, EssayPromptUncheckedCreateWithoutSubmissionsInput>
  }

  export type UserCreateWithoutEssaySubmissionsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEssaySubmissionsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEssaySubmissionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEssaySubmissionsInput, UserUncheckedCreateWithoutEssaySubmissionsInput>
  }

  export type ApplicationCreateWithoutEssaySubmissionsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutEssaySubmissionsInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutEssaySubmissionsInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutEssaySubmissionsInput, ApplicationUncheckedCreateWithoutEssaySubmissionsInput>
  }

  export type EssayPromptUpsertWithoutSubmissionsInput = {
    update: XOR<EssayPromptUpdateWithoutSubmissionsInput, EssayPromptUncheckedUpdateWithoutSubmissionsInput>
    create: XOR<EssayPromptCreateWithoutSubmissionsInput, EssayPromptUncheckedCreateWithoutSubmissionsInput>
    where?: EssayPromptWhereInput
  }

  export type EssayPromptUpdateToOneWithWhereWithoutSubmissionsInput = {
    where?: EssayPromptWhereInput
    data: XOR<EssayPromptUpdateWithoutSubmissionsInput, EssayPromptUncheckedUpdateWithoutSubmissionsInput>
  }

  export type EssayPromptUpdateWithoutSubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneWithoutEssayPromptsNestedInput
    program?: ProgramUpdateOneWithoutEssayPromptsNestedInput
    intake?: IntakeUpdateOneWithoutEssayPromptsNestedInput
    essays?: EssayUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateWithoutSubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essays?: EssayUncheckedUpdateManyWithoutEssayPromptNestedInput
  }

  export type UserUpsertWithoutEssaySubmissionsInput = {
    update: XOR<UserUpdateWithoutEssaySubmissionsInput, UserUncheckedUpdateWithoutEssaySubmissionsInput>
    create: XOR<UserCreateWithoutEssaySubmissionsInput, UserUncheckedCreateWithoutEssaySubmissionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEssaySubmissionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEssaySubmissionsInput, UserUncheckedUpdateWithoutEssaySubmissionsInput>
  }

  export type UserUpdateWithoutEssaySubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEssaySubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ApplicationUpsertWithoutEssaySubmissionsInput = {
    update: XOR<ApplicationUpdateWithoutEssaySubmissionsInput, ApplicationUncheckedUpdateWithoutEssaySubmissionsInput>
    create: XOR<ApplicationCreateWithoutEssaySubmissionsInput, ApplicationUncheckedCreateWithoutEssaySubmissionsInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutEssaySubmissionsInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutEssaySubmissionsInput, ApplicationUncheckedUpdateWithoutEssaySubmissionsInput>
  }

  export type ApplicationUpdateWithoutEssaySubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutEssaySubmissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type UserCreateWithoutEssaysInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEssaysInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEssaysInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEssaysInput, UserUncheckedCreateWithoutEssaysInput>
  }

  export type ApplicationCreateWithoutEssaysInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutEssaysInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutEssaysInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutEssaysInput, ApplicationUncheckedCreateWithoutEssaysInput>
  }

  export type ProgramCreateWithoutEssaysInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutEssaysInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutEssaysInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutEssaysInput, ProgramUncheckedCreateWithoutEssaysInput>
  }

  export type EssayPromptCreateWithoutEssaysInput = {
    id?: string
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    admission?: AdmissionCreateNestedOneWithoutEssayPromptsInput
    program?: ProgramCreateNestedOneWithoutEssayPromptsInput
    intake?: IntakeCreateNestedOneWithoutEssayPromptsInput
    submissions?: EssaySubmissionCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptUncheckedCreateWithoutEssaysInput = {
    id?: string
    admissionId?: string | null
    programId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    submissions?: EssaySubmissionUncheckedCreateNestedManyWithoutEssayPromptInput
  }

  export type EssayPromptCreateOrConnectWithoutEssaysInput = {
    where: EssayPromptWhereUniqueInput
    create: XOR<EssayPromptCreateWithoutEssaysInput, EssayPromptUncheckedCreateWithoutEssaysInput>
  }

  export type EssayVersionCreateWithoutEssayInput = {
    id?: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
    aiResults?: AIResultCreateNestedManyWithoutEssayVersionInput
  }

  export type EssayVersionUncheckedCreateWithoutEssayInput = {
    id?: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayVersionInput
  }

  export type EssayVersionCreateOrConnectWithoutEssayInput = {
    where: EssayVersionWhereUniqueInput
    create: XOR<EssayVersionCreateWithoutEssayInput, EssayVersionUncheckedCreateWithoutEssayInput>
  }

  export type EssayVersionCreateManyEssayInputEnvelope = {
    data: EssayVersionCreateManyEssayInput | EssayVersionCreateManyEssayInput[]
    skipDuplicates?: boolean
  }

  export type AIResultCreateWithoutEssayInput = {
    id?: string
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    essayVersion?: EssayVersionCreateNestedOneWithoutAiResultsInput
  }

  export type AIResultUncheckedCreateWithoutEssayInput = {
    id?: string
    essayVersionId?: string | null
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIResultCreateOrConnectWithoutEssayInput = {
    where: AIResultWhereUniqueInput
    create: XOR<AIResultCreateWithoutEssayInput, AIResultUncheckedCreateWithoutEssayInput>
  }

  export type AIResultCreateManyEssayInputEnvelope = {
    data: AIResultCreateManyEssayInput | AIResultCreateManyEssayInput[]
    skipDuplicates?: boolean
  }

  export type EssayCompletionLogCreateWithoutEssayInput = {
    id?: string
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
    user?: UserCreateNestedOneWithoutEssayCompletionLogInput
  }

  export type EssayCompletionLogUncheckedCreateWithoutEssayInput = {
    id?: string
    userId?: string | null
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
  }

  export type EssayCompletionLogCreateOrConnectWithoutEssayInput = {
    where: EssayCompletionLogWhereUniqueInput
    create: XOR<EssayCompletionLogCreateWithoutEssayInput, EssayCompletionLogUncheckedCreateWithoutEssayInput>
  }

  export type EssayCompletionLogCreateManyEssayInputEnvelope = {
    data: EssayCompletionLogCreateManyEssayInput | EssayCompletionLogCreateManyEssayInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutEssaysInput = {
    update: XOR<UserUpdateWithoutEssaysInput, UserUncheckedUpdateWithoutEssaysInput>
    create: XOR<UserCreateWithoutEssaysInput, UserUncheckedCreateWithoutEssaysInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEssaysInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEssaysInput, UserUncheckedUpdateWithoutEssaysInput>
  }

  export type UserUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ApplicationUpsertWithoutEssaysInput = {
    update: XOR<ApplicationUpdateWithoutEssaysInput, ApplicationUncheckedUpdateWithoutEssaysInput>
    create: XOR<ApplicationCreateWithoutEssaysInput, ApplicationUncheckedCreateWithoutEssaysInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutEssaysInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutEssaysInput, ApplicationUncheckedUpdateWithoutEssaysInput>
  }

  export type ApplicationUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ProgramUpsertWithoutEssaysInput = {
    update: XOR<ProgramUpdateWithoutEssaysInput, ProgramUncheckedUpdateWithoutEssaysInput>
    create: XOR<ProgramCreateWithoutEssaysInput, ProgramUncheckedCreateWithoutEssaysInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutEssaysInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutEssaysInput, ProgramUncheckedUpdateWithoutEssaysInput>
  }

  export type ProgramUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type EssayPromptUpsertWithoutEssaysInput = {
    update: XOR<EssayPromptUpdateWithoutEssaysInput, EssayPromptUncheckedUpdateWithoutEssaysInput>
    create: XOR<EssayPromptCreateWithoutEssaysInput, EssayPromptUncheckedCreateWithoutEssaysInput>
    where?: EssayPromptWhereInput
  }

  export type EssayPromptUpdateToOneWithWhereWithoutEssaysInput = {
    where?: EssayPromptWhereInput
    data: XOR<EssayPromptUpdateWithoutEssaysInput, EssayPromptUncheckedUpdateWithoutEssaysInput>
  }

  export type EssayPromptUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneWithoutEssayPromptsNestedInput
    program?: ProgramUpdateOneWithoutEssayPromptsNestedInput
    intake?: IntakeUpdateOneWithoutEssayPromptsNestedInput
    submissions?: EssaySubmissionUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateWithoutEssaysInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissions?: EssaySubmissionUncheckedUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayVersionUpsertWithWhereUniqueWithoutEssayInput = {
    where: EssayVersionWhereUniqueInput
    update: XOR<EssayVersionUpdateWithoutEssayInput, EssayVersionUncheckedUpdateWithoutEssayInput>
    create: XOR<EssayVersionCreateWithoutEssayInput, EssayVersionUncheckedCreateWithoutEssayInput>
  }

  export type EssayVersionUpdateWithWhereUniqueWithoutEssayInput = {
    where: EssayVersionWhereUniqueInput
    data: XOR<EssayVersionUpdateWithoutEssayInput, EssayVersionUncheckedUpdateWithoutEssayInput>
  }

  export type EssayVersionUpdateManyWithWhereWithoutEssayInput = {
    where: EssayVersionScalarWhereInput
    data: XOR<EssayVersionUpdateManyMutationInput, EssayVersionUncheckedUpdateManyWithoutEssayInput>
  }

  export type EssayVersionScalarWhereInput = {
    AND?: EssayVersionScalarWhereInput | EssayVersionScalarWhereInput[]
    OR?: EssayVersionScalarWhereInput[]
    NOT?: EssayVersionScalarWhereInput | EssayVersionScalarWhereInput[]
    id?: StringFilter<"EssayVersion"> | string
    essayId?: StringFilter<"EssayVersion"> | string
    content?: StringFilter<"EssayVersion"> | string
    wordCount?: IntFilter<"EssayVersion"> | number
    label?: StringFilter<"EssayVersion"> | string
    timestamp?: DateTimeFilter<"EssayVersion"> | Date | string
    isAutoSave?: BoolFilter<"EssayVersion"> | boolean
    changesSinceLastVersion?: StringNullableFilter<"EssayVersion"> | string | null
  }

  export type AIResultUpsertWithWhereUniqueWithoutEssayInput = {
    where: AIResultWhereUniqueInput
    update: XOR<AIResultUpdateWithoutEssayInput, AIResultUncheckedUpdateWithoutEssayInput>
    create: XOR<AIResultCreateWithoutEssayInput, AIResultUncheckedCreateWithoutEssayInput>
  }

  export type AIResultUpdateWithWhereUniqueWithoutEssayInput = {
    where: AIResultWhereUniqueInput
    data: XOR<AIResultUpdateWithoutEssayInput, AIResultUncheckedUpdateWithoutEssayInput>
  }

  export type AIResultUpdateManyWithWhereWithoutEssayInput = {
    where: AIResultScalarWhereInput
    data: XOR<AIResultUpdateManyMutationInput, AIResultUncheckedUpdateManyWithoutEssayInput>
  }

  export type AIResultScalarWhereInput = {
    AND?: AIResultScalarWhereInput | AIResultScalarWhereInput[]
    OR?: AIResultScalarWhereInput[]
    NOT?: AIResultScalarWhereInput | AIResultScalarWhereInput[]
    id?: StringFilter<"AIResult"> | string
    essayId?: StringFilter<"AIResult"> | string
    essayVersionId?: StringNullableFilter<"AIResult"> | string | null
    analysisType?: StringFilter<"AIResult"> | string
    overallScore?: FloatNullableFilter<"AIResult"> | number | null
    suggestions?: StringFilter<"AIResult"> | string
    strengths?: StringNullableFilter<"AIResult"> | string | null
    improvements?: StringNullableFilter<"AIResult"> | string | null
    warnings?: StringNullableFilter<"AIResult"> | string | null
    aiProvider?: StringFilter<"AIResult"> | string
    modelUsed?: StringNullableFilter<"AIResult"> | string | null
    promptVersion?: StringNullableFilter<"AIResult"> | string | null
    status?: StringFilter<"AIResult"> | string
    processingTime?: IntNullableFilter<"AIResult"> | number | null
    errorMessage?: StringNullableFilter<"AIResult"> | string | null
    readabilityScore?: FloatNullableFilter<"AIResult"> | number | null
    sentenceCount?: IntNullableFilter<"AIResult"> | number | null
    paragraphCount?: IntNullableFilter<"AIResult"> | number | null
    avgSentenceLength?: FloatNullableFilter<"AIResult"> | number | null
    complexWordCount?: IntNullableFilter<"AIResult"> | number | null
    passiveVoiceCount?: IntNullableFilter<"AIResult"> | number | null
    structureScore?: FloatNullableFilter<"AIResult"> | number | null
    contentRelevance?: FloatNullableFilter<"AIResult"> | number | null
    narrativeFlow?: FloatNullableFilter<"AIResult"> | number | null
    leadershipEmphasis?: FloatNullableFilter<"AIResult"> | number | null
    specificityScore?: FloatNullableFilter<"AIResult"> | number | null
    grammarIssues?: IntNullableFilter<"AIResult"> | number | null
    createdAt?: DateTimeFilter<"AIResult"> | Date | string
    updatedAt?: DateTimeFilter<"AIResult"> | Date | string
  }

  export type EssayCompletionLogUpsertWithWhereUniqueWithoutEssayInput = {
    where: EssayCompletionLogWhereUniqueInput
    update: XOR<EssayCompletionLogUpdateWithoutEssayInput, EssayCompletionLogUncheckedUpdateWithoutEssayInput>
    create: XOR<EssayCompletionLogCreateWithoutEssayInput, EssayCompletionLogUncheckedCreateWithoutEssayInput>
  }

  export type EssayCompletionLogUpdateWithWhereUniqueWithoutEssayInput = {
    where: EssayCompletionLogWhereUniqueInput
    data: XOR<EssayCompletionLogUpdateWithoutEssayInput, EssayCompletionLogUncheckedUpdateWithoutEssayInput>
  }

  export type EssayCompletionLogUpdateManyWithWhereWithoutEssayInput = {
    where: EssayCompletionLogScalarWhereInput
    data: XOR<EssayCompletionLogUpdateManyMutationInput, EssayCompletionLogUncheckedUpdateManyWithoutEssayInput>
  }

  export type EssayCreateWithoutVersionsInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    user?: UserCreateNestedOneWithoutEssaysInput
    application?: ApplicationCreateNestedOneWithoutEssaysInput
    program: ProgramCreateNestedOneWithoutEssaysInput
    essayPrompt: EssayPromptCreateNestedOneWithoutEssaysInput
    aiResults?: AIResultCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateWithoutVersionsInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayCreateOrConnectWithoutVersionsInput = {
    where: EssayWhereUniqueInput
    create: XOR<EssayCreateWithoutVersionsInput, EssayUncheckedCreateWithoutVersionsInput>
  }

  export type AIResultCreateWithoutEssayVersionInput = {
    id?: string
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    essay: EssayCreateNestedOneWithoutAiResultsInput
  }

  export type AIResultUncheckedCreateWithoutEssayVersionInput = {
    id?: string
    essayId: string
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIResultCreateOrConnectWithoutEssayVersionInput = {
    where: AIResultWhereUniqueInput
    create: XOR<AIResultCreateWithoutEssayVersionInput, AIResultUncheckedCreateWithoutEssayVersionInput>
  }

  export type AIResultCreateManyEssayVersionInputEnvelope = {
    data: AIResultCreateManyEssayVersionInput | AIResultCreateManyEssayVersionInput[]
    skipDuplicates?: boolean
  }

  export type EssayUpsertWithoutVersionsInput = {
    update: XOR<EssayUpdateWithoutVersionsInput, EssayUncheckedUpdateWithoutVersionsInput>
    create: XOR<EssayCreateWithoutVersionsInput, EssayUncheckedCreateWithoutVersionsInput>
    where?: EssayWhereInput
  }

  export type EssayUpdateToOneWithWhereWithoutVersionsInput = {
    where?: EssayWhereInput
    data: XOR<EssayUpdateWithoutVersionsInput, EssayUncheckedUpdateWithoutVersionsInput>
  }

  export type EssayUpdateWithoutVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneWithoutEssaysNestedInput
    application?: ApplicationUpdateOneWithoutEssaysNestedInput
    program?: ProgramUpdateOneRequiredWithoutEssaysNestedInput
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutEssaysNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateWithoutVersionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type AIResultUpsertWithWhereUniqueWithoutEssayVersionInput = {
    where: AIResultWhereUniqueInput
    update: XOR<AIResultUpdateWithoutEssayVersionInput, AIResultUncheckedUpdateWithoutEssayVersionInput>
    create: XOR<AIResultCreateWithoutEssayVersionInput, AIResultUncheckedCreateWithoutEssayVersionInput>
  }

  export type AIResultUpdateWithWhereUniqueWithoutEssayVersionInput = {
    where: AIResultWhereUniqueInput
    data: XOR<AIResultUpdateWithoutEssayVersionInput, AIResultUncheckedUpdateWithoutEssayVersionInput>
  }

  export type AIResultUpdateManyWithWhereWithoutEssayVersionInput = {
    where: AIResultScalarWhereInput
    data: XOR<AIResultUpdateManyMutationInput, AIResultUncheckedUpdateManyWithoutEssayVersionInput>
  }

  export type EssayCreateWithoutAiResultsInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    user?: UserCreateNestedOneWithoutEssaysInput
    application?: ApplicationCreateNestedOneWithoutEssaysInput
    program: ProgramCreateNestedOneWithoutEssaysInput
    essayPrompt: EssayPromptCreateNestedOneWithoutEssaysInput
    versions?: EssayVersionCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateWithoutAiResultsInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    versions?: EssayVersionUncheckedCreateNestedManyWithoutEssayInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayCreateOrConnectWithoutAiResultsInput = {
    where: EssayWhereUniqueInput
    create: XOR<EssayCreateWithoutAiResultsInput, EssayUncheckedCreateWithoutAiResultsInput>
  }

  export type EssayVersionCreateWithoutAiResultsInput = {
    id?: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
    essay: EssayCreateNestedOneWithoutVersionsInput
  }

  export type EssayVersionUncheckedCreateWithoutAiResultsInput = {
    id?: string
    essayId: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
  }

  export type EssayVersionCreateOrConnectWithoutAiResultsInput = {
    where: EssayVersionWhereUniqueInput
    create: XOR<EssayVersionCreateWithoutAiResultsInput, EssayVersionUncheckedCreateWithoutAiResultsInput>
  }

  export type EssayUpsertWithoutAiResultsInput = {
    update: XOR<EssayUpdateWithoutAiResultsInput, EssayUncheckedUpdateWithoutAiResultsInput>
    create: XOR<EssayCreateWithoutAiResultsInput, EssayUncheckedCreateWithoutAiResultsInput>
    where?: EssayWhereInput
  }

  export type EssayUpdateToOneWithWhereWithoutAiResultsInput = {
    where?: EssayWhereInput
    data: XOR<EssayUpdateWithoutAiResultsInput, EssayUncheckedUpdateWithoutAiResultsInput>
  }

  export type EssayUpdateWithoutAiResultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneWithoutEssaysNestedInput
    application?: ApplicationUpdateOneWithoutEssaysNestedInput
    program?: ProgramUpdateOneRequiredWithoutEssaysNestedInput
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutEssaysNestedInput
    versions?: EssayVersionUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateWithoutAiResultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    versions?: EssayVersionUncheckedUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type EssayVersionUpsertWithoutAiResultsInput = {
    update: XOR<EssayVersionUpdateWithoutAiResultsInput, EssayVersionUncheckedUpdateWithoutAiResultsInput>
    create: XOR<EssayVersionCreateWithoutAiResultsInput, EssayVersionUncheckedCreateWithoutAiResultsInput>
    where?: EssayVersionWhereInput
  }

  export type EssayVersionUpdateToOneWithWhereWithoutAiResultsInput = {
    where?: EssayVersionWhereInput
    data: XOR<EssayVersionUpdateWithoutAiResultsInput, EssayVersionUncheckedUpdateWithoutAiResultsInput>
  }

  export type EssayVersionUpdateWithoutAiResultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
    essay?: EssayUpdateOneRequiredWithoutVersionsNestedInput
  }

  export type EssayVersionUncheckedUpdateWithoutAiResultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EssayCreateWithoutEssayCompletionLogInput = {
    id?: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    user?: UserCreateNestedOneWithoutEssaysInput
    application?: ApplicationCreateNestedOneWithoutEssaysInput
    program: ProgramCreateNestedOneWithoutEssaysInput
    essayPrompt: EssayPromptCreateNestedOneWithoutEssaysInput
    versions?: EssayVersionCreateNestedManyWithoutEssayInput
    aiResults?: AIResultCreateNestedManyWithoutEssayInput
  }

  export type EssayUncheckedCreateWithoutEssayCompletionLogInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
    versions?: EssayVersionUncheckedCreateNestedManyWithoutEssayInput
    aiResults?: AIResultUncheckedCreateNestedManyWithoutEssayInput
  }

  export type EssayCreateOrConnectWithoutEssayCompletionLogInput = {
    where: EssayWhereUniqueInput
    create: XOR<EssayCreateWithoutEssayCompletionLogInput, EssayUncheckedCreateWithoutEssayCompletionLogInput>
  }

  export type UserCreateWithoutEssayCompletionLogInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEssayCompletionLogInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEssayCompletionLogInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEssayCompletionLogInput, UserUncheckedCreateWithoutEssayCompletionLogInput>
  }

  export type EssayUpsertWithoutEssayCompletionLogInput = {
    update: XOR<EssayUpdateWithoutEssayCompletionLogInput, EssayUncheckedUpdateWithoutEssayCompletionLogInput>
    create: XOR<EssayCreateWithoutEssayCompletionLogInput, EssayUncheckedCreateWithoutEssayCompletionLogInput>
    where?: EssayWhereInput
  }

  export type EssayUpdateToOneWithWhereWithoutEssayCompletionLogInput = {
    where?: EssayWhereInput
    data: XOR<EssayUpdateWithoutEssayCompletionLogInput, EssayUncheckedUpdateWithoutEssayCompletionLogInput>
  }

  export type EssayUpdateWithoutEssayCompletionLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneWithoutEssaysNestedInput
    application?: ApplicationUpdateOneWithoutEssaysNestedInput
    program?: ProgramUpdateOneRequiredWithoutEssaysNestedInput
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutEssaysNestedInput
    versions?: EssayVersionUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateWithoutEssayCompletionLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    versions?: EssayVersionUncheckedUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type UserUpsertWithoutEssayCompletionLogInput = {
    update: XOR<UserUpdateWithoutEssayCompletionLogInput, UserUncheckedUpdateWithoutEssayCompletionLogInput>
    create: XOR<UserCreateWithoutEssayCompletionLogInput, UserUncheckedCreateWithoutEssayCompletionLogInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEssayCompletionLogInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEssayCompletionLogInput, UserUncheckedUpdateWithoutEssayCompletionLogInput>
  }

  export type UserUpdateWithoutEssayCompletionLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEssayCompletionLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutCalendarEventsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    eventReminders?: EventReminderCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    eventReminders?: EventReminderUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCalendarEventsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCalendarEventsInput, UserUncheckedCreateWithoutCalendarEventsInput>
  }

  export type UniversityCreateWithoutCalendarEventsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageCreateNestedManyWithoutUniversityInput
    programs?: ProgramCreateNestedManyWithoutUniversityInput
    departments?: DepartmentCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionCreateNestedManyWithoutUniversityInput
    applications?: ApplicationCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserCreateNestedManyWithoutSavedUniversitiesInput
  }

  export type UniversityUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    universityName: string
    slug: string
    city: string
    state?: string | null
    country: string
    fullAddress?: string | null
    shortDescription?: string | null
    overview?: string | null
    history?: string | null
    missionStatement?: string | null
    visionStatement?: string | null
    accreditationDetails?: string | null
    whyChooseHighlights?: UniversityCreatewhyChooseHighlightsInput | string[]
    careerOutcomes?: string | null
    ftGlobalRanking?: number | null
    ftRegionalRanking?: number | null
    ftRankingYear?: number | null
    usNewsRanking?: number | null
    qsRanking?: number | null
    timesRanking?: number | null
    acceptanceRate?: number | null
    gmatAverageScore?: number | null
    gmatScoreMin?: number | null
    gmatScoreMax?: number | null
    minimumGpa?: number | null
    languageTestRequirements?: string | null
    tuitionFees?: number | null
    additionalFees?: number | null
    totalCost?: number | null
    currency?: string
    scholarshipInfo?: string | null
    financialAidDetails?: string | null
    admissionsOfficeContact?: string | null
    internationalOfficeContact?: string | null
    generalInquiriesContact?: string | null
    websiteUrl?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    canonicalUrl?: string | null
    isActive?: boolean
    isFeatured?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    averageDeadlines?: string | null
    studentsPerYear?: number | null
    brochureUrl?: string | null
    additionalDocumentUrls?: UniversityCreateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: number | null
    intakes?: string | null
    images?: UniversityImageUncheckedCreateNestedManyWithoutUniversityInput
    programs?: ProgramUncheckedCreateNestedManyWithoutUniversityInput
    departments?: DepartmentUncheckedCreateNestedManyWithoutUniversityInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutUniversityInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUniversityInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutUniversityInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutUniversityInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutUniversityInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutUniversityInput
    savedByUsers?: UserUncheckedCreateNestedManyWithoutSavedUniversitiesInput
  }

  export type UniversityCreateOrConnectWithoutCalendarEventsInput = {
    where: UniversityWhereUniqueInput
    create: XOR<UniversityCreateWithoutCalendarEventsInput, UniversityUncheckedCreateWithoutCalendarEventsInput>
  }

  export type ProgramCreateWithoutCalendarEventsInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutProgramsInput
    departments?: ProgramDepartmentCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkCreateNestedManyWithoutProgramInput
    admissions?: AdmissionCreateNestedManyWithoutProgramInput
    applications?: ApplicationCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutProgramInput
    essays?: EssayCreateNestedManyWithoutProgramInput
  }

  export type ProgramUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    universityId: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    departments?: ProgramDepartmentUncheckedCreateNestedManyWithoutProgramInput
    syllabus?: SyllabusUncheckedCreateNestedOneWithoutProgramInput
    rankings?: ProgramRankingUncheckedCreateNestedManyWithoutProgramInput
    externalLinks?: ExternalLinkUncheckedCreateNestedManyWithoutProgramInput
    admissions?: AdmissionUncheckedCreateNestedManyWithoutProgramInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutProgramInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedCreateNestedManyWithoutProgramInput
    scholarships?: ScholarshipUncheckedCreateNestedManyWithoutProgramInput
    feeStructures?: FeeStructureUncheckedCreateNestedManyWithoutProgramInput
    financialAids?: FinancialAidUncheckedCreateNestedManyWithoutProgramInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutProgramInput
    essays?: EssayUncheckedCreateNestedManyWithoutProgramInput
  }

  export type ProgramCreateOrConnectWithoutCalendarEventsInput = {
    where: ProgramWhereUniqueInput
    create: XOR<ProgramCreateWithoutCalendarEventsInput, ProgramUncheckedCreateWithoutCalendarEventsInput>
  }

  export type ApplicationCreateWithoutCalendarEventsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutApplicationsInput
    university: UniversityCreateNestedOneWithoutApplicationsInput
    program: ProgramCreateNestedOneWithoutApplicationsInput
    intake?: IntakeCreateNestedOneWithoutApplicationsInput
    user?: UserCreateNestedOneWithoutApplicationsInput
    documents?: ApplicationDocumentCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressCreateNestedManyWithoutApplicationInput
    interviews?: InterviewCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutApplicationInput
    essays?: EssayCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ApplicationDocumentUncheckedCreateNestedManyWithoutApplicationInput
    applicationProgress?: ApplicationProgressUncheckedCreateNestedManyWithoutApplicationInput
    interviews?: InterviewUncheckedCreateNestedManyWithoutApplicationInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutApplicationInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutApplicationInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutApplicationInput
    essays?: EssayUncheckedCreateNestedManyWithoutApplicationInput
  }

  export type ApplicationCreateOrConnectWithoutCalendarEventsInput = {
    where: ApplicationWhereUniqueInput
    create: XOR<ApplicationCreateWithoutCalendarEventsInput, ApplicationUncheckedCreateWithoutCalendarEventsInput>
  }

  export type AdmissionCreateWithoutCalendarEventsInput = {
    id?: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutAdmissionsInput
    program: ProgramCreateNestedOneWithoutAdmissionsInput
    intakes?: IntakeCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    universityId: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    intakes?: IntakeUncheckedCreateNestedManyWithoutAdmissionInput
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutAdmissionInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutAdmissionInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutAdmissionInput
  }

  export type AdmissionCreateOrConnectWithoutCalendarEventsInput = {
    where: AdmissionWhereUniqueInput
    create: XOR<AdmissionCreateWithoutCalendarEventsInput, AdmissionUncheckedCreateWithoutCalendarEventsInput>
  }

  export type IntakeCreateWithoutCalendarEventsInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutIntakesInput
    deadlines?: AdmissionDeadlineCreateNestedManyWithoutIntakeInput
    applications?: ApplicationCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptCreateNestedManyWithoutIntakeInput
  }

  export type IntakeUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    admissionId: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deadlines?: AdmissionDeadlineUncheckedCreateNestedManyWithoutIntakeInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutIntakeInput
    essayPrompts?: EssayPromptUncheckedCreateNestedManyWithoutIntakeInput
  }

  export type IntakeCreateOrConnectWithoutCalendarEventsInput = {
    where: IntakeWhereUniqueInput
    create: XOR<IntakeCreateWithoutCalendarEventsInput, IntakeUncheckedCreateWithoutCalendarEventsInput>
  }

  export type AdmissionDeadlineCreateWithoutCalendarEventsInput = {
    id?: string
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    admission: AdmissionCreateNestedOneWithoutDeadlinesInput
    intake?: IntakeCreateNestedOneWithoutDeadlinesInput
  }

  export type AdmissionDeadlineUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    admissionId: string
    intakeId?: string | null
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdmissionDeadlineCreateOrConnectWithoutCalendarEventsInput = {
    where: AdmissionDeadlineWhereUniqueInput
    create: XOR<AdmissionDeadlineCreateWithoutCalendarEventsInput, AdmissionDeadlineUncheckedCreateWithoutCalendarEventsInput>
  }

  export type InterviewCreateWithoutCalendarEventsInput = {
    id?: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    application: ApplicationCreateNestedOneWithoutInterviewsInput
  }

  export type InterviewUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    applicationId: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InterviewCreateOrConnectWithoutCalendarEventsInput = {
    where: InterviewWhereUniqueInput
    create: XOR<InterviewCreateWithoutCalendarEventsInput, InterviewUncheckedCreateWithoutCalendarEventsInput>
  }

  export type ScholarshipCreateWithoutCalendarEventsInput = {
    id?: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    university: UniversityCreateNestedOneWithoutScholarshipsInput
    program?: ProgramCreateNestedOneWithoutScholarshipsInput
    documents?: ScholarshipDocumentCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipUncheckedCreateWithoutCalendarEventsInput = {
    id?: string
    universityId: string
    programId?: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    documents?: ScholarshipDocumentUncheckedCreateNestedManyWithoutScholarshipInput
    applications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutScholarshipInput
  }

  export type ScholarshipCreateOrConnectWithoutCalendarEventsInput = {
    where: ScholarshipWhereUniqueInput
    create: XOR<ScholarshipCreateWithoutCalendarEventsInput, ScholarshipUncheckedCreateWithoutCalendarEventsInput>
  }

  export type EventReminderCreateWithoutEventInput = {
    id?: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutEventRemindersInput
  }

  export type EventReminderUncheckedCreateWithoutEventInput = {
    id?: string
    userId: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EventReminderCreateOrConnectWithoutEventInput = {
    where: EventReminderWhereUniqueInput
    create: XOR<EventReminderCreateWithoutEventInput, EventReminderUncheckedCreateWithoutEventInput>
  }

  export type EventReminderCreateManyEventInputEnvelope = {
    data: EventReminderCreateManyEventInput | EventReminderCreateManyEventInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCalendarEventsInput = {
    update: XOR<UserUpdateWithoutCalendarEventsInput, UserUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<UserCreateWithoutCalendarEventsInput, UserUncheckedCreateWithoutCalendarEventsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCalendarEventsInput, UserUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type UserUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UniversityUpsertWithoutCalendarEventsInput = {
    update: XOR<UniversityUpdateWithoutCalendarEventsInput, UniversityUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<UniversityCreateWithoutCalendarEventsInput, UniversityUncheckedCreateWithoutCalendarEventsInput>
    where?: UniversityWhereInput
  }

  export type UniversityUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: UniversityWhereInput
    data: XOR<UniversityUpdateWithoutCalendarEventsInput, UniversityUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type UniversityUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUpdateManyWithoutSavedUniversitiesNestedInput
  }

  export type UniversityUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    savedByUsers?: UserUncheckedUpdateManyWithoutSavedUniversitiesNestedInput
  }

  export type ProgramUpsertWithoutCalendarEventsInput = {
    update: XOR<ProgramUpdateWithoutCalendarEventsInput, ProgramUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<ProgramCreateWithoutCalendarEventsInput, ProgramUncheckedCreateWithoutCalendarEventsInput>
    where?: ProgramWhereInput
  }

  export type ProgramUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: ProgramWhereInput
    data: XOR<ProgramUpdateWithoutCalendarEventsInput, ProgramUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type ProgramUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutProgramsNestedInput
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type ApplicationUpsertWithoutCalendarEventsInput = {
    update: XOR<ApplicationUpdateWithoutCalendarEventsInput, ApplicationUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<ApplicationCreateWithoutCalendarEventsInput, ApplicationUncheckedCreateWithoutCalendarEventsInput>
    where?: ApplicationWhereInput
  }

  export type ApplicationUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: ApplicationWhereInput
    data: XOR<ApplicationUpdateWithoutCalendarEventsInput, ApplicationUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type ApplicationUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type AdmissionUpsertWithoutCalendarEventsInput = {
    update: XOR<AdmissionUpdateWithoutCalendarEventsInput, AdmissionUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<AdmissionCreateWithoutCalendarEventsInput, AdmissionUncheckedCreateWithoutCalendarEventsInput>
    where?: AdmissionWhereInput
  }

  export type AdmissionUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: AdmissionWhereInput
    data: XOR<AdmissionUpdateWithoutCalendarEventsInput, AdmissionUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type AdmissionUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutAdmissionsNestedInput
    program?: ProgramUpdateOneRequiredWithoutAdmissionsNestedInput
    intakes?: IntakeUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intakes?: IntakeUncheckedUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type IntakeUpsertWithoutCalendarEventsInput = {
    update: XOR<IntakeUpdateWithoutCalendarEventsInput, IntakeUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<IntakeCreateWithoutCalendarEventsInput, IntakeUncheckedCreateWithoutCalendarEventsInput>
    where?: IntakeWhereInput
  }

  export type IntakeUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: IntakeWhereInput
    data: XOR<IntakeUpdateWithoutCalendarEventsInput, IntakeUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type IntakeUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutIntakesNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutIntakeNestedInput
  }

  export type AdmissionDeadlineUpsertWithoutCalendarEventsInput = {
    update: XOR<AdmissionDeadlineUpdateWithoutCalendarEventsInput, AdmissionDeadlineUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<AdmissionDeadlineCreateWithoutCalendarEventsInput, AdmissionDeadlineUncheckedCreateWithoutCalendarEventsInput>
    where?: AdmissionDeadlineWhereInput
  }

  export type AdmissionDeadlineUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: AdmissionDeadlineWhereInput
    data: XOR<AdmissionDeadlineUpdateWithoutCalendarEventsInput, AdmissionDeadlineUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type AdmissionDeadlineUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutDeadlinesNestedInput
    intake?: IntakeUpdateOneWithoutDeadlinesNestedInput
  }

  export type AdmissionDeadlineUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InterviewUpsertWithoutCalendarEventsInput = {
    update: XOR<InterviewUpdateWithoutCalendarEventsInput, InterviewUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<InterviewCreateWithoutCalendarEventsInput, InterviewUncheckedCreateWithoutCalendarEventsInput>
    where?: InterviewWhereInput
  }

  export type InterviewUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: InterviewWhereInput
    data: XOR<InterviewUpdateWithoutCalendarEventsInput, InterviewUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type InterviewUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    application?: ApplicationUpdateOneRequiredWithoutInterviewsNestedInput
  }

  export type InterviewUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipUpsertWithoutCalendarEventsInput = {
    update: XOR<ScholarshipUpdateWithoutCalendarEventsInput, ScholarshipUncheckedUpdateWithoutCalendarEventsInput>
    create: XOR<ScholarshipCreateWithoutCalendarEventsInput, ScholarshipUncheckedCreateWithoutCalendarEventsInput>
    where?: ScholarshipWhereInput
  }

  export type ScholarshipUpdateToOneWithWhereWithoutCalendarEventsInput = {
    where?: ScholarshipWhereInput
    data: XOR<ScholarshipUpdateWithoutCalendarEventsInput, ScholarshipUncheckedUpdateWithoutCalendarEventsInput>
  }

  export type ScholarshipUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutScholarshipsNestedInput
    program?: ProgramUpdateOneWithoutScholarshipsNestedInput
    documents?: ScholarshipDocumentUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateWithoutCalendarEventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipNestedInput
  }

  export type EventReminderUpsertWithWhereUniqueWithoutEventInput = {
    where: EventReminderWhereUniqueInput
    update: XOR<EventReminderUpdateWithoutEventInput, EventReminderUncheckedUpdateWithoutEventInput>
    create: XOR<EventReminderCreateWithoutEventInput, EventReminderUncheckedCreateWithoutEventInput>
  }

  export type EventReminderUpdateWithWhereUniqueWithoutEventInput = {
    where: EventReminderWhereUniqueInput
    data: XOR<EventReminderUpdateWithoutEventInput, EventReminderUncheckedUpdateWithoutEventInput>
  }

  export type EventReminderUpdateManyWithWhereWithoutEventInput = {
    where: EventReminderScalarWhereInput
    data: XOR<EventReminderUpdateManyMutationInput, EventReminderUncheckedUpdateManyWithoutEventInput>
  }

  export type CalendarEventCreateWithoutRemindersInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
    user?: UserCreateNestedOneWithoutCalendarEventsInput
    university?: UniversityCreateNestedOneWithoutCalendarEventsInput
    program?: ProgramCreateNestedOneWithoutCalendarEventsInput
    application?: ApplicationCreateNestedOneWithoutCalendarEventsInput
    admission?: AdmissionCreateNestedOneWithoutCalendarEventsInput
    intake?: IntakeCreateNestedOneWithoutCalendarEventsInput
    admissionDeadline?: AdmissionDeadlineCreateNestedOneWithoutCalendarEventsInput
    interview?: InterviewCreateNestedOneWithoutCalendarEventsInput
    scholarship?: ScholarshipCreateNestedOneWithoutCalendarEventsInput
  }

  export type CalendarEventUncheckedCreateWithoutRemindersInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type CalendarEventCreateOrConnectWithoutRemindersInput = {
    where: CalendarEventWhereUniqueInput
    create: XOR<CalendarEventCreateWithoutRemindersInput, CalendarEventUncheckedCreateWithoutRemindersInput>
  }

  export type UserCreateWithoutEventRemindersInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileCreateNestedOneWithoutUserInput
    subscription?: SubscriptionCreateNestedOneWithoutUserInput
    applications?: ApplicationCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventCreateNestedManyWithoutUserInput
    essays?: EssayCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutEventRemindersInput = {
    id?: string
    email: string
    name?: string | null
    image?: string | null
    password?: string | null
    provider?: string | null
    emailVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    profile?: UserProfileUncheckedCreateNestedOneWithoutUserInput
    subscription?: SubscriptionUncheckedCreateNestedOneWithoutUserInput
    applications?: ApplicationUncheckedCreateNestedManyWithoutUserInput
    scholarshipApplications?: ScholarshipApplicationUncheckedCreateNestedManyWithoutUserInput
    financialAidApplications?: FinancialAidApplicationUncheckedCreateNestedManyWithoutUserInput
    essaySubmissions?: EssaySubmissionUncheckedCreateNestedManyWithoutUserInput
    savedUniversities?: UniversityUncheckedCreateNestedManyWithoutSavedByUsersInput
    calendarEvents?: CalendarEventUncheckedCreateNestedManyWithoutUserInput
    essays?: EssayUncheckedCreateNestedManyWithoutUserInput
    EssayCompletionLog?: EssayCompletionLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEventRemindersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEventRemindersInput, UserUncheckedCreateWithoutEventRemindersInput>
  }

  export type CalendarEventUpsertWithoutRemindersInput = {
    update: XOR<CalendarEventUpdateWithoutRemindersInput, CalendarEventUncheckedUpdateWithoutRemindersInput>
    create: XOR<CalendarEventCreateWithoutRemindersInput, CalendarEventUncheckedCreateWithoutRemindersInput>
    where?: CalendarEventWhereInput
  }

  export type CalendarEventUpdateToOneWithWhereWithoutRemindersInput = {
    where?: CalendarEventWhereInput
    data: XOR<CalendarEventUpdateWithoutRemindersInput, CalendarEventUncheckedUpdateWithoutRemindersInput>
  }

  export type CalendarEventUpdateWithoutRemindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutRemindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpsertWithoutEventRemindersInput = {
    update: XOR<UserUpdateWithoutEventRemindersInput, UserUncheckedUpdateWithoutEventRemindersInput>
    create: XOR<UserCreateWithoutEventRemindersInput, UserUncheckedCreateWithoutEventRemindersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEventRemindersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEventRemindersInput, UserUncheckedUpdateWithoutEventRemindersInput>
  }

  export type UserUpdateWithoutEventRemindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEventRemindersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    savedUniversities?: UniversityUncheckedUpdateManyWithoutSavedByUsersNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ApplicationCreateManyUserInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    intakeId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationCreateManyUserInput = {
    id?: string
    scholarshipId: string
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationCreateManyUserInput = {
    id?: string
    financialAidId: string
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssaySubmissionCreateManyUserInput = {
    id?: string
    essayPromptId: string
    applicationId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalendarEventCreateManyUserInput = {
    id?: string
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type EventReminderCreateManyUserInput = {
    id?: string
    eventId: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssayCreateManyUserInput = {
    id?: string
    applicationId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
  }

  export type EssayCompletionLogCreateManyUserInput = {
    id?: string
    essayId: string
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
  }

  export type ApplicationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scholarship?: ScholarshipUpdateOneRequiredWithoutApplicationsNestedInput
    application?: ApplicationUpdateOneWithoutScholarshipApplicationsNestedInput
  }

  export type ScholarshipApplicationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    financialAid?: FinancialAidUpdateOneRequiredWithoutApplicationsNestedInput
    application?: ApplicationUpdateOneWithoutFinancialAidApplicationsNestedInput
  }

  export type FinancialAidApplicationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    financialAidId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    financialAidId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutSubmissionsNestedInput
    application?: ApplicationUpdateOneWithoutEssaySubmissionsNestedInput
  }

  export type EssaySubmissionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityUpdateWithoutSavedByUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUpdateManyWithoutUniversityNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateWithoutSavedByUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
    images?: UniversityImageUncheckedUpdateManyWithoutUniversityNestedInput
    programs?: ProgramUncheckedUpdateManyWithoutUniversityNestedInput
    departments?: DepartmentUncheckedUpdateManyWithoutUniversityNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutUniversityNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUniversityNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutUniversityNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutUniversityNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutUniversityNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutUniversityNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUniversityNestedInput
  }

  export type UniversityUncheckedUpdateManyWithoutSavedByUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityName?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: StringFieldUpdateOperationsInput | string
    fullAddress?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    overview?: NullableStringFieldUpdateOperationsInput | string | null
    history?: NullableStringFieldUpdateOperationsInput | string | null
    missionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    visionStatement?: NullableStringFieldUpdateOperationsInput | string | null
    accreditationDetails?: NullableStringFieldUpdateOperationsInput | string | null
    whyChooseHighlights?: UniversityUpdatewhyChooseHighlightsInput | string[]
    careerOutcomes?: NullableStringFieldUpdateOperationsInput | string | null
    ftGlobalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRegionalRanking?: NullableIntFieldUpdateOperationsInput | number | null
    ftRankingYear?: NullableIntFieldUpdateOperationsInput | number | null
    usNewsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    qsRanking?: NullableIntFieldUpdateOperationsInput | number | null
    timesRanking?: NullableIntFieldUpdateOperationsInput | number | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMin?: NullableIntFieldUpdateOperationsInput | number | null
    gmatScoreMax?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    languageTestRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    tuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    additionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    scholarshipInfo?: NullableStringFieldUpdateOperationsInput | string | null
    financialAidDetails?: NullableStringFieldUpdateOperationsInput | string | null
    admissionsOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    internationalOfficeContact?: NullableStringFieldUpdateOperationsInput | string | null
    generalInquiriesContact?: NullableStringFieldUpdateOperationsInput | string | null
    websiteUrl?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    canonicalUrl?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    averageDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    studentsPerYear?: NullableIntFieldUpdateOperationsInput | number | null
    brochureUrl?: NullableStringFieldUpdateOperationsInput | string | null
    additionalDocumentUrls?: UniversityUpdateadditionalDocumentUrlsInput | string[]
    averageProgramLengthMonths?: NullableIntFieldUpdateOperationsInput | number | null
    intakes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CalendarEventUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventReminderUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    event?: CalendarEventUpdateOneRequiredWithoutRemindersNestedInput
  }

  export type EventReminderUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventReminderUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    application?: ApplicationUpdateOneWithoutEssaysNestedInput
    program?: ProgramUpdateOneRequiredWithoutEssaysNestedInput
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutEssaysNestedInput
    versions?: EssayVersionUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    versions?: EssayVersionUncheckedUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EssayCompletionLogUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essay?: EssayUpdateOneRequiredWithoutEssayCompletionLogNestedInput
  }

  export type EssayCompletionLogUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayCompletionLogUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityImageCreateManyUniversityInput = {
    id?: string
    imageUrl: string
    imageType?: string | null
    imageTitle?: string | null
    imageAltText: string
    imageCaption?: string | null
    fileSize?: number | null
    width?: number | null
    height?: number | null
    isPrimary?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type ProgramCreateManyUniversityInput = {
    id?: string
    programName: string
    programSlug: string
    degreeType?: string | null
    programLength?: number | null
    specializations?: string | null
    programDescription?: string | null
    curriculumOverview?: string | null
    admissionRequirements?: string | null
    averageEntranceScore?: number | null
    programTuitionFees?: number | null
    programAdditionalFees?: number | null
    programMetaTitle?: string | null
    programMetaDescription?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DepartmentCreateManyUniversityInput = {
    id?: string
    name: string
    slug: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdmissionCreateManyUniversityInput = {
    id?: string
    programId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationCreateManyUniversityInput = {
    id?: string
    admissionId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TuitionBreakdownCreateManyUniversityInput = {
    id?: string
    programId?: string | null
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipCreateManyUniversityInput = {
    id?: string
    programId?: string | null
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FeeStructureCreateManyUniversityInput = {
    id?: string
    programId?: string | null
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidCreateManyUniversityInput = {
    id?: string
    programId?: string | null
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalendarEventCreateManyUniversityInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type UniversityImageUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    imageType?: NullableStringFieldUpdateOperationsInput | string | null
    imageTitle?: NullableStringFieldUpdateOperationsInput | string | null
    imageAltText?: StringFieldUpdateOperationsInput | string
    imageCaption?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityImageUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    imageType?: NullableStringFieldUpdateOperationsInput | string | null
    imageTitle?: NullableStringFieldUpdateOperationsInput | string | null
    imageAltText?: StringFieldUpdateOperationsInput | string
    imageCaption?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UniversityImageUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    imageType?: NullableStringFieldUpdateOperationsInput | string | null
    imageTitle?: NullableStringFieldUpdateOperationsInput | string | null
    imageAltText?: StringFieldUpdateOperationsInput | string
    imageCaption?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    width?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableIntFieldUpdateOperationsInput | number | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutProgramNestedInput
    essays?: EssayUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    departments?: ProgramDepartmentUncheckedUpdateManyWithoutProgramNestedInput
    syllabus?: SyllabusUncheckedUpdateOneWithoutProgramNestedInput
    rankings?: ProgramRankingUncheckedUpdateManyWithoutProgramNestedInput
    externalLinks?: ExternalLinkUncheckedUpdateManyWithoutProgramNestedInput
    admissions?: AdmissionUncheckedUpdateManyWithoutProgramNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutProgramNestedInput
    tuitionBreakdowns?: TuitionBreakdownUncheckedUpdateManyWithoutProgramNestedInput
    scholarships?: ScholarshipUncheckedUpdateManyWithoutProgramNestedInput
    feeStructures?: FeeStructureUncheckedUpdateManyWithoutProgramNestedInput
    financialAids?: FinancialAidUncheckedUpdateManyWithoutProgramNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutProgramNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutProgramNestedInput
    essays?: EssayUncheckedUpdateManyWithoutProgramNestedInput
  }

  export type ProgramUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programName?: StringFieldUpdateOperationsInput | string
    programSlug?: StringFieldUpdateOperationsInput | string
    degreeType?: NullableStringFieldUpdateOperationsInput | string | null
    programLength?: NullableIntFieldUpdateOperationsInput | number | null
    specializations?: NullableStringFieldUpdateOperationsInput | string | null
    programDescription?: NullableStringFieldUpdateOperationsInput | string | null
    curriculumOverview?: NullableStringFieldUpdateOperationsInput | string | null
    admissionRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    averageEntranceScore?: NullableFloatFieldUpdateOperationsInput | number | null
    programTuitionFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programAdditionalFees?: NullableFloatFieldUpdateOperationsInput | number | null
    programMetaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    programMetaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DepartmentUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    programs?: ProgramDepartmentUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    programs?: ProgramDepartmentUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type DepartmentUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneRequiredWithoutAdmissionsNestedInput
    intakes?: IntakeUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intakes?: IntakeUncheckedUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TuitionBreakdownUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneWithoutTuitionBreakdownsNestedInput
    paymentSchedule?: PaymentScheduleUpdateManyWithoutTuitionBreakdownNestedInput
  }

  export type TuitionBreakdownUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentSchedule?: PaymentScheduleUncheckedUpdateManyWithoutTuitionBreakdownNestedInput
  }

  export type TuitionBreakdownUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneWithoutScholarshipsNestedInput
    documents?: ScholarshipDocumentUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeeStructureUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneWithoutFeeStructuresNestedInput
  }

  export type FeeStructureUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeeStructureUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneWithoutFinancialAidsNestedInput
    applications?: FinancialAidApplicationUpdateManyWithoutFinancialAidNestedInput
  }

  export type FinancialAidUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: FinancialAidApplicationUncheckedUpdateManyWithoutFinancialAidNestedInput
  }

  export type FinancialAidUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutSavedUniversitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUpdateOneWithoutUserNestedInput
    applications?: ApplicationUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutUserNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUpdateManyWithoutUserNestedInput
    essays?: EssayUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSavedUniversitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    profile?: UserProfileUncheckedUpdateOneWithoutUserNestedInput
    subscription?: SubscriptionUncheckedUpdateOneWithoutUserNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutUserNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutUserNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutUserNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutUserNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutUserNestedInput
    eventReminders?: EventReminderUncheckedUpdateManyWithoutUserNestedInput
    essays?: EssayUncheckedUpdateManyWithoutUserNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutSavedUniversitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalendarEventUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutUniversityInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProgramDepartmentCreateManyDepartmentInput = {
    id?: string
    programId: string
    createdAt?: Date | string
  }

  export type ProgramDepartmentUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneRequiredWithoutDepartmentsNestedInput
  }

  export type ProgramDepartmentUncheckedUpdateWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramDepartmentUncheckedUpdateManyWithoutDepartmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramDepartmentCreateManyProgramInput = {
    id?: string
    departmentId: string
    createdAt?: Date | string
  }

  export type ProgramRankingCreateManyProgramInput = {
    id?: string
    year: number
    rank: number
    source?: string | null
    createdAt?: Date | string
  }

  export type ExternalLinkCreateManyProgramInput = {
    id?: string
    title: string
    url: string
    createdAt?: Date | string
  }

  export type AdmissionCreateManyProgramInput = {
    id?: string
    universityId: string
    minimumGpa?: number | null
    maximumGpa?: number | null
    gmatMinScore?: number | null
    gmatMaxScore?: number | null
    gmatAverageScore?: number | null
    greMinScore?: number | null
    greMaxScore?: number | null
    greAverageScore?: number | null
    ieltsMinScore?: number | null
    toeflMinScore?: number | null
    pteMinScore?: number | null
    duolingoMinScore?: number | null
    languageExemptions?: string | null
    workExperienceRequired?: boolean
    minWorkExperience?: number | null
    maxWorkExperience?: number | null
    preferredIndustries?: string | null
    applicationFee?: number | null
    currency?: string
    documentsRequired?: string | null
    additionalRequirements?: string | null
    acceptanceRate?: number | null
    totalApplications?: number | null
    totalAccepted?: number | null
    statisticsYear?: number | null
    isActive?: boolean
    admissionStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationCreateManyProgramInput = {
    id?: string
    admissionId: string
    universityId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TuitionBreakdownCreateManyProgramInput = {
    id?: string
    universityId: string
    academicYear: string
    yearNumber: number
    baseTuition: number
    labFees?: number | null
    libraryFees?: number | null
    technologyFees?: number | null
    activityFees?: number | null
    healthInsurance?: number | null
    dormitoryFees?: number | null
    mealPlanFees?: number | null
    applicationFee?: number | null
    registrationFee?: number | null
    examFees?: number | null
    graduationFee?: number | null
    totalTuition: number
    totalAdditionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipCreateManyProgramInput = {
    id?: string
    universityId: string
    scholarshipName: string
    scholarshipSlug: string
    scholarshipType: string
    description?: string | null
    eligibilityCriteria?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    coverageTuition?: boolean
    coverageFees?: boolean
    coverageLiving?: boolean
    coverageBooks?: boolean
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    totalAvailable?: number | null
    currentlyAwarded?: number | null
    minimumGpa?: number | null
    minimumTestScore?: number | null
    testType?: string | null
    citizenshipRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    awardDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FeeStructureCreateManyProgramInput = {
    id?: string
    universityId: string
    structureName: string
    structureType: string
    academicYear: string
    tuitionFee: number
    admissionFee?: number | null
    registrationFee?: number | null
    examFee?: number | null
    libraryFee?: number | null
    labFee?: number | null
    hostelFee?: number | null
    messFee?: number | null
    transportFee?: number | null
    sportsFee?: number | null
    medicalFee?: number | null
    healthInsurance?: number | null
    accidentInsurance?: number | null
    studentActivityFee?: number | null
    technologyFee?: number | null
    securityDeposit?: number | null
    cautionMoney?: number | null
    isDepositRefundable?: boolean
    totalMandatoryFees: number
    totalOptionalFees: number
    grandTotal: number
    currency?: string
    currencySymbol?: string
    paymentTerms?: string | null
    installmentCount?: number | null
    isActive?: boolean
    effectiveDate?: Date | string
    expiryDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidCreateManyProgramInput = {
    id?: string
    universityId: string
    aidName: string
    aidType: string
    description?: string | null
    amount?: number | null
    percentage?: number | null
    maxAmount?: number | null
    currency?: string
    interestRate?: number | null
    repaymentPeriod?: number | null
    gracePeriod?: number | null
    eligibilityCriteria?: string | null
    minimumGpa?: number | null
    maximumFamilyIncome?: number | null
    citizenshipRequired?: string | null
    applicationRequired?: boolean
    applicationDeadline?: Date | string | null
    documentsRequired?: string | null
    isActive?: boolean
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssayPromptCreateManyProgramInput = {
    id?: string
    admissionId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalendarEventCreateManyProgramInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type EssayCreateManyProgramInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
  }

  export type ProgramDepartmentUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    department?: DepartmentUpdateOneRequiredWithoutProgramsNestedInput
  }

  export type ProgramDepartmentUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramDepartmentUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    departmentId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramRankingUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    rank?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramRankingUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    rank?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProgramRankingUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    year?: IntFieldUpdateOperationsInput | number
    rank?: IntFieldUpdateOperationsInput | number
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalLinkUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalLinkUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ExternalLinkUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutAdmissionsNestedInput
    intakes?: IntakeUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intakes?: IntakeUncheckedUpdateManyWithoutAdmissionNestedInput
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutAdmissionNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutAdmissionNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionNestedInput
  }

  export type AdmissionUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    gmatAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    greMaxScore?: NullableIntFieldUpdateOperationsInput | number | null
    greAverageScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsMinScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoMinScore?: NullableIntFieldUpdateOperationsInput | number | null
    languageExemptions?: NullableStringFieldUpdateOperationsInput | string | null
    workExperienceRequired?: BoolFieldUpdateOperationsInput | boolean
    minWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    maxWorkExperience?: NullableIntFieldUpdateOperationsInput | number | null
    preferredIndustries?: NullableStringFieldUpdateOperationsInput | string | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    additionalRequirements?: NullableStringFieldUpdateOperationsInput | string | null
    acceptanceRate?: NullableFloatFieldUpdateOperationsInput | number | null
    totalApplications?: NullableIntFieldUpdateOperationsInput | number | null
    totalAccepted?: NullableIntFieldUpdateOperationsInput | number | null
    statisticsYear?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    admissionStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TuitionBreakdownUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutTuitionBreakdownsNestedInput
    paymentSchedule?: PaymentScheduleUpdateManyWithoutTuitionBreakdownNestedInput
  }

  export type TuitionBreakdownUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentSchedule?: PaymentScheduleUncheckedUpdateManyWithoutTuitionBreakdownNestedInput
  }

  export type TuitionBreakdownUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    yearNumber?: IntFieldUpdateOperationsInput | number
    baseTuition?: FloatFieldUpdateOperationsInput | number
    labFees?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFees?: NullableFloatFieldUpdateOperationsInput | number | null
    activityFees?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    dormitoryFees?: NullableFloatFieldUpdateOperationsInput | number | null
    mealPlanFees?: NullableFloatFieldUpdateOperationsInput | number | null
    applicationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFees?: NullableFloatFieldUpdateOperationsInput | number | null
    graduationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    totalTuition?: FloatFieldUpdateOperationsInput | number
    totalAdditionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutScholarshipsNestedInput
    documents?: ScholarshipDocumentUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipNestedInput
    applications?: ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutScholarshipNestedInput
  }

  export type ScholarshipUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    scholarshipName?: StringFieldUpdateOperationsInput | string
    scholarshipSlug?: StringFieldUpdateOperationsInput | string
    scholarshipType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    coverageTuition?: BoolFieldUpdateOperationsInput | boolean
    coverageFees?: BoolFieldUpdateOperationsInput | boolean
    coverageLiving?: BoolFieldUpdateOperationsInput | boolean
    coverageBooks?: BoolFieldUpdateOperationsInput | boolean
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    totalAvailable?: NullableIntFieldUpdateOperationsInput | number | null
    currentlyAwarded?: NullableIntFieldUpdateOperationsInput | number | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    minimumTestScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeeStructureUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutFeeStructuresNestedInput
  }

  export type FeeStructureUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FeeStructureUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    structureName?: StringFieldUpdateOperationsInput | string
    structureType?: StringFieldUpdateOperationsInput | string
    academicYear?: StringFieldUpdateOperationsInput | string
    tuitionFee?: FloatFieldUpdateOperationsInput | number
    admissionFee?: NullableFloatFieldUpdateOperationsInput | number | null
    registrationFee?: NullableFloatFieldUpdateOperationsInput | number | null
    examFee?: NullableFloatFieldUpdateOperationsInput | number | null
    libraryFee?: NullableFloatFieldUpdateOperationsInput | number | null
    labFee?: NullableFloatFieldUpdateOperationsInput | number | null
    hostelFee?: NullableFloatFieldUpdateOperationsInput | number | null
    messFee?: NullableFloatFieldUpdateOperationsInput | number | null
    transportFee?: NullableFloatFieldUpdateOperationsInput | number | null
    sportsFee?: NullableFloatFieldUpdateOperationsInput | number | null
    medicalFee?: NullableFloatFieldUpdateOperationsInput | number | null
    healthInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    accidentInsurance?: NullableFloatFieldUpdateOperationsInput | number | null
    studentActivityFee?: NullableFloatFieldUpdateOperationsInput | number | null
    technologyFee?: NullableFloatFieldUpdateOperationsInput | number | null
    securityDeposit?: NullableFloatFieldUpdateOperationsInput | number | null
    cautionMoney?: NullableFloatFieldUpdateOperationsInput | number | null
    isDepositRefundable?: BoolFieldUpdateOperationsInput | boolean
    totalMandatoryFees?: FloatFieldUpdateOperationsInput | number
    totalOptionalFees?: FloatFieldUpdateOperationsInput | number
    grandTotal?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    currencySymbol?: StringFieldUpdateOperationsInput | string
    paymentTerms?: NullableStringFieldUpdateOperationsInput | string | null
    installmentCount?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    effectiveDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutFinancialAidsNestedInput
    applications?: FinancialAidApplicationUpdateManyWithoutFinancialAidNestedInput
  }

  export type FinancialAidUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applications?: FinancialAidApplicationUncheckedUpdateManyWithoutFinancialAidNestedInput
  }

  export type FinancialAidUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    aidName?: StringFieldUpdateOperationsInput | string
    aidType?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    maxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    interestRate?: NullableFloatFieldUpdateOperationsInput | number | null
    repaymentPeriod?: NullableIntFieldUpdateOperationsInput | number | null
    gracePeriod?: NullableIntFieldUpdateOperationsInput | number | null
    eligibilityCriteria?: NullableStringFieldUpdateOperationsInput | string | null
    minimumGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    maximumFamilyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    citizenshipRequired?: NullableStringFieldUpdateOperationsInput | string | null
    applicationRequired?: BoolFieldUpdateOperationsInput | boolean
    applicationDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayPromptUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneWithoutEssayPromptsNestedInput
    intake?: IntakeUpdateOneWithoutEssayPromptsNestedInput
    submissions?: EssaySubmissionUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissions?: EssaySubmissionUncheckedUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUncheckedUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalendarEventUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EssayUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneWithoutEssaysNestedInput
    application?: ApplicationUpdateOneWithoutEssaysNestedInput
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutEssaysNestedInput
    versions?: EssayVersionUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    versions?: EssayVersionUncheckedUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateManyWithoutProgramInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IntakeCreateManyAdmissionInput = {
    id?: string
    intakeName: string
    intakeType: string
    intakeYear: number
    intakeMonth: number
    totalSeats?: number | null
    availableSeats?: number | null
    internationalSeats?: number | null
    domesticSeats?: number | null
    startDate?: Date | string | null
    endDate?: Date | string | null
    applicationOpenDate?: Date | string | null
    applicationCloseDate?: Date | string | null
    isActive?: boolean
    intakeStatus?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdmissionDeadlineCreateManyAdmissionInput = {
    id?: string
    intakeId?: string | null
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationCreateManyAdmissionInput = {
    id?: string
    universityId: string
    programId: string
    intakeId?: string | null
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssayPromptCreateManyAdmissionInput = {
    id?: string
    programId?: string | null
    intakeId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalendarEventCreateManyAdmissionInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type IntakeUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlines?: AdmissionDeadlineUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeUncheckedUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlines?: AdmissionDeadlineUncheckedUpdateManyWithoutIntakeNestedInput
    applications?: ApplicationUncheckedUpdateManyWithoutIntakeNestedInput
    essayPrompts?: EssayPromptUncheckedUpdateManyWithoutIntakeNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutIntakeNestedInput
  }

  export type IntakeUncheckedUpdateManyWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeName?: StringFieldUpdateOperationsInput | string
    intakeType?: StringFieldUpdateOperationsInput | string
    intakeYear?: IntFieldUpdateOperationsInput | number
    intakeMonth?: IntFieldUpdateOperationsInput | number
    totalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    availableSeats?: NullableIntFieldUpdateOperationsInput | number | null
    internationalSeats?: NullableIntFieldUpdateOperationsInput | number | null
    domesticSeats?: NullableIntFieldUpdateOperationsInput | number | null
    startDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationOpenDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    applicationCloseDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    intakeStatus?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdmissionDeadlineUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    intake?: IntakeUpdateOneWithoutDeadlinesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionDeadlineNestedInput
  }

  export type AdmissionDeadlineUncheckedUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionDeadlineNestedInput
  }

  export type AdmissionDeadlineUncheckedUpdateManyWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    intake?: IntakeUpdateOneWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayPromptUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    program?: ProgramUpdateOneWithoutEssayPromptsNestedInput
    intake?: IntakeUpdateOneWithoutEssayPromptsNestedInput
    submissions?: EssaySubmissionUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissions?: EssaySubmissionUncheckedUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUncheckedUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateManyWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalendarEventUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutAdmissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AdmissionDeadlineCreateManyIntakeInput = {
    id?: string
    admissionId: string
    deadlineType: string
    deadlineDate: Date | string
    deadlineTime?: string | null
    timezone?: string
    title: string
    description?: string | null
    isExtended?: boolean
    originalDeadline?: Date | string | null
    priority?: string
    isActive?: boolean
    reminderSent?: boolean
    reminderDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationCreateManyIntakeInput = {
    id?: string
    admissionId: string
    universityId: string
    programId: string
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    nationality?: string | null
    currentGpa?: number | null
    gmatScore?: number | null
    greScore?: number | null
    ieltsScore?: number | null
    toeflScore?: number | null
    pteScore?: number | null
    duolingoScore?: number | null
    workExperienceMonths?: number | null
    workExperienceDetails?: string | null
    applicationStatus?: string
    currentStage?: string
    stageUpdatedAt?: Date | string
    completionPercentage?: number
    nextDeadlineId?: string | null
    completedDeadlines?: string | null
    missedDeadlines?: string | null
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    lastActivityAt?: Date | string
    applicationFeesPaid?: boolean
    applicationFeesAmount?: number | null
    documentsUploaded?: string | null
    documentsVerified?: boolean
    lastContactDate?: Date | string | null
    contactNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssayPromptCreateManyIntakeInput = {
    id?: string
    admissionId?: string | null
    programId?: string | null
    promptTitle: string
    promptText: string
    wordLimit: number
    minWordCount?: number
    isMandatory?: boolean
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalendarEventCreateManyIntakeInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type AdmissionDeadlineUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutDeadlinesNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutAdmissionDeadlineNestedInput
  }

  export type AdmissionDeadlineUncheckedUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutAdmissionDeadlineNestedInput
  }

  export type AdmissionDeadlineUncheckedUpdateManyWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    deadlineType?: StringFieldUpdateOperationsInput | string
    deadlineDate?: DateTimeFieldUpdateOperationsInput | Date | string
    deadlineTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    isExtended?: BoolFieldUpdateOperationsInput | boolean
    originalDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    reminderDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneRequiredWithoutApplicationsNestedInput
    university?: UniversityUpdateOneRequiredWithoutApplicationsNestedInput
    program?: ProgramUpdateOneRequiredWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutApplicationsNestedInput
    documents?: ApplicationDocumentUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUpdateManyWithoutApplicationNestedInput
    essays?: EssayUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    documents?: ApplicationDocumentUncheckedUpdateManyWithoutApplicationNestedInput
    applicationProgress?: ApplicationProgressUncheckedUpdateManyWithoutApplicationNestedInput
    interviews?: InterviewUncheckedUpdateManyWithoutApplicationNestedInput
    scholarshipApplications?: ScholarshipApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    financialAidApplications?: FinancialAidApplicationUncheckedUpdateManyWithoutApplicationNestedInput
    essaySubmissions?: EssaySubmissionUncheckedUpdateManyWithoutApplicationNestedInput
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutApplicationNestedInput
    essays?: EssayUncheckedUpdateManyWithoutApplicationNestedInput
  }

  export type ApplicationUncheckedUpdateManyWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: StringFieldUpdateOperationsInput | string
    universityId?: StringFieldUpdateOperationsInput | string
    programId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nationality?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    gmatScore?: NullableIntFieldUpdateOperationsInput | number | null
    greScore?: NullableIntFieldUpdateOperationsInput | number | null
    ieltsScore?: NullableFloatFieldUpdateOperationsInput | number | null
    toeflScore?: NullableIntFieldUpdateOperationsInput | number | null
    pteScore?: NullableIntFieldUpdateOperationsInput | number | null
    duolingoScore?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceMonths?: NullableIntFieldUpdateOperationsInput | number | null
    workExperienceDetails?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    currentStage?: StringFieldUpdateOperationsInput | string
    stageUpdatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    nextDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    completedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    missedDeadlines?: NullableStringFieldUpdateOperationsInput | string | null
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivityAt?: DateTimeFieldUpdateOperationsInput | Date | string
    applicationFeesPaid?: BoolFieldUpdateOperationsInput | boolean
    applicationFeesAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    documentsVerified?: BoolFieldUpdateOperationsInput | boolean
    lastContactDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contactNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayPromptUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    admission?: AdmissionUpdateOneWithoutEssayPromptsNestedInput
    program?: ProgramUpdateOneWithoutEssayPromptsNestedInput
    submissions?: EssaySubmissionUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    submissions?: EssaySubmissionUncheckedUpdateManyWithoutEssayPromptNestedInput
    essays?: EssayUncheckedUpdateManyWithoutEssayPromptNestedInput
  }

  export type EssayPromptUncheckedUpdateManyWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    promptTitle?: StringFieldUpdateOperationsInput | string
    promptText?: StringFieldUpdateOperationsInput | string
    wordLimit?: IntFieldUpdateOperationsInput | number
    minWordCount?: IntFieldUpdateOperationsInput | number
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalendarEventUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutIntakeInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CalendarEventCreateManyAdmissionDeadlineInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type CalendarEventUpdateWithoutAdmissionDeadlineInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutAdmissionDeadlineInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutAdmissionDeadlineInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApplicationDocumentCreateManyApplicationInput = {
    id?: string
    documentType: string
    documentCategory: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    submissionDeadline?: Date | string | null
    reminderSent?: boolean
    isVerified?: boolean
    verifiedBy?: string | null
    verifiedAt?: Date | string | null
    verificationNotes?: string | null
    documentStatus?: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ApplicationProgressCreateManyApplicationInput = {
    id?: string
    stageName: string
    stageStatus: string
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    notes?: string | null
    completedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InterviewCreateManyApplicationInput = {
    id?: string
    interviewType: string
    scheduledDate?: Date | string | null
    scheduledTime?: string | null
    timezone?: string
    duration?: number | null
    interviewerName?: string | null
    interviewerEmail?: string | null
    meetingLink?: string | null
    meetingPassword?: string | null
    location?: string | null
    interviewStatus?: string
    interviewScore?: number | null
    interviewFeedback?: string | null
    reminderSent?: boolean
    confirmationReceived?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationCreateManyApplicationInput = {
    id?: string
    scholarshipId: string
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationCreateManyApplicationInput = {
    id?: string
    financialAidId: string
    userId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssaySubmissionCreateManyApplicationInput = {
    id?: string
    essayPromptId: string
    userId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalendarEventCreateManyApplicationInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type EssayCreateManyApplicationInput = {
    id?: string
    userId?: string | null
    programId: string
    essayPromptId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
  }

  export type ApplicationDocumentUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentCategory?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    submissionDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    documentStatus?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationDocumentUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentCategory?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    submissionDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    documentStatus?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationDocumentUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentCategory?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    submissionDeadline?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    documentStatus?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationProgressUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageName?: StringFieldUpdateOperationsInput | string
    stageStatus?: StringFieldUpdateOperationsInput | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationProgressUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageName?: StringFieldUpdateOperationsInput | string
    stageStatus?: StringFieldUpdateOperationsInput | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationProgressUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    stageName?: StringFieldUpdateOperationsInput | string
    stageStatus?: StringFieldUpdateOperationsInput | string
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    completedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InterviewUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calendarEvents?: CalendarEventUpdateManyWithoutInterviewNestedInput
  }

  export type InterviewUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    calendarEvents?: CalendarEventUncheckedUpdateManyWithoutInterviewNestedInput
  }

  export type InterviewUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    interviewType?: StringFieldUpdateOperationsInput | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledTime?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    interviewerName?: NullableStringFieldUpdateOperationsInput | string | null
    interviewerEmail?: NullableStringFieldUpdateOperationsInput | string | null
    meetingLink?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    interviewStatus?: StringFieldUpdateOperationsInput | string
    interviewScore?: NullableFloatFieldUpdateOperationsInput | number | null
    interviewFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    confirmationReceived?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    scholarship?: ScholarshipUpdateOneRequiredWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutScholarshipApplicationsNestedInput
  }

  export type ScholarshipApplicationUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    scholarshipId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    financialAid?: FinancialAidUpdateOneRequiredWithoutApplicationsNestedInput
    user?: UserUpdateOneWithoutFinancialAidApplicationsNestedInput
  }

  export type FinancialAidApplicationUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    financialAidId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    financialAidId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutSubmissionsNestedInput
    user?: UserUpdateOneWithoutEssaySubmissionsNestedInput
  }

  export type EssaySubmissionUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalendarEventUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EssayUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneWithoutEssaysNestedInput
    program?: ProgramUpdateOneRequiredWithoutEssaysNestedInput
    essayPrompt?: EssayPromptUpdateOneRequiredWithoutEssaysNestedInput
    versions?: EssayVersionUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    versions?: EssayVersionUncheckedUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateManyWithoutApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    essayPromptId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CalendarEventCreateManyInterviewInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    scholarshipId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type CalendarEventUpdateWithoutInterviewInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    scholarship?: ScholarshipUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutInterviewInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutInterviewInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    scholarshipId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentScheduleCreateManyTuitionBreakdownInput = {
    id?: string
    installmentNumber: number
    dueDate: Date | string
    amount: number
    description?: string | null
    lateFee?: number | null
    gracePeroidDays?: number | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentScheduleUpdateWithoutTuitionBreakdownInput = {
    id?: StringFieldUpdateOperationsInput | string
    installmentNumber?: IntFieldUpdateOperationsInput | number
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lateFee?: NullableFloatFieldUpdateOperationsInput | number | null
    gracePeroidDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentScheduleUncheckedUpdateWithoutTuitionBreakdownInput = {
    id?: StringFieldUpdateOperationsInput | string
    installmentNumber?: IntFieldUpdateOperationsInput | number
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lateFee?: NullableFloatFieldUpdateOperationsInput | number | null
    gracePeroidDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentScheduleUncheckedUpdateManyWithoutTuitionBreakdownInput = {
    id?: StringFieldUpdateOperationsInput | string
    installmentNumber?: IntFieldUpdateOperationsInput | number
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    lateFee?: NullableFloatFieldUpdateOperationsInput | number | null
    gracePeroidDays?: NullableIntFieldUpdateOperationsInput | number | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipDocumentCreateManyScholarshipInput = {
    id?: string
    documentType: string
    documentTitle: string
    fileName: string
    fileUrl: string
    fileSize?: number | null
    mimeType?: string | null
    isRequired?: boolean
    displayOrder?: number
    isPublic?: boolean
    downloadCount?: number
    uploadedAt?: Date | string
    updatedAt?: Date | string
  }

  export type ScholarshipApplicationCreateManyScholarshipInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    currentGpa?: number | null
    testScore?: number | null
    testType?: string | null
    familyIncome?: number | null
    financialNeed?: string | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    awardAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CalendarEventCreateManyScholarshipInput = {
    id?: string
    userId?: string | null
    title: string
    description?: string | null
    location?: string | null
    startDate: Date | string
    endDate: Date | string
    timezone?: string
    isAllDay?: boolean
    eventType: string
    eventStatus?: string
    priority?: string
    universityId?: string | null
    programId?: string | null
    applicationId?: string | null
    admissionId?: string | null
    intakeId?: string | null
    admissionDeadlineId?: string | null
    interviewId?: string | null
    isRecurring?: boolean
    recurringPattern?: string | null
    parentEventId?: string | null
    hasReminders?: boolean
    isSystemGenerated?: boolean
    color?: string | null
    isVisible?: boolean
    completionStatus?: string
    completedAt?: Date | string | null
    completionNotes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    lastModifiedBy?: string | null
  }

  export type ScholarshipDocumentUpdateWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    downloadCount?: IntFieldUpdateOperationsInput | number
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipDocumentUncheckedUpdateWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    downloadCount?: IntFieldUpdateOperationsInput | number
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipDocumentUncheckedUpdateManyWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentTitle?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    isPublic?: BoolFieldUpdateOperationsInput | boolean
    downloadCount?: IntFieldUpdateOperationsInput | number
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationUpdateWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutScholarshipApplicationsNestedInput
    application?: ApplicationUpdateOneWithoutScholarshipApplicationsNestedInput
  }

  export type ScholarshipApplicationUncheckedUpdateWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ScholarshipApplicationUncheckedUpdateManyWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    currentGpa?: NullableFloatFieldUpdateOperationsInput | number | null
    testScore?: NullableIntFieldUpdateOperationsInput | number | null
    testType?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    financialNeed?: NullableStringFieldUpdateOperationsInput | string | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    awardAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalendarEventUpdateWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneWithoutCalendarEventsNestedInput
    university?: UniversityUpdateOneWithoutCalendarEventsNestedInput
    program?: ProgramUpdateOneWithoutCalendarEventsNestedInput
    application?: ApplicationUpdateOneWithoutCalendarEventsNestedInput
    admission?: AdmissionUpdateOneWithoutCalendarEventsNestedInput
    intake?: IntakeUpdateOneWithoutCalendarEventsNestedInput
    admissionDeadline?: AdmissionDeadlineUpdateOneWithoutCalendarEventsNestedInput
    interview?: InterviewUpdateOneWithoutCalendarEventsNestedInput
    reminders?: EventReminderUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reminders?: EventReminderUncheckedUpdateManyWithoutEventNestedInput
  }

  export type CalendarEventUncheckedUpdateManyWithoutScholarshipInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    timezone?: StringFieldUpdateOperationsInput | string
    isAllDay?: BoolFieldUpdateOperationsInput | boolean
    eventType?: StringFieldUpdateOperationsInput | string
    eventStatus?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionId?: NullableStringFieldUpdateOperationsInput | string | null
    intakeId?: NullableStringFieldUpdateOperationsInput | string | null
    admissionDeadlineId?: NullableStringFieldUpdateOperationsInput | string | null
    interviewId?: NullableStringFieldUpdateOperationsInput | string | null
    isRecurring?: BoolFieldUpdateOperationsInput | boolean
    recurringPattern?: NullableStringFieldUpdateOperationsInput | string | null
    parentEventId?: NullableStringFieldUpdateOperationsInput | string | null
    hasReminders?: BoolFieldUpdateOperationsInput | boolean
    isSystemGenerated?: BoolFieldUpdateOperationsInput | boolean
    color?: NullableStringFieldUpdateOperationsInput | string | null
    isVisible?: BoolFieldUpdateOperationsInput | boolean
    completionStatus?: StringFieldUpdateOperationsInput | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastModifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FinancialAidApplicationCreateManyFinancialAidInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    familyIncome?: number | null
    assets?: number | null
    liabilities?: number | null
    dependents?: number | null
    applicationStatus?: string
    submissionDate?: Date | string | null
    reviewDate?: Date | string | null
    decisionDate?: Date | string | null
    approvedAmount?: number | null
    documentsUploaded?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialAidApplicationUpdateWithoutFinancialAidInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutFinancialAidApplicationsNestedInput
    application?: ApplicationUpdateOneWithoutFinancialAidApplicationsNestedInput
  }

  export type FinancialAidApplicationUncheckedUpdateWithoutFinancialAidInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialAidApplicationUncheckedUpdateManyWithoutFinancialAidInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    assets?: NullableFloatFieldUpdateOperationsInput | number | null
    liabilities?: NullableFloatFieldUpdateOperationsInput | number | null
    dependents?: NullableIntFieldUpdateOperationsInput | number | null
    applicationStatus?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    decisionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    documentsUploaded?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyAdminUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateWithoutAdminUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateWithoutAdminUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutAdminUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionCreateManyEssayPromptInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    title?: string | null
    content: string
    wordCount: number
    status?: string
    submissionDate?: Date | string | null
    lastEditedAt?: Date | string
    isUsingTemplate?: boolean
    templateVersion?: string | null
    reviewStatus?: string | null
    reviewerId?: string | null
    reviewerComment?: string | null
    internalRating?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssayCreateManyEssayPromptInput = {
    id?: string
    userId?: string | null
    applicationId?: string | null
    programId: string
    title: string
    content?: string
    wordCount?: number
    wordLimit?: number
    status?: string
    priority?: string
    isCompleted?: boolean
    completedAt?: Date | string | null
    completionPercentage?: number
    lastModified?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastAutoSaved?: Date | string
    autoSaveEnabled?: boolean
  }

  export type EssaySubmissionUpdateWithoutEssayPromptInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutEssaySubmissionsNestedInput
    application?: ApplicationUpdateOneWithoutEssaySubmissionsNestedInput
  }

  export type EssaySubmissionUncheckedUpdateWithoutEssayPromptInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssaySubmissionUncheckedUpdateManyWithoutEssayPromptInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    submissionDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastEditedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isUsingTemplate?: BoolFieldUpdateOperationsInput | boolean
    templateVersion?: NullableStringFieldUpdateOperationsInput | string | null
    reviewStatus?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewerComment?: NullableStringFieldUpdateOperationsInput | string | null
    internalRating?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayUpdateWithoutEssayPromptInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneWithoutEssaysNestedInput
    application?: ApplicationUpdateOneWithoutEssaysNestedInput
    program?: ProgramUpdateOneRequiredWithoutEssaysNestedInput
    versions?: EssayVersionUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateWithoutEssayPromptInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
    versions?: EssayVersionUncheckedUpdateManyWithoutEssayNestedInput
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayNestedInput
    EssayCompletionLog?: EssayCompletionLogUncheckedUpdateManyWithoutEssayNestedInput
  }

  export type EssayUncheckedUpdateManyWithoutEssayPromptInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    applicationId?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    priority?: StringFieldUpdateOperationsInput | string
    isCompleted?: BoolFieldUpdateOperationsInput | boolean
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionPercentage?: FloatFieldUpdateOperationsInput | number
    lastModified?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastAutoSaved?: DateTimeFieldUpdateOperationsInput | Date | string
    autoSaveEnabled?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EssayVersionCreateManyEssayInput = {
    id?: string
    content: string
    wordCount: number
    label: string
    timestamp?: Date | string
    isAutoSave?: boolean
    changesSinceLastVersion?: string | null
  }

  export type AIResultCreateManyEssayInput = {
    id?: string
    essayVersionId?: string | null
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EssayCompletionLogCreateManyEssayInput = {
    id?: string
    userId?: string | null
    completedAt?: Date | string
    wordCountAtCompletion: number
    wordLimit: number
    completionMethod: string
    previousStatus?: string | null
    programId?: string | null
    universityId?: string | null
    essayPromptTitle?: string | null
    createdAt?: Date | string
  }

  export type EssayVersionUpdateWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
    aiResults?: AIResultUpdateManyWithoutEssayVersionNestedInput
  }

  export type EssayVersionUncheckedUpdateWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
    aiResults?: AIResultUncheckedUpdateManyWithoutEssayVersionNestedInput
  }

  export type EssayVersionUncheckedUpdateManyWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    wordCount?: IntFieldUpdateOperationsInput | number
    label?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoSave?: BoolFieldUpdateOperationsInput | boolean
    changesSinceLastVersion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AIResultUpdateWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essayVersion?: EssayVersionUpdateOneWithoutAiResultsNestedInput
  }

  export type AIResultUncheckedUpdateWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayVersionId?: NullableStringFieldUpdateOperationsInput | string | null
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIResultUncheckedUpdateManyWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayVersionId?: NullableStringFieldUpdateOperationsInput | string | null
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayCompletionLogUpdateWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutEssayCompletionLogNestedInput
  }

  export type EssayCompletionLogUncheckedUpdateWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EssayCompletionLogUncheckedUpdateManyWithoutEssayInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    wordCountAtCompletion?: IntFieldUpdateOperationsInput | number
    wordLimit?: IntFieldUpdateOperationsInput | number
    completionMethod?: StringFieldUpdateOperationsInput | string
    previousStatus?: NullableStringFieldUpdateOperationsInput | string | null
    programId?: NullableStringFieldUpdateOperationsInput | string | null
    universityId?: NullableStringFieldUpdateOperationsInput | string | null
    essayPromptTitle?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIResultCreateManyEssayVersionInput = {
    id?: string
    essayId: string
    analysisType: string
    overallScore?: number | null
    suggestions: string
    strengths?: string | null
    improvements?: string | null
    warnings?: string | null
    aiProvider?: string
    modelUsed?: string | null
    promptVersion?: string | null
    status?: string
    processingTime?: number | null
    errorMessage?: string | null
    readabilityScore?: number | null
    sentenceCount?: number | null
    paragraphCount?: number | null
    avgSentenceLength?: number | null
    complexWordCount?: number | null
    passiveVoiceCount?: number | null
    structureScore?: number | null
    contentRelevance?: number | null
    narrativeFlow?: number | null
    leadershipEmphasis?: number | null
    specificityScore?: number | null
    grammarIssues?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIResultUpdateWithoutEssayVersionInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    essay?: EssayUpdateOneRequiredWithoutAiResultsNestedInput
  }

  export type AIResultUncheckedUpdateWithoutEssayVersionInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIResultUncheckedUpdateManyWithoutEssayVersionInput = {
    id?: StringFieldUpdateOperationsInput | string
    essayId?: StringFieldUpdateOperationsInput | string
    analysisType?: StringFieldUpdateOperationsInput | string
    overallScore?: NullableFloatFieldUpdateOperationsInput | number | null
    suggestions?: StringFieldUpdateOperationsInput | string
    strengths?: NullableStringFieldUpdateOperationsInput | string | null
    improvements?: NullableStringFieldUpdateOperationsInput | string | null
    warnings?: NullableStringFieldUpdateOperationsInput | string | null
    aiProvider?: StringFieldUpdateOperationsInput | string
    modelUsed?: NullableStringFieldUpdateOperationsInput | string | null
    promptVersion?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    processingTime?: NullableIntFieldUpdateOperationsInput | number | null
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    readabilityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    sentenceCount?: NullableIntFieldUpdateOperationsInput | number | null
    paragraphCount?: NullableIntFieldUpdateOperationsInput | number | null
    avgSentenceLength?: NullableFloatFieldUpdateOperationsInput | number | null
    complexWordCount?: NullableIntFieldUpdateOperationsInput | number | null
    passiveVoiceCount?: NullableIntFieldUpdateOperationsInput | number | null
    structureScore?: NullableFloatFieldUpdateOperationsInput | number | null
    contentRelevance?: NullableFloatFieldUpdateOperationsInput | number | null
    narrativeFlow?: NullableFloatFieldUpdateOperationsInput | number | null
    leadershipEmphasis?: NullableFloatFieldUpdateOperationsInput | number | null
    specificityScore?: NullableFloatFieldUpdateOperationsInput | number | null
    grammarIssues?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventReminderCreateManyEventInput = {
    id?: string
    userId: string
    reminderType: string
    reminderTime: number
    reminderMessage?: string | null
    scheduledFor: Date | string
    isActive?: boolean
    isSent?: boolean
    sentAt?: Date | string | null
    failureReason?: string | null
    retryCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EventReminderUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutEventRemindersNestedInput
  }

  export type EventReminderUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventReminderUncheckedUpdateManyWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reminderType?: StringFieldUpdateOperationsInput | string
    reminderTime?: IntFieldUpdateOperationsInput | number
    reminderMessage?: NullableStringFieldUpdateOperationsInput | string | null
    scheduledFor?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    retryCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}